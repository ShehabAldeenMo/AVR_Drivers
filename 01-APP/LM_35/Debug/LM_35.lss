
LM_35.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004d06  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011a  00800060  00004d06  00004d7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001a10  00000000  00000000  00004e94  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000adc  00000000  00000000  000068a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001e0  00000000  00000000  00007380  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000022e  00000000  00000000  00007560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000032e8  00000000  00000000  0000778e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000165a  00000000  00000000  0000aa76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000158c  00000000  00000000  0000c0d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  0000d65c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000037e  00000000  00000000  0000d85c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002378  00000000  00000000  0000dbda  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000ff52  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e0       	ldi	r30, 0x06	; 6
      68:	fd e4       	ldi	r31, 0x4D	; 77
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 37       	cpi	r26, 0x7A	; 122
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 12 23 	call	0x4624	; 0x4624 <main>
      7a:	0c 94 81 26 	jmp	0x4d02	; 0x4d02 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__muldi3>:
      82:	a0 e3       	ldi	r26, 0x30	; 48
      84:	b0 e0       	ldi	r27, 0x00	; 0
      86:	e7 e4       	ldi	r30, 0x47	; 71
      88:	f0 e0       	ldi	r31, 0x00	; 0
      8a:	0c 94 4a 26 	jmp	0x4c94	; 0x4c94 <__prologue_saves__>
      8e:	a8 e0       	ldi	r26, 0x08	; 8
      90:	4e 01       	movw	r8, r28
      92:	08 94       	sec
      94:	81 1c       	adc	r8, r1
      96:	91 1c       	adc	r9, r1
      98:	f4 01       	movw	r30, r8
      9a:	ba 2f       	mov	r27, r26
      9c:	11 92       	st	Z+, r1
      9e:	ba 95       	dec	r27
      a0:	e9 f7       	brne	.-6      	; 0x9c <__muldi3+0x1a>
      a2:	29 83       	std	Y+1, r18	; 0x01
      a4:	3a 83       	std	Y+2, r19	; 0x02
      a6:	4b 83       	std	Y+3, r20	; 0x03
      a8:	5c 83       	std	Y+4, r21	; 0x04
      aa:	6d 83       	std	Y+5, r22	; 0x05
      ac:	7e 83       	std	Y+6, r23	; 0x06
      ae:	8f 83       	std	Y+7, r24	; 0x07
      b0:	98 87       	std	Y+8, r25	; 0x08
      b2:	ce 01       	movw	r24, r28
      b4:	09 96       	adiw	r24, 0x09	; 9
      b6:	fc 01       	movw	r30, r24
      b8:	11 92       	st	Z+, r1
      ba:	aa 95       	dec	r26
      bc:	e9 f7       	brne	.-6      	; 0xb8 <__muldi3+0x36>
      be:	a9 86       	std	Y+9, r10	; 0x09
      c0:	ba 86       	std	Y+10, r11	; 0x0a
      c2:	cb 86       	std	Y+11, r12	; 0x0b
      c4:	dc 86       	std	Y+12, r13	; 0x0c
      c6:	ed 86       	std	Y+13, r14	; 0x0d
      c8:	fe 86       	std	Y+14, r15	; 0x0e
      ca:	0f 87       	std	Y+15, r16	; 0x0f
      cc:	18 8b       	std	Y+16, r17	; 0x10
      ce:	29 81       	ldd	r18, Y+1	; 0x01
      d0:	3a 81       	ldd	r19, Y+2	; 0x02
      d2:	4b 81       	ldd	r20, Y+3	; 0x03
      d4:	5c 81       	ldd	r21, Y+4	; 0x04
      d6:	2d a7       	std	Y+45, r18	; 0x2d
      d8:	3e a7       	std	Y+46, r19	; 0x2e
      da:	4f a7       	std	Y+47, r20	; 0x2f
      dc:	58 ab       	std	Y+48, r21	; 0x30
      de:	79 01       	movw	r14, r18
      e0:	8a 01       	movw	r16, r20
      e2:	8f ef       	ldi	r24, 0xFF	; 255
      e4:	9f ef       	ldi	r25, 0xFF	; 255
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e8 22       	and	r14, r24
      ec:	f9 22       	and	r15, r25
      ee:	0a 23       	and	r16, r26
      f0:	1b 23       	and	r17, r27
      f2:	1a 01       	movw	r2, r20
      f4:	44 24       	eor	r4, r4
      f6:	55 24       	eor	r5, r5
      f8:	29 85       	ldd	r18, Y+9	; 0x09
      fa:	3a 85       	ldd	r19, Y+10	; 0x0a
      fc:	4b 85       	ldd	r20, Y+11	; 0x0b
      fe:	5c 85       	ldd	r21, Y+12	; 0x0c
     100:	29 a7       	std	Y+41, r18	; 0x29
     102:	3a a7       	std	Y+42, r19	; 0x2a
     104:	4b a7       	std	Y+43, r20	; 0x2b
     106:	5c a7       	std	Y+44, r21	; 0x2c
     108:	59 01       	movw	r10, r18
     10a:	6a 01       	movw	r12, r20
     10c:	a8 22       	and	r10, r24
     10e:	b9 22       	and	r11, r25
     110:	ca 22       	and	r12, r26
     112:	db 22       	and	r13, r27
     114:	3a 01       	movw	r6, r20
     116:	88 24       	eor	r8, r8
     118:	99 24       	eor	r9, r9
     11a:	c6 01       	movw	r24, r12
     11c:	b5 01       	movw	r22, r10
     11e:	a8 01       	movw	r20, r16
     120:	97 01       	movw	r18, r14
     122:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     126:	6d a3       	std	Y+37, r22	; 0x25
     128:	7e a3       	std	Y+38, r23	; 0x26
     12a:	8f a3       	std	Y+39, r24	; 0x27
     12c:	98 a7       	std	Y+40, r25	; 0x28
     12e:	c4 01       	movw	r24, r8
     130:	b3 01       	movw	r22, r6
     132:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     136:	69 a3       	std	Y+33, r22	; 0x21
     138:	7a a3       	std	Y+34, r23	; 0x22
     13a:	8b a3       	std	Y+35, r24	; 0x23
     13c:	9c a3       	std	Y+36, r25	; 0x24
     13e:	c6 01       	movw	r24, r12
     140:	b5 01       	movw	r22, r10
     142:	a2 01       	movw	r20, r4
     144:	91 01       	movw	r18, r2
     146:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     14a:	7b 01       	movw	r14, r22
     14c:	8c 01       	movw	r16, r24
     14e:	c4 01       	movw	r24, r8
     150:	b3 01       	movw	r22, r6
     152:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     156:	5b 01       	movw	r10, r22
     158:	6c 01       	movw	r12, r24
     15a:	89 a1       	ldd	r24, Y+33	; 0x21
     15c:	9a a1       	ldd	r25, Y+34	; 0x22
     15e:	ab a1       	ldd	r26, Y+35	; 0x23
     160:	bc a1       	ldd	r27, Y+36	; 0x24
     162:	8e 0d       	add	r24, r14
     164:	9f 1d       	adc	r25, r15
     166:	a0 1f       	adc	r26, r16
     168:	b1 1f       	adc	r27, r17
     16a:	89 a3       	std	Y+33, r24	; 0x21
     16c:	9a a3       	std	Y+34, r25	; 0x22
     16e:	ab a3       	std	Y+35, r26	; 0x23
     170:	bc a3       	std	Y+36, r27	; 0x24
     172:	2d a1       	ldd	r18, Y+37	; 0x25
     174:	3e a1       	ldd	r19, Y+38	; 0x26
     176:	4f a1       	ldd	r20, Y+39	; 0x27
     178:	58 a5       	ldd	r21, Y+40	; 0x28
     17a:	ca 01       	movw	r24, r20
     17c:	aa 27       	eor	r26, r26
     17e:	bb 27       	eor	r27, r27
     180:	29 a1       	ldd	r18, Y+33	; 0x21
     182:	3a a1       	ldd	r19, Y+34	; 0x22
     184:	4b a1       	ldd	r20, Y+35	; 0x23
     186:	5c a1       	ldd	r21, Y+36	; 0x24
     188:	28 0f       	add	r18, r24
     18a:	39 1f       	adc	r19, r25
     18c:	4a 1f       	adc	r20, r26
     18e:	5b 1f       	adc	r21, r27
     190:	29 a3       	std	Y+33, r18	; 0x21
     192:	3a a3       	std	Y+34, r19	; 0x22
     194:	4b a3       	std	Y+35, r20	; 0x23
     196:	5c a3       	std	Y+36, r21	; 0x24
     198:	2e 15       	cp	r18, r14
     19a:	3f 05       	cpc	r19, r15
     19c:	40 07       	cpc	r20, r16
     19e:	51 07       	cpc	r21, r17
     1a0:	40 f4       	brcc	.+16     	; 0x1b2 <__muldi3+0x130>
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	a1 e0       	ldi	r26, 0x01	; 1
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	a8 0e       	add	r10, r24
     1ac:	b9 1e       	adc	r11, r25
     1ae:	ca 1e       	adc	r12, r26
     1b0:	db 1e       	adc	r13, r27
     1b2:	89 a1       	ldd	r24, Y+33	; 0x21
     1b4:	9a a1       	ldd	r25, Y+34	; 0x22
     1b6:	ab a1       	ldd	r26, Y+35	; 0x23
     1b8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ba:	9d 01       	movw	r18, r26
     1bc:	44 27       	eor	r20, r20
     1be:	55 27       	eor	r21, r21
     1c0:	2a 0d       	add	r18, r10
     1c2:	3b 1d       	adc	r19, r11
     1c4:	4c 1d       	adc	r20, r12
     1c6:	5d 1d       	adc	r21, r13
     1c8:	2d 8f       	std	Y+29, r18	; 0x1d
     1ca:	3e 8f       	std	Y+30, r19	; 0x1e
     1cc:	4f 8f       	std	Y+31, r20	; 0x1f
     1ce:	58 a3       	std	Y+32, r21	; 0x20
     1d0:	6c 01       	movw	r12, r24
     1d2:	bb 24       	eor	r11, r11
     1d4:	aa 24       	eor	r10, r10
     1d6:	8d a1       	ldd	r24, Y+37	; 0x25
     1d8:	9e a1       	ldd	r25, Y+38	; 0x26
     1da:	af a1       	ldd	r26, Y+39	; 0x27
     1dc:	b8 a5       	ldd	r27, Y+40	; 0x28
     1de:	a0 70       	andi	r26, 0x00	; 0
     1e0:	b0 70       	andi	r27, 0x00	; 0
     1e2:	a8 0e       	add	r10, r24
     1e4:	b9 1e       	adc	r11, r25
     1e6:	ca 1e       	adc	r12, r26
     1e8:	db 1e       	adc	r13, r27
     1ea:	a9 8e       	std	Y+25, r10	; 0x19
     1ec:	ba 8e       	std	Y+26, r11	; 0x1a
     1ee:	cb 8e       	std	Y+27, r12	; 0x1b
     1f0:	dc 8e       	std	Y+28, r13	; 0x1c
     1f2:	9a 8c       	ldd	r9, Y+26	; 0x1a
     1f4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     1f6:	7c 8c       	ldd	r7, Y+28	; 0x1c
     1f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     1fa:	6f 8d       	ldd	r22, Y+31	; 0x1f
     1fc:	78 a1       	ldd	r23, Y+32	; 0x20
     1fe:	fe 01       	movw	r30, r28
     200:	71 96       	adiw	r30, 0x11	; 17
     202:	88 e0       	ldi	r24, 0x08	; 8
     204:	df 01       	movw	r26, r30
     206:	1d 92       	st	X+, r1
     208:	8a 95       	dec	r24
     20a:	e9 f7       	brne	.-6      	; 0x206 <__muldi3+0x184>
     20c:	2d 8b       	std	Y+21, r18	; 0x15
     20e:	9e 8b       	std	Y+22, r25	; 0x16
     210:	6f 8b       	std	Y+23, r22	; 0x17
     212:	78 8f       	std	Y+24, r23	; 0x18
     214:	2d 85       	ldd	r18, Y+13	; 0x0d
     216:	3e 85       	ldd	r19, Y+14	; 0x0e
     218:	4f 85       	ldd	r20, Y+15	; 0x0f
     21a:	58 89       	ldd	r21, Y+16	; 0x10
     21c:	6d a5       	ldd	r22, Y+45	; 0x2d
     21e:	7e a5       	ldd	r23, Y+46	; 0x2e
     220:	8f a5       	ldd	r24, Y+47	; 0x2f
     222:	98 a9       	ldd	r25, Y+48	; 0x30
     224:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     228:	7b 01       	movw	r14, r22
     22a:	8c 01       	movw	r16, r24
     22c:	2d 81       	ldd	r18, Y+5	; 0x05
     22e:	3e 81       	ldd	r19, Y+6	; 0x06
     230:	4f 81       	ldd	r20, Y+7	; 0x07
     232:	58 85       	ldd	r21, Y+8	; 0x08
     234:	69 a5       	ldd	r22, Y+41	; 0x29
     236:	7a a5       	ldd	r23, Y+42	; 0x2a
     238:	8b a5       	ldd	r24, Y+43	; 0x2b
     23a:	9c a5       	ldd	r25, Y+44	; 0x2c
     23c:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     240:	e6 0e       	add	r14, r22
     242:	f7 1e       	adc	r15, r23
     244:	08 1f       	adc	r16, r24
     246:	19 1f       	adc	r17, r25
     248:	6d 89       	ldd	r22, Y+21	; 0x15
     24a:	7e 89       	ldd	r23, Y+22	; 0x16
     24c:	8f 89       	ldd	r24, Y+23	; 0x17
     24e:	98 8d       	ldd	r25, Y+24	; 0x18
     250:	6e 0d       	add	r22, r14
     252:	7f 1d       	adc	r23, r15
     254:	80 1f       	adc	r24, r16
     256:	91 1f       	adc	r25, r17
     258:	6d 8b       	std	Y+21, r22	; 0x15
     25a:	7e 8b       	std	Y+22, r23	; 0x16
     25c:	8f 8b       	std	Y+23, r24	; 0x17
     25e:	98 8f       	std	Y+24, r25	; 0x18
     260:	ee 89       	ldd	r30, Y+22	; 0x16
     262:	2a 2d       	mov	r18, r10
     264:	39 2d       	mov	r19, r9
     266:	48 2d       	mov	r20, r8
     268:	57 2d       	mov	r21, r7
     26a:	7e 2f       	mov	r23, r30
     26c:	8f 89       	ldd	r24, Y+23	; 0x17
     26e:	98 8d       	ldd	r25, Y+24	; 0x18
     270:	e0 96       	adiw	r28, 0x30	; 48
     272:	e2 e1       	ldi	r30, 0x12	; 18
     274:	0c 94 66 26 	jmp	0x4ccc	; 0x4ccc <__epilogue_restores__>

00000278 <__ashldi3>:
     278:	ef 92       	push	r14
     27a:	ff 92       	push	r15
     27c:	0f 93       	push	r16
     27e:	df 93       	push	r29
     280:	cf 93       	push	r28
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	60 97       	sbiw	r28, 0x10	; 16
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
     292:	a8 2f       	mov	r26, r24
     294:	00 23       	and	r16, r16
     296:	09 f4       	brne	.+2      	; 0x29a <__ashldi3+0x22>
     298:	61 c0       	rjmp	.+194    	; 0x35c <__ashldi3+0xe4>
     29a:	7e 01       	movw	r14, r28
     29c:	08 94       	sec
     29e:	e1 1c       	adc	r14, r1
     2a0:	f1 1c       	adc	r15, r1
     2a2:	88 e0       	ldi	r24, 0x08	; 8
     2a4:	f7 01       	movw	r30, r14
     2a6:	11 92       	st	Z+, r1
     2a8:	8a 95       	dec	r24
     2aa:	e9 f7       	brne	.-6      	; 0x2a6 <__ashldi3+0x2e>
     2ac:	29 83       	std	Y+1, r18	; 0x01
     2ae:	3a 83       	std	Y+2, r19	; 0x02
     2b0:	4b 83       	std	Y+3, r20	; 0x03
     2b2:	5c 83       	std	Y+4, r21	; 0x04
     2b4:	6d 83       	std	Y+5, r22	; 0x05
     2b6:	7e 83       	std	Y+6, r23	; 0x06
     2b8:	af 83       	std	Y+7, r26	; 0x07
     2ba:	98 87       	std	Y+8, r25	; 0x08
     2bc:	80 e2       	ldi	r24, 0x20	; 32
     2be:	80 1b       	sub	r24, r16
     2c0:	e8 2f       	mov	r30, r24
     2c2:	ff 27       	eor	r31, r31
     2c4:	e7 fd       	sbrc	r30, 7
     2c6:	f0 95       	com	r31
     2c8:	49 81       	ldd	r20, Y+1	; 0x01
     2ca:	5a 81       	ldd	r21, Y+2	; 0x02
     2cc:	6b 81       	ldd	r22, Y+3	; 0x03
     2ce:	7c 81       	ldd	r23, Y+4	; 0x04
     2d0:	18 16       	cp	r1, r24
     2d2:	84 f0       	brlt	.+32     	; 0x2f4 <__ashldi3+0x7c>
     2d4:	19 86       	std	Y+9, r1	; 0x09
     2d6:	1a 86       	std	Y+10, r1	; 0x0a
     2d8:	1b 86       	std	Y+11, r1	; 0x0b
     2da:	1c 86       	std	Y+12, r1	; 0x0c
     2dc:	88 27       	eor	r24, r24
     2de:	99 27       	eor	r25, r25
     2e0:	8e 1b       	sub	r24, r30
     2e2:	9f 0b       	sbc	r25, r31
     2e4:	04 c0       	rjmp	.+8      	; 0x2ee <__ashldi3+0x76>
     2e6:	44 0f       	add	r20, r20
     2e8:	55 1f       	adc	r21, r21
     2ea:	66 1f       	adc	r22, r22
     2ec:	77 1f       	adc	r23, r23
     2ee:	8a 95       	dec	r24
     2f0:	d2 f7       	brpl	.-12     	; 0x2e6 <__ashldi3+0x6e>
     2f2:	28 c0       	rjmp	.+80     	; 0x344 <__ashldi3+0xcc>
     2f4:	20 2f       	mov	r18, r16
     2f6:	33 27       	eor	r19, r19
     2f8:	27 fd       	sbrc	r18, 7
     2fa:	30 95       	com	r19
     2fc:	db 01       	movw	r26, r22
     2fe:	ca 01       	movw	r24, r20
     300:	02 2e       	mov	r0, r18
     302:	04 c0       	rjmp	.+8      	; 0x30c <__ashldi3+0x94>
     304:	88 0f       	add	r24, r24
     306:	99 1f       	adc	r25, r25
     308:	aa 1f       	adc	r26, r26
     30a:	bb 1f       	adc	r27, r27
     30c:	0a 94       	dec	r0
     30e:	d2 f7       	brpl	.-12     	; 0x304 <__ashldi3+0x8c>
     310:	89 87       	std	Y+9, r24	; 0x09
     312:	9a 87       	std	Y+10, r25	; 0x0a
     314:	ab 87       	std	Y+11, r26	; 0x0b
     316:	bc 87       	std	Y+12, r27	; 0x0c
     318:	04 c0       	rjmp	.+8      	; 0x322 <__ashldi3+0xaa>
     31a:	76 95       	lsr	r23
     31c:	67 95       	ror	r22
     31e:	57 95       	ror	r21
     320:	47 95       	ror	r20
     322:	ea 95       	dec	r30
     324:	d2 f7       	brpl	.-12     	; 0x31a <__ashldi3+0xa2>
     326:	8d 81       	ldd	r24, Y+5	; 0x05
     328:	9e 81       	ldd	r25, Y+6	; 0x06
     32a:	af 81       	ldd	r26, Y+7	; 0x07
     32c:	b8 85       	ldd	r27, Y+8	; 0x08
     32e:	04 c0       	rjmp	.+8      	; 0x338 <__ashldi3+0xc0>
     330:	88 0f       	add	r24, r24
     332:	99 1f       	adc	r25, r25
     334:	aa 1f       	adc	r26, r26
     336:	bb 1f       	adc	r27, r27
     338:	2a 95       	dec	r18
     33a:	d2 f7       	brpl	.-12     	; 0x330 <__ashldi3+0xb8>
     33c:	48 2b       	or	r20, r24
     33e:	59 2b       	or	r21, r25
     340:	6a 2b       	or	r22, r26
     342:	7b 2b       	or	r23, r27
     344:	4d 87       	std	Y+13, r20	; 0x0d
     346:	5e 87       	std	Y+14, r21	; 0x0e
     348:	6f 87       	std	Y+15, r22	; 0x0f
     34a:	78 8b       	std	Y+16, r23	; 0x10
     34c:	29 85       	ldd	r18, Y+9	; 0x09
     34e:	3a 85       	ldd	r19, Y+10	; 0x0a
     350:	4b 85       	ldd	r20, Y+11	; 0x0b
     352:	5c 85       	ldd	r21, Y+12	; 0x0c
     354:	6d 85       	ldd	r22, Y+13	; 0x0d
     356:	7e 85       	ldd	r23, Y+14	; 0x0e
     358:	af 85       	ldd	r26, Y+15	; 0x0f
     35a:	98 89       	ldd	r25, Y+16	; 0x10
     35c:	8a 2f       	mov	r24, r26
     35e:	60 96       	adiw	r28, 0x10	; 16
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	f8 94       	cli
     364:	de bf       	out	0x3e, r29	; 62
     366:	0f be       	out	0x3f, r0	; 63
     368:	cd bf       	out	0x3d, r28	; 61
     36a:	cf 91       	pop	r28
     36c:	df 91       	pop	r29
     36e:	0f 91       	pop	r16
     370:	ff 90       	pop	r15
     372:	ef 90       	pop	r14
     374:	08 95       	ret

00000376 <__fixunssfsi>:
     376:	ef 92       	push	r14
     378:	ff 92       	push	r15
     37a:	0f 93       	push	r16
     37c:	1f 93       	push	r17
     37e:	7b 01       	movw	r14, r22
     380:	8c 01       	movw	r16, r24
     382:	20 e0       	ldi	r18, 0x00	; 0
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	40 e0       	ldi	r20, 0x00	; 0
     388:	5f e4       	ldi	r21, 0x4F	; 79
     38a:	0e 94 4c 12 	call	0x2498	; 0x2498 <__gesf2>
     38e:	88 23       	and	r24, r24
     390:	8c f0       	brlt	.+34     	; 0x3b4 <__fixunssfsi+0x3e>
     392:	c8 01       	movw	r24, r16
     394:	b7 01       	movw	r22, r14
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	40 e0       	ldi	r20, 0x00	; 0
     39c:	5f e4       	ldi	r21, 0x4F	; 79
     39e:	0e 94 18 10 	call	0x2030	; 0x2030 <__subsf3>
     3a2:	0e 94 ac 12 	call	0x2558	; 0x2558 <__fixsfsi>
     3a6:	9b 01       	movw	r18, r22
     3a8:	ac 01       	movw	r20, r24
     3aa:	20 50       	subi	r18, 0x00	; 0
     3ac:	30 40       	sbci	r19, 0x00	; 0
     3ae:	40 40       	sbci	r20, 0x00	; 0
     3b0:	50 48       	sbci	r21, 0x80	; 128
     3b2:	06 c0       	rjmp	.+12     	; 0x3c0 <__fixunssfsi+0x4a>
     3b4:	c8 01       	movw	r24, r16
     3b6:	b7 01       	movw	r22, r14
     3b8:	0e 94 ac 12 	call	0x2558	; 0x2558 <__fixsfsi>
     3bc:	9b 01       	movw	r18, r22
     3be:	ac 01       	movw	r20, r24
     3c0:	b9 01       	movw	r22, r18
     3c2:	ca 01       	movw	r24, r20
     3c4:	1f 91       	pop	r17
     3c6:	0f 91       	pop	r16
     3c8:	ff 90       	pop	r15
     3ca:	ef 90       	pop	r14
     3cc:	08 95       	ret

000003ce <__udivdi3>:
     3ce:	ae e5       	ldi	r26, 0x5E	; 94
     3d0:	b0 e0       	ldi	r27, 0x00	; 0
     3d2:	ed ee       	ldi	r30, 0xED	; 237
     3d4:	f1 e0       	ldi	r31, 0x01	; 1
     3d6:	0c 94 4a 26 	jmp	0x4c94	; 0x4c94 <__prologue_saves__>
     3da:	a8 e0       	ldi	r26, 0x08	; 8
     3dc:	4e 01       	movw	r8, r28
     3de:	08 94       	sec
     3e0:	81 1c       	adc	r8, r1
     3e2:	91 1c       	adc	r9, r1
     3e4:	f4 01       	movw	r30, r8
     3e6:	6a 2e       	mov	r6, r26
     3e8:	11 92       	st	Z+, r1
     3ea:	6a 94       	dec	r6
     3ec:	e9 f7       	brne	.-6      	; 0x3e8 <__udivdi3+0x1a>
     3ee:	29 83       	std	Y+1, r18	; 0x01
     3f0:	3a 83       	std	Y+2, r19	; 0x02
     3f2:	4b 83       	std	Y+3, r20	; 0x03
     3f4:	5c 83       	std	Y+4, r21	; 0x04
     3f6:	6d 83       	std	Y+5, r22	; 0x05
     3f8:	7e 83       	std	Y+6, r23	; 0x06
     3fa:	8f 83       	std	Y+7, r24	; 0x07
     3fc:	98 87       	std	Y+8, r25	; 0x08
     3fe:	ce 01       	movw	r24, r28
     400:	09 96       	adiw	r24, 0x09	; 9
     402:	fc 01       	movw	r30, r24
     404:	11 92       	st	Z+, r1
     406:	aa 95       	dec	r26
     408:	e9 f7       	brne	.-6      	; 0x404 <__udivdi3+0x36>
     40a:	a9 86       	std	Y+9, r10	; 0x09
     40c:	ba 86       	std	Y+10, r11	; 0x0a
     40e:	cb 86       	std	Y+11, r12	; 0x0b
     410:	dc 86       	std	Y+12, r13	; 0x0c
     412:	ed 86       	std	Y+13, r14	; 0x0d
     414:	fe 86       	std	Y+14, r15	; 0x0e
     416:	0f 87       	std	Y+15, r16	; 0x0f
     418:	18 8b       	std	Y+16, r17	; 0x10
     41a:	29 84       	ldd	r2, Y+9	; 0x09
     41c:	3a 84       	ldd	r3, Y+10	; 0x0a
     41e:	4b 84       	ldd	r4, Y+11	; 0x0b
     420:	5c 84       	ldd	r5, Y+12	; 0x0c
     422:	ed 84       	ldd	r14, Y+13	; 0x0d
     424:	fe 84       	ldd	r15, Y+14	; 0x0e
     426:	0f 85       	ldd	r16, Y+15	; 0x0f
     428:	18 89       	ldd	r17, Y+16	; 0x10
     42a:	69 80       	ldd	r6, Y+1	; 0x01
     42c:	7a 80       	ldd	r7, Y+2	; 0x02
     42e:	8b 80       	ldd	r8, Y+3	; 0x03
     430:	9c 80       	ldd	r9, Y+4	; 0x04
     432:	6d a6       	std	Y+45, r6	; 0x2d
     434:	7e a6       	std	Y+46, r7	; 0x2e
     436:	8f a6       	std	Y+47, r8	; 0x2f
     438:	98 aa       	std	Y+48, r9	; 0x30
     43a:	6d 80       	ldd	r6, Y+5	; 0x05
     43c:	7e 80       	ldd	r7, Y+6	; 0x06
     43e:	8f 80       	ldd	r8, Y+7	; 0x07
     440:	98 84       	ldd	r9, Y+8	; 0x08
     442:	e1 14       	cp	r14, r1
     444:	f1 04       	cpc	r15, r1
     446:	01 05       	cpc	r16, r1
     448:	11 05       	cpc	r17, r1
     44a:	09 f0       	breq	.+2      	; 0x44e <__udivdi3+0x80>
     44c:	b3 c3       	rjmp	.+1894   	; 0xbb4 <__stack+0x355>
     44e:	62 14       	cp	r6, r2
     450:	73 04       	cpc	r7, r3
     452:	84 04       	cpc	r8, r4
     454:	95 04       	cpc	r9, r5
     456:	08 f0       	brcs	.+2      	; 0x45a <__udivdi3+0x8c>
     458:	3d c1       	rjmp	.+634    	; 0x6d4 <__udivdi3+0x306>
     45a:	00 e0       	ldi	r16, 0x00	; 0
     45c:	20 16       	cp	r2, r16
     45e:	00 e0       	ldi	r16, 0x00	; 0
     460:	30 06       	cpc	r3, r16
     462:	01 e0       	ldi	r16, 0x01	; 1
     464:	40 06       	cpc	r4, r16
     466:	00 e0       	ldi	r16, 0x00	; 0
     468:	50 06       	cpc	r5, r16
     46a:	88 f4       	brcc	.+34     	; 0x48e <__udivdi3+0xc0>
     46c:	1f ef       	ldi	r17, 0xFF	; 255
     46e:	21 16       	cp	r2, r17
     470:	31 04       	cpc	r3, r1
     472:	41 04       	cpc	r4, r1
     474:	51 04       	cpc	r5, r1
     476:	39 f0       	breq	.+14     	; 0x486 <__udivdi3+0xb8>
     478:	30 f0       	brcs	.+12     	; 0x486 <__udivdi3+0xb8>
     47a:	48 e0       	ldi	r20, 0x08	; 8
     47c:	e4 2e       	mov	r14, r20
     47e:	f1 2c       	mov	r15, r1
     480:	01 2d       	mov	r16, r1
     482:	11 2d       	mov	r17, r1
     484:	18 c0       	rjmp	.+48     	; 0x4b6 <__udivdi3+0xe8>
     486:	ee 24       	eor	r14, r14
     488:	ff 24       	eor	r15, r15
     48a:	87 01       	movw	r16, r14
     48c:	14 c0       	rjmp	.+40     	; 0x4b6 <__udivdi3+0xe8>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	22 16       	cp	r2, r18
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	32 06       	cpc	r3, r18
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	42 06       	cpc	r4, r18
     49a:	21 e0       	ldi	r18, 0x01	; 1
     49c:	52 06       	cpc	r5, r18
     49e:	30 f0       	brcs	.+12     	; 0x4ac <__udivdi3+0xde>
     4a0:	38 e1       	ldi	r19, 0x18	; 24
     4a2:	e3 2e       	mov	r14, r19
     4a4:	f1 2c       	mov	r15, r1
     4a6:	01 2d       	mov	r16, r1
     4a8:	11 2d       	mov	r17, r1
     4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <__udivdi3+0xe8>
     4ac:	20 e1       	ldi	r18, 0x10	; 16
     4ae:	e2 2e       	mov	r14, r18
     4b0:	f1 2c       	mov	r15, r1
     4b2:	01 2d       	mov	r16, r1
     4b4:	11 2d       	mov	r17, r1
     4b6:	d2 01       	movw	r26, r4
     4b8:	c1 01       	movw	r24, r2
     4ba:	0e 2c       	mov	r0, r14
     4bc:	04 c0       	rjmp	.+8      	; 0x4c6 <__udivdi3+0xf8>
     4be:	b6 95       	lsr	r27
     4c0:	a7 95       	ror	r26
     4c2:	97 95       	ror	r25
     4c4:	87 95       	ror	r24
     4c6:	0a 94       	dec	r0
     4c8:	d2 f7       	brpl	.-12     	; 0x4be <__udivdi3+0xf0>
     4ca:	86 58       	subi	r24, 0x86	; 134
     4cc:	9f 4f       	sbci	r25, 0xFF	; 255
     4ce:	dc 01       	movw	r26, r24
     4d0:	2c 91       	ld	r18, X
     4d2:	80 e2       	ldi	r24, 0x20	; 32
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	a0 e0       	ldi	r26, 0x00	; 0
     4d8:	b0 e0       	ldi	r27, 0x00	; 0
     4da:	8e 19       	sub	r24, r14
     4dc:	9f 09       	sbc	r25, r15
     4de:	a0 0b       	sbc	r26, r16
     4e0:	b1 0b       	sbc	r27, r17
     4e2:	7c 01       	movw	r14, r24
     4e4:	8d 01       	movw	r16, r26
     4e6:	e2 1a       	sub	r14, r18
     4e8:	f1 08       	sbc	r15, r1
     4ea:	01 09       	sbc	r16, r1
     4ec:	11 09       	sbc	r17, r1
     4ee:	e1 14       	cp	r14, r1
     4f0:	f1 04       	cpc	r15, r1
     4f2:	01 05       	cpc	r16, r1
     4f4:	11 05       	cpc	r17, r1
     4f6:	a1 f1       	breq	.+104    	; 0x560 <__udivdi3+0x192>
     4f8:	0e 2c       	mov	r0, r14
     4fa:	04 c0       	rjmp	.+8      	; 0x504 <__udivdi3+0x136>
     4fc:	22 0c       	add	r2, r2
     4fe:	33 1c       	adc	r3, r3
     500:	44 1c       	adc	r4, r4
     502:	55 1c       	adc	r5, r5
     504:	0a 94       	dec	r0
     506:	d2 f7       	brpl	.-12     	; 0x4fc <__udivdi3+0x12e>
     508:	a4 01       	movw	r20, r8
     50a:	93 01       	movw	r18, r6
     50c:	0e 2c       	mov	r0, r14
     50e:	04 c0       	rjmp	.+8      	; 0x518 <__udivdi3+0x14a>
     510:	22 0f       	add	r18, r18
     512:	33 1f       	adc	r19, r19
     514:	44 1f       	adc	r20, r20
     516:	55 1f       	adc	r21, r21
     518:	0a 94       	dec	r0
     51a:	d2 f7       	brpl	.-12     	; 0x510 <__udivdi3+0x142>
     51c:	80 e2       	ldi	r24, 0x20	; 32
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	8e 19       	sub	r24, r14
     522:	9f 09       	sbc	r25, r15
     524:	6d a4       	ldd	r6, Y+45	; 0x2d
     526:	7e a4       	ldd	r7, Y+46	; 0x2e
     528:	8f a4       	ldd	r8, Y+47	; 0x2f
     52a:	98 a8       	ldd	r9, Y+48	; 0x30
     52c:	04 c0       	rjmp	.+8      	; 0x536 <__udivdi3+0x168>
     52e:	96 94       	lsr	r9
     530:	87 94       	ror	r8
     532:	77 94       	ror	r7
     534:	67 94       	ror	r6
     536:	8a 95       	dec	r24
     538:	d2 f7       	brpl	.-12     	; 0x52e <__udivdi3+0x160>
     53a:	62 2a       	or	r6, r18
     53c:	73 2a       	or	r7, r19
     53e:	84 2a       	or	r8, r20
     540:	95 2a       	or	r9, r21
     542:	ad a4       	ldd	r10, Y+45	; 0x2d
     544:	be a4       	ldd	r11, Y+46	; 0x2e
     546:	cf a4       	ldd	r12, Y+47	; 0x2f
     548:	d8 a8       	ldd	r13, Y+48	; 0x30
     54a:	04 c0       	rjmp	.+8      	; 0x554 <__udivdi3+0x186>
     54c:	aa 0c       	add	r10, r10
     54e:	bb 1c       	adc	r11, r11
     550:	cc 1c       	adc	r12, r12
     552:	dd 1c       	adc	r13, r13
     554:	ea 94       	dec	r14
     556:	d2 f7       	brpl	.-12     	; 0x54c <__udivdi3+0x17e>
     558:	ad a6       	std	Y+45, r10	; 0x2d
     55a:	be a6       	std	Y+46, r11	; 0x2e
     55c:	cf a6       	std	Y+47, r12	; 0x2f
     55e:	d8 aa       	std	Y+48, r13	; 0x30
     560:	62 01       	movw	r12, r4
     562:	ee 24       	eor	r14, r14
     564:	ff 24       	eor	r15, r15
     566:	cd aa       	std	Y+53, r12	; 0x35
     568:	de aa       	std	Y+54, r13	; 0x36
     56a:	ef aa       	std	Y+55, r14	; 0x37
     56c:	f8 ae       	std	Y+56, r15	; 0x38
     56e:	92 01       	movw	r18, r4
     570:	81 01       	movw	r16, r2
     572:	20 70       	andi	r18, 0x00	; 0
     574:	30 70       	andi	r19, 0x00	; 0
     576:	09 af       	std	Y+57, r16	; 0x39
     578:	1a af       	std	Y+58, r17	; 0x3a
     57a:	2b af       	std	Y+59, r18	; 0x3b
     57c:	3c af       	std	Y+60, r19	; 0x3c
     57e:	c4 01       	movw	r24, r8
     580:	b3 01       	movw	r22, r6
     582:	a7 01       	movw	r20, r14
     584:	96 01       	movw	r18, r12
     586:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     58a:	7b 01       	movw	r14, r22
     58c:	8c 01       	movw	r16, r24
     58e:	c4 01       	movw	r24, r8
     590:	b3 01       	movw	r22, r6
     592:	2d a9       	ldd	r18, Y+53	; 0x35
     594:	3e a9       	ldd	r19, Y+54	; 0x36
     596:	4f a9       	ldd	r20, Y+55	; 0x37
     598:	58 ad       	ldd	r21, Y+56	; 0x38
     59a:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     59e:	c9 01       	movw	r24, r18
     5a0:	da 01       	movw	r26, r20
     5a2:	3c 01       	movw	r6, r24
     5a4:	4d 01       	movw	r8, r26
     5a6:	c4 01       	movw	r24, r8
     5a8:	b3 01       	movw	r22, r6
     5aa:	29 ad       	ldd	r18, Y+57	; 0x39
     5ac:	3a ad       	ldd	r19, Y+58	; 0x3a
     5ae:	4b ad       	ldd	r20, Y+59	; 0x3b
     5b0:	5c ad       	ldd	r21, Y+60	; 0x3c
     5b2:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     5b6:	9b 01       	movw	r18, r22
     5b8:	ac 01       	movw	r20, r24
     5ba:	87 01       	movw	r16, r14
     5bc:	ff 24       	eor	r15, r15
     5be:	ee 24       	eor	r14, r14
     5c0:	ad a4       	ldd	r10, Y+45	; 0x2d
     5c2:	be a4       	ldd	r11, Y+46	; 0x2e
     5c4:	cf a4       	ldd	r12, Y+47	; 0x2f
     5c6:	d8 a8       	ldd	r13, Y+48	; 0x30
     5c8:	c6 01       	movw	r24, r12
     5ca:	aa 27       	eor	r26, r26
     5cc:	bb 27       	eor	r27, r27
     5ce:	57 01       	movw	r10, r14
     5d0:	68 01       	movw	r12, r16
     5d2:	a8 2a       	or	r10, r24
     5d4:	b9 2a       	or	r11, r25
     5d6:	ca 2a       	or	r12, r26
     5d8:	db 2a       	or	r13, r27
     5da:	a2 16       	cp	r10, r18
     5dc:	b3 06       	cpc	r11, r19
     5de:	c4 06       	cpc	r12, r20
     5e0:	d5 06       	cpc	r13, r21
     5e2:	e0 f4       	brcc	.+56     	; 0x61c <__udivdi3+0x24e>
     5e4:	08 94       	sec
     5e6:	61 08       	sbc	r6, r1
     5e8:	71 08       	sbc	r7, r1
     5ea:	81 08       	sbc	r8, r1
     5ec:	91 08       	sbc	r9, r1
     5ee:	a2 0c       	add	r10, r2
     5f0:	b3 1c       	adc	r11, r3
     5f2:	c4 1c       	adc	r12, r4
     5f4:	d5 1c       	adc	r13, r5
     5f6:	a2 14       	cp	r10, r2
     5f8:	b3 04       	cpc	r11, r3
     5fa:	c4 04       	cpc	r12, r4
     5fc:	d5 04       	cpc	r13, r5
     5fe:	70 f0       	brcs	.+28     	; 0x61c <__udivdi3+0x24e>
     600:	a2 16       	cp	r10, r18
     602:	b3 06       	cpc	r11, r19
     604:	c4 06       	cpc	r12, r20
     606:	d5 06       	cpc	r13, r21
     608:	48 f4       	brcc	.+18     	; 0x61c <__udivdi3+0x24e>
     60a:	08 94       	sec
     60c:	61 08       	sbc	r6, r1
     60e:	71 08       	sbc	r7, r1
     610:	81 08       	sbc	r8, r1
     612:	91 08       	sbc	r9, r1
     614:	a2 0c       	add	r10, r2
     616:	b3 1c       	adc	r11, r3
     618:	c4 1c       	adc	r12, r4
     61a:	d5 1c       	adc	r13, r5
     61c:	a2 1a       	sub	r10, r18
     61e:	b3 0a       	sbc	r11, r19
     620:	c4 0a       	sbc	r12, r20
     622:	d5 0a       	sbc	r13, r21
     624:	c6 01       	movw	r24, r12
     626:	b5 01       	movw	r22, r10
     628:	2d a9       	ldd	r18, Y+53	; 0x35
     62a:	3e a9       	ldd	r19, Y+54	; 0x36
     62c:	4f a9       	ldd	r20, Y+55	; 0x37
     62e:	58 ad       	ldd	r21, Y+56	; 0x38
     630:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     634:	7b 01       	movw	r14, r22
     636:	8c 01       	movw	r16, r24
     638:	c6 01       	movw	r24, r12
     63a:	b5 01       	movw	r22, r10
     63c:	2d a9       	ldd	r18, Y+53	; 0x35
     63e:	3e a9       	ldd	r19, Y+54	; 0x36
     640:	4f a9       	ldd	r20, Y+55	; 0x37
     642:	58 ad       	ldd	r21, Y+56	; 0x38
     644:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     648:	c9 01       	movw	r24, r18
     64a:	da 01       	movw	r26, r20
     64c:	5c 01       	movw	r10, r24
     64e:	6d 01       	movw	r12, r26
     650:	c6 01       	movw	r24, r12
     652:	b5 01       	movw	r22, r10
     654:	29 ad       	ldd	r18, Y+57	; 0x39
     656:	3a ad       	ldd	r19, Y+58	; 0x3a
     658:	4b ad       	ldd	r20, Y+59	; 0x3b
     65a:	5c ad       	ldd	r21, Y+60	; 0x3c
     65c:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     660:	9b 01       	movw	r18, r22
     662:	ac 01       	movw	r20, r24
     664:	87 01       	movw	r16, r14
     666:	ff 24       	eor	r15, r15
     668:	ee 24       	eor	r14, r14
     66a:	8d a5       	ldd	r24, Y+45	; 0x2d
     66c:	9e a5       	ldd	r25, Y+46	; 0x2e
     66e:	af a5       	ldd	r26, Y+47	; 0x2f
     670:	b8 a9       	ldd	r27, Y+48	; 0x30
     672:	a0 70       	andi	r26, 0x00	; 0
     674:	b0 70       	andi	r27, 0x00	; 0
     676:	e8 2a       	or	r14, r24
     678:	f9 2a       	or	r15, r25
     67a:	0a 2b       	or	r16, r26
     67c:	1b 2b       	or	r17, r27
     67e:	e2 16       	cp	r14, r18
     680:	f3 06       	cpc	r15, r19
     682:	04 07       	cpc	r16, r20
     684:	15 07       	cpc	r17, r21
     686:	c0 f4       	brcc	.+48     	; 0x6b8 <__udivdi3+0x2ea>
     688:	08 94       	sec
     68a:	a1 08       	sbc	r10, r1
     68c:	b1 08       	sbc	r11, r1
     68e:	c1 08       	sbc	r12, r1
     690:	d1 08       	sbc	r13, r1
     692:	e2 0c       	add	r14, r2
     694:	f3 1c       	adc	r15, r3
     696:	04 1d       	adc	r16, r4
     698:	15 1d       	adc	r17, r5
     69a:	e2 14       	cp	r14, r2
     69c:	f3 04       	cpc	r15, r3
     69e:	04 05       	cpc	r16, r4
     6a0:	15 05       	cpc	r17, r5
     6a2:	50 f0       	brcs	.+20     	; 0x6b8 <__udivdi3+0x2ea>
     6a4:	e2 16       	cp	r14, r18
     6a6:	f3 06       	cpc	r15, r19
     6a8:	04 07       	cpc	r16, r20
     6aa:	15 07       	cpc	r17, r21
     6ac:	28 f4       	brcc	.+10     	; 0x6b8 <__udivdi3+0x2ea>
     6ae:	08 94       	sec
     6b0:	a1 08       	sbc	r10, r1
     6b2:	b1 08       	sbc	r11, r1
     6b4:	c1 08       	sbc	r12, r1
     6b6:	d1 08       	sbc	r13, r1
     6b8:	d3 01       	movw	r26, r6
     6ba:	99 27       	eor	r25, r25
     6bc:	88 27       	eor	r24, r24
     6be:	86 01       	movw	r16, r12
     6c0:	75 01       	movw	r14, r10
     6c2:	e8 2a       	or	r14, r24
     6c4:	f9 2a       	or	r15, r25
     6c6:	0a 2b       	or	r16, r26
     6c8:	1b 2b       	or	r17, r27
     6ca:	e9 aa       	std	Y+49, r14	; 0x31
     6cc:	fa aa       	std	Y+50, r15	; 0x32
     6ce:	0b ab       	std	Y+51, r16	; 0x33
     6d0:	1c ab       	std	Y+52, r17	; 0x34
     6d2:	cf c4       	rjmp	.+2462   	; 0x1072 <__stack+0x813>
     6d4:	21 14       	cp	r2, r1
     6d6:	31 04       	cpc	r3, r1
     6d8:	41 04       	cpc	r4, r1
     6da:	51 04       	cpc	r5, r1
     6dc:	71 f4       	brne	.+28     	; 0x6fa <__udivdi3+0x32c>
     6de:	61 e0       	ldi	r22, 0x01	; 1
     6e0:	70 e0       	ldi	r23, 0x00	; 0
     6e2:	80 e0       	ldi	r24, 0x00	; 0
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	40 e0       	ldi	r20, 0x00	; 0
     6ec:	50 e0       	ldi	r21, 0x00	; 0
     6ee:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     6f2:	c9 01       	movw	r24, r18
     6f4:	da 01       	movw	r26, r20
     6f6:	1c 01       	movw	r2, r24
     6f8:	2d 01       	movw	r4, r26
     6fa:	00 e0       	ldi	r16, 0x00	; 0
     6fc:	20 16       	cp	r2, r16
     6fe:	00 e0       	ldi	r16, 0x00	; 0
     700:	30 06       	cpc	r3, r16
     702:	01 e0       	ldi	r16, 0x01	; 1
     704:	40 06       	cpc	r4, r16
     706:	00 e0       	ldi	r16, 0x00	; 0
     708:	50 06       	cpc	r5, r16
     70a:	88 f4       	brcc	.+34     	; 0x72e <__udivdi3+0x360>
     70c:	1f ef       	ldi	r17, 0xFF	; 255
     70e:	21 16       	cp	r2, r17
     710:	31 04       	cpc	r3, r1
     712:	41 04       	cpc	r4, r1
     714:	51 04       	cpc	r5, r1
     716:	31 f0       	breq	.+12     	; 0x724 <__udivdi3+0x356>
     718:	28 f0       	brcs	.+10     	; 0x724 <__udivdi3+0x356>
     71a:	48 e0       	ldi	r20, 0x08	; 8
     71c:	50 e0       	ldi	r21, 0x00	; 0
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	70 e0       	ldi	r23, 0x00	; 0
     722:	17 c0       	rjmp	.+46     	; 0x752 <__udivdi3+0x384>
     724:	40 e0       	ldi	r20, 0x00	; 0
     726:	50 e0       	ldi	r21, 0x00	; 0
     728:	60 e0       	ldi	r22, 0x00	; 0
     72a:	70 e0       	ldi	r23, 0x00	; 0
     72c:	12 c0       	rjmp	.+36     	; 0x752 <__udivdi3+0x384>
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	22 16       	cp	r2, r18
     732:	20 e0       	ldi	r18, 0x00	; 0
     734:	32 06       	cpc	r3, r18
     736:	20 e0       	ldi	r18, 0x00	; 0
     738:	42 06       	cpc	r4, r18
     73a:	21 e0       	ldi	r18, 0x01	; 1
     73c:	52 06       	cpc	r5, r18
     73e:	28 f0       	brcs	.+10     	; 0x74a <__udivdi3+0x37c>
     740:	48 e1       	ldi	r20, 0x18	; 24
     742:	50 e0       	ldi	r21, 0x00	; 0
     744:	60 e0       	ldi	r22, 0x00	; 0
     746:	70 e0       	ldi	r23, 0x00	; 0
     748:	04 c0       	rjmp	.+8      	; 0x752 <__udivdi3+0x384>
     74a:	40 e1       	ldi	r20, 0x10	; 16
     74c:	50 e0       	ldi	r21, 0x00	; 0
     74e:	60 e0       	ldi	r22, 0x00	; 0
     750:	70 e0       	ldi	r23, 0x00	; 0
     752:	d2 01       	movw	r26, r4
     754:	c1 01       	movw	r24, r2
     756:	04 2e       	mov	r0, r20
     758:	04 c0       	rjmp	.+8      	; 0x762 <__udivdi3+0x394>
     75a:	b6 95       	lsr	r27
     75c:	a7 95       	ror	r26
     75e:	97 95       	ror	r25
     760:	87 95       	ror	r24
     762:	0a 94       	dec	r0
     764:	d2 f7       	brpl	.-12     	; 0x75a <__udivdi3+0x38c>
     766:	86 58       	subi	r24, 0x86	; 134
     768:	9f 4f       	sbci	r25, 0xFF	; 255
     76a:	dc 01       	movw	r26, r24
     76c:	2c 91       	ld	r18, X
     76e:	e0 e2       	ldi	r30, 0x20	; 32
     770:	ee 2e       	mov	r14, r30
     772:	f1 2c       	mov	r15, r1
     774:	01 2d       	mov	r16, r1
     776:	11 2d       	mov	r17, r1
     778:	d8 01       	movw	r26, r16
     77a:	c7 01       	movw	r24, r14
     77c:	84 1b       	sub	r24, r20
     77e:	95 0b       	sbc	r25, r21
     780:	a6 0b       	sbc	r26, r22
     782:	b7 0b       	sbc	r27, r23
     784:	82 1b       	sub	r24, r18
     786:	91 09       	sbc	r25, r1
     788:	a1 09       	sbc	r26, r1
     78a:	b1 09       	sbc	r27, r1
     78c:	00 97       	sbiw	r24, 0x00	; 0
     78e:	a1 05       	cpc	r26, r1
     790:	b1 05       	cpc	r27, r1
     792:	61 f4       	brne	.+24     	; 0x7ac <__udivdi3+0x3de>
     794:	64 01       	movw	r12, r8
     796:	53 01       	movw	r10, r6
     798:	a2 18       	sub	r10, r2
     79a:	b3 08       	sbc	r11, r3
     79c:	c4 08       	sbc	r12, r4
     79e:	d5 08       	sbc	r13, r5
     7a0:	31 e0       	ldi	r19, 0x01	; 1
     7a2:	63 2e       	mov	r6, r19
     7a4:	71 2c       	mov	r7, r1
     7a6:	81 2c       	mov	r8, r1
     7a8:	91 2c       	mov	r9, r1
     7aa:	1e c1       	rjmp	.+572    	; 0x9e8 <__stack+0x189>
     7ac:	6f 96       	adiw	r28, 0x1f	; 31
     7ae:	8f af       	std	Y+63, r24	; 0x3f
     7b0:	6f 97       	sbiw	r28, 0x1f	; 31
     7b2:	08 2e       	mov	r0, r24
     7b4:	04 c0       	rjmp	.+8      	; 0x7be <__udivdi3+0x3f0>
     7b6:	22 0c       	add	r2, r2
     7b8:	33 1c       	adc	r3, r3
     7ba:	44 1c       	adc	r4, r4
     7bc:	55 1c       	adc	r5, r5
     7be:	0a 94       	dec	r0
     7c0:	d2 f7       	brpl	.-12     	; 0x7b6 <__udivdi3+0x3e8>
     7c2:	ee 2d       	mov	r30, r14
     7c4:	e8 1b       	sub	r30, r24
     7c6:	64 01       	movw	r12, r8
     7c8:	53 01       	movw	r10, r6
     7ca:	0e 2e       	mov	r0, r30
     7cc:	04 c0       	rjmp	.+8      	; 0x7d6 <__udivdi3+0x408>
     7ce:	d6 94       	lsr	r13
     7d0:	c7 94       	ror	r12
     7d2:	b7 94       	ror	r11
     7d4:	a7 94       	ror	r10
     7d6:	0a 94       	dec	r0
     7d8:	d2 f7       	brpl	.-12     	; 0x7ce <__udivdi3+0x400>
     7da:	a4 01       	movw	r20, r8
     7dc:	93 01       	movw	r18, r6
     7de:	6f 96       	adiw	r28, 0x1f	; 31
     7e0:	0f ac       	ldd	r0, Y+63	; 0x3f
     7e2:	6f 97       	sbiw	r28, 0x1f	; 31
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__udivdi3+0x420>
     7e6:	22 0f       	add	r18, r18
     7e8:	33 1f       	adc	r19, r19
     7ea:	44 1f       	adc	r20, r20
     7ec:	55 1f       	adc	r21, r21
     7ee:	0a 94       	dec	r0
     7f0:	d2 f7       	brpl	.-12     	; 0x7e6 <__udivdi3+0x418>
     7f2:	6d a4       	ldd	r6, Y+45	; 0x2d
     7f4:	7e a4       	ldd	r7, Y+46	; 0x2e
     7f6:	8f a4       	ldd	r8, Y+47	; 0x2f
     7f8:	98 a8       	ldd	r9, Y+48	; 0x30
     7fa:	0e 2e       	mov	r0, r30
     7fc:	04 c0       	rjmp	.+8      	; 0x806 <__udivdi3+0x438>
     7fe:	96 94       	lsr	r9
     800:	87 94       	ror	r8
     802:	77 94       	ror	r7
     804:	67 94       	ror	r6
     806:	0a 94       	dec	r0
     808:	d2 f7       	brpl	.-12     	; 0x7fe <__udivdi3+0x430>
     80a:	84 01       	movw	r16, r8
     80c:	73 01       	movw	r14, r6
     80e:	e2 2a       	or	r14, r18
     810:	f3 2a       	or	r15, r19
     812:	04 2b       	or	r16, r20
     814:	15 2b       	or	r17, r21
     816:	e9 a6       	std	Y+41, r14	; 0x29
     818:	fa a6       	std	Y+42, r15	; 0x2a
     81a:	0b a7       	std	Y+43, r16	; 0x2b
     81c:	1c a7       	std	Y+44, r17	; 0x2c
     81e:	32 01       	movw	r6, r4
     820:	88 24       	eor	r8, r8
     822:	99 24       	eor	r9, r9
     824:	92 01       	movw	r18, r4
     826:	81 01       	movw	r16, r2
     828:	20 70       	andi	r18, 0x00	; 0
     82a:	30 70       	andi	r19, 0x00	; 0
     82c:	21 96       	adiw	r28, 0x01	; 1
     82e:	0c af       	std	Y+60, r16	; 0x3c
     830:	1d af       	std	Y+61, r17	; 0x3d
     832:	2e af       	std	Y+62, r18	; 0x3e
     834:	3f af       	std	Y+63, r19	; 0x3f
     836:	21 97       	sbiw	r28, 0x01	; 1
     838:	c6 01       	movw	r24, r12
     83a:	b5 01       	movw	r22, r10
     83c:	a4 01       	movw	r20, r8
     83e:	93 01       	movw	r18, r6
     840:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     844:	7b 01       	movw	r14, r22
     846:	8c 01       	movw	r16, r24
     848:	c6 01       	movw	r24, r12
     84a:	b5 01       	movw	r22, r10
     84c:	a4 01       	movw	r20, r8
     84e:	93 01       	movw	r18, r6
     850:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     854:	c9 01       	movw	r24, r18
     856:	da 01       	movw	r26, r20
     858:	25 96       	adiw	r28, 0x05	; 5
     85a:	8c af       	std	Y+60, r24	; 0x3c
     85c:	9d af       	std	Y+61, r25	; 0x3d
     85e:	ae af       	std	Y+62, r26	; 0x3e
     860:	bf af       	std	Y+63, r27	; 0x3f
     862:	25 97       	sbiw	r28, 0x05	; 5
     864:	bc 01       	movw	r22, r24
     866:	cd 01       	movw	r24, r26
     868:	21 96       	adiw	r28, 0x01	; 1
     86a:	2c ad       	ldd	r18, Y+60	; 0x3c
     86c:	3d ad       	ldd	r19, Y+61	; 0x3d
     86e:	4e ad       	ldd	r20, Y+62	; 0x3e
     870:	5f ad       	ldd	r21, Y+63	; 0x3f
     872:	21 97       	sbiw	r28, 0x01	; 1
     874:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     878:	9b 01       	movw	r18, r22
     87a:	ac 01       	movw	r20, r24
     87c:	87 01       	movw	r16, r14
     87e:	ff 24       	eor	r15, r15
     880:	ee 24       	eor	r14, r14
     882:	a9 a4       	ldd	r10, Y+41	; 0x29
     884:	ba a4       	ldd	r11, Y+42	; 0x2a
     886:	cb a4       	ldd	r12, Y+43	; 0x2b
     888:	dc a4       	ldd	r13, Y+44	; 0x2c
     88a:	c6 01       	movw	r24, r12
     88c:	aa 27       	eor	r26, r26
     88e:	bb 27       	eor	r27, r27
     890:	5c 01       	movw	r10, r24
     892:	6d 01       	movw	r12, r26
     894:	ae 28       	or	r10, r14
     896:	bf 28       	or	r11, r15
     898:	c0 2a       	or	r12, r16
     89a:	d1 2a       	or	r13, r17
     89c:	a2 16       	cp	r10, r18
     89e:	b3 06       	cpc	r11, r19
     8a0:	c4 06       	cpc	r12, r20
     8a2:	d5 06       	cpc	r13, r21
     8a4:	60 f5       	brcc	.+88     	; 0x8fe <__stack+0x9f>
     8a6:	25 96       	adiw	r28, 0x05	; 5
     8a8:	6c ad       	ldd	r22, Y+60	; 0x3c
     8aa:	7d ad       	ldd	r23, Y+61	; 0x3d
     8ac:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ae:	9f ad       	ldd	r25, Y+63	; 0x3f
     8b0:	25 97       	sbiw	r28, 0x05	; 5
     8b2:	61 50       	subi	r22, 0x01	; 1
     8b4:	70 40       	sbci	r23, 0x00	; 0
     8b6:	80 40       	sbci	r24, 0x00	; 0
     8b8:	90 40       	sbci	r25, 0x00	; 0
     8ba:	25 96       	adiw	r28, 0x05	; 5
     8bc:	6c af       	std	Y+60, r22	; 0x3c
     8be:	7d af       	std	Y+61, r23	; 0x3d
     8c0:	8e af       	std	Y+62, r24	; 0x3e
     8c2:	9f af       	std	Y+63, r25	; 0x3f
     8c4:	25 97       	sbiw	r28, 0x05	; 5
     8c6:	a2 0c       	add	r10, r2
     8c8:	b3 1c       	adc	r11, r3
     8ca:	c4 1c       	adc	r12, r4
     8cc:	d5 1c       	adc	r13, r5
     8ce:	a2 14       	cp	r10, r2
     8d0:	b3 04       	cpc	r11, r3
     8d2:	c4 04       	cpc	r12, r4
     8d4:	d5 04       	cpc	r13, r5
     8d6:	98 f0       	brcs	.+38     	; 0x8fe <__stack+0x9f>
     8d8:	a2 16       	cp	r10, r18
     8da:	b3 06       	cpc	r11, r19
     8dc:	c4 06       	cpc	r12, r20
     8de:	d5 06       	cpc	r13, r21
     8e0:	70 f4       	brcc	.+28     	; 0x8fe <__stack+0x9f>
     8e2:	61 50       	subi	r22, 0x01	; 1
     8e4:	70 40       	sbci	r23, 0x00	; 0
     8e6:	80 40       	sbci	r24, 0x00	; 0
     8e8:	90 40       	sbci	r25, 0x00	; 0
     8ea:	25 96       	adiw	r28, 0x05	; 5
     8ec:	6c af       	std	Y+60, r22	; 0x3c
     8ee:	7d af       	std	Y+61, r23	; 0x3d
     8f0:	8e af       	std	Y+62, r24	; 0x3e
     8f2:	9f af       	std	Y+63, r25	; 0x3f
     8f4:	25 97       	sbiw	r28, 0x05	; 5
     8f6:	a2 0c       	add	r10, r2
     8f8:	b3 1c       	adc	r11, r3
     8fa:	c4 1c       	adc	r12, r4
     8fc:	d5 1c       	adc	r13, r5
     8fe:	a2 1a       	sub	r10, r18
     900:	b3 0a       	sbc	r11, r19
     902:	c4 0a       	sbc	r12, r20
     904:	d5 0a       	sbc	r13, r21
     906:	c6 01       	movw	r24, r12
     908:	b5 01       	movw	r22, r10
     90a:	a4 01       	movw	r20, r8
     90c:	93 01       	movw	r18, r6
     90e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     912:	7b 01       	movw	r14, r22
     914:	8c 01       	movw	r16, r24
     916:	c6 01       	movw	r24, r12
     918:	b5 01       	movw	r22, r10
     91a:	a4 01       	movw	r20, r8
     91c:	93 01       	movw	r18, r6
     91e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     922:	c9 01       	movw	r24, r18
     924:	da 01       	movw	r26, r20
     926:	3c 01       	movw	r6, r24
     928:	4d 01       	movw	r8, r26
     92a:	c4 01       	movw	r24, r8
     92c:	b3 01       	movw	r22, r6
     92e:	21 96       	adiw	r28, 0x01	; 1
     930:	2c ad       	ldd	r18, Y+60	; 0x3c
     932:	3d ad       	ldd	r19, Y+61	; 0x3d
     934:	4e ad       	ldd	r20, Y+62	; 0x3e
     936:	5f ad       	ldd	r21, Y+63	; 0x3f
     938:	21 97       	sbiw	r28, 0x01	; 1
     93a:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     93e:	9b 01       	movw	r18, r22
     940:	ac 01       	movw	r20, r24
     942:	87 01       	movw	r16, r14
     944:	ff 24       	eor	r15, r15
     946:	ee 24       	eor	r14, r14
     948:	89 a5       	ldd	r24, Y+41	; 0x29
     94a:	9a a5       	ldd	r25, Y+42	; 0x2a
     94c:	ab a5       	ldd	r26, Y+43	; 0x2b
     94e:	bc a5       	ldd	r27, Y+44	; 0x2c
     950:	a0 70       	andi	r26, 0x00	; 0
     952:	b0 70       	andi	r27, 0x00	; 0
     954:	57 01       	movw	r10, r14
     956:	68 01       	movw	r12, r16
     958:	a8 2a       	or	r10, r24
     95a:	b9 2a       	or	r11, r25
     95c:	ca 2a       	or	r12, r26
     95e:	db 2a       	or	r13, r27
     960:	a2 16       	cp	r10, r18
     962:	b3 06       	cpc	r11, r19
     964:	c4 06       	cpc	r12, r20
     966:	d5 06       	cpc	r13, r21
     968:	e0 f4       	brcc	.+56     	; 0x9a2 <__stack+0x143>
     96a:	08 94       	sec
     96c:	61 08       	sbc	r6, r1
     96e:	71 08       	sbc	r7, r1
     970:	81 08       	sbc	r8, r1
     972:	91 08       	sbc	r9, r1
     974:	a2 0c       	add	r10, r2
     976:	b3 1c       	adc	r11, r3
     978:	c4 1c       	adc	r12, r4
     97a:	d5 1c       	adc	r13, r5
     97c:	a2 14       	cp	r10, r2
     97e:	b3 04       	cpc	r11, r3
     980:	c4 04       	cpc	r12, r4
     982:	d5 04       	cpc	r13, r5
     984:	70 f0       	brcs	.+28     	; 0x9a2 <__stack+0x143>
     986:	a2 16       	cp	r10, r18
     988:	b3 06       	cpc	r11, r19
     98a:	c4 06       	cpc	r12, r20
     98c:	d5 06       	cpc	r13, r21
     98e:	48 f4       	brcc	.+18     	; 0x9a2 <__stack+0x143>
     990:	08 94       	sec
     992:	61 08       	sbc	r6, r1
     994:	71 08       	sbc	r7, r1
     996:	81 08       	sbc	r8, r1
     998:	91 08       	sbc	r9, r1
     99a:	a2 0c       	add	r10, r2
     99c:	b3 1c       	adc	r11, r3
     99e:	c4 1c       	adc	r12, r4
     9a0:	d5 1c       	adc	r13, r5
     9a2:	8d a5       	ldd	r24, Y+45	; 0x2d
     9a4:	9e a5       	ldd	r25, Y+46	; 0x2e
     9a6:	af a5       	ldd	r26, Y+47	; 0x2f
     9a8:	b8 a9       	ldd	r27, Y+48	; 0x30
     9aa:	6f 96       	adiw	r28, 0x1f	; 31
     9ac:	0f ac       	ldd	r0, Y+63	; 0x3f
     9ae:	6f 97       	sbiw	r28, 0x1f	; 31
     9b0:	04 c0       	rjmp	.+8      	; 0x9ba <__stack+0x15b>
     9b2:	88 0f       	add	r24, r24
     9b4:	99 1f       	adc	r25, r25
     9b6:	aa 1f       	adc	r26, r26
     9b8:	bb 1f       	adc	r27, r27
     9ba:	0a 94       	dec	r0
     9bc:	d2 f7       	brpl	.-12     	; 0x9b2 <__stack+0x153>
     9be:	8d a7       	std	Y+45, r24	; 0x2d
     9c0:	9e a7       	std	Y+46, r25	; 0x2e
     9c2:	af a7       	std	Y+47, r26	; 0x2f
     9c4:	b8 ab       	std	Y+48, r27	; 0x30
     9c6:	a2 1a       	sub	r10, r18
     9c8:	b3 0a       	sbc	r11, r19
     9ca:	c4 0a       	sbc	r12, r20
     9cc:	d5 0a       	sbc	r13, r21
     9ce:	25 96       	adiw	r28, 0x05	; 5
     9d0:	ec ac       	ldd	r14, Y+60	; 0x3c
     9d2:	fd ac       	ldd	r15, Y+61	; 0x3d
     9d4:	0e ad       	ldd	r16, Y+62	; 0x3e
     9d6:	1f ad       	ldd	r17, Y+63	; 0x3f
     9d8:	25 97       	sbiw	r28, 0x05	; 5
     9da:	d7 01       	movw	r26, r14
     9dc:	99 27       	eor	r25, r25
     9de:	88 27       	eor	r24, r24
     9e0:	68 2a       	or	r6, r24
     9e2:	79 2a       	or	r7, r25
     9e4:	8a 2a       	or	r8, r26
     9e6:	9b 2a       	or	r9, r27
     9e8:	82 01       	movw	r16, r4
     9ea:	22 27       	eor	r18, r18
     9ec:	33 27       	eor	r19, r19
     9ee:	29 96       	adiw	r28, 0x09	; 9
     9f0:	0c af       	std	Y+60, r16	; 0x3c
     9f2:	1d af       	std	Y+61, r17	; 0x3d
     9f4:	2e af       	std	Y+62, r18	; 0x3e
     9f6:	3f af       	std	Y+63, r19	; 0x3f
     9f8:	29 97       	sbiw	r28, 0x09	; 9
     9fa:	a2 01       	movw	r20, r4
     9fc:	91 01       	movw	r18, r2
     9fe:	40 70       	andi	r20, 0x00	; 0
     a00:	50 70       	andi	r21, 0x00	; 0
     a02:	2d 96       	adiw	r28, 0x0d	; 13
     a04:	2c af       	std	Y+60, r18	; 0x3c
     a06:	3d af       	std	Y+61, r19	; 0x3d
     a08:	4e af       	std	Y+62, r20	; 0x3e
     a0a:	5f af       	std	Y+63, r21	; 0x3f
     a0c:	2d 97       	sbiw	r28, 0x0d	; 13
     a0e:	c6 01       	movw	r24, r12
     a10:	b5 01       	movw	r22, r10
     a12:	29 96       	adiw	r28, 0x09	; 9
     a14:	2c ad       	ldd	r18, Y+60	; 0x3c
     a16:	3d ad       	ldd	r19, Y+61	; 0x3d
     a18:	4e ad       	ldd	r20, Y+62	; 0x3e
     a1a:	5f ad       	ldd	r21, Y+63	; 0x3f
     a1c:	29 97       	sbiw	r28, 0x09	; 9
     a1e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     a22:	7b 01       	movw	r14, r22
     a24:	8c 01       	movw	r16, r24
     a26:	c6 01       	movw	r24, r12
     a28:	b5 01       	movw	r22, r10
     a2a:	29 96       	adiw	r28, 0x09	; 9
     a2c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a2e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a30:	4e ad       	ldd	r20, Y+62	; 0x3e
     a32:	5f ad       	ldd	r21, Y+63	; 0x3f
     a34:	29 97       	sbiw	r28, 0x09	; 9
     a36:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     a3a:	c9 01       	movw	r24, r18
     a3c:	da 01       	movw	r26, r20
     a3e:	61 96       	adiw	r28, 0x11	; 17
     a40:	8c af       	std	Y+60, r24	; 0x3c
     a42:	9d af       	std	Y+61, r25	; 0x3d
     a44:	ae af       	std	Y+62, r26	; 0x3e
     a46:	bf af       	std	Y+63, r27	; 0x3f
     a48:	61 97       	sbiw	r28, 0x11	; 17
     a4a:	bc 01       	movw	r22, r24
     a4c:	cd 01       	movw	r24, r26
     a4e:	2d 96       	adiw	r28, 0x0d	; 13
     a50:	2c ad       	ldd	r18, Y+60	; 0x3c
     a52:	3d ad       	ldd	r19, Y+61	; 0x3d
     a54:	4e ad       	ldd	r20, Y+62	; 0x3e
     a56:	5f ad       	ldd	r21, Y+63	; 0x3f
     a58:	2d 97       	sbiw	r28, 0x0d	; 13
     a5a:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     a5e:	9b 01       	movw	r18, r22
     a60:	ac 01       	movw	r20, r24
     a62:	87 01       	movw	r16, r14
     a64:	ff 24       	eor	r15, r15
     a66:	ee 24       	eor	r14, r14
     a68:	ad a4       	ldd	r10, Y+45	; 0x2d
     a6a:	be a4       	ldd	r11, Y+46	; 0x2e
     a6c:	cf a4       	ldd	r12, Y+47	; 0x2f
     a6e:	d8 a8       	ldd	r13, Y+48	; 0x30
     a70:	c6 01       	movw	r24, r12
     a72:	aa 27       	eor	r26, r26
     a74:	bb 27       	eor	r27, r27
     a76:	57 01       	movw	r10, r14
     a78:	68 01       	movw	r12, r16
     a7a:	a8 2a       	or	r10, r24
     a7c:	b9 2a       	or	r11, r25
     a7e:	ca 2a       	or	r12, r26
     a80:	db 2a       	or	r13, r27
     a82:	a2 16       	cp	r10, r18
     a84:	b3 06       	cpc	r11, r19
     a86:	c4 06       	cpc	r12, r20
     a88:	d5 06       	cpc	r13, r21
     a8a:	60 f5       	brcc	.+88     	; 0xae4 <__stack+0x285>
     a8c:	61 96       	adiw	r28, 0x11	; 17
     a8e:	6c ad       	ldd	r22, Y+60	; 0x3c
     a90:	7d ad       	ldd	r23, Y+61	; 0x3d
     a92:	8e ad       	ldd	r24, Y+62	; 0x3e
     a94:	9f ad       	ldd	r25, Y+63	; 0x3f
     a96:	61 97       	sbiw	r28, 0x11	; 17
     a98:	61 50       	subi	r22, 0x01	; 1
     a9a:	70 40       	sbci	r23, 0x00	; 0
     a9c:	80 40       	sbci	r24, 0x00	; 0
     a9e:	90 40       	sbci	r25, 0x00	; 0
     aa0:	61 96       	adiw	r28, 0x11	; 17
     aa2:	6c af       	std	Y+60, r22	; 0x3c
     aa4:	7d af       	std	Y+61, r23	; 0x3d
     aa6:	8e af       	std	Y+62, r24	; 0x3e
     aa8:	9f af       	std	Y+63, r25	; 0x3f
     aaa:	61 97       	sbiw	r28, 0x11	; 17
     aac:	a2 0c       	add	r10, r2
     aae:	b3 1c       	adc	r11, r3
     ab0:	c4 1c       	adc	r12, r4
     ab2:	d5 1c       	adc	r13, r5
     ab4:	a2 14       	cp	r10, r2
     ab6:	b3 04       	cpc	r11, r3
     ab8:	c4 04       	cpc	r12, r4
     aba:	d5 04       	cpc	r13, r5
     abc:	98 f0       	brcs	.+38     	; 0xae4 <__stack+0x285>
     abe:	a2 16       	cp	r10, r18
     ac0:	b3 06       	cpc	r11, r19
     ac2:	c4 06       	cpc	r12, r20
     ac4:	d5 06       	cpc	r13, r21
     ac6:	70 f4       	brcc	.+28     	; 0xae4 <__stack+0x285>
     ac8:	61 50       	subi	r22, 0x01	; 1
     aca:	70 40       	sbci	r23, 0x00	; 0
     acc:	80 40       	sbci	r24, 0x00	; 0
     ace:	90 40       	sbci	r25, 0x00	; 0
     ad0:	61 96       	adiw	r28, 0x11	; 17
     ad2:	6c af       	std	Y+60, r22	; 0x3c
     ad4:	7d af       	std	Y+61, r23	; 0x3d
     ad6:	8e af       	std	Y+62, r24	; 0x3e
     ad8:	9f af       	std	Y+63, r25	; 0x3f
     ada:	61 97       	sbiw	r28, 0x11	; 17
     adc:	a2 0c       	add	r10, r2
     ade:	b3 1c       	adc	r11, r3
     ae0:	c4 1c       	adc	r12, r4
     ae2:	d5 1c       	adc	r13, r5
     ae4:	a2 1a       	sub	r10, r18
     ae6:	b3 0a       	sbc	r11, r19
     ae8:	c4 0a       	sbc	r12, r20
     aea:	d5 0a       	sbc	r13, r21
     aec:	c6 01       	movw	r24, r12
     aee:	b5 01       	movw	r22, r10
     af0:	29 96       	adiw	r28, 0x09	; 9
     af2:	2c ad       	ldd	r18, Y+60	; 0x3c
     af4:	3d ad       	ldd	r19, Y+61	; 0x3d
     af6:	4e ad       	ldd	r20, Y+62	; 0x3e
     af8:	5f ad       	ldd	r21, Y+63	; 0x3f
     afa:	29 97       	sbiw	r28, 0x09	; 9
     afc:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     b00:	7b 01       	movw	r14, r22
     b02:	8c 01       	movw	r16, r24
     b04:	c6 01       	movw	r24, r12
     b06:	b5 01       	movw	r22, r10
     b08:	29 96       	adiw	r28, 0x09	; 9
     b0a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b0c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b0e:	4e ad       	ldd	r20, Y+62	; 0x3e
     b10:	5f ad       	ldd	r21, Y+63	; 0x3f
     b12:	29 97       	sbiw	r28, 0x09	; 9
     b14:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     b18:	c9 01       	movw	r24, r18
     b1a:	da 01       	movw	r26, r20
     b1c:	5c 01       	movw	r10, r24
     b1e:	6d 01       	movw	r12, r26
     b20:	c6 01       	movw	r24, r12
     b22:	b5 01       	movw	r22, r10
     b24:	2d 96       	adiw	r28, 0x0d	; 13
     b26:	2c ad       	ldd	r18, Y+60	; 0x3c
     b28:	3d ad       	ldd	r19, Y+61	; 0x3d
     b2a:	4e ad       	ldd	r20, Y+62	; 0x3e
     b2c:	5f ad       	ldd	r21, Y+63	; 0x3f
     b2e:	2d 97       	sbiw	r28, 0x0d	; 13
     b30:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     b34:	9b 01       	movw	r18, r22
     b36:	ac 01       	movw	r20, r24
     b38:	87 01       	movw	r16, r14
     b3a:	ff 24       	eor	r15, r15
     b3c:	ee 24       	eor	r14, r14
     b3e:	8d a5       	ldd	r24, Y+45	; 0x2d
     b40:	9e a5       	ldd	r25, Y+46	; 0x2e
     b42:	af a5       	ldd	r26, Y+47	; 0x2f
     b44:	b8 a9       	ldd	r27, Y+48	; 0x30
     b46:	a0 70       	andi	r26, 0x00	; 0
     b48:	b0 70       	andi	r27, 0x00	; 0
     b4a:	e8 2a       	or	r14, r24
     b4c:	f9 2a       	or	r15, r25
     b4e:	0a 2b       	or	r16, r26
     b50:	1b 2b       	or	r17, r27
     b52:	e2 16       	cp	r14, r18
     b54:	f3 06       	cpc	r15, r19
     b56:	04 07       	cpc	r16, r20
     b58:	15 07       	cpc	r17, r21
     b5a:	c0 f4       	brcc	.+48     	; 0xb8c <__stack+0x32d>
     b5c:	08 94       	sec
     b5e:	a1 08       	sbc	r10, r1
     b60:	b1 08       	sbc	r11, r1
     b62:	c1 08       	sbc	r12, r1
     b64:	d1 08       	sbc	r13, r1
     b66:	e2 0c       	add	r14, r2
     b68:	f3 1c       	adc	r15, r3
     b6a:	04 1d       	adc	r16, r4
     b6c:	15 1d       	adc	r17, r5
     b6e:	e2 14       	cp	r14, r2
     b70:	f3 04       	cpc	r15, r3
     b72:	04 05       	cpc	r16, r4
     b74:	15 05       	cpc	r17, r5
     b76:	50 f0       	brcs	.+20     	; 0xb8c <__stack+0x32d>
     b78:	e2 16       	cp	r14, r18
     b7a:	f3 06       	cpc	r15, r19
     b7c:	04 07       	cpc	r16, r20
     b7e:	15 07       	cpc	r17, r21
     b80:	28 f4       	brcc	.+10     	; 0xb8c <__stack+0x32d>
     b82:	08 94       	sec
     b84:	a1 08       	sbc	r10, r1
     b86:	b1 08       	sbc	r11, r1
     b88:	c1 08       	sbc	r12, r1
     b8a:	d1 08       	sbc	r13, r1
     b8c:	61 96       	adiw	r28, 0x11	; 17
     b8e:	ec ac       	ldd	r14, Y+60	; 0x3c
     b90:	fd ac       	ldd	r15, Y+61	; 0x3d
     b92:	0e ad       	ldd	r16, Y+62	; 0x3e
     b94:	1f ad       	ldd	r17, Y+63	; 0x3f
     b96:	61 97       	sbiw	r28, 0x11	; 17
     b98:	d7 01       	movw	r26, r14
     b9a:	99 27       	eor	r25, r25
     b9c:	88 27       	eor	r24, r24
     b9e:	96 01       	movw	r18, r12
     ba0:	85 01       	movw	r16, r10
     ba2:	08 2b       	or	r16, r24
     ba4:	19 2b       	or	r17, r25
     ba6:	2a 2b       	or	r18, r26
     ba8:	3b 2b       	or	r19, r27
     baa:	09 ab       	std	Y+49, r16	; 0x31
     bac:	1a ab       	std	Y+50, r17	; 0x32
     bae:	2b ab       	std	Y+51, r18	; 0x33
     bb0:	3c ab       	std	Y+52, r19	; 0x34
     bb2:	62 c2       	rjmp	.+1220   	; 0x1078 <__stack+0x819>
     bb4:	6e 14       	cp	r6, r14
     bb6:	7f 04       	cpc	r7, r15
     bb8:	80 06       	cpc	r8, r16
     bba:	91 06       	cpc	r9, r17
     bbc:	08 f4       	brcc	.+2      	; 0xbc0 <__stack+0x361>
     bbe:	51 c2       	rjmp	.+1186   	; 0x1062 <__stack+0x803>
     bc0:	20 e0       	ldi	r18, 0x00	; 0
     bc2:	e2 16       	cp	r14, r18
     bc4:	20 e0       	ldi	r18, 0x00	; 0
     bc6:	f2 06       	cpc	r15, r18
     bc8:	21 e0       	ldi	r18, 0x01	; 1
     bca:	02 07       	cpc	r16, r18
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	12 07       	cpc	r17, r18
     bd0:	88 f4       	brcc	.+34     	; 0xbf4 <__stack+0x395>
     bd2:	3f ef       	ldi	r19, 0xFF	; 255
     bd4:	e3 16       	cp	r14, r19
     bd6:	f1 04       	cpc	r15, r1
     bd8:	01 05       	cpc	r16, r1
     bda:	11 05       	cpc	r17, r1
     bdc:	31 f0       	breq	.+12     	; 0xbea <__stack+0x38b>
     bde:	28 f0       	brcs	.+10     	; 0xbea <__stack+0x38b>
     be0:	48 e0       	ldi	r20, 0x08	; 8
     be2:	50 e0       	ldi	r21, 0x00	; 0
     be4:	60 e0       	ldi	r22, 0x00	; 0
     be6:	70 e0       	ldi	r23, 0x00	; 0
     be8:	17 c0       	rjmp	.+46     	; 0xc18 <__stack+0x3b9>
     bea:	40 e0       	ldi	r20, 0x00	; 0
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	60 e0       	ldi	r22, 0x00	; 0
     bf0:	70 e0       	ldi	r23, 0x00	; 0
     bf2:	12 c0       	rjmp	.+36     	; 0xc18 <__stack+0x3b9>
     bf4:	40 e0       	ldi	r20, 0x00	; 0
     bf6:	e4 16       	cp	r14, r20
     bf8:	40 e0       	ldi	r20, 0x00	; 0
     bfa:	f4 06       	cpc	r15, r20
     bfc:	40 e0       	ldi	r20, 0x00	; 0
     bfe:	04 07       	cpc	r16, r20
     c00:	41 e0       	ldi	r20, 0x01	; 1
     c02:	14 07       	cpc	r17, r20
     c04:	28 f0       	brcs	.+10     	; 0xc10 <__stack+0x3b1>
     c06:	48 e1       	ldi	r20, 0x18	; 24
     c08:	50 e0       	ldi	r21, 0x00	; 0
     c0a:	60 e0       	ldi	r22, 0x00	; 0
     c0c:	70 e0       	ldi	r23, 0x00	; 0
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <__stack+0x3b9>
     c10:	40 e1       	ldi	r20, 0x10	; 16
     c12:	50 e0       	ldi	r21, 0x00	; 0
     c14:	60 e0       	ldi	r22, 0x00	; 0
     c16:	70 e0       	ldi	r23, 0x00	; 0
     c18:	d8 01       	movw	r26, r16
     c1a:	c7 01       	movw	r24, r14
     c1c:	04 2e       	mov	r0, r20
     c1e:	04 c0       	rjmp	.+8      	; 0xc28 <__stack+0x3c9>
     c20:	b6 95       	lsr	r27
     c22:	a7 95       	ror	r26
     c24:	97 95       	ror	r25
     c26:	87 95       	ror	r24
     c28:	0a 94       	dec	r0
     c2a:	d2 f7       	brpl	.-12     	; 0xc20 <__stack+0x3c1>
     c2c:	86 58       	subi	r24, 0x86	; 134
     c2e:	9f 4f       	sbci	r25, 0xFF	; 255
     c30:	dc 01       	movw	r26, r24
     c32:	2c 91       	ld	r18, X
     c34:	30 e2       	ldi	r19, 0x20	; 32
     c36:	a3 2e       	mov	r10, r19
     c38:	b1 2c       	mov	r11, r1
     c3a:	c1 2c       	mov	r12, r1
     c3c:	d1 2c       	mov	r13, r1
     c3e:	d6 01       	movw	r26, r12
     c40:	c5 01       	movw	r24, r10
     c42:	84 1b       	sub	r24, r20
     c44:	95 0b       	sbc	r25, r21
     c46:	a6 0b       	sbc	r26, r22
     c48:	b7 0b       	sbc	r27, r23
     c4a:	82 1b       	sub	r24, r18
     c4c:	91 09       	sbc	r25, r1
     c4e:	a1 09       	sbc	r26, r1
     c50:	b1 09       	sbc	r27, r1
     c52:	00 97       	sbiw	r24, 0x00	; 0
     c54:	a1 05       	cpc	r26, r1
     c56:	b1 05       	cpc	r27, r1
     c58:	89 f4       	brne	.+34     	; 0xc7c <__stack+0x41d>
     c5a:	e6 14       	cp	r14, r6
     c5c:	f7 04       	cpc	r15, r7
     c5e:	08 05       	cpc	r16, r8
     c60:	19 05       	cpc	r17, r9
     c62:	08 f4       	brcc	.+2      	; 0xc66 <__stack+0x407>
     c64:	f2 c1       	rjmp	.+996    	; 0x104a <__stack+0x7eb>
     c66:	6d a4       	ldd	r6, Y+45	; 0x2d
     c68:	7e a4       	ldd	r7, Y+46	; 0x2e
     c6a:	8f a4       	ldd	r8, Y+47	; 0x2f
     c6c:	98 a8       	ldd	r9, Y+48	; 0x30
     c6e:	62 14       	cp	r6, r2
     c70:	73 04       	cpc	r7, r3
     c72:	84 04       	cpc	r8, r4
     c74:	95 04       	cpc	r9, r5
     c76:	08 f0       	brcs	.+2      	; 0xc7a <__stack+0x41b>
     c78:	e8 c1       	rjmp	.+976    	; 0x104a <__stack+0x7eb>
     c7a:	f3 c1       	rjmp	.+998    	; 0x1062 <__stack+0x803>
     c7c:	6e 96       	adiw	r28, 0x1e	; 30
     c7e:	8f af       	std	Y+63, r24	; 0x3f
     c80:	6e 97       	sbiw	r28, 0x1e	; 30
     c82:	08 2e       	mov	r0, r24
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <__stack+0x42f>
     c86:	ee 0c       	add	r14, r14
     c88:	ff 1c       	adc	r15, r15
     c8a:	00 1f       	adc	r16, r16
     c8c:	11 1f       	adc	r17, r17
     c8e:	0a 94       	dec	r0
     c90:	d2 f7       	brpl	.-12     	; 0xc86 <__stack+0x427>
     c92:	6a 2d       	mov	r22, r10
     c94:	68 1b       	sub	r22, r24
     c96:	d2 01       	movw	r26, r4
     c98:	c1 01       	movw	r24, r2
     c9a:	06 2e       	mov	r0, r22
     c9c:	04 c0       	rjmp	.+8      	; 0xca6 <__stack+0x447>
     c9e:	b6 95       	lsr	r27
     ca0:	a7 95       	ror	r26
     ca2:	97 95       	ror	r25
     ca4:	87 95       	ror	r24
     ca6:	0a 94       	dec	r0
     ca8:	d2 f7       	brpl	.-12     	; 0xc9e <__stack+0x43f>
     caa:	5c 01       	movw	r10, r24
     cac:	6d 01       	movw	r12, r26
     cae:	ae 28       	or	r10, r14
     cb0:	bf 28       	or	r11, r15
     cb2:	c0 2a       	or	r12, r16
     cb4:	d1 2a       	or	r13, r17
     cb6:	ad a2       	std	Y+37, r10	; 0x25
     cb8:	be a2       	std	Y+38, r11	; 0x26
     cba:	cf a2       	std	Y+39, r12	; 0x27
     cbc:	d8 a6       	std	Y+40, r13	; 0x28
     cbe:	72 01       	movw	r14, r4
     cc0:	61 01       	movw	r12, r2
     cc2:	6e 96       	adiw	r28, 0x1e	; 30
     cc4:	0f ac       	ldd	r0, Y+63	; 0x3f
     cc6:	6e 97       	sbiw	r28, 0x1e	; 30
     cc8:	04 c0       	rjmp	.+8      	; 0xcd2 <__stack+0x473>
     cca:	cc 0c       	add	r12, r12
     ccc:	dd 1c       	adc	r13, r13
     cce:	ee 1c       	adc	r14, r14
     cd0:	ff 1c       	adc	r15, r15
     cd2:	0a 94       	dec	r0
     cd4:	d2 f7       	brpl	.-12     	; 0xcca <__stack+0x46b>
     cd6:	c9 a2       	std	Y+33, r12	; 0x21
     cd8:	da a2       	std	Y+34, r13	; 0x22
     cda:	eb a2       	std	Y+35, r14	; 0x23
     cdc:	fc a2       	std	Y+36, r15	; 0x24
     cde:	64 01       	movw	r12, r8
     ce0:	53 01       	movw	r10, r6
     ce2:	06 2e       	mov	r0, r22
     ce4:	04 c0       	rjmp	.+8      	; 0xcee <__stack+0x48f>
     ce6:	d6 94       	lsr	r13
     ce8:	c7 94       	ror	r12
     cea:	b7 94       	ror	r11
     cec:	a7 94       	ror	r10
     cee:	0a 94       	dec	r0
     cf0:	d2 f7       	brpl	.-12     	; 0xce6 <__stack+0x487>
     cf2:	d4 01       	movw	r26, r8
     cf4:	c3 01       	movw	r24, r6
     cf6:	6e 96       	adiw	r28, 0x1e	; 30
     cf8:	0f ac       	ldd	r0, Y+63	; 0x3f
     cfa:	6e 97       	sbiw	r28, 0x1e	; 30
     cfc:	04 c0       	rjmp	.+8      	; 0xd06 <__stack+0x4a7>
     cfe:	88 0f       	add	r24, r24
     d00:	99 1f       	adc	r25, r25
     d02:	aa 1f       	adc	r26, r26
     d04:	bb 1f       	adc	r27, r27
     d06:	0a 94       	dec	r0
     d08:	d2 f7       	brpl	.-12     	; 0xcfe <__stack+0x49f>
     d0a:	ed a4       	ldd	r14, Y+45	; 0x2d
     d0c:	fe a4       	ldd	r15, Y+46	; 0x2e
     d0e:	0f a5       	ldd	r16, Y+47	; 0x2f
     d10:	18 a9       	ldd	r17, Y+48	; 0x30
     d12:	04 c0       	rjmp	.+8      	; 0xd1c <__stack+0x4bd>
     d14:	16 95       	lsr	r17
     d16:	07 95       	ror	r16
     d18:	f7 94       	ror	r15
     d1a:	e7 94       	ror	r14
     d1c:	6a 95       	dec	r22
     d1e:	d2 f7       	brpl	.-12     	; 0xd14 <__stack+0x4b5>
     d20:	37 01       	movw	r6, r14
     d22:	48 01       	movw	r8, r16
     d24:	68 2a       	or	r6, r24
     d26:	79 2a       	or	r7, r25
     d28:	8a 2a       	or	r8, r26
     d2a:	9b 2a       	or	r9, r27
     d2c:	6d 8e       	std	Y+29, r6	; 0x1d
     d2e:	7e 8e       	std	Y+30, r7	; 0x1e
     d30:	8f 8e       	std	Y+31, r8	; 0x1f
     d32:	98 a2       	std	Y+32, r9	; 0x20
     d34:	ed a0       	ldd	r14, Y+37	; 0x25
     d36:	fe a0       	ldd	r15, Y+38	; 0x26
     d38:	0f a1       	ldd	r16, Y+39	; 0x27
     d3a:	18 a5       	ldd	r17, Y+40	; 0x28
     d3c:	38 01       	movw	r6, r16
     d3e:	88 24       	eor	r8, r8
     d40:	99 24       	eor	r9, r9
     d42:	98 01       	movw	r18, r16
     d44:	87 01       	movw	r16, r14
     d46:	20 70       	andi	r18, 0x00	; 0
     d48:	30 70       	andi	r19, 0x00	; 0
     d4a:	65 96       	adiw	r28, 0x15	; 21
     d4c:	0c af       	std	Y+60, r16	; 0x3c
     d4e:	1d af       	std	Y+61, r17	; 0x3d
     d50:	2e af       	std	Y+62, r18	; 0x3e
     d52:	3f af       	std	Y+63, r19	; 0x3f
     d54:	65 97       	sbiw	r28, 0x15	; 21
     d56:	c6 01       	movw	r24, r12
     d58:	b5 01       	movw	r22, r10
     d5a:	a4 01       	movw	r20, r8
     d5c:	93 01       	movw	r18, r6
     d5e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     d62:	7b 01       	movw	r14, r22
     d64:	8c 01       	movw	r16, r24
     d66:	c6 01       	movw	r24, r12
     d68:	b5 01       	movw	r22, r10
     d6a:	a4 01       	movw	r20, r8
     d6c:	93 01       	movw	r18, r6
     d6e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     d72:	c9 01       	movw	r24, r18
     d74:	da 01       	movw	r26, r20
     d76:	1c 01       	movw	r2, r24
     d78:	2d 01       	movw	r4, r26
     d7a:	c2 01       	movw	r24, r4
     d7c:	b1 01       	movw	r22, r2
     d7e:	65 96       	adiw	r28, 0x15	; 21
     d80:	2c ad       	ldd	r18, Y+60	; 0x3c
     d82:	3d ad       	ldd	r19, Y+61	; 0x3d
     d84:	4e ad       	ldd	r20, Y+62	; 0x3e
     d86:	5f ad       	ldd	r21, Y+63	; 0x3f
     d88:	65 97       	sbiw	r28, 0x15	; 21
     d8a:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     d8e:	9b 01       	movw	r18, r22
     d90:	ac 01       	movw	r20, r24
     d92:	87 01       	movw	r16, r14
     d94:	ff 24       	eor	r15, r15
     d96:	ee 24       	eor	r14, r14
     d98:	ad 8c       	ldd	r10, Y+29	; 0x1d
     d9a:	be 8c       	ldd	r11, Y+30	; 0x1e
     d9c:	cf 8c       	ldd	r12, Y+31	; 0x1f
     d9e:	d8 a0       	ldd	r13, Y+32	; 0x20
     da0:	c6 01       	movw	r24, r12
     da2:	aa 27       	eor	r26, r26
     da4:	bb 27       	eor	r27, r27
     da6:	57 01       	movw	r10, r14
     da8:	68 01       	movw	r12, r16
     daa:	a8 2a       	or	r10, r24
     dac:	b9 2a       	or	r11, r25
     dae:	ca 2a       	or	r12, r26
     db0:	db 2a       	or	r13, r27
     db2:	a2 16       	cp	r10, r18
     db4:	b3 06       	cpc	r11, r19
     db6:	c4 06       	cpc	r12, r20
     db8:	d5 06       	cpc	r13, r21
     dba:	00 f5       	brcc	.+64     	; 0xdfc <__stack+0x59d>
     dbc:	08 94       	sec
     dbe:	21 08       	sbc	r2, r1
     dc0:	31 08       	sbc	r3, r1
     dc2:	41 08       	sbc	r4, r1
     dc4:	51 08       	sbc	r5, r1
     dc6:	ed a0       	ldd	r14, Y+37	; 0x25
     dc8:	fe a0       	ldd	r15, Y+38	; 0x26
     dca:	0f a1       	ldd	r16, Y+39	; 0x27
     dcc:	18 a5       	ldd	r17, Y+40	; 0x28
     dce:	ae 0c       	add	r10, r14
     dd0:	bf 1c       	adc	r11, r15
     dd2:	c0 1e       	adc	r12, r16
     dd4:	d1 1e       	adc	r13, r17
     dd6:	ae 14       	cp	r10, r14
     dd8:	bf 04       	cpc	r11, r15
     dda:	c0 06       	cpc	r12, r16
     ddc:	d1 06       	cpc	r13, r17
     dde:	70 f0       	brcs	.+28     	; 0xdfc <__stack+0x59d>
     de0:	a2 16       	cp	r10, r18
     de2:	b3 06       	cpc	r11, r19
     de4:	c4 06       	cpc	r12, r20
     de6:	d5 06       	cpc	r13, r21
     de8:	48 f4       	brcc	.+18     	; 0xdfc <__stack+0x59d>
     dea:	08 94       	sec
     dec:	21 08       	sbc	r2, r1
     dee:	31 08       	sbc	r3, r1
     df0:	41 08       	sbc	r4, r1
     df2:	51 08       	sbc	r5, r1
     df4:	ae 0c       	add	r10, r14
     df6:	bf 1c       	adc	r11, r15
     df8:	c0 1e       	adc	r12, r16
     dfa:	d1 1e       	adc	r13, r17
     dfc:	a2 1a       	sub	r10, r18
     dfe:	b3 0a       	sbc	r11, r19
     e00:	c4 0a       	sbc	r12, r20
     e02:	d5 0a       	sbc	r13, r21
     e04:	c6 01       	movw	r24, r12
     e06:	b5 01       	movw	r22, r10
     e08:	a4 01       	movw	r20, r8
     e0a:	93 01       	movw	r18, r6
     e0c:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     e10:	7b 01       	movw	r14, r22
     e12:	8c 01       	movw	r16, r24
     e14:	c6 01       	movw	r24, r12
     e16:	b5 01       	movw	r22, r10
     e18:	a4 01       	movw	r20, r8
     e1a:	93 01       	movw	r18, r6
     e1c:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
     e20:	c9 01       	movw	r24, r18
     e22:	da 01       	movw	r26, r20
     e24:	3c 01       	movw	r6, r24
     e26:	4d 01       	movw	r8, r26
     e28:	c4 01       	movw	r24, r8
     e2a:	b3 01       	movw	r22, r6
     e2c:	65 96       	adiw	r28, 0x15	; 21
     e2e:	2c ad       	ldd	r18, Y+60	; 0x3c
     e30:	3d ad       	ldd	r19, Y+61	; 0x3d
     e32:	4e ad       	ldd	r20, Y+62	; 0x3e
     e34:	5f ad       	ldd	r21, Y+63	; 0x3f
     e36:	65 97       	sbiw	r28, 0x15	; 21
     e38:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     e3c:	9b 01       	movw	r18, r22
     e3e:	ac 01       	movw	r20, r24
     e40:	87 01       	movw	r16, r14
     e42:	ff 24       	eor	r15, r15
     e44:	ee 24       	eor	r14, r14
     e46:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e48:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e4a:	af 8d       	ldd	r26, Y+31	; 0x1f
     e4c:	b8 a1       	ldd	r27, Y+32	; 0x20
     e4e:	a0 70       	andi	r26, 0x00	; 0
     e50:	b0 70       	andi	r27, 0x00	; 0
     e52:	57 01       	movw	r10, r14
     e54:	68 01       	movw	r12, r16
     e56:	a8 2a       	or	r10, r24
     e58:	b9 2a       	or	r11, r25
     e5a:	ca 2a       	or	r12, r26
     e5c:	db 2a       	or	r13, r27
     e5e:	a2 16       	cp	r10, r18
     e60:	b3 06       	cpc	r11, r19
     e62:	c4 06       	cpc	r12, r20
     e64:	d5 06       	cpc	r13, r21
     e66:	00 f5       	brcc	.+64     	; 0xea8 <__stack+0x649>
     e68:	08 94       	sec
     e6a:	61 08       	sbc	r6, r1
     e6c:	71 08       	sbc	r7, r1
     e6e:	81 08       	sbc	r8, r1
     e70:	91 08       	sbc	r9, r1
     e72:	6d a1       	ldd	r22, Y+37	; 0x25
     e74:	7e a1       	ldd	r23, Y+38	; 0x26
     e76:	8f a1       	ldd	r24, Y+39	; 0x27
     e78:	98 a5       	ldd	r25, Y+40	; 0x28
     e7a:	a6 0e       	add	r10, r22
     e7c:	b7 1e       	adc	r11, r23
     e7e:	c8 1e       	adc	r12, r24
     e80:	d9 1e       	adc	r13, r25
     e82:	a6 16       	cp	r10, r22
     e84:	b7 06       	cpc	r11, r23
     e86:	c8 06       	cpc	r12, r24
     e88:	d9 06       	cpc	r13, r25
     e8a:	70 f0       	brcs	.+28     	; 0xea8 <__stack+0x649>
     e8c:	a2 16       	cp	r10, r18
     e8e:	b3 06       	cpc	r11, r19
     e90:	c4 06       	cpc	r12, r20
     e92:	d5 06       	cpc	r13, r21
     e94:	48 f4       	brcc	.+18     	; 0xea8 <__stack+0x649>
     e96:	08 94       	sec
     e98:	61 08       	sbc	r6, r1
     e9a:	71 08       	sbc	r7, r1
     e9c:	81 08       	sbc	r8, r1
     e9e:	91 08       	sbc	r9, r1
     ea0:	a6 0e       	add	r10, r22
     ea2:	b7 1e       	adc	r11, r23
     ea4:	c8 1e       	adc	r12, r24
     ea6:	d9 1e       	adc	r13, r25
     ea8:	d6 01       	movw	r26, r12
     eaa:	c5 01       	movw	r24, r10
     eac:	82 1b       	sub	r24, r18
     eae:	93 0b       	sbc	r25, r19
     eb0:	a4 0b       	sbc	r26, r20
     eb2:	b5 0b       	sbc	r27, r21
     eb4:	89 8f       	std	Y+25, r24	; 0x19
     eb6:	9a 8f       	std	Y+26, r25	; 0x1a
     eb8:	ab 8f       	std	Y+27, r26	; 0x1b
     eba:	bc 8f       	std	Y+28, r27	; 0x1c
     ebc:	d1 01       	movw	r26, r2
     ebe:	99 27       	eor	r25, r25
     ec0:	88 27       	eor	r24, r24
     ec2:	64 01       	movw	r12, r8
     ec4:	53 01       	movw	r10, r6
     ec6:	a8 2a       	or	r10, r24
     ec8:	b9 2a       	or	r11, r25
     eca:	ca 2a       	or	r12, r26
     ecc:	db 2a       	or	r13, r27
     ece:	a9 aa       	std	Y+49, r10	; 0x31
     ed0:	ba aa       	std	Y+50, r11	; 0x32
     ed2:	cb aa       	std	Y+51, r12	; 0x33
     ed4:	dc aa       	std	Y+52, r13	; 0x34
     ed6:	86 01       	movw	r16, r12
     ed8:	75 01       	movw	r14, r10
     eda:	2f ef       	ldi	r18, 0xFF	; 255
     edc:	3f ef       	ldi	r19, 0xFF	; 255
     ede:	40 e0       	ldi	r20, 0x00	; 0
     ee0:	50 e0       	ldi	r21, 0x00	; 0
     ee2:	e2 22       	and	r14, r18
     ee4:	f3 22       	and	r15, r19
     ee6:	04 23       	and	r16, r20
     ee8:	15 23       	and	r17, r21
     eea:	a6 01       	movw	r20, r12
     eec:	66 27       	eor	r22, r22
     eee:	77 27       	eor	r23, r23
     ef0:	6d 96       	adiw	r28, 0x1d	; 29
     ef2:	4c af       	std	Y+60, r20	; 0x3c
     ef4:	5d af       	std	Y+61, r21	; 0x3d
     ef6:	6e af       	std	Y+62, r22	; 0x3e
     ef8:	7f af       	std	Y+63, r23	; 0x3f
     efa:	6d 97       	sbiw	r28, 0x1d	; 29
     efc:	a9 a0       	ldd	r10, Y+33	; 0x21
     efe:	ba a0       	ldd	r11, Y+34	; 0x22
     f00:	cb a0       	ldd	r12, Y+35	; 0x23
     f02:	dc a0       	ldd	r13, Y+36	; 0x24
     f04:	6f ef       	ldi	r22, 0xFF	; 255
     f06:	7f ef       	ldi	r23, 0xFF	; 255
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	a6 22       	and	r10, r22
     f0e:	b7 22       	and	r11, r23
     f10:	c8 22       	and	r12, r24
     f12:	d9 22       	and	r13, r25
     f14:	89 a1       	ldd	r24, Y+33	; 0x21
     f16:	9a a1       	ldd	r25, Y+34	; 0x22
     f18:	ab a1       	ldd	r26, Y+35	; 0x23
     f1a:	bc a1       	ldd	r27, Y+36	; 0x24
     f1c:	1d 01       	movw	r2, r26
     f1e:	44 24       	eor	r4, r4
     f20:	55 24       	eor	r5, r5
     f22:	c8 01       	movw	r24, r16
     f24:	b7 01       	movw	r22, r14
     f26:	a6 01       	movw	r20, r12
     f28:	95 01       	movw	r18, r10
     f2a:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     f2e:	69 96       	adiw	r28, 0x19	; 25
     f30:	6c af       	std	Y+60, r22	; 0x3c
     f32:	7d af       	std	Y+61, r23	; 0x3d
     f34:	8e af       	std	Y+62, r24	; 0x3e
     f36:	9f af       	std	Y+63, r25	; 0x3f
     f38:	69 97       	sbiw	r28, 0x19	; 25
     f3a:	c8 01       	movw	r24, r16
     f3c:	b7 01       	movw	r22, r14
     f3e:	a2 01       	movw	r20, r4
     f40:	91 01       	movw	r18, r2
     f42:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     f46:	3b 01       	movw	r6, r22
     f48:	4c 01       	movw	r8, r24
     f4a:	6d 96       	adiw	r28, 0x1d	; 29
     f4c:	6c ad       	ldd	r22, Y+60	; 0x3c
     f4e:	7d ad       	ldd	r23, Y+61	; 0x3d
     f50:	8e ad       	ldd	r24, Y+62	; 0x3e
     f52:	9f ad       	ldd	r25, Y+63	; 0x3f
     f54:	6d 97       	sbiw	r28, 0x1d	; 29
     f56:	a6 01       	movw	r20, r12
     f58:	95 01       	movw	r18, r10
     f5a:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     f5e:	7b 01       	movw	r14, r22
     f60:	8c 01       	movw	r16, r24
     f62:	6d 96       	adiw	r28, 0x1d	; 29
     f64:	6c ad       	ldd	r22, Y+60	; 0x3c
     f66:	7d ad       	ldd	r23, Y+61	; 0x3d
     f68:	8e ad       	ldd	r24, Y+62	; 0x3e
     f6a:	9f ad       	ldd	r25, Y+63	; 0x3f
     f6c:	6d 97       	sbiw	r28, 0x1d	; 29
     f6e:	a2 01       	movw	r20, r4
     f70:	91 01       	movw	r18, r2
     f72:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
     f76:	5b 01       	movw	r10, r22
     f78:	6c 01       	movw	r12, r24
     f7a:	a8 01       	movw	r20, r16
     f7c:	97 01       	movw	r18, r14
     f7e:	26 0d       	add	r18, r6
     f80:	37 1d       	adc	r19, r7
     f82:	48 1d       	adc	r20, r8
     f84:	59 1d       	adc	r21, r9
     f86:	69 96       	adiw	r28, 0x19	; 25
     f88:	6c ac       	ldd	r6, Y+60	; 0x3c
     f8a:	7d ac       	ldd	r7, Y+61	; 0x3d
     f8c:	8e ac       	ldd	r8, Y+62	; 0x3e
     f8e:	9f ac       	ldd	r9, Y+63	; 0x3f
     f90:	69 97       	sbiw	r28, 0x19	; 25
     f92:	c4 01       	movw	r24, r8
     f94:	aa 27       	eor	r26, r26
     f96:	bb 27       	eor	r27, r27
     f98:	28 0f       	add	r18, r24
     f9a:	39 1f       	adc	r19, r25
     f9c:	4a 1f       	adc	r20, r26
     f9e:	5b 1f       	adc	r21, r27
     fa0:	2e 15       	cp	r18, r14
     fa2:	3f 05       	cpc	r19, r15
     fa4:	40 07       	cpc	r20, r16
     fa6:	51 07       	cpc	r21, r17
     fa8:	48 f4       	brcc	.+18     	; 0xfbc <__stack+0x75d>
     faa:	e1 2c       	mov	r14, r1
     fac:	f1 2c       	mov	r15, r1
     fae:	61 e0       	ldi	r22, 0x01	; 1
     fb0:	06 2f       	mov	r16, r22
     fb2:	11 2d       	mov	r17, r1
     fb4:	ae 0c       	add	r10, r14
     fb6:	bf 1c       	adc	r11, r15
     fb8:	c0 1e       	adc	r12, r16
     fba:	d1 1e       	adc	r13, r17
     fbc:	ca 01       	movw	r24, r20
     fbe:	aa 27       	eor	r26, r26
     fc0:	bb 27       	eor	r27, r27
     fc2:	bc 01       	movw	r22, r24
     fc4:	cd 01       	movw	r24, r26
     fc6:	6a 0d       	add	r22, r10
     fc8:	7b 1d       	adc	r23, r11
     fca:	8c 1d       	adc	r24, r12
     fcc:	9d 1d       	adc	r25, r13
     fce:	69 8c       	ldd	r6, Y+25	; 0x19
     fd0:	7a 8c       	ldd	r7, Y+26	; 0x1a
     fd2:	8b 8c       	ldd	r8, Y+27	; 0x1b
     fd4:	9c 8c       	ldd	r9, Y+28	; 0x1c
     fd6:	66 16       	cp	r6, r22
     fd8:	77 06       	cpc	r7, r23
     fda:	88 06       	cpc	r8, r24
     fdc:	99 06       	cpc	r9, r25
     fde:	40 f1       	brcs	.+80     	; 0x1030 <__stack+0x7d1>
     fe0:	66 15       	cp	r22, r6
     fe2:	77 05       	cpc	r23, r7
     fe4:	88 05       	cpc	r24, r8
     fe6:	99 05       	cpc	r25, r9
     fe8:	09 f0       	breq	.+2      	; 0xfec <__stack+0x78d>
     fea:	43 c0       	rjmp	.+134    	; 0x1072 <__stack+0x813>
     fec:	d9 01       	movw	r26, r18
     fee:	99 27       	eor	r25, r25
     ff0:	88 27       	eor	r24, r24
     ff2:	69 96       	adiw	r28, 0x19	; 25
     ff4:	2c ad       	ldd	r18, Y+60	; 0x3c
     ff6:	3d ad       	ldd	r19, Y+61	; 0x3d
     ff8:	4e ad       	ldd	r20, Y+62	; 0x3e
     ffa:	5f ad       	ldd	r21, Y+63	; 0x3f
     ffc:	69 97       	sbiw	r28, 0x19	; 25
     ffe:	40 70       	andi	r20, 0x00	; 0
    1000:	50 70       	andi	r21, 0x00	; 0
    1002:	82 0f       	add	r24, r18
    1004:	93 1f       	adc	r25, r19
    1006:	a4 1f       	adc	r26, r20
    1008:	b5 1f       	adc	r27, r21
    100a:	2d a5       	ldd	r18, Y+45	; 0x2d
    100c:	3e a5       	ldd	r19, Y+46	; 0x2e
    100e:	4f a5       	ldd	r20, Y+47	; 0x2f
    1010:	58 a9       	ldd	r21, Y+48	; 0x30
    1012:	6e 96       	adiw	r28, 0x1e	; 30
    1014:	0f ac       	ldd	r0, Y+63	; 0x3f
    1016:	6e 97       	sbiw	r28, 0x1e	; 30
    1018:	04 c0       	rjmp	.+8      	; 0x1022 <__stack+0x7c3>
    101a:	22 0f       	add	r18, r18
    101c:	33 1f       	adc	r19, r19
    101e:	44 1f       	adc	r20, r20
    1020:	55 1f       	adc	r21, r21
    1022:	0a 94       	dec	r0
    1024:	d2 f7       	brpl	.-12     	; 0x101a <__stack+0x7bb>
    1026:	28 17       	cp	r18, r24
    1028:	39 07       	cpc	r19, r25
    102a:	4a 07       	cpc	r20, r26
    102c:	5b 07       	cpc	r21, r27
    102e:	08 f5       	brcc	.+66     	; 0x1072 <__stack+0x813>
    1030:	09 a9       	ldd	r16, Y+49	; 0x31
    1032:	1a a9       	ldd	r17, Y+50	; 0x32
    1034:	2b a9       	ldd	r18, Y+51	; 0x33
    1036:	3c a9       	ldd	r19, Y+52	; 0x34
    1038:	01 50       	subi	r16, 0x01	; 1
    103a:	10 40       	sbci	r17, 0x00	; 0
    103c:	20 40       	sbci	r18, 0x00	; 0
    103e:	30 40       	sbci	r19, 0x00	; 0
    1040:	09 ab       	std	Y+49, r16	; 0x31
    1042:	1a ab       	std	Y+50, r17	; 0x32
    1044:	2b ab       	std	Y+51, r18	; 0x33
    1046:	3c ab       	std	Y+52, r19	; 0x34
    1048:	14 c0       	rjmp	.+40     	; 0x1072 <__stack+0x813>
    104a:	66 24       	eor	r6, r6
    104c:	77 24       	eor	r7, r7
    104e:	43 01       	movw	r8, r6
    1050:	21 e0       	ldi	r18, 0x01	; 1
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	40 e0       	ldi	r20, 0x00	; 0
    1056:	50 e0       	ldi	r21, 0x00	; 0
    1058:	29 ab       	std	Y+49, r18	; 0x31
    105a:	3a ab       	std	Y+50, r19	; 0x32
    105c:	4b ab       	std	Y+51, r20	; 0x33
    105e:	5c ab       	std	Y+52, r21	; 0x34
    1060:	0b c0       	rjmp	.+22     	; 0x1078 <__stack+0x819>
    1062:	66 24       	eor	r6, r6
    1064:	77 24       	eor	r7, r7
    1066:	43 01       	movw	r8, r6
    1068:	19 aa       	std	Y+49, r1	; 0x31
    106a:	1a aa       	std	Y+50, r1	; 0x32
    106c:	1b aa       	std	Y+51, r1	; 0x33
    106e:	1c aa       	std	Y+52, r1	; 0x34
    1070:	03 c0       	rjmp	.+6      	; 0x1078 <__stack+0x819>
    1072:	66 24       	eor	r6, r6
    1074:	77 24       	eor	r7, r7
    1076:	43 01       	movw	r8, r6
    1078:	fe 01       	movw	r30, r28
    107a:	71 96       	adiw	r30, 0x11	; 17
    107c:	88 e0       	ldi	r24, 0x08	; 8
    107e:	df 01       	movw	r26, r30
    1080:	1d 92       	st	X+, r1
    1082:	8a 95       	dec	r24
    1084:	e9 f7       	brne	.-6      	; 0x1080 <__stack+0x821>
    1086:	a9 a8       	ldd	r10, Y+49	; 0x31
    1088:	ba a8       	ldd	r11, Y+50	; 0x32
    108a:	cb a8       	ldd	r12, Y+51	; 0x33
    108c:	dc a8       	ldd	r13, Y+52	; 0x34
    108e:	a9 8a       	std	Y+17, r10	; 0x11
    1090:	ba 8a       	std	Y+18, r11	; 0x12
    1092:	cb 8a       	std	Y+19, r12	; 0x13
    1094:	dc 8a       	std	Y+20, r13	; 0x14
    1096:	6d 8a       	std	Y+21, r6	; 0x15
    1098:	7e 8a       	std	Y+22, r7	; 0x16
    109a:	8f 8a       	std	Y+23, r8	; 0x17
    109c:	98 8e       	std	Y+24, r9	; 0x18
    109e:	29 a9       	ldd	r18, Y+49	; 0x31
    10a0:	3a 89       	ldd	r19, Y+18	; 0x12
    10a2:	4b 89       	ldd	r20, Y+19	; 0x13
    10a4:	5c 89       	ldd	r21, Y+20	; 0x14
    10a6:	66 2d       	mov	r22, r6
    10a8:	7e 89       	ldd	r23, Y+22	; 0x16
    10aa:	8f 89       	ldd	r24, Y+23	; 0x17
    10ac:	98 8d       	ldd	r25, Y+24	; 0x18
    10ae:	c2 5a       	subi	r28, 0xA2	; 162
    10b0:	df 4f       	sbci	r29, 0xFF	; 255
    10b2:	e2 e1       	ldi	r30, 0x12	; 18
    10b4:	0c 94 66 26 	jmp	0x4ccc	; 0x4ccc <__epilogue_restores__>

000010b8 <__umoddi3>:
    10b8:	ab e5       	ldi	r26, 0x5B	; 91
    10ba:	b0 e0       	ldi	r27, 0x00	; 0
    10bc:	e2 e6       	ldi	r30, 0x62	; 98
    10be:	f8 e0       	ldi	r31, 0x08	; 8
    10c0:	0c 94 4a 26 	jmp	0x4c94	; 0x4c94 <__prologue_saves__>
    10c4:	a8 e0       	ldi	r26, 0x08	; 8
    10c6:	4e 01       	movw	r8, r28
    10c8:	08 94       	sec
    10ca:	81 1c       	adc	r8, r1
    10cc:	91 1c       	adc	r9, r1
    10ce:	f4 01       	movw	r30, r8
    10d0:	6a 2e       	mov	r6, r26
    10d2:	11 92       	st	Z+, r1
    10d4:	6a 94       	dec	r6
    10d6:	e9 f7       	brne	.-6      	; 0x10d2 <__umoddi3+0x1a>
    10d8:	29 83       	std	Y+1, r18	; 0x01
    10da:	3a 83       	std	Y+2, r19	; 0x02
    10dc:	4b 83       	std	Y+3, r20	; 0x03
    10de:	5c 83       	std	Y+4, r21	; 0x04
    10e0:	6d 83       	std	Y+5, r22	; 0x05
    10e2:	7e 83       	std	Y+6, r23	; 0x06
    10e4:	8f 83       	std	Y+7, r24	; 0x07
    10e6:	98 87       	std	Y+8, r25	; 0x08
    10e8:	ce 01       	movw	r24, r28
    10ea:	09 96       	adiw	r24, 0x09	; 9
    10ec:	fc 01       	movw	r30, r24
    10ee:	11 92       	st	Z+, r1
    10f0:	aa 95       	dec	r26
    10f2:	e9 f7       	brne	.-6      	; 0x10ee <__umoddi3+0x36>
    10f4:	a9 86       	std	Y+9, r10	; 0x09
    10f6:	ba 86       	std	Y+10, r11	; 0x0a
    10f8:	cb 86       	std	Y+11, r12	; 0x0b
    10fa:	dc 86       	std	Y+12, r13	; 0x0c
    10fc:	ed 86       	std	Y+13, r14	; 0x0d
    10fe:	fe 86       	std	Y+14, r15	; 0x0e
    1100:	0f 87       	std	Y+15, r16	; 0x0f
    1102:	18 8b       	std	Y+16, r17	; 0x10
    1104:	29 84       	ldd	r2, Y+9	; 0x09
    1106:	3a 84       	ldd	r3, Y+10	; 0x0a
    1108:	4b 84       	ldd	r4, Y+11	; 0x0b
    110a:	5c 84       	ldd	r5, Y+12	; 0x0c
    110c:	ad 84       	ldd	r10, Y+13	; 0x0d
    110e:	be 84       	ldd	r11, Y+14	; 0x0e
    1110:	cf 84       	ldd	r12, Y+15	; 0x0f
    1112:	d8 88       	ldd	r13, Y+16	; 0x10
    1114:	29 81       	ldd	r18, Y+1	; 0x01
    1116:	3a 81       	ldd	r19, Y+2	; 0x02
    1118:	4b 81       	ldd	r20, Y+3	; 0x03
    111a:	5c 81       	ldd	r21, Y+4	; 0x04
    111c:	69 96       	adiw	r28, 0x19	; 25
    111e:	2f af       	std	Y+63, r18	; 0x3f
    1120:	69 97       	sbiw	r28, 0x19	; 25
    1122:	6a 96       	adiw	r28, 0x1a	; 26
    1124:	3f af       	std	Y+63, r19	; 0x3f
    1126:	6a 97       	sbiw	r28, 0x1a	; 26
    1128:	6b 96       	adiw	r28, 0x1b	; 27
    112a:	4f af       	std	Y+63, r20	; 0x3f
    112c:	6b 97       	sbiw	r28, 0x1b	; 27
    112e:	6c 96       	adiw	r28, 0x1c	; 28
    1130:	5f af       	std	Y+63, r21	; 0x3f
    1132:	6c 97       	sbiw	r28, 0x1c	; 28
    1134:	6c 96       	adiw	r28, 0x1c	; 28
    1136:	6c ac       	ldd	r6, Y+60	; 0x3c
    1138:	7d ac       	ldd	r7, Y+61	; 0x3d
    113a:	8e ac       	ldd	r8, Y+62	; 0x3e
    113c:	9f ac       	ldd	r9, Y+63	; 0x3f
    113e:	6c 97       	sbiw	r28, 0x1c	; 28
    1140:	69 aa       	std	Y+49, r6	; 0x31
    1142:	7a aa       	std	Y+50, r7	; 0x32
    1144:	8b aa       	std	Y+51, r8	; 0x33
    1146:	9c aa       	std	Y+52, r9	; 0x34
    1148:	6d 81       	ldd	r22, Y+5	; 0x05
    114a:	7e 81       	ldd	r23, Y+6	; 0x06
    114c:	8f 81       	ldd	r24, Y+7	; 0x07
    114e:	98 85       	ldd	r25, Y+8	; 0x08
    1150:	3b 01       	movw	r6, r22
    1152:	4c 01       	movw	r8, r24
    1154:	6d aa       	std	Y+53, r6	; 0x35
    1156:	7e aa       	std	Y+54, r7	; 0x36
    1158:	8f aa       	std	Y+55, r8	; 0x37
    115a:	98 ae       	std	Y+56, r9	; 0x38
    115c:	a1 14       	cp	r10, r1
    115e:	b1 04       	cpc	r11, r1
    1160:	c1 04       	cpc	r12, r1
    1162:	d1 04       	cpc	r13, r1
    1164:	09 f0       	breq	.+2      	; 0x1168 <__umoddi3+0xb0>
    1166:	04 c3       	rjmp	.+1544   	; 0x1770 <__umoddi3+0x6b8>
    1168:	62 14       	cp	r6, r2
    116a:	73 04       	cpc	r7, r3
    116c:	84 04       	cpc	r8, r4
    116e:	95 04       	cpc	r9, r5
    1170:	08 f0       	brcs	.+2      	; 0x1174 <__umoddi3+0xbc>
    1172:	00 c1       	rjmp	.+512    	; 0x1374 <__umoddi3+0x2bc>
    1174:	00 e0       	ldi	r16, 0x00	; 0
    1176:	20 16       	cp	r2, r16
    1178:	00 e0       	ldi	r16, 0x00	; 0
    117a:	30 06       	cpc	r3, r16
    117c:	01 e0       	ldi	r16, 0x01	; 1
    117e:	40 06       	cpc	r4, r16
    1180:	00 e0       	ldi	r16, 0x00	; 0
    1182:	50 06       	cpc	r5, r16
    1184:	88 f4       	brcc	.+34     	; 0x11a8 <__umoddi3+0xf0>
    1186:	1f ef       	ldi	r17, 0xFF	; 255
    1188:	21 16       	cp	r2, r17
    118a:	31 04       	cpc	r3, r1
    118c:	41 04       	cpc	r4, r1
    118e:	51 04       	cpc	r5, r1
    1190:	39 f0       	breq	.+14     	; 0x11a0 <__umoddi3+0xe8>
    1192:	30 f0       	brcs	.+12     	; 0x11a0 <__umoddi3+0xe8>
    1194:	88 e0       	ldi	r24, 0x08	; 8
    1196:	e8 2e       	mov	r14, r24
    1198:	f1 2c       	mov	r15, r1
    119a:	01 2d       	mov	r16, r1
    119c:	11 2d       	mov	r17, r1
    119e:	18 c0       	rjmp	.+48     	; 0x11d0 <__umoddi3+0x118>
    11a0:	ee 24       	eor	r14, r14
    11a2:	ff 24       	eor	r15, r15
    11a4:	87 01       	movw	r16, r14
    11a6:	14 c0       	rjmp	.+40     	; 0x11d0 <__umoddi3+0x118>
    11a8:	40 e0       	ldi	r20, 0x00	; 0
    11aa:	24 16       	cp	r2, r20
    11ac:	40 e0       	ldi	r20, 0x00	; 0
    11ae:	34 06       	cpc	r3, r20
    11b0:	40 e0       	ldi	r20, 0x00	; 0
    11b2:	44 06       	cpc	r4, r20
    11b4:	41 e0       	ldi	r20, 0x01	; 1
    11b6:	54 06       	cpc	r5, r20
    11b8:	30 f0       	brcs	.+12     	; 0x11c6 <__umoddi3+0x10e>
    11ba:	b8 e1       	ldi	r27, 0x18	; 24
    11bc:	eb 2e       	mov	r14, r27
    11be:	f1 2c       	mov	r15, r1
    11c0:	01 2d       	mov	r16, r1
    11c2:	11 2d       	mov	r17, r1
    11c4:	05 c0       	rjmp	.+10     	; 0x11d0 <__umoddi3+0x118>
    11c6:	a0 e1       	ldi	r26, 0x10	; 16
    11c8:	ea 2e       	mov	r14, r26
    11ca:	f1 2c       	mov	r15, r1
    11cc:	01 2d       	mov	r16, r1
    11ce:	11 2d       	mov	r17, r1
    11d0:	d2 01       	movw	r26, r4
    11d2:	c1 01       	movw	r24, r2
    11d4:	0e 2c       	mov	r0, r14
    11d6:	04 c0       	rjmp	.+8      	; 0x11e0 <__umoddi3+0x128>
    11d8:	b6 95       	lsr	r27
    11da:	a7 95       	ror	r26
    11dc:	97 95       	ror	r25
    11de:	87 95       	ror	r24
    11e0:	0a 94       	dec	r0
    11e2:	d2 f7       	brpl	.-12     	; 0x11d8 <__umoddi3+0x120>
    11e4:	86 58       	subi	r24, 0x86	; 134
    11e6:	9f 4f       	sbci	r25, 0xFF	; 255
    11e8:	dc 01       	movw	r26, r24
    11ea:	2c 91       	ld	r18, X
    11ec:	80 e2       	ldi	r24, 0x20	; 32
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	a0 e0       	ldi	r26, 0x00	; 0
    11f2:	b0 e0       	ldi	r27, 0x00	; 0
    11f4:	8e 19       	sub	r24, r14
    11f6:	9f 09       	sbc	r25, r15
    11f8:	a0 0b       	sbc	r26, r16
    11fa:	b1 0b       	sbc	r27, r17
    11fc:	5c 01       	movw	r10, r24
    11fe:	6d 01       	movw	r12, r26
    1200:	a2 1a       	sub	r10, r18
    1202:	b1 08       	sbc	r11, r1
    1204:	c1 08       	sbc	r12, r1
    1206:	d1 08       	sbc	r13, r1
    1208:	a9 ae       	std	Y+57, r10	; 0x39
    120a:	ba ae       	std	Y+58, r11	; 0x3a
    120c:	cb ae       	std	Y+59, r12	; 0x3b
    120e:	dc ae       	std	Y+60, r13	; 0x3c
    1210:	a1 14       	cp	r10, r1
    1212:	b1 04       	cpc	r11, r1
    1214:	c1 04       	cpc	r12, r1
    1216:	d1 04       	cpc	r13, r1
    1218:	09 f4       	brne	.+2      	; 0x121c <__umoddi3+0x164>
    121a:	3f c0       	rjmp	.+126    	; 0x129a <__umoddi3+0x1e2>
    121c:	69 ad       	ldd	r22, Y+57	; 0x39
    121e:	06 2e       	mov	r0, r22
    1220:	04 c0       	rjmp	.+8      	; 0x122a <__umoddi3+0x172>
    1222:	22 0c       	add	r2, r2
    1224:	33 1c       	adc	r3, r3
    1226:	44 1c       	adc	r4, r4
    1228:	55 1c       	adc	r5, r5
    122a:	0a 94       	dec	r0
    122c:	d2 f7       	brpl	.-12     	; 0x1222 <__umoddi3+0x16a>
    122e:	a4 01       	movw	r20, r8
    1230:	93 01       	movw	r18, r6
    1232:	06 2e       	mov	r0, r22
    1234:	04 c0       	rjmp	.+8      	; 0x123e <__umoddi3+0x186>
    1236:	22 0f       	add	r18, r18
    1238:	33 1f       	adc	r19, r19
    123a:	44 1f       	adc	r20, r20
    123c:	55 1f       	adc	r21, r21
    123e:	0a 94       	dec	r0
    1240:	d2 f7       	brpl	.-12     	; 0x1236 <__umoddi3+0x17e>
    1242:	80 e2       	ldi	r24, 0x20	; 32
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	8a 19       	sub	r24, r10
    1248:	9b 09       	sbc	r25, r11
    124a:	6c 96       	adiw	r28, 0x1c	; 28
    124c:	cc ac       	ldd	r12, Y+60	; 0x3c
    124e:	dd ac       	ldd	r13, Y+61	; 0x3d
    1250:	ee ac       	ldd	r14, Y+62	; 0x3e
    1252:	ff ac       	ldd	r15, Y+63	; 0x3f
    1254:	6c 97       	sbiw	r28, 0x1c	; 28
    1256:	04 c0       	rjmp	.+8      	; 0x1260 <__umoddi3+0x1a8>
    1258:	f6 94       	lsr	r15
    125a:	e7 94       	ror	r14
    125c:	d7 94       	ror	r13
    125e:	c7 94       	ror	r12
    1260:	8a 95       	dec	r24
    1262:	d2 f7       	brpl	.-12     	; 0x1258 <__umoddi3+0x1a0>
    1264:	87 01       	movw	r16, r14
    1266:	76 01       	movw	r14, r12
    1268:	e2 2a       	or	r14, r18
    126a:	f3 2a       	or	r15, r19
    126c:	04 2b       	or	r16, r20
    126e:	15 2b       	or	r17, r21
    1270:	ed aa       	std	Y+53, r14	; 0x35
    1272:	fe aa       	std	Y+54, r15	; 0x36
    1274:	0f ab       	std	Y+55, r16	; 0x37
    1276:	18 af       	std	Y+56, r17	; 0x38
    1278:	6c 96       	adiw	r28, 0x1c	; 28
    127a:	8c ad       	ldd	r24, Y+60	; 0x3c
    127c:	9d ad       	ldd	r25, Y+61	; 0x3d
    127e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1280:	bf ad       	ldd	r27, Y+63	; 0x3f
    1282:	6c 97       	sbiw	r28, 0x1c	; 28
    1284:	04 c0       	rjmp	.+8      	; 0x128e <__umoddi3+0x1d6>
    1286:	88 0f       	add	r24, r24
    1288:	99 1f       	adc	r25, r25
    128a:	aa 1f       	adc	r26, r26
    128c:	bb 1f       	adc	r27, r27
    128e:	6a 95       	dec	r22
    1290:	d2 f7       	brpl	.-12     	; 0x1286 <__umoddi3+0x1ce>
    1292:	89 ab       	std	Y+49, r24	; 0x31
    1294:	9a ab       	std	Y+50, r25	; 0x32
    1296:	ab ab       	std	Y+51, r26	; 0x33
    1298:	bc ab       	std	Y+52, r27	; 0x34
    129a:	32 01       	movw	r6, r4
    129c:	88 24       	eor	r8, r8
    129e:	99 24       	eor	r9, r9
    12a0:	b2 01       	movw	r22, r4
    12a2:	a1 01       	movw	r20, r2
    12a4:	60 70       	andi	r22, 0x00	; 0
    12a6:	70 70       	andi	r23, 0x00	; 0
    12a8:	21 96       	adiw	r28, 0x01	; 1
    12aa:	4c af       	std	Y+60, r20	; 0x3c
    12ac:	5d af       	std	Y+61, r21	; 0x3d
    12ae:	6e af       	std	Y+62, r22	; 0x3e
    12b0:	7f af       	std	Y+63, r23	; 0x3f
    12b2:	21 97       	sbiw	r28, 0x01	; 1
    12b4:	6d a9       	ldd	r22, Y+53	; 0x35
    12b6:	7e a9       	ldd	r23, Y+54	; 0x36
    12b8:	8f a9       	ldd	r24, Y+55	; 0x37
    12ba:	98 ad       	ldd	r25, Y+56	; 0x38
    12bc:	a4 01       	movw	r20, r8
    12be:	93 01       	movw	r18, r6
    12c0:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    12c4:	7b 01       	movw	r14, r22
    12c6:	8c 01       	movw	r16, r24
    12c8:	6d a9       	ldd	r22, Y+53	; 0x35
    12ca:	7e a9       	ldd	r23, Y+54	; 0x36
    12cc:	8f a9       	ldd	r24, Y+55	; 0x37
    12ce:	98 ad       	ldd	r25, Y+56	; 0x38
    12d0:	a4 01       	movw	r20, r8
    12d2:	93 01       	movw	r18, r6
    12d4:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    12d8:	ca 01       	movw	r24, r20
    12da:	b9 01       	movw	r22, r18
    12dc:	21 96       	adiw	r28, 0x01	; 1
    12de:	2c ad       	ldd	r18, Y+60	; 0x3c
    12e0:	3d ad       	ldd	r19, Y+61	; 0x3d
    12e2:	4e ad       	ldd	r20, Y+62	; 0x3e
    12e4:	5f ad       	ldd	r21, Y+63	; 0x3f
    12e6:	21 97       	sbiw	r28, 0x01	; 1
    12e8:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    12ec:	9b 01       	movw	r18, r22
    12ee:	ac 01       	movw	r20, r24
    12f0:	87 01       	movw	r16, r14
    12f2:	ff 24       	eor	r15, r15
    12f4:	ee 24       	eor	r14, r14
    12f6:	a9 a8       	ldd	r10, Y+49	; 0x31
    12f8:	ba a8       	ldd	r11, Y+50	; 0x32
    12fa:	cb a8       	ldd	r12, Y+51	; 0x33
    12fc:	dc a8       	ldd	r13, Y+52	; 0x34
    12fe:	c6 01       	movw	r24, r12
    1300:	aa 27       	eor	r26, r26
    1302:	bb 27       	eor	r27, r27
    1304:	57 01       	movw	r10, r14
    1306:	68 01       	movw	r12, r16
    1308:	a8 2a       	or	r10, r24
    130a:	b9 2a       	or	r11, r25
    130c:	ca 2a       	or	r12, r26
    130e:	db 2a       	or	r13, r27
    1310:	a2 16       	cp	r10, r18
    1312:	b3 06       	cpc	r11, r19
    1314:	c4 06       	cpc	r12, r20
    1316:	d5 06       	cpc	r13, r21
    1318:	90 f4       	brcc	.+36     	; 0x133e <__umoddi3+0x286>
    131a:	a2 0c       	add	r10, r2
    131c:	b3 1c       	adc	r11, r3
    131e:	c4 1c       	adc	r12, r4
    1320:	d5 1c       	adc	r13, r5
    1322:	a2 14       	cp	r10, r2
    1324:	b3 04       	cpc	r11, r3
    1326:	c4 04       	cpc	r12, r4
    1328:	d5 04       	cpc	r13, r5
    132a:	48 f0       	brcs	.+18     	; 0x133e <__umoddi3+0x286>
    132c:	a2 16       	cp	r10, r18
    132e:	b3 06       	cpc	r11, r19
    1330:	c4 06       	cpc	r12, r20
    1332:	d5 06       	cpc	r13, r21
    1334:	20 f4       	brcc	.+8      	; 0x133e <__umoddi3+0x286>
    1336:	a2 0c       	add	r10, r2
    1338:	b3 1c       	adc	r11, r3
    133a:	c4 1c       	adc	r12, r4
    133c:	d5 1c       	adc	r13, r5
    133e:	a2 1a       	sub	r10, r18
    1340:	b3 0a       	sbc	r11, r19
    1342:	c4 0a       	sbc	r12, r20
    1344:	d5 0a       	sbc	r13, r21
    1346:	c6 01       	movw	r24, r12
    1348:	b5 01       	movw	r22, r10
    134a:	a4 01       	movw	r20, r8
    134c:	93 01       	movw	r18, r6
    134e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    1352:	7b 01       	movw	r14, r22
    1354:	8c 01       	movw	r16, r24
    1356:	c6 01       	movw	r24, r12
    1358:	b5 01       	movw	r22, r10
    135a:	a4 01       	movw	r20, r8
    135c:	93 01       	movw	r18, r6
    135e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    1362:	ca 01       	movw	r24, r20
    1364:	b9 01       	movw	r22, r18
    1366:	21 96       	adiw	r28, 0x01	; 1
    1368:	2c ad       	ldd	r18, Y+60	; 0x3c
    136a:	3d ad       	ldd	r19, Y+61	; 0x3d
    136c:	4e ad       	ldd	r20, Y+62	; 0x3e
    136e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1370:	21 97       	sbiw	r28, 0x01	; 1
    1372:	ba c1       	rjmp	.+884    	; 0x16e8 <__umoddi3+0x630>
    1374:	21 14       	cp	r2, r1
    1376:	31 04       	cpc	r3, r1
    1378:	41 04       	cpc	r4, r1
    137a:	51 04       	cpc	r5, r1
    137c:	71 f4       	brne	.+28     	; 0x139a <__umoddi3+0x2e2>
    137e:	61 e0       	ldi	r22, 0x01	; 1
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	80 e0       	ldi	r24, 0x00	; 0
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	20 e0       	ldi	r18, 0x00	; 0
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	40 e0       	ldi	r20, 0x00	; 0
    138c:	50 e0       	ldi	r21, 0x00	; 0
    138e:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    1392:	c9 01       	movw	r24, r18
    1394:	da 01       	movw	r26, r20
    1396:	1c 01       	movw	r2, r24
    1398:	2d 01       	movw	r4, r26
    139a:	00 e0       	ldi	r16, 0x00	; 0
    139c:	20 16       	cp	r2, r16
    139e:	00 e0       	ldi	r16, 0x00	; 0
    13a0:	30 06       	cpc	r3, r16
    13a2:	01 e0       	ldi	r16, 0x01	; 1
    13a4:	40 06       	cpc	r4, r16
    13a6:	00 e0       	ldi	r16, 0x00	; 0
    13a8:	50 06       	cpc	r5, r16
    13aa:	88 f4       	brcc	.+34     	; 0x13ce <__umoddi3+0x316>
    13ac:	1f ef       	ldi	r17, 0xFF	; 255
    13ae:	21 16       	cp	r2, r17
    13b0:	31 04       	cpc	r3, r1
    13b2:	41 04       	cpc	r4, r1
    13b4:	51 04       	cpc	r5, r1
    13b6:	39 f0       	breq	.+14     	; 0x13c6 <__umoddi3+0x30e>
    13b8:	30 f0       	brcs	.+12     	; 0x13c6 <__umoddi3+0x30e>
    13ba:	68 e0       	ldi	r22, 0x08	; 8
    13bc:	e6 2e       	mov	r14, r22
    13be:	f1 2c       	mov	r15, r1
    13c0:	01 2d       	mov	r16, r1
    13c2:	11 2d       	mov	r17, r1
    13c4:	18 c0       	rjmp	.+48     	; 0x13f6 <__umoddi3+0x33e>
    13c6:	ee 24       	eor	r14, r14
    13c8:	ff 24       	eor	r15, r15
    13ca:	87 01       	movw	r16, r14
    13cc:	14 c0       	rjmp	.+40     	; 0x13f6 <__umoddi3+0x33e>
    13ce:	40 e0       	ldi	r20, 0x00	; 0
    13d0:	24 16       	cp	r2, r20
    13d2:	40 e0       	ldi	r20, 0x00	; 0
    13d4:	34 06       	cpc	r3, r20
    13d6:	40 e0       	ldi	r20, 0x00	; 0
    13d8:	44 06       	cpc	r4, r20
    13da:	41 e0       	ldi	r20, 0x01	; 1
    13dc:	54 06       	cpc	r5, r20
    13de:	30 f0       	brcs	.+12     	; 0x13ec <__umoddi3+0x334>
    13e0:	58 e1       	ldi	r21, 0x18	; 24
    13e2:	e5 2e       	mov	r14, r21
    13e4:	f1 2c       	mov	r15, r1
    13e6:	01 2d       	mov	r16, r1
    13e8:	11 2d       	mov	r17, r1
    13ea:	05 c0       	rjmp	.+10     	; 0x13f6 <__umoddi3+0x33e>
    13ec:	40 e1       	ldi	r20, 0x10	; 16
    13ee:	e4 2e       	mov	r14, r20
    13f0:	f1 2c       	mov	r15, r1
    13f2:	01 2d       	mov	r16, r1
    13f4:	11 2d       	mov	r17, r1
    13f6:	d2 01       	movw	r26, r4
    13f8:	c1 01       	movw	r24, r2
    13fa:	0e 2c       	mov	r0, r14
    13fc:	04 c0       	rjmp	.+8      	; 0x1406 <__umoddi3+0x34e>
    13fe:	b6 95       	lsr	r27
    1400:	a7 95       	ror	r26
    1402:	97 95       	ror	r25
    1404:	87 95       	ror	r24
    1406:	0a 94       	dec	r0
    1408:	d2 f7       	brpl	.-12     	; 0x13fe <__umoddi3+0x346>
    140a:	86 58       	subi	r24, 0x86	; 134
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	dc 01       	movw	r26, r24
    1410:	2c 91       	ld	r18, X
    1412:	30 e2       	ldi	r19, 0x20	; 32
    1414:	a3 2e       	mov	r10, r19
    1416:	b1 2c       	mov	r11, r1
    1418:	c1 2c       	mov	r12, r1
    141a:	d1 2c       	mov	r13, r1
    141c:	d6 01       	movw	r26, r12
    141e:	c5 01       	movw	r24, r10
    1420:	8e 19       	sub	r24, r14
    1422:	9f 09       	sbc	r25, r15
    1424:	a0 0b       	sbc	r26, r16
    1426:	b1 0b       	sbc	r27, r17
    1428:	7c 01       	movw	r14, r24
    142a:	8d 01       	movw	r16, r26
    142c:	e2 1a       	sub	r14, r18
    142e:	f1 08       	sbc	r15, r1
    1430:	01 09       	sbc	r16, r1
    1432:	11 09       	sbc	r17, r1
    1434:	e9 ae       	std	Y+57, r14	; 0x39
    1436:	fa ae       	std	Y+58, r15	; 0x3a
    1438:	0b af       	std	Y+59, r16	; 0x3b
    143a:	1c af       	std	Y+60, r17	; 0x3c
    143c:	e1 14       	cp	r14, r1
    143e:	f1 04       	cpc	r15, r1
    1440:	01 05       	cpc	r16, r1
    1442:	11 05       	cpc	r17, r1
    1444:	39 f4       	brne	.+14     	; 0x1454 <__umoddi3+0x39c>
    1446:	64 01       	movw	r12, r8
    1448:	53 01       	movw	r10, r6
    144a:	a2 18       	sub	r10, r2
    144c:	b3 08       	sbc	r11, r3
    144e:	c4 08       	sbc	r12, r4
    1450:	d5 08       	sbc	r13, r5
    1452:	e2 c0       	rjmp	.+452    	; 0x1618 <__umoddi3+0x560>
    1454:	f9 ac       	ldd	r15, Y+57	; 0x39
    1456:	68 96       	adiw	r28, 0x18	; 24
    1458:	ff ae       	std	Y+63, r15	; 0x3f
    145a:	68 97       	sbiw	r28, 0x18	; 24
    145c:	0f 2c       	mov	r0, r15
    145e:	04 c0       	rjmp	.+8      	; 0x1468 <__umoddi3+0x3b0>
    1460:	22 0c       	add	r2, r2
    1462:	33 1c       	adc	r3, r3
    1464:	44 1c       	adc	r4, r4
    1466:	55 1c       	adc	r5, r5
    1468:	0a 94       	dec	r0
    146a:	d2 f7       	brpl	.-12     	; 0x1460 <__umoddi3+0x3a8>
    146c:	8a 2d       	mov	r24, r10
    146e:	8f 19       	sub	r24, r15
    1470:	64 01       	movw	r12, r8
    1472:	53 01       	movw	r10, r6
    1474:	08 2e       	mov	r0, r24
    1476:	04 c0       	rjmp	.+8      	; 0x1480 <__umoddi3+0x3c8>
    1478:	d6 94       	lsr	r13
    147a:	c7 94       	ror	r12
    147c:	b7 94       	ror	r11
    147e:	a7 94       	ror	r10
    1480:	0a 94       	dec	r0
    1482:	d2 f7       	brpl	.-12     	; 0x1478 <__umoddi3+0x3c0>
    1484:	a4 01       	movw	r20, r8
    1486:	93 01       	movw	r18, r6
    1488:	04 c0       	rjmp	.+8      	; 0x1492 <__umoddi3+0x3da>
    148a:	22 0f       	add	r18, r18
    148c:	33 1f       	adc	r19, r19
    148e:	44 1f       	adc	r20, r20
    1490:	55 1f       	adc	r21, r21
    1492:	fa 94       	dec	r15
    1494:	d2 f7       	brpl	.-12     	; 0x148a <__umoddi3+0x3d2>
    1496:	6c 96       	adiw	r28, 0x1c	; 28
    1498:	6c ac       	ldd	r6, Y+60	; 0x3c
    149a:	7d ac       	ldd	r7, Y+61	; 0x3d
    149c:	8e ac       	ldd	r8, Y+62	; 0x3e
    149e:	9f ac       	ldd	r9, Y+63	; 0x3f
    14a0:	6c 97       	sbiw	r28, 0x1c	; 28
    14a2:	04 c0       	rjmp	.+8      	; 0x14ac <__umoddi3+0x3f4>
    14a4:	96 94       	lsr	r9
    14a6:	87 94       	ror	r8
    14a8:	77 94       	ror	r7
    14aa:	67 94       	ror	r6
    14ac:	8a 95       	dec	r24
    14ae:	d2 f7       	brpl	.-12     	; 0x14a4 <__umoddi3+0x3ec>
    14b0:	84 01       	movw	r16, r8
    14b2:	73 01       	movw	r14, r6
    14b4:	e2 2a       	or	r14, r18
    14b6:	f3 2a       	or	r15, r19
    14b8:	04 2b       	or	r16, r20
    14ba:	15 2b       	or	r17, r21
    14bc:	ed a6       	std	Y+45, r14	; 0x2d
    14be:	fe a6       	std	Y+46, r15	; 0x2e
    14c0:	0f a7       	std	Y+47, r16	; 0x2f
    14c2:	18 ab       	std	Y+48, r17	; 0x30
    14c4:	32 01       	movw	r6, r4
    14c6:	88 24       	eor	r8, r8
    14c8:	99 24       	eor	r9, r9
    14ca:	b2 01       	movw	r22, r4
    14cc:	a1 01       	movw	r20, r2
    14ce:	60 70       	andi	r22, 0x00	; 0
    14d0:	70 70       	andi	r23, 0x00	; 0
    14d2:	25 96       	adiw	r28, 0x05	; 5
    14d4:	4c af       	std	Y+60, r20	; 0x3c
    14d6:	5d af       	std	Y+61, r21	; 0x3d
    14d8:	6e af       	std	Y+62, r22	; 0x3e
    14da:	7f af       	std	Y+63, r23	; 0x3f
    14dc:	25 97       	sbiw	r28, 0x05	; 5
    14de:	c6 01       	movw	r24, r12
    14e0:	b5 01       	movw	r22, r10
    14e2:	a4 01       	movw	r20, r8
    14e4:	93 01       	movw	r18, r6
    14e6:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    14ea:	7b 01       	movw	r14, r22
    14ec:	8c 01       	movw	r16, r24
    14ee:	c6 01       	movw	r24, r12
    14f0:	b5 01       	movw	r22, r10
    14f2:	a4 01       	movw	r20, r8
    14f4:	93 01       	movw	r18, r6
    14f6:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    14fa:	ca 01       	movw	r24, r20
    14fc:	b9 01       	movw	r22, r18
    14fe:	25 96       	adiw	r28, 0x05	; 5
    1500:	2c ad       	ldd	r18, Y+60	; 0x3c
    1502:	3d ad       	ldd	r19, Y+61	; 0x3d
    1504:	4e ad       	ldd	r20, Y+62	; 0x3e
    1506:	5f ad       	ldd	r21, Y+63	; 0x3f
    1508:	25 97       	sbiw	r28, 0x05	; 5
    150a:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    150e:	9b 01       	movw	r18, r22
    1510:	ac 01       	movw	r20, r24
    1512:	87 01       	movw	r16, r14
    1514:	ff 24       	eor	r15, r15
    1516:	ee 24       	eor	r14, r14
    1518:	ad a4       	ldd	r10, Y+45	; 0x2d
    151a:	be a4       	ldd	r11, Y+46	; 0x2e
    151c:	cf a4       	ldd	r12, Y+47	; 0x2f
    151e:	d8 a8       	ldd	r13, Y+48	; 0x30
    1520:	c6 01       	movw	r24, r12
    1522:	aa 27       	eor	r26, r26
    1524:	bb 27       	eor	r27, r27
    1526:	5c 01       	movw	r10, r24
    1528:	6d 01       	movw	r12, r26
    152a:	ae 28       	or	r10, r14
    152c:	bf 28       	or	r11, r15
    152e:	c0 2a       	or	r12, r16
    1530:	d1 2a       	or	r13, r17
    1532:	a2 16       	cp	r10, r18
    1534:	b3 06       	cpc	r11, r19
    1536:	c4 06       	cpc	r12, r20
    1538:	d5 06       	cpc	r13, r21
    153a:	90 f4       	brcc	.+36     	; 0x1560 <__umoddi3+0x4a8>
    153c:	a2 0c       	add	r10, r2
    153e:	b3 1c       	adc	r11, r3
    1540:	c4 1c       	adc	r12, r4
    1542:	d5 1c       	adc	r13, r5
    1544:	a2 14       	cp	r10, r2
    1546:	b3 04       	cpc	r11, r3
    1548:	c4 04       	cpc	r12, r4
    154a:	d5 04       	cpc	r13, r5
    154c:	48 f0       	brcs	.+18     	; 0x1560 <__umoddi3+0x4a8>
    154e:	a2 16       	cp	r10, r18
    1550:	b3 06       	cpc	r11, r19
    1552:	c4 06       	cpc	r12, r20
    1554:	d5 06       	cpc	r13, r21
    1556:	20 f4       	brcc	.+8      	; 0x1560 <__umoddi3+0x4a8>
    1558:	a2 0c       	add	r10, r2
    155a:	b3 1c       	adc	r11, r3
    155c:	c4 1c       	adc	r12, r4
    155e:	d5 1c       	adc	r13, r5
    1560:	a2 1a       	sub	r10, r18
    1562:	b3 0a       	sbc	r11, r19
    1564:	c4 0a       	sbc	r12, r20
    1566:	d5 0a       	sbc	r13, r21
    1568:	c6 01       	movw	r24, r12
    156a:	b5 01       	movw	r22, r10
    156c:	a4 01       	movw	r20, r8
    156e:	93 01       	movw	r18, r6
    1570:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    1574:	7b 01       	movw	r14, r22
    1576:	8c 01       	movw	r16, r24
    1578:	c6 01       	movw	r24, r12
    157a:	b5 01       	movw	r22, r10
    157c:	a4 01       	movw	r20, r8
    157e:	93 01       	movw	r18, r6
    1580:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    1584:	ca 01       	movw	r24, r20
    1586:	b9 01       	movw	r22, r18
    1588:	25 96       	adiw	r28, 0x05	; 5
    158a:	2c ad       	ldd	r18, Y+60	; 0x3c
    158c:	3d ad       	ldd	r19, Y+61	; 0x3d
    158e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1590:	5f ad       	ldd	r21, Y+63	; 0x3f
    1592:	25 97       	sbiw	r28, 0x05	; 5
    1594:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1598:	9b 01       	movw	r18, r22
    159a:	ac 01       	movw	r20, r24
    159c:	87 01       	movw	r16, r14
    159e:	ff 24       	eor	r15, r15
    15a0:	ee 24       	eor	r14, r14
    15a2:	8d a5       	ldd	r24, Y+45	; 0x2d
    15a4:	9e a5       	ldd	r25, Y+46	; 0x2e
    15a6:	af a5       	ldd	r26, Y+47	; 0x2f
    15a8:	b8 a9       	ldd	r27, Y+48	; 0x30
    15aa:	a0 70       	andi	r26, 0x00	; 0
    15ac:	b0 70       	andi	r27, 0x00	; 0
    15ae:	57 01       	movw	r10, r14
    15b0:	68 01       	movw	r12, r16
    15b2:	a8 2a       	or	r10, r24
    15b4:	b9 2a       	or	r11, r25
    15b6:	ca 2a       	or	r12, r26
    15b8:	db 2a       	or	r13, r27
    15ba:	a2 16       	cp	r10, r18
    15bc:	b3 06       	cpc	r11, r19
    15be:	c4 06       	cpc	r12, r20
    15c0:	d5 06       	cpc	r13, r21
    15c2:	90 f4       	brcc	.+36     	; 0x15e8 <__umoddi3+0x530>
    15c4:	a2 0c       	add	r10, r2
    15c6:	b3 1c       	adc	r11, r3
    15c8:	c4 1c       	adc	r12, r4
    15ca:	d5 1c       	adc	r13, r5
    15cc:	a2 14       	cp	r10, r2
    15ce:	b3 04       	cpc	r11, r3
    15d0:	c4 04       	cpc	r12, r4
    15d2:	d5 04       	cpc	r13, r5
    15d4:	48 f0       	brcs	.+18     	; 0x15e8 <__umoddi3+0x530>
    15d6:	a2 16       	cp	r10, r18
    15d8:	b3 06       	cpc	r11, r19
    15da:	c4 06       	cpc	r12, r20
    15dc:	d5 06       	cpc	r13, r21
    15de:	20 f4       	brcc	.+8      	; 0x15e8 <__umoddi3+0x530>
    15e0:	a2 0c       	add	r10, r2
    15e2:	b3 1c       	adc	r11, r3
    15e4:	c4 1c       	adc	r12, r4
    15e6:	d5 1c       	adc	r13, r5
    15e8:	6c 96       	adiw	r28, 0x1c	; 28
    15ea:	ec ac       	ldd	r14, Y+60	; 0x3c
    15ec:	fd ac       	ldd	r15, Y+61	; 0x3d
    15ee:	0e ad       	ldd	r16, Y+62	; 0x3e
    15f0:	1f ad       	ldd	r17, Y+63	; 0x3f
    15f2:	6c 97       	sbiw	r28, 0x1c	; 28
    15f4:	68 96       	adiw	r28, 0x18	; 24
    15f6:	0f ac       	ldd	r0, Y+63	; 0x3f
    15f8:	68 97       	sbiw	r28, 0x18	; 24
    15fa:	04 c0       	rjmp	.+8      	; 0x1604 <__umoddi3+0x54c>
    15fc:	ee 0c       	add	r14, r14
    15fe:	ff 1c       	adc	r15, r15
    1600:	00 1f       	adc	r16, r16
    1602:	11 1f       	adc	r17, r17
    1604:	0a 94       	dec	r0
    1606:	d2 f7       	brpl	.-12     	; 0x15fc <__umoddi3+0x544>
    1608:	e9 aa       	std	Y+49, r14	; 0x31
    160a:	fa aa       	std	Y+50, r15	; 0x32
    160c:	0b ab       	std	Y+51, r16	; 0x33
    160e:	1c ab       	std	Y+52, r17	; 0x34
    1610:	a2 1a       	sub	r10, r18
    1612:	b3 0a       	sbc	r11, r19
    1614:	c4 0a       	sbc	r12, r20
    1616:	d5 0a       	sbc	r13, r21
    1618:	32 01       	movw	r6, r4
    161a:	88 24       	eor	r8, r8
    161c:	99 24       	eor	r9, r9
    161e:	b2 01       	movw	r22, r4
    1620:	a1 01       	movw	r20, r2
    1622:	60 70       	andi	r22, 0x00	; 0
    1624:	70 70       	andi	r23, 0x00	; 0
    1626:	29 96       	adiw	r28, 0x09	; 9
    1628:	4c af       	std	Y+60, r20	; 0x3c
    162a:	5d af       	std	Y+61, r21	; 0x3d
    162c:	6e af       	std	Y+62, r22	; 0x3e
    162e:	7f af       	std	Y+63, r23	; 0x3f
    1630:	29 97       	sbiw	r28, 0x09	; 9
    1632:	c6 01       	movw	r24, r12
    1634:	b5 01       	movw	r22, r10
    1636:	a4 01       	movw	r20, r8
    1638:	93 01       	movw	r18, r6
    163a:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    163e:	7b 01       	movw	r14, r22
    1640:	8c 01       	movw	r16, r24
    1642:	c6 01       	movw	r24, r12
    1644:	b5 01       	movw	r22, r10
    1646:	a4 01       	movw	r20, r8
    1648:	93 01       	movw	r18, r6
    164a:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    164e:	ca 01       	movw	r24, r20
    1650:	b9 01       	movw	r22, r18
    1652:	29 96       	adiw	r28, 0x09	; 9
    1654:	2c ad       	ldd	r18, Y+60	; 0x3c
    1656:	3d ad       	ldd	r19, Y+61	; 0x3d
    1658:	4e ad       	ldd	r20, Y+62	; 0x3e
    165a:	5f ad       	ldd	r21, Y+63	; 0x3f
    165c:	29 97       	sbiw	r28, 0x09	; 9
    165e:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1662:	9b 01       	movw	r18, r22
    1664:	ac 01       	movw	r20, r24
    1666:	87 01       	movw	r16, r14
    1668:	ff 24       	eor	r15, r15
    166a:	ee 24       	eor	r14, r14
    166c:	a9 a8       	ldd	r10, Y+49	; 0x31
    166e:	ba a8       	ldd	r11, Y+50	; 0x32
    1670:	cb a8       	ldd	r12, Y+51	; 0x33
    1672:	dc a8       	ldd	r13, Y+52	; 0x34
    1674:	c6 01       	movw	r24, r12
    1676:	aa 27       	eor	r26, r26
    1678:	bb 27       	eor	r27, r27
    167a:	57 01       	movw	r10, r14
    167c:	68 01       	movw	r12, r16
    167e:	a8 2a       	or	r10, r24
    1680:	b9 2a       	or	r11, r25
    1682:	ca 2a       	or	r12, r26
    1684:	db 2a       	or	r13, r27
    1686:	a2 16       	cp	r10, r18
    1688:	b3 06       	cpc	r11, r19
    168a:	c4 06       	cpc	r12, r20
    168c:	d5 06       	cpc	r13, r21
    168e:	90 f4       	brcc	.+36     	; 0x16b4 <__umoddi3+0x5fc>
    1690:	a2 0c       	add	r10, r2
    1692:	b3 1c       	adc	r11, r3
    1694:	c4 1c       	adc	r12, r4
    1696:	d5 1c       	adc	r13, r5
    1698:	a2 14       	cp	r10, r2
    169a:	b3 04       	cpc	r11, r3
    169c:	c4 04       	cpc	r12, r4
    169e:	d5 04       	cpc	r13, r5
    16a0:	48 f0       	brcs	.+18     	; 0x16b4 <__umoddi3+0x5fc>
    16a2:	a2 16       	cp	r10, r18
    16a4:	b3 06       	cpc	r11, r19
    16a6:	c4 06       	cpc	r12, r20
    16a8:	d5 06       	cpc	r13, r21
    16aa:	20 f4       	brcc	.+8      	; 0x16b4 <__umoddi3+0x5fc>
    16ac:	a2 0c       	add	r10, r2
    16ae:	b3 1c       	adc	r11, r3
    16b0:	c4 1c       	adc	r12, r4
    16b2:	d5 1c       	adc	r13, r5
    16b4:	a2 1a       	sub	r10, r18
    16b6:	b3 0a       	sbc	r11, r19
    16b8:	c4 0a       	sbc	r12, r20
    16ba:	d5 0a       	sbc	r13, r21
    16bc:	c6 01       	movw	r24, r12
    16be:	b5 01       	movw	r22, r10
    16c0:	a4 01       	movw	r20, r8
    16c2:	93 01       	movw	r18, r6
    16c4:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    16c8:	7b 01       	movw	r14, r22
    16ca:	8c 01       	movw	r16, r24
    16cc:	c6 01       	movw	r24, r12
    16ce:	b5 01       	movw	r22, r10
    16d0:	a4 01       	movw	r20, r8
    16d2:	93 01       	movw	r18, r6
    16d4:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    16d8:	ca 01       	movw	r24, r20
    16da:	b9 01       	movw	r22, r18
    16dc:	29 96       	adiw	r28, 0x09	; 9
    16de:	2c ad       	ldd	r18, Y+60	; 0x3c
    16e0:	3d ad       	ldd	r19, Y+61	; 0x3d
    16e2:	4e ad       	ldd	r20, Y+62	; 0x3e
    16e4:	5f ad       	ldd	r21, Y+63	; 0x3f
    16e6:	29 97       	sbiw	r28, 0x09	; 9
    16e8:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    16ec:	9b 01       	movw	r18, r22
    16ee:	ac 01       	movw	r20, r24
    16f0:	87 01       	movw	r16, r14
    16f2:	ff 24       	eor	r15, r15
    16f4:	ee 24       	eor	r14, r14
    16f6:	89 a9       	ldd	r24, Y+49	; 0x31
    16f8:	9a a9       	ldd	r25, Y+50	; 0x32
    16fa:	ab a9       	ldd	r26, Y+51	; 0x33
    16fc:	bc a9       	ldd	r27, Y+52	; 0x34
    16fe:	a0 70       	andi	r26, 0x00	; 0
    1700:	b0 70       	andi	r27, 0x00	; 0
    1702:	e8 2a       	or	r14, r24
    1704:	f9 2a       	or	r15, r25
    1706:	0a 2b       	or	r16, r26
    1708:	1b 2b       	or	r17, r27
    170a:	e2 16       	cp	r14, r18
    170c:	f3 06       	cpc	r15, r19
    170e:	04 07       	cpc	r16, r20
    1710:	15 07       	cpc	r17, r21
    1712:	90 f4       	brcc	.+36     	; 0x1738 <__umoddi3+0x680>
    1714:	e2 0c       	add	r14, r2
    1716:	f3 1c       	adc	r15, r3
    1718:	04 1d       	adc	r16, r4
    171a:	15 1d       	adc	r17, r5
    171c:	e2 14       	cp	r14, r2
    171e:	f3 04       	cpc	r15, r3
    1720:	04 05       	cpc	r16, r4
    1722:	15 05       	cpc	r17, r5
    1724:	48 f0       	brcs	.+18     	; 0x1738 <__umoddi3+0x680>
    1726:	e2 16       	cp	r14, r18
    1728:	f3 06       	cpc	r15, r19
    172a:	04 07       	cpc	r16, r20
    172c:	15 07       	cpc	r17, r21
    172e:	20 f4       	brcc	.+8      	; 0x1738 <__umoddi3+0x680>
    1730:	e2 0c       	add	r14, r2
    1732:	f3 1c       	adc	r15, r3
    1734:	04 1d       	adc	r16, r4
    1736:	15 1d       	adc	r17, r5
    1738:	e2 1a       	sub	r14, r18
    173a:	f3 0a       	sbc	r15, r19
    173c:	04 0b       	sbc	r16, r20
    173e:	15 0b       	sbc	r17, r21
    1740:	d8 01       	movw	r26, r16
    1742:	c7 01       	movw	r24, r14
    1744:	09 ac       	ldd	r0, Y+57	; 0x39
    1746:	04 c0       	rjmp	.+8      	; 0x1750 <__umoddi3+0x698>
    1748:	b6 95       	lsr	r27
    174a:	a7 95       	ror	r26
    174c:	97 95       	ror	r25
    174e:	87 95       	ror	r24
    1750:	0a 94       	dec	r0
    1752:	d2 f7       	brpl	.-12     	; 0x1748 <__umoddi3+0x690>
    1754:	89 8b       	std	Y+17, r24	; 0x11
    1756:	9a 8b       	std	Y+18, r25	; 0x12
    1758:	ab 8b       	std	Y+19, r26	; 0x13
    175a:	bc 8b       	std	Y+20, r27	; 0x14
    175c:	1d 8a       	std	Y+21, r1	; 0x15
    175e:	1e 8a       	std	Y+22, r1	; 0x16
    1760:	1f 8a       	std	Y+23, r1	; 0x17
    1762:	18 8e       	std	Y+24, r1	; 0x18
    1764:	28 2f       	mov	r18, r24
    1766:	3a 89       	ldd	r19, Y+18	; 0x12
    1768:	4b 89       	ldd	r20, Y+19	; 0x13
    176a:	5c 89       	ldd	r21, Y+20	; 0x14
    176c:	6d 89       	ldd	r22, Y+21	; 0x15
    176e:	0c c3       	rjmp	.+1560   	; 0x1d88 <__umoddi3+0xcd0>
    1770:	6a 14       	cp	r6, r10
    1772:	7b 04       	cpc	r7, r11
    1774:	8c 04       	cpc	r8, r12
    1776:	9d 04       	cpc	r9, r13
    1778:	08 f4       	brcc	.+2      	; 0x177c <__umoddi3+0x6c4>
    177a:	09 c3       	rjmp	.+1554   	; 0x1d8e <__umoddi3+0xcd6>
    177c:	00 e0       	ldi	r16, 0x00	; 0
    177e:	a0 16       	cp	r10, r16
    1780:	00 e0       	ldi	r16, 0x00	; 0
    1782:	b0 06       	cpc	r11, r16
    1784:	01 e0       	ldi	r16, 0x01	; 1
    1786:	c0 06       	cpc	r12, r16
    1788:	00 e0       	ldi	r16, 0x00	; 0
    178a:	d0 06       	cpc	r13, r16
    178c:	88 f4       	brcc	.+34     	; 0x17b0 <__umoddi3+0x6f8>
    178e:	1f ef       	ldi	r17, 0xFF	; 255
    1790:	a1 16       	cp	r10, r17
    1792:	b1 04       	cpc	r11, r1
    1794:	c1 04       	cpc	r12, r1
    1796:	d1 04       	cpc	r13, r1
    1798:	39 f0       	breq	.+14     	; 0x17a8 <__umoddi3+0x6f0>
    179a:	30 f0       	brcs	.+12     	; 0x17a8 <__umoddi3+0x6f0>
    179c:	28 e0       	ldi	r18, 0x08	; 8
    179e:	e2 2e       	mov	r14, r18
    17a0:	f1 2c       	mov	r15, r1
    17a2:	01 2d       	mov	r16, r1
    17a4:	11 2d       	mov	r17, r1
    17a6:	18 c0       	rjmp	.+48     	; 0x17d8 <__umoddi3+0x720>
    17a8:	ee 24       	eor	r14, r14
    17aa:	ff 24       	eor	r15, r15
    17ac:	87 01       	movw	r16, r14
    17ae:	14 c0       	rjmp	.+40     	; 0x17d8 <__umoddi3+0x720>
    17b0:	40 e0       	ldi	r20, 0x00	; 0
    17b2:	a4 16       	cp	r10, r20
    17b4:	40 e0       	ldi	r20, 0x00	; 0
    17b6:	b4 06       	cpc	r11, r20
    17b8:	40 e0       	ldi	r20, 0x00	; 0
    17ba:	c4 06       	cpc	r12, r20
    17bc:	41 e0       	ldi	r20, 0x01	; 1
    17be:	d4 06       	cpc	r13, r20
    17c0:	30 f0       	brcs	.+12     	; 0x17ce <__umoddi3+0x716>
    17c2:	98 e1       	ldi	r25, 0x18	; 24
    17c4:	e9 2e       	mov	r14, r25
    17c6:	f1 2c       	mov	r15, r1
    17c8:	01 2d       	mov	r16, r1
    17ca:	11 2d       	mov	r17, r1
    17cc:	05 c0       	rjmp	.+10     	; 0x17d8 <__umoddi3+0x720>
    17ce:	80 e1       	ldi	r24, 0x10	; 16
    17d0:	e8 2e       	mov	r14, r24
    17d2:	f1 2c       	mov	r15, r1
    17d4:	01 2d       	mov	r16, r1
    17d6:	11 2d       	mov	r17, r1
    17d8:	d6 01       	movw	r26, r12
    17da:	c5 01       	movw	r24, r10
    17dc:	0e 2c       	mov	r0, r14
    17de:	04 c0       	rjmp	.+8      	; 0x17e8 <__umoddi3+0x730>
    17e0:	b6 95       	lsr	r27
    17e2:	a7 95       	ror	r26
    17e4:	97 95       	ror	r25
    17e6:	87 95       	ror	r24
    17e8:	0a 94       	dec	r0
    17ea:	d2 f7       	brpl	.-12     	; 0x17e0 <__umoddi3+0x728>
    17ec:	86 58       	subi	r24, 0x86	; 134
    17ee:	9f 4f       	sbci	r25, 0xFF	; 255
    17f0:	dc 01       	movw	r26, r24
    17f2:	2c 91       	ld	r18, X
    17f4:	80 e2       	ldi	r24, 0x20	; 32
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	a0 e0       	ldi	r26, 0x00	; 0
    17fa:	b0 e0       	ldi	r27, 0x00	; 0
    17fc:	8e 19       	sub	r24, r14
    17fe:	9f 09       	sbc	r25, r15
    1800:	a0 0b       	sbc	r26, r16
    1802:	b1 0b       	sbc	r27, r17
    1804:	82 1b       	sub	r24, r18
    1806:	91 09       	sbc	r25, r1
    1808:	a1 09       	sbc	r26, r1
    180a:	b1 09       	sbc	r27, r1
    180c:	00 97       	sbiw	r24, 0x00	; 0
    180e:	a1 05       	cpc	r26, r1
    1810:	b1 05       	cpc	r27, r1
    1812:	09 f0       	breq	.+2      	; 0x1816 <__umoddi3+0x75e>
    1814:	4f c0       	rjmp	.+158    	; 0x18b4 <__umoddi3+0x7fc>
    1816:	a6 14       	cp	r10, r6
    1818:	b7 04       	cpc	r11, r7
    181a:	c8 04       	cpc	r12, r8
    181c:	d9 04       	cpc	r13, r9
    181e:	58 f0       	brcs	.+22     	; 0x1836 <__umoddi3+0x77e>
    1820:	6c 96       	adiw	r28, 0x1c	; 28
    1822:	ec ac       	ldd	r14, Y+60	; 0x3c
    1824:	fd ac       	ldd	r15, Y+61	; 0x3d
    1826:	0e ad       	ldd	r16, Y+62	; 0x3e
    1828:	1f ad       	ldd	r17, Y+63	; 0x3f
    182a:	6c 97       	sbiw	r28, 0x1c	; 28
    182c:	e2 14       	cp	r14, r2
    182e:	f3 04       	cpc	r15, r3
    1830:	04 05       	cpc	r16, r4
    1832:	15 05       	cpc	r17, r5
    1834:	68 f1       	brcs	.+90     	; 0x1890 <__umoddi3+0x7d8>
    1836:	6c 96       	adiw	r28, 0x1c	; 28
    1838:	ec ac       	ldd	r14, Y+60	; 0x3c
    183a:	fd ac       	ldd	r15, Y+61	; 0x3d
    183c:	0e ad       	ldd	r16, Y+62	; 0x3e
    183e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1840:	6c 97       	sbiw	r28, 0x1c	; 28
    1842:	e2 18       	sub	r14, r2
    1844:	f3 08       	sbc	r15, r3
    1846:	04 09       	sbc	r16, r4
    1848:	15 09       	sbc	r17, r5
    184a:	a4 01       	movw	r20, r8
    184c:	93 01       	movw	r18, r6
    184e:	2a 19       	sub	r18, r10
    1850:	3b 09       	sbc	r19, r11
    1852:	4c 09       	sbc	r20, r12
    1854:	5d 09       	sbc	r21, r13
    1856:	aa 24       	eor	r10, r10
    1858:	bb 24       	eor	r11, r11
    185a:	65 01       	movw	r12, r10
    185c:	6c 96       	adiw	r28, 0x1c	; 28
    185e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1860:	7d ad       	ldd	r23, Y+61	; 0x3d
    1862:	8e ad       	ldd	r24, Y+62	; 0x3e
    1864:	9f ad       	ldd	r25, Y+63	; 0x3f
    1866:	6c 97       	sbiw	r28, 0x1c	; 28
    1868:	6e 15       	cp	r22, r14
    186a:	7f 05       	cpc	r23, r15
    186c:	80 07       	cpc	r24, r16
    186e:	91 07       	cpc	r25, r17
    1870:	28 f4       	brcc	.+10     	; 0x187c <__umoddi3+0x7c4>
    1872:	b1 e0       	ldi	r27, 0x01	; 1
    1874:	ab 2e       	mov	r10, r27
    1876:	b1 2c       	mov	r11, r1
    1878:	c1 2c       	mov	r12, r1
    187a:	d1 2c       	mov	r13, r1
    187c:	da 01       	movw	r26, r20
    187e:	c9 01       	movw	r24, r18
    1880:	8a 19       	sub	r24, r10
    1882:	9b 09       	sbc	r25, r11
    1884:	ac 09       	sbc	r26, r12
    1886:	bd 09       	sbc	r27, r13
    1888:	8d ab       	std	Y+53, r24	; 0x35
    188a:	9e ab       	std	Y+54, r25	; 0x36
    188c:	af ab       	std	Y+55, r26	; 0x37
    188e:	b8 af       	std	Y+56, r27	; 0x38
    1890:	e9 8a       	std	Y+17, r14	; 0x11
    1892:	fa 8a       	std	Y+18, r15	; 0x12
    1894:	0b 8b       	std	Y+19, r16	; 0x13
    1896:	1c 8b       	std	Y+20, r17	; 0x14
    1898:	6d a8       	ldd	r6, Y+53	; 0x35
    189a:	7e a8       	ldd	r7, Y+54	; 0x36
    189c:	8f a8       	ldd	r8, Y+55	; 0x37
    189e:	98 ac       	ldd	r9, Y+56	; 0x38
    18a0:	6d 8a       	std	Y+21, r6	; 0x15
    18a2:	7e 8a       	std	Y+22, r7	; 0x16
    18a4:	8f 8a       	std	Y+23, r8	; 0x17
    18a6:	98 8e       	std	Y+24, r9	; 0x18
    18a8:	2e 2d       	mov	r18, r14
    18aa:	3a 89       	ldd	r19, Y+18	; 0x12
    18ac:	4b 89       	ldd	r20, Y+19	; 0x13
    18ae:	5c 89       	ldd	r21, Y+20	; 0x14
    18b0:	6d a9       	ldd	r22, Y+53	; 0x35
    18b2:	6a c2       	rjmp	.+1236   	; 0x1d88 <__umoddi3+0xcd0>
    18b4:	67 96       	adiw	r28, 0x17	; 23
    18b6:	8f af       	std	Y+63, r24	; 0x3f
    18b8:	67 97       	sbiw	r28, 0x17	; 23
    18ba:	a6 01       	movw	r20, r12
    18bc:	95 01       	movw	r18, r10
    18be:	08 2e       	mov	r0, r24
    18c0:	04 c0       	rjmp	.+8      	; 0x18ca <__umoddi3+0x812>
    18c2:	22 0f       	add	r18, r18
    18c4:	33 1f       	adc	r19, r19
    18c6:	44 1f       	adc	r20, r20
    18c8:	55 1f       	adc	r21, r21
    18ca:	0a 94       	dec	r0
    18cc:	d2 f7       	brpl	.-12     	; 0x18c2 <__umoddi3+0x80a>
    18ce:	a0 e2       	ldi	r26, 0x20	; 32
    18d0:	aa 2e       	mov	r10, r26
    18d2:	a8 1a       	sub	r10, r24
    18d4:	66 96       	adiw	r28, 0x16	; 22
    18d6:	af ae       	std	Y+63, r10	; 0x3f
    18d8:	66 97       	sbiw	r28, 0x16	; 22
    18da:	d2 01       	movw	r26, r4
    18dc:	c1 01       	movw	r24, r2
    18de:	04 c0       	rjmp	.+8      	; 0x18e8 <__umoddi3+0x830>
    18e0:	b6 95       	lsr	r27
    18e2:	a7 95       	ror	r26
    18e4:	97 95       	ror	r25
    18e6:	87 95       	ror	r24
    18e8:	aa 94       	dec	r10
    18ea:	d2 f7       	brpl	.-12     	; 0x18e0 <__umoddi3+0x828>
    18ec:	6c 01       	movw	r12, r24
    18ee:	7d 01       	movw	r14, r26
    18f0:	c2 2a       	or	r12, r18
    18f2:	d3 2a       	or	r13, r19
    18f4:	e4 2a       	or	r14, r20
    18f6:	f5 2a       	or	r15, r21
    18f8:	c9 a6       	std	Y+41, r12	; 0x29
    18fa:	da a6       	std	Y+42, r13	; 0x2a
    18fc:	eb a6       	std	Y+43, r14	; 0x2b
    18fe:	fc a6       	std	Y+44, r15	; 0x2c
    1900:	82 01       	movw	r16, r4
    1902:	71 01       	movw	r14, r2
    1904:	67 96       	adiw	r28, 0x17	; 23
    1906:	0f ac       	ldd	r0, Y+63	; 0x3f
    1908:	67 97       	sbiw	r28, 0x17	; 23
    190a:	04 c0       	rjmp	.+8      	; 0x1914 <__umoddi3+0x85c>
    190c:	ee 0c       	add	r14, r14
    190e:	ff 1c       	adc	r15, r15
    1910:	00 1f       	adc	r16, r16
    1912:	11 1f       	adc	r17, r17
    1914:	0a 94       	dec	r0
    1916:	d2 f7       	brpl	.-12     	; 0x190c <__umoddi3+0x854>
    1918:	ed a2       	std	Y+37, r14	; 0x25
    191a:	fe a2       	std	Y+38, r15	; 0x26
    191c:	0f a3       	std	Y+39, r16	; 0x27
    191e:	18 a7       	std	Y+40, r17	; 0x28
    1920:	64 01       	movw	r12, r8
    1922:	53 01       	movw	r10, r6
    1924:	66 96       	adiw	r28, 0x16	; 22
    1926:	0f ac       	ldd	r0, Y+63	; 0x3f
    1928:	66 97       	sbiw	r28, 0x16	; 22
    192a:	04 c0       	rjmp	.+8      	; 0x1934 <__umoddi3+0x87c>
    192c:	d6 94       	lsr	r13
    192e:	c7 94       	ror	r12
    1930:	b7 94       	ror	r11
    1932:	a7 94       	ror	r10
    1934:	0a 94       	dec	r0
    1936:	d2 f7       	brpl	.-12     	; 0x192c <__umoddi3+0x874>
    1938:	a4 01       	movw	r20, r8
    193a:	93 01       	movw	r18, r6
    193c:	67 96       	adiw	r28, 0x17	; 23
    193e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1940:	67 97       	sbiw	r28, 0x17	; 23
    1942:	04 c0       	rjmp	.+8      	; 0x194c <__umoddi3+0x894>
    1944:	22 0f       	add	r18, r18
    1946:	33 1f       	adc	r19, r19
    1948:	44 1f       	adc	r20, r20
    194a:	55 1f       	adc	r21, r21
    194c:	0a 94       	dec	r0
    194e:	d2 f7       	brpl	.-12     	; 0x1944 <__umoddi3+0x88c>
    1950:	6c 96       	adiw	r28, 0x1c	; 28
    1952:	8c ad       	ldd	r24, Y+60	; 0x3c
    1954:	9d ad       	ldd	r25, Y+61	; 0x3d
    1956:	ae ad       	ldd	r26, Y+62	; 0x3e
    1958:	bf ad       	ldd	r27, Y+63	; 0x3f
    195a:	6c 97       	sbiw	r28, 0x1c	; 28
    195c:	66 96       	adiw	r28, 0x16	; 22
    195e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1960:	66 97       	sbiw	r28, 0x16	; 22
    1962:	04 c0       	rjmp	.+8      	; 0x196c <__umoddi3+0x8b4>
    1964:	b6 95       	lsr	r27
    1966:	a7 95       	ror	r26
    1968:	97 95       	ror	r25
    196a:	87 95       	ror	r24
    196c:	0a 94       	dec	r0
    196e:	d2 f7       	brpl	.-12     	; 0x1964 <__umoddi3+0x8ac>
    1970:	3c 01       	movw	r6, r24
    1972:	4d 01       	movw	r8, r26
    1974:	62 2a       	or	r6, r18
    1976:	73 2a       	or	r7, r19
    1978:	84 2a       	or	r8, r20
    197a:	95 2a       	or	r9, r21
    197c:	69 a2       	std	Y+33, r6	; 0x21
    197e:	7a a2       	std	Y+34, r7	; 0x22
    1980:	8b a2       	std	Y+35, r8	; 0x23
    1982:	9c a2       	std	Y+36, r9	; 0x24
    1984:	6c 96       	adiw	r28, 0x1c	; 28
    1986:	ec ac       	ldd	r14, Y+60	; 0x3c
    1988:	fd ac       	ldd	r15, Y+61	; 0x3d
    198a:	0e ad       	ldd	r16, Y+62	; 0x3e
    198c:	1f ad       	ldd	r17, Y+63	; 0x3f
    198e:	6c 97       	sbiw	r28, 0x1c	; 28
    1990:	67 96       	adiw	r28, 0x17	; 23
    1992:	0f ac       	ldd	r0, Y+63	; 0x3f
    1994:	67 97       	sbiw	r28, 0x17	; 23
    1996:	04 c0       	rjmp	.+8      	; 0x19a0 <__umoddi3+0x8e8>
    1998:	ee 0c       	add	r14, r14
    199a:	ff 1c       	adc	r15, r15
    199c:	00 1f       	adc	r16, r16
    199e:	11 1f       	adc	r17, r17
    19a0:	0a 94       	dec	r0
    19a2:	d2 f7       	brpl	.-12     	; 0x1998 <__umoddi3+0x8e0>
    19a4:	ed 8e       	std	Y+29, r14	; 0x1d
    19a6:	fe 8e       	std	Y+30, r15	; 0x1e
    19a8:	0f 8f       	std	Y+31, r16	; 0x1f
    19aa:	18 a3       	std	Y+32, r17	; 0x20
    19ac:	49 a5       	ldd	r20, Y+41	; 0x29
    19ae:	5a a5       	ldd	r21, Y+42	; 0x2a
    19b0:	6b a5       	ldd	r22, Y+43	; 0x2b
    19b2:	7c a5       	ldd	r23, Y+44	; 0x2c
    19b4:	3b 01       	movw	r6, r22
    19b6:	88 24       	eor	r8, r8
    19b8:	99 24       	eor	r9, r9
    19ba:	60 70       	andi	r22, 0x00	; 0
    19bc:	70 70       	andi	r23, 0x00	; 0
    19be:	2d 96       	adiw	r28, 0x0d	; 13
    19c0:	4c af       	std	Y+60, r20	; 0x3c
    19c2:	5d af       	std	Y+61, r21	; 0x3d
    19c4:	6e af       	std	Y+62, r22	; 0x3e
    19c6:	7f af       	std	Y+63, r23	; 0x3f
    19c8:	2d 97       	sbiw	r28, 0x0d	; 13
    19ca:	c6 01       	movw	r24, r12
    19cc:	b5 01       	movw	r22, r10
    19ce:	a4 01       	movw	r20, r8
    19d0:	93 01       	movw	r18, r6
    19d2:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    19d6:	7b 01       	movw	r14, r22
    19d8:	8c 01       	movw	r16, r24
    19da:	c6 01       	movw	r24, r12
    19dc:	b5 01       	movw	r22, r10
    19de:	a4 01       	movw	r20, r8
    19e0:	93 01       	movw	r18, r6
    19e2:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    19e6:	c9 01       	movw	r24, r18
    19e8:	da 01       	movw	r26, r20
    19ea:	1c 01       	movw	r2, r24
    19ec:	2d 01       	movw	r4, r26
    19ee:	c2 01       	movw	r24, r4
    19f0:	b1 01       	movw	r22, r2
    19f2:	2d 96       	adiw	r28, 0x0d	; 13
    19f4:	2c ad       	ldd	r18, Y+60	; 0x3c
    19f6:	3d ad       	ldd	r19, Y+61	; 0x3d
    19f8:	4e ad       	ldd	r20, Y+62	; 0x3e
    19fa:	5f ad       	ldd	r21, Y+63	; 0x3f
    19fc:	2d 97       	sbiw	r28, 0x0d	; 13
    19fe:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1a02:	9b 01       	movw	r18, r22
    1a04:	ac 01       	movw	r20, r24
    1a06:	87 01       	movw	r16, r14
    1a08:	ff 24       	eor	r15, r15
    1a0a:	ee 24       	eor	r14, r14
    1a0c:	a9 a0       	ldd	r10, Y+33	; 0x21
    1a0e:	ba a0       	ldd	r11, Y+34	; 0x22
    1a10:	cb a0       	ldd	r12, Y+35	; 0x23
    1a12:	dc a0       	ldd	r13, Y+36	; 0x24
    1a14:	c6 01       	movw	r24, r12
    1a16:	aa 27       	eor	r26, r26
    1a18:	bb 27       	eor	r27, r27
    1a1a:	57 01       	movw	r10, r14
    1a1c:	68 01       	movw	r12, r16
    1a1e:	a8 2a       	or	r10, r24
    1a20:	b9 2a       	or	r11, r25
    1a22:	ca 2a       	or	r12, r26
    1a24:	db 2a       	or	r13, r27
    1a26:	a2 16       	cp	r10, r18
    1a28:	b3 06       	cpc	r11, r19
    1a2a:	c4 06       	cpc	r12, r20
    1a2c:	d5 06       	cpc	r13, r21
    1a2e:	00 f5       	brcc	.+64     	; 0x1a70 <__umoddi3+0x9b8>
    1a30:	08 94       	sec
    1a32:	21 08       	sbc	r2, r1
    1a34:	31 08       	sbc	r3, r1
    1a36:	41 08       	sbc	r4, r1
    1a38:	51 08       	sbc	r5, r1
    1a3a:	e9 a4       	ldd	r14, Y+41	; 0x29
    1a3c:	fa a4       	ldd	r15, Y+42	; 0x2a
    1a3e:	0b a5       	ldd	r16, Y+43	; 0x2b
    1a40:	1c a5       	ldd	r17, Y+44	; 0x2c
    1a42:	ae 0c       	add	r10, r14
    1a44:	bf 1c       	adc	r11, r15
    1a46:	c0 1e       	adc	r12, r16
    1a48:	d1 1e       	adc	r13, r17
    1a4a:	ae 14       	cp	r10, r14
    1a4c:	bf 04       	cpc	r11, r15
    1a4e:	c0 06       	cpc	r12, r16
    1a50:	d1 06       	cpc	r13, r17
    1a52:	70 f0       	brcs	.+28     	; 0x1a70 <__umoddi3+0x9b8>
    1a54:	a2 16       	cp	r10, r18
    1a56:	b3 06       	cpc	r11, r19
    1a58:	c4 06       	cpc	r12, r20
    1a5a:	d5 06       	cpc	r13, r21
    1a5c:	48 f4       	brcc	.+18     	; 0x1a70 <__umoddi3+0x9b8>
    1a5e:	08 94       	sec
    1a60:	21 08       	sbc	r2, r1
    1a62:	31 08       	sbc	r3, r1
    1a64:	41 08       	sbc	r4, r1
    1a66:	51 08       	sbc	r5, r1
    1a68:	ae 0c       	add	r10, r14
    1a6a:	bf 1c       	adc	r11, r15
    1a6c:	c0 1e       	adc	r12, r16
    1a6e:	d1 1e       	adc	r13, r17
    1a70:	a2 1a       	sub	r10, r18
    1a72:	b3 0a       	sbc	r11, r19
    1a74:	c4 0a       	sbc	r12, r20
    1a76:	d5 0a       	sbc	r13, r21
    1a78:	c6 01       	movw	r24, r12
    1a7a:	b5 01       	movw	r22, r10
    1a7c:	a4 01       	movw	r20, r8
    1a7e:	93 01       	movw	r18, r6
    1a80:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    1a84:	7b 01       	movw	r14, r22
    1a86:	8c 01       	movw	r16, r24
    1a88:	c6 01       	movw	r24, r12
    1a8a:	b5 01       	movw	r22, r10
    1a8c:	a4 01       	movw	r20, r8
    1a8e:	93 01       	movw	r18, r6
    1a90:	0e 94 28 26 	call	0x4c50	; 0x4c50 <__udivmodsi4>
    1a94:	c9 01       	movw	r24, r18
    1a96:	da 01       	movw	r26, r20
    1a98:	3c 01       	movw	r6, r24
    1a9a:	4d 01       	movw	r8, r26
    1a9c:	c4 01       	movw	r24, r8
    1a9e:	b3 01       	movw	r22, r6
    1aa0:	2d 96       	adiw	r28, 0x0d	; 13
    1aa2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1aa4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1aa6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1aa8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1aaa:	2d 97       	sbiw	r28, 0x0d	; 13
    1aac:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1ab0:	9b 01       	movw	r18, r22
    1ab2:	ac 01       	movw	r20, r24
    1ab4:	87 01       	movw	r16, r14
    1ab6:	ff 24       	eor	r15, r15
    1ab8:	ee 24       	eor	r14, r14
    1aba:	89 a1       	ldd	r24, Y+33	; 0x21
    1abc:	9a a1       	ldd	r25, Y+34	; 0x22
    1abe:	ab a1       	ldd	r26, Y+35	; 0x23
    1ac0:	bc a1       	ldd	r27, Y+36	; 0x24
    1ac2:	a0 70       	andi	r26, 0x00	; 0
    1ac4:	b0 70       	andi	r27, 0x00	; 0
    1ac6:	57 01       	movw	r10, r14
    1ac8:	68 01       	movw	r12, r16
    1aca:	a8 2a       	or	r10, r24
    1acc:	b9 2a       	or	r11, r25
    1ace:	ca 2a       	or	r12, r26
    1ad0:	db 2a       	or	r13, r27
    1ad2:	a2 16       	cp	r10, r18
    1ad4:	b3 06       	cpc	r11, r19
    1ad6:	c4 06       	cpc	r12, r20
    1ad8:	d5 06       	cpc	r13, r21
    1ada:	00 f5       	brcc	.+64     	; 0x1b1c <__umoddi3+0xa64>
    1adc:	08 94       	sec
    1ade:	61 08       	sbc	r6, r1
    1ae0:	71 08       	sbc	r7, r1
    1ae2:	81 08       	sbc	r8, r1
    1ae4:	91 08       	sbc	r9, r1
    1ae6:	69 a5       	ldd	r22, Y+41	; 0x29
    1ae8:	7a a5       	ldd	r23, Y+42	; 0x2a
    1aea:	8b a5       	ldd	r24, Y+43	; 0x2b
    1aec:	9c a5       	ldd	r25, Y+44	; 0x2c
    1aee:	a6 0e       	add	r10, r22
    1af0:	b7 1e       	adc	r11, r23
    1af2:	c8 1e       	adc	r12, r24
    1af4:	d9 1e       	adc	r13, r25
    1af6:	a6 16       	cp	r10, r22
    1af8:	b7 06       	cpc	r11, r23
    1afa:	c8 06       	cpc	r12, r24
    1afc:	d9 06       	cpc	r13, r25
    1afe:	70 f0       	brcs	.+28     	; 0x1b1c <__umoddi3+0xa64>
    1b00:	a2 16       	cp	r10, r18
    1b02:	b3 06       	cpc	r11, r19
    1b04:	c4 06       	cpc	r12, r20
    1b06:	d5 06       	cpc	r13, r21
    1b08:	48 f4       	brcc	.+18     	; 0x1b1c <__umoddi3+0xa64>
    1b0a:	08 94       	sec
    1b0c:	61 08       	sbc	r6, r1
    1b0e:	71 08       	sbc	r7, r1
    1b10:	81 08       	sbc	r8, r1
    1b12:	91 08       	sbc	r9, r1
    1b14:	a6 0e       	add	r10, r22
    1b16:	b7 1e       	adc	r11, r23
    1b18:	c8 1e       	adc	r12, r24
    1b1a:	d9 1e       	adc	r13, r25
    1b1c:	d6 01       	movw	r26, r12
    1b1e:	c5 01       	movw	r24, r10
    1b20:	82 1b       	sub	r24, r18
    1b22:	93 0b       	sbc	r25, r19
    1b24:	a4 0b       	sbc	r26, r20
    1b26:	b5 0b       	sbc	r27, r21
    1b28:	89 8f       	std	Y+25, r24	; 0x19
    1b2a:	9a 8f       	std	Y+26, r25	; 0x1a
    1b2c:	ab 8f       	std	Y+27, r26	; 0x1b
    1b2e:	bc 8f       	std	Y+28, r27	; 0x1c
    1b30:	d1 01       	movw	r26, r2
    1b32:	99 27       	eor	r25, r25
    1b34:	88 27       	eor	r24, r24
    1b36:	84 01       	movw	r16, r8
    1b38:	73 01       	movw	r14, r6
    1b3a:	e8 2a       	or	r14, r24
    1b3c:	f9 2a       	or	r15, r25
    1b3e:	0a 2b       	or	r16, r26
    1b40:	1b 2b       	or	r17, r27
    1b42:	4f ef       	ldi	r20, 0xFF	; 255
    1b44:	a4 2e       	mov	r10, r20
    1b46:	4f ef       	ldi	r20, 0xFF	; 255
    1b48:	b4 2e       	mov	r11, r20
    1b4a:	c1 2c       	mov	r12, r1
    1b4c:	d1 2c       	mov	r13, r1
    1b4e:	ae 20       	and	r10, r14
    1b50:	bf 20       	and	r11, r15
    1b52:	c0 22       	and	r12, r16
    1b54:	d1 22       	and	r13, r17
    1b56:	78 01       	movw	r14, r16
    1b58:	00 27       	eor	r16, r16
    1b5a:	11 27       	eor	r17, r17
    1b5c:	6d a0       	ldd	r6, Y+37	; 0x25
    1b5e:	7e a0       	ldd	r7, Y+38	; 0x26
    1b60:	8f a0       	ldd	r8, Y+39	; 0x27
    1b62:	98 a4       	ldd	r9, Y+40	; 0x28
    1b64:	4f ef       	ldi	r20, 0xFF	; 255
    1b66:	5f ef       	ldi	r21, 0xFF	; 255
    1b68:	60 e0       	ldi	r22, 0x00	; 0
    1b6a:	70 e0       	ldi	r23, 0x00	; 0
    1b6c:	64 22       	and	r6, r20
    1b6e:	75 22       	and	r7, r21
    1b70:	86 22       	and	r8, r22
    1b72:	97 22       	and	r9, r23
    1b74:	8d a1       	ldd	r24, Y+37	; 0x25
    1b76:	9e a1       	ldd	r25, Y+38	; 0x26
    1b78:	af a1       	ldd	r26, Y+39	; 0x27
    1b7a:	b8 a5       	ldd	r27, Y+40	; 0x28
    1b7c:	bd 01       	movw	r22, r26
    1b7e:	88 27       	eor	r24, r24
    1b80:	99 27       	eor	r25, r25
    1b82:	65 96       	adiw	r28, 0x15	; 21
    1b84:	6c af       	std	Y+60, r22	; 0x3c
    1b86:	7d af       	std	Y+61, r23	; 0x3d
    1b88:	8e af       	std	Y+62, r24	; 0x3e
    1b8a:	9f af       	std	Y+63, r25	; 0x3f
    1b8c:	65 97       	sbiw	r28, 0x15	; 21
    1b8e:	c6 01       	movw	r24, r12
    1b90:	b5 01       	movw	r22, r10
    1b92:	a4 01       	movw	r20, r8
    1b94:	93 01       	movw	r18, r6
    1b96:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1b9a:	61 96       	adiw	r28, 0x11	; 17
    1b9c:	6c af       	std	Y+60, r22	; 0x3c
    1b9e:	7d af       	std	Y+61, r23	; 0x3d
    1ba0:	8e af       	std	Y+62, r24	; 0x3e
    1ba2:	9f af       	std	Y+63, r25	; 0x3f
    1ba4:	61 97       	sbiw	r28, 0x11	; 17
    1ba6:	c6 01       	movw	r24, r12
    1ba8:	b5 01       	movw	r22, r10
    1baa:	65 96       	adiw	r28, 0x15	; 21
    1bac:	2c ad       	ldd	r18, Y+60	; 0x3c
    1bae:	3d ad       	ldd	r19, Y+61	; 0x3d
    1bb0:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bb2:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bb4:	65 97       	sbiw	r28, 0x15	; 21
    1bb6:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1bba:	1b 01       	movw	r2, r22
    1bbc:	2c 01       	movw	r4, r24
    1bbe:	c8 01       	movw	r24, r16
    1bc0:	b7 01       	movw	r22, r14
    1bc2:	a4 01       	movw	r20, r8
    1bc4:	93 01       	movw	r18, r6
    1bc6:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1bca:	5b 01       	movw	r10, r22
    1bcc:	6c 01       	movw	r12, r24
    1bce:	c8 01       	movw	r24, r16
    1bd0:	b7 01       	movw	r22, r14
    1bd2:	65 96       	adiw	r28, 0x15	; 21
    1bd4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1bd6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1bd8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bda:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bdc:	65 97       	sbiw	r28, 0x15	; 21
    1bde:	0e 94 09 26 	call	0x4c12	; 0x4c12 <__mulsi3>
    1be2:	7b 01       	movw	r14, r22
    1be4:	8c 01       	movw	r16, r24
    1be6:	a6 01       	movw	r20, r12
    1be8:	95 01       	movw	r18, r10
    1bea:	22 0d       	add	r18, r2
    1bec:	33 1d       	adc	r19, r3
    1bee:	44 1d       	adc	r20, r4
    1bf0:	55 1d       	adc	r21, r5
    1bf2:	61 96       	adiw	r28, 0x11	; 17
    1bf4:	6c ac       	ldd	r6, Y+60	; 0x3c
    1bf6:	7d ac       	ldd	r7, Y+61	; 0x3d
    1bf8:	8e ac       	ldd	r8, Y+62	; 0x3e
    1bfa:	9f ac       	ldd	r9, Y+63	; 0x3f
    1bfc:	61 97       	sbiw	r28, 0x11	; 17
    1bfe:	c4 01       	movw	r24, r8
    1c00:	aa 27       	eor	r26, r26
    1c02:	bb 27       	eor	r27, r27
    1c04:	28 0f       	add	r18, r24
    1c06:	39 1f       	adc	r19, r25
    1c08:	4a 1f       	adc	r20, r26
    1c0a:	5b 1f       	adc	r21, r27
    1c0c:	2a 15       	cp	r18, r10
    1c0e:	3b 05       	cpc	r19, r11
    1c10:	4c 05       	cpc	r20, r12
    1c12:	5d 05       	cpc	r21, r13
    1c14:	48 f4       	brcc	.+18     	; 0x1c28 <__umoddi3+0xb70>
    1c16:	81 2c       	mov	r8, r1
    1c18:	91 2c       	mov	r9, r1
    1c1a:	e1 e0       	ldi	r30, 0x01	; 1
    1c1c:	ae 2e       	mov	r10, r30
    1c1e:	b1 2c       	mov	r11, r1
    1c20:	e8 0c       	add	r14, r8
    1c22:	f9 1c       	adc	r15, r9
    1c24:	0a 1d       	adc	r16, r10
    1c26:	1b 1d       	adc	r17, r11
    1c28:	ca 01       	movw	r24, r20
    1c2a:	aa 27       	eor	r26, r26
    1c2c:	bb 27       	eor	r27, r27
    1c2e:	57 01       	movw	r10, r14
    1c30:	68 01       	movw	r12, r16
    1c32:	a8 0e       	add	r10, r24
    1c34:	b9 1e       	adc	r11, r25
    1c36:	ca 1e       	adc	r12, r26
    1c38:	db 1e       	adc	r13, r27
    1c3a:	a9 01       	movw	r20, r18
    1c3c:	33 27       	eor	r19, r19
    1c3e:	22 27       	eor	r18, r18
    1c40:	61 96       	adiw	r28, 0x11	; 17
    1c42:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c44:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c46:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c48:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c4a:	61 97       	sbiw	r28, 0x11	; 17
    1c4c:	a0 70       	andi	r26, 0x00	; 0
    1c4e:	b0 70       	andi	r27, 0x00	; 0
    1c50:	28 0f       	add	r18, r24
    1c52:	39 1f       	adc	r19, r25
    1c54:	4a 1f       	adc	r20, r26
    1c56:	5b 1f       	adc	r21, r27
    1c58:	e9 8c       	ldd	r14, Y+25	; 0x19
    1c5a:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1c5c:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1c5e:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1c60:	ea 14       	cp	r14, r10
    1c62:	fb 04       	cpc	r15, r11
    1c64:	0c 05       	cpc	r16, r12
    1c66:	1d 05       	cpc	r17, r13
    1c68:	70 f0       	brcs	.+28     	; 0x1c86 <__umoddi3+0xbce>
    1c6a:	ae 14       	cp	r10, r14
    1c6c:	bf 04       	cpc	r11, r15
    1c6e:	c0 06       	cpc	r12, r16
    1c70:	d1 06       	cpc	r13, r17
    1c72:	69 f5       	brne	.+90     	; 0x1cce <__umoddi3+0xc16>
    1c74:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c76:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c78:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c7a:	98 a1       	ldd	r25, Y+32	; 0x20
    1c7c:	62 17       	cp	r22, r18
    1c7e:	73 07       	cpc	r23, r19
    1c80:	84 07       	cpc	r24, r20
    1c82:	95 07       	cpc	r25, r21
    1c84:	20 f5       	brcc	.+72     	; 0x1cce <__umoddi3+0xc16>
    1c86:	da 01       	movw	r26, r20
    1c88:	c9 01       	movw	r24, r18
    1c8a:	6d a0       	ldd	r6, Y+37	; 0x25
    1c8c:	7e a0       	ldd	r7, Y+38	; 0x26
    1c8e:	8f a0       	ldd	r8, Y+39	; 0x27
    1c90:	98 a4       	ldd	r9, Y+40	; 0x28
    1c92:	86 19       	sub	r24, r6
    1c94:	97 09       	sbc	r25, r7
    1c96:	a8 09       	sbc	r26, r8
    1c98:	b9 09       	sbc	r27, r9
    1c9a:	e9 a4       	ldd	r14, Y+41	; 0x29
    1c9c:	fa a4       	ldd	r15, Y+42	; 0x2a
    1c9e:	0b a5       	ldd	r16, Y+43	; 0x2b
    1ca0:	1c a5       	ldd	r17, Y+44	; 0x2c
    1ca2:	ae 18       	sub	r10, r14
    1ca4:	bf 08       	sbc	r11, r15
    1ca6:	c0 0a       	sbc	r12, r16
    1ca8:	d1 0a       	sbc	r13, r17
    1caa:	ee 24       	eor	r14, r14
    1cac:	ff 24       	eor	r15, r15
    1cae:	87 01       	movw	r16, r14
    1cb0:	28 17       	cp	r18, r24
    1cb2:	39 07       	cpc	r19, r25
    1cb4:	4a 07       	cpc	r20, r26
    1cb6:	5b 07       	cpc	r21, r27
    1cb8:	28 f4       	brcc	.+10     	; 0x1cc4 <__umoddi3+0xc0c>
    1cba:	21 e0       	ldi	r18, 0x01	; 1
    1cbc:	e2 2e       	mov	r14, r18
    1cbe:	f1 2c       	mov	r15, r1
    1cc0:	01 2d       	mov	r16, r1
    1cc2:	11 2d       	mov	r17, r1
    1cc4:	ae 18       	sub	r10, r14
    1cc6:	bf 08       	sbc	r11, r15
    1cc8:	c0 0a       	sbc	r12, r16
    1cca:	d1 0a       	sbc	r13, r17
    1ccc:	02 c0       	rjmp	.+4      	; 0x1cd2 <__umoddi3+0xc1a>
    1cce:	da 01       	movw	r26, r20
    1cd0:	c9 01       	movw	r24, r18
    1cd2:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1cd4:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1cd6:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1cd8:	98 a0       	ldd	r9, Y+32	; 0x20
    1cda:	68 1a       	sub	r6, r24
    1cdc:	79 0a       	sbc	r7, r25
    1cde:	8a 0a       	sbc	r8, r26
    1ce0:	9b 0a       	sbc	r9, r27
    1ce2:	49 8d       	ldd	r20, Y+25	; 0x19
    1ce4:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1ce6:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1ce8:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1cea:	4a 19       	sub	r20, r10
    1cec:	5b 09       	sbc	r21, r11
    1cee:	6c 09       	sbc	r22, r12
    1cf0:	7d 09       	sbc	r23, r13
    1cf2:	5a 01       	movw	r10, r20
    1cf4:	6b 01       	movw	r12, r22
    1cf6:	22 24       	eor	r2, r2
    1cf8:	33 24       	eor	r3, r3
    1cfa:	21 01       	movw	r4, r2
    1cfc:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1cfe:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1d00:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d02:	98 a1       	ldd	r25, Y+32	; 0x20
    1d04:	66 15       	cp	r22, r6
    1d06:	77 05       	cpc	r23, r7
    1d08:	88 05       	cpc	r24, r8
    1d0a:	99 05       	cpc	r25, r9
    1d0c:	28 f4       	brcc	.+10     	; 0x1d18 <__umoddi3+0xc60>
    1d0e:	81 e0       	ldi	r24, 0x01	; 1
    1d10:	28 2e       	mov	r2, r24
    1d12:	31 2c       	mov	r3, r1
    1d14:	41 2c       	mov	r4, r1
    1d16:	51 2c       	mov	r5, r1
    1d18:	86 01       	movw	r16, r12
    1d1a:	75 01       	movw	r14, r10
    1d1c:	e2 18       	sub	r14, r2
    1d1e:	f3 08       	sbc	r15, r3
    1d20:	04 09       	sbc	r16, r4
    1d22:	15 09       	sbc	r17, r5
    1d24:	a8 01       	movw	r20, r16
    1d26:	97 01       	movw	r18, r14
    1d28:	66 96       	adiw	r28, 0x16	; 22
    1d2a:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d2c:	66 97       	sbiw	r28, 0x16	; 22
    1d2e:	04 c0       	rjmp	.+8      	; 0x1d38 <__umoddi3+0xc80>
    1d30:	22 0f       	add	r18, r18
    1d32:	33 1f       	adc	r19, r19
    1d34:	44 1f       	adc	r20, r20
    1d36:	55 1f       	adc	r21, r21
    1d38:	0a 94       	dec	r0
    1d3a:	d2 f7       	brpl	.-12     	; 0x1d30 <__umoddi3+0xc78>
    1d3c:	d4 01       	movw	r26, r8
    1d3e:	c3 01       	movw	r24, r6
    1d40:	67 96       	adiw	r28, 0x17	; 23
    1d42:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d44:	67 97       	sbiw	r28, 0x17	; 23
    1d46:	04 c0       	rjmp	.+8      	; 0x1d50 <__umoddi3+0xc98>
    1d48:	b6 95       	lsr	r27
    1d4a:	a7 95       	ror	r26
    1d4c:	97 95       	ror	r25
    1d4e:	87 95       	ror	r24
    1d50:	0a 94       	dec	r0
    1d52:	d2 f7       	brpl	.-12     	; 0x1d48 <__umoddi3+0xc90>
    1d54:	28 2b       	or	r18, r24
    1d56:	39 2b       	or	r19, r25
    1d58:	4a 2b       	or	r20, r26
    1d5a:	5b 2b       	or	r21, r27
    1d5c:	29 8b       	std	Y+17, r18	; 0x11
    1d5e:	3a 8b       	std	Y+18, r19	; 0x12
    1d60:	4b 8b       	std	Y+19, r20	; 0x13
    1d62:	5c 8b       	std	Y+20, r21	; 0x14
    1d64:	67 96       	adiw	r28, 0x17	; 23
    1d66:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d68:	67 97       	sbiw	r28, 0x17	; 23
    1d6a:	04 c0       	rjmp	.+8      	; 0x1d74 <__umoddi3+0xcbc>
    1d6c:	16 95       	lsr	r17
    1d6e:	07 95       	ror	r16
    1d70:	f7 94       	ror	r15
    1d72:	e7 94       	ror	r14
    1d74:	0a 94       	dec	r0
    1d76:	d2 f7       	brpl	.-12     	; 0x1d6c <__umoddi3+0xcb4>
    1d78:	ed 8a       	std	Y+21, r14	; 0x15
    1d7a:	fe 8a       	std	Y+22, r15	; 0x16
    1d7c:	0f 8b       	std	Y+23, r16	; 0x17
    1d7e:	18 8f       	std	Y+24, r17	; 0x18
    1d80:	3a 89       	ldd	r19, Y+18	; 0x12
    1d82:	4b 89       	ldd	r20, Y+19	; 0x13
    1d84:	5c 89       	ldd	r21, Y+20	; 0x14
    1d86:	6e 2d       	mov	r22, r14
    1d88:	7e 89       	ldd	r23, Y+22	; 0x16
    1d8a:	8f 89       	ldd	r24, Y+23	; 0x17
    1d8c:	98 8d       	ldd	r25, Y+24	; 0x18
    1d8e:	c5 5a       	subi	r28, 0xA5	; 165
    1d90:	df 4f       	sbci	r29, 0xFF	; 255
    1d92:	e2 e1       	ldi	r30, 0x12	; 18
    1d94:	0c 94 66 26 	jmp	0x4ccc	; 0x4ccc <__epilogue_restores__>

00001d98 <_fpadd_parts>:
    1d98:	a0 e0       	ldi	r26, 0x00	; 0
    1d9a:	b0 e0       	ldi	r27, 0x00	; 0
    1d9c:	e2 ed       	ldi	r30, 0xD2	; 210
    1d9e:	fe e0       	ldi	r31, 0x0E	; 14
    1da0:	0c 94 4a 26 	jmp	0x4c94	; 0x4c94 <__prologue_saves__>
    1da4:	dc 01       	movw	r26, r24
    1da6:	2b 01       	movw	r4, r22
    1da8:	fa 01       	movw	r30, r20
    1daa:	9c 91       	ld	r25, X
    1dac:	92 30       	cpi	r25, 0x02	; 2
    1dae:	08 f4       	brcc	.+2      	; 0x1db2 <_fpadd_parts+0x1a>
    1db0:	39 c1       	rjmp	.+626    	; 0x2024 <_fpadd_parts+0x28c>
    1db2:	eb 01       	movw	r28, r22
    1db4:	88 81       	ld	r24, Y
    1db6:	82 30       	cpi	r24, 0x02	; 2
    1db8:	08 f4       	brcc	.+2      	; 0x1dbc <_fpadd_parts+0x24>
    1dba:	33 c1       	rjmp	.+614    	; 0x2022 <_fpadd_parts+0x28a>
    1dbc:	94 30       	cpi	r25, 0x04	; 4
    1dbe:	69 f4       	brne	.+26     	; 0x1dda <_fpadd_parts+0x42>
    1dc0:	84 30       	cpi	r24, 0x04	; 4
    1dc2:	09 f0       	breq	.+2      	; 0x1dc6 <_fpadd_parts+0x2e>
    1dc4:	2f c1       	rjmp	.+606    	; 0x2024 <_fpadd_parts+0x28c>
    1dc6:	11 96       	adiw	r26, 0x01	; 1
    1dc8:	9c 91       	ld	r25, X
    1dca:	11 97       	sbiw	r26, 0x01	; 1
    1dcc:	89 81       	ldd	r24, Y+1	; 0x01
    1dce:	98 17       	cp	r25, r24
    1dd0:	09 f4       	brne	.+2      	; 0x1dd4 <_fpadd_parts+0x3c>
    1dd2:	28 c1       	rjmp	.+592    	; 0x2024 <_fpadd_parts+0x28c>
    1dd4:	a2 e7       	ldi	r26, 0x72	; 114
    1dd6:	b0 e0       	ldi	r27, 0x00	; 0
    1dd8:	25 c1       	rjmp	.+586    	; 0x2024 <_fpadd_parts+0x28c>
    1dda:	84 30       	cpi	r24, 0x04	; 4
    1ddc:	09 f4       	brne	.+2      	; 0x1de0 <_fpadd_parts+0x48>
    1dde:	21 c1       	rjmp	.+578    	; 0x2022 <_fpadd_parts+0x28a>
    1de0:	82 30       	cpi	r24, 0x02	; 2
    1de2:	a9 f4       	brne	.+42     	; 0x1e0e <_fpadd_parts+0x76>
    1de4:	92 30       	cpi	r25, 0x02	; 2
    1de6:	09 f0       	breq	.+2      	; 0x1dea <_fpadd_parts+0x52>
    1de8:	1d c1       	rjmp	.+570    	; 0x2024 <_fpadd_parts+0x28c>
    1dea:	9a 01       	movw	r18, r20
    1dec:	ad 01       	movw	r20, r26
    1dee:	88 e0       	ldi	r24, 0x08	; 8
    1df0:	ea 01       	movw	r28, r20
    1df2:	09 90       	ld	r0, Y+
    1df4:	ae 01       	movw	r20, r28
    1df6:	e9 01       	movw	r28, r18
    1df8:	09 92       	st	Y+, r0
    1dfa:	9e 01       	movw	r18, r28
    1dfc:	81 50       	subi	r24, 0x01	; 1
    1dfe:	c1 f7       	brne	.-16     	; 0x1df0 <_fpadd_parts+0x58>
    1e00:	e2 01       	movw	r28, r4
    1e02:	89 81       	ldd	r24, Y+1	; 0x01
    1e04:	11 96       	adiw	r26, 0x01	; 1
    1e06:	9c 91       	ld	r25, X
    1e08:	89 23       	and	r24, r25
    1e0a:	81 83       	std	Z+1, r24	; 0x01
    1e0c:	08 c1       	rjmp	.+528    	; 0x201e <_fpadd_parts+0x286>
    1e0e:	92 30       	cpi	r25, 0x02	; 2
    1e10:	09 f4       	brne	.+2      	; 0x1e14 <_fpadd_parts+0x7c>
    1e12:	07 c1       	rjmp	.+526    	; 0x2022 <_fpadd_parts+0x28a>
    1e14:	12 96       	adiw	r26, 0x02	; 2
    1e16:	2d 90       	ld	r2, X+
    1e18:	3c 90       	ld	r3, X
    1e1a:	13 97       	sbiw	r26, 0x03	; 3
    1e1c:	eb 01       	movw	r28, r22
    1e1e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e20:	9b 81       	ldd	r25, Y+3	; 0x03
    1e22:	14 96       	adiw	r26, 0x04	; 4
    1e24:	ad 90       	ld	r10, X+
    1e26:	bd 90       	ld	r11, X+
    1e28:	cd 90       	ld	r12, X+
    1e2a:	dc 90       	ld	r13, X
    1e2c:	17 97       	sbiw	r26, 0x07	; 7
    1e2e:	ec 80       	ldd	r14, Y+4	; 0x04
    1e30:	fd 80       	ldd	r15, Y+5	; 0x05
    1e32:	0e 81       	ldd	r16, Y+6	; 0x06
    1e34:	1f 81       	ldd	r17, Y+7	; 0x07
    1e36:	91 01       	movw	r18, r2
    1e38:	28 1b       	sub	r18, r24
    1e3a:	39 0b       	sbc	r19, r25
    1e3c:	b9 01       	movw	r22, r18
    1e3e:	37 ff       	sbrs	r19, 7
    1e40:	04 c0       	rjmp	.+8      	; 0x1e4a <_fpadd_parts+0xb2>
    1e42:	66 27       	eor	r22, r22
    1e44:	77 27       	eor	r23, r23
    1e46:	62 1b       	sub	r22, r18
    1e48:	73 0b       	sbc	r23, r19
    1e4a:	60 32       	cpi	r22, 0x20	; 32
    1e4c:	71 05       	cpc	r23, r1
    1e4e:	0c f0       	brlt	.+2      	; 0x1e52 <_fpadd_parts+0xba>
    1e50:	61 c0       	rjmp	.+194    	; 0x1f14 <_fpadd_parts+0x17c>
    1e52:	12 16       	cp	r1, r18
    1e54:	13 06       	cpc	r1, r19
    1e56:	6c f5       	brge	.+90     	; 0x1eb2 <_fpadd_parts+0x11a>
    1e58:	37 01       	movw	r6, r14
    1e5a:	48 01       	movw	r8, r16
    1e5c:	06 2e       	mov	r0, r22
    1e5e:	04 c0       	rjmp	.+8      	; 0x1e68 <_fpadd_parts+0xd0>
    1e60:	96 94       	lsr	r9
    1e62:	87 94       	ror	r8
    1e64:	77 94       	ror	r7
    1e66:	67 94       	ror	r6
    1e68:	0a 94       	dec	r0
    1e6a:	d2 f7       	brpl	.-12     	; 0x1e60 <_fpadd_parts+0xc8>
    1e6c:	21 e0       	ldi	r18, 0x01	; 1
    1e6e:	30 e0       	ldi	r19, 0x00	; 0
    1e70:	40 e0       	ldi	r20, 0x00	; 0
    1e72:	50 e0       	ldi	r21, 0x00	; 0
    1e74:	04 c0       	rjmp	.+8      	; 0x1e7e <_fpadd_parts+0xe6>
    1e76:	22 0f       	add	r18, r18
    1e78:	33 1f       	adc	r19, r19
    1e7a:	44 1f       	adc	r20, r20
    1e7c:	55 1f       	adc	r21, r21
    1e7e:	6a 95       	dec	r22
    1e80:	d2 f7       	brpl	.-12     	; 0x1e76 <_fpadd_parts+0xde>
    1e82:	21 50       	subi	r18, 0x01	; 1
    1e84:	30 40       	sbci	r19, 0x00	; 0
    1e86:	40 40       	sbci	r20, 0x00	; 0
    1e88:	50 40       	sbci	r21, 0x00	; 0
    1e8a:	2e 21       	and	r18, r14
    1e8c:	3f 21       	and	r19, r15
    1e8e:	40 23       	and	r20, r16
    1e90:	51 23       	and	r21, r17
    1e92:	21 15       	cp	r18, r1
    1e94:	31 05       	cpc	r19, r1
    1e96:	41 05       	cpc	r20, r1
    1e98:	51 05       	cpc	r21, r1
    1e9a:	21 f0       	breq	.+8      	; 0x1ea4 <_fpadd_parts+0x10c>
    1e9c:	21 e0       	ldi	r18, 0x01	; 1
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	40 e0       	ldi	r20, 0x00	; 0
    1ea2:	50 e0       	ldi	r21, 0x00	; 0
    1ea4:	79 01       	movw	r14, r18
    1ea6:	8a 01       	movw	r16, r20
    1ea8:	e6 28       	or	r14, r6
    1eaa:	f7 28       	or	r15, r7
    1eac:	08 29       	or	r16, r8
    1eae:	19 29       	or	r17, r9
    1eb0:	3c c0       	rjmp	.+120    	; 0x1f2a <_fpadd_parts+0x192>
    1eb2:	23 2b       	or	r18, r19
    1eb4:	d1 f1       	breq	.+116    	; 0x1f2a <_fpadd_parts+0x192>
    1eb6:	26 0e       	add	r2, r22
    1eb8:	37 1e       	adc	r3, r23
    1eba:	35 01       	movw	r6, r10
    1ebc:	46 01       	movw	r8, r12
    1ebe:	06 2e       	mov	r0, r22
    1ec0:	04 c0       	rjmp	.+8      	; 0x1eca <_fpadd_parts+0x132>
    1ec2:	96 94       	lsr	r9
    1ec4:	87 94       	ror	r8
    1ec6:	77 94       	ror	r7
    1ec8:	67 94       	ror	r6
    1eca:	0a 94       	dec	r0
    1ecc:	d2 f7       	brpl	.-12     	; 0x1ec2 <_fpadd_parts+0x12a>
    1ece:	21 e0       	ldi	r18, 0x01	; 1
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	40 e0       	ldi	r20, 0x00	; 0
    1ed4:	50 e0       	ldi	r21, 0x00	; 0
    1ed6:	04 c0       	rjmp	.+8      	; 0x1ee0 <_fpadd_parts+0x148>
    1ed8:	22 0f       	add	r18, r18
    1eda:	33 1f       	adc	r19, r19
    1edc:	44 1f       	adc	r20, r20
    1ede:	55 1f       	adc	r21, r21
    1ee0:	6a 95       	dec	r22
    1ee2:	d2 f7       	brpl	.-12     	; 0x1ed8 <_fpadd_parts+0x140>
    1ee4:	21 50       	subi	r18, 0x01	; 1
    1ee6:	30 40       	sbci	r19, 0x00	; 0
    1ee8:	40 40       	sbci	r20, 0x00	; 0
    1eea:	50 40       	sbci	r21, 0x00	; 0
    1eec:	2a 21       	and	r18, r10
    1eee:	3b 21       	and	r19, r11
    1ef0:	4c 21       	and	r20, r12
    1ef2:	5d 21       	and	r21, r13
    1ef4:	21 15       	cp	r18, r1
    1ef6:	31 05       	cpc	r19, r1
    1ef8:	41 05       	cpc	r20, r1
    1efa:	51 05       	cpc	r21, r1
    1efc:	21 f0       	breq	.+8      	; 0x1f06 <_fpadd_parts+0x16e>
    1efe:	21 e0       	ldi	r18, 0x01	; 1
    1f00:	30 e0       	ldi	r19, 0x00	; 0
    1f02:	40 e0       	ldi	r20, 0x00	; 0
    1f04:	50 e0       	ldi	r21, 0x00	; 0
    1f06:	59 01       	movw	r10, r18
    1f08:	6a 01       	movw	r12, r20
    1f0a:	a6 28       	or	r10, r6
    1f0c:	b7 28       	or	r11, r7
    1f0e:	c8 28       	or	r12, r8
    1f10:	d9 28       	or	r13, r9
    1f12:	0b c0       	rjmp	.+22     	; 0x1f2a <_fpadd_parts+0x192>
    1f14:	82 15       	cp	r24, r2
    1f16:	93 05       	cpc	r25, r3
    1f18:	2c f0       	brlt	.+10     	; 0x1f24 <_fpadd_parts+0x18c>
    1f1a:	1c 01       	movw	r2, r24
    1f1c:	aa 24       	eor	r10, r10
    1f1e:	bb 24       	eor	r11, r11
    1f20:	65 01       	movw	r12, r10
    1f22:	03 c0       	rjmp	.+6      	; 0x1f2a <_fpadd_parts+0x192>
    1f24:	ee 24       	eor	r14, r14
    1f26:	ff 24       	eor	r15, r15
    1f28:	87 01       	movw	r16, r14
    1f2a:	11 96       	adiw	r26, 0x01	; 1
    1f2c:	9c 91       	ld	r25, X
    1f2e:	d2 01       	movw	r26, r4
    1f30:	11 96       	adiw	r26, 0x01	; 1
    1f32:	8c 91       	ld	r24, X
    1f34:	98 17       	cp	r25, r24
    1f36:	09 f4       	brne	.+2      	; 0x1f3a <_fpadd_parts+0x1a2>
    1f38:	45 c0       	rjmp	.+138    	; 0x1fc4 <_fpadd_parts+0x22c>
    1f3a:	99 23       	and	r25, r25
    1f3c:	39 f0       	breq	.+14     	; 0x1f4c <_fpadd_parts+0x1b4>
    1f3e:	a8 01       	movw	r20, r16
    1f40:	97 01       	movw	r18, r14
    1f42:	2a 19       	sub	r18, r10
    1f44:	3b 09       	sbc	r19, r11
    1f46:	4c 09       	sbc	r20, r12
    1f48:	5d 09       	sbc	r21, r13
    1f4a:	06 c0       	rjmp	.+12     	; 0x1f58 <_fpadd_parts+0x1c0>
    1f4c:	a6 01       	movw	r20, r12
    1f4e:	95 01       	movw	r18, r10
    1f50:	2e 19       	sub	r18, r14
    1f52:	3f 09       	sbc	r19, r15
    1f54:	40 0b       	sbc	r20, r16
    1f56:	51 0b       	sbc	r21, r17
    1f58:	57 fd       	sbrc	r21, 7
    1f5a:	08 c0       	rjmp	.+16     	; 0x1f6c <_fpadd_parts+0x1d4>
    1f5c:	11 82       	std	Z+1, r1	; 0x01
    1f5e:	33 82       	std	Z+3, r3	; 0x03
    1f60:	22 82       	std	Z+2, r2	; 0x02
    1f62:	24 83       	std	Z+4, r18	; 0x04
    1f64:	35 83       	std	Z+5, r19	; 0x05
    1f66:	46 83       	std	Z+6, r20	; 0x06
    1f68:	57 83       	std	Z+7, r21	; 0x07
    1f6a:	1d c0       	rjmp	.+58     	; 0x1fa6 <_fpadd_parts+0x20e>
    1f6c:	81 e0       	ldi	r24, 0x01	; 1
    1f6e:	81 83       	std	Z+1, r24	; 0x01
    1f70:	33 82       	std	Z+3, r3	; 0x03
    1f72:	22 82       	std	Z+2, r2	; 0x02
    1f74:	88 27       	eor	r24, r24
    1f76:	99 27       	eor	r25, r25
    1f78:	dc 01       	movw	r26, r24
    1f7a:	82 1b       	sub	r24, r18
    1f7c:	93 0b       	sbc	r25, r19
    1f7e:	a4 0b       	sbc	r26, r20
    1f80:	b5 0b       	sbc	r27, r21
    1f82:	84 83       	std	Z+4, r24	; 0x04
    1f84:	95 83       	std	Z+5, r25	; 0x05
    1f86:	a6 83       	std	Z+6, r26	; 0x06
    1f88:	b7 83       	std	Z+7, r27	; 0x07
    1f8a:	0d c0       	rjmp	.+26     	; 0x1fa6 <_fpadd_parts+0x20e>
    1f8c:	22 0f       	add	r18, r18
    1f8e:	33 1f       	adc	r19, r19
    1f90:	44 1f       	adc	r20, r20
    1f92:	55 1f       	adc	r21, r21
    1f94:	24 83       	std	Z+4, r18	; 0x04
    1f96:	35 83       	std	Z+5, r19	; 0x05
    1f98:	46 83       	std	Z+6, r20	; 0x06
    1f9a:	57 83       	std	Z+7, r21	; 0x07
    1f9c:	82 81       	ldd	r24, Z+2	; 0x02
    1f9e:	93 81       	ldd	r25, Z+3	; 0x03
    1fa0:	01 97       	sbiw	r24, 0x01	; 1
    1fa2:	93 83       	std	Z+3, r25	; 0x03
    1fa4:	82 83       	std	Z+2, r24	; 0x02
    1fa6:	24 81       	ldd	r18, Z+4	; 0x04
    1fa8:	35 81       	ldd	r19, Z+5	; 0x05
    1faa:	46 81       	ldd	r20, Z+6	; 0x06
    1fac:	57 81       	ldd	r21, Z+7	; 0x07
    1fae:	da 01       	movw	r26, r20
    1fb0:	c9 01       	movw	r24, r18
    1fb2:	01 97       	sbiw	r24, 0x01	; 1
    1fb4:	a1 09       	sbc	r26, r1
    1fb6:	b1 09       	sbc	r27, r1
    1fb8:	8f 5f       	subi	r24, 0xFF	; 255
    1fba:	9f 4f       	sbci	r25, 0xFF	; 255
    1fbc:	af 4f       	sbci	r26, 0xFF	; 255
    1fbe:	bf 43       	sbci	r27, 0x3F	; 63
    1fc0:	28 f3       	brcs	.-54     	; 0x1f8c <_fpadd_parts+0x1f4>
    1fc2:	0b c0       	rjmp	.+22     	; 0x1fda <_fpadd_parts+0x242>
    1fc4:	91 83       	std	Z+1, r25	; 0x01
    1fc6:	33 82       	std	Z+3, r3	; 0x03
    1fc8:	22 82       	std	Z+2, r2	; 0x02
    1fca:	ea 0c       	add	r14, r10
    1fcc:	fb 1c       	adc	r15, r11
    1fce:	0c 1d       	adc	r16, r12
    1fd0:	1d 1d       	adc	r17, r13
    1fd2:	e4 82       	std	Z+4, r14	; 0x04
    1fd4:	f5 82       	std	Z+5, r15	; 0x05
    1fd6:	06 83       	std	Z+6, r16	; 0x06
    1fd8:	17 83       	std	Z+7, r17	; 0x07
    1fda:	83 e0       	ldi	r24, 0x03	; 3
    1fdc:	80 83       	st	Z, r24
    1fde:	24 81       	ldd	r18, Z+4	; 0x04
    1fe0:	35 81       	ldd	r19, Z+5	; 0x05
    1fe2:	46 81       	ldd	r20, Z+6	; 0x06
    1fe4:	57 81       	ldd	r21, Z+7	; 0x07
    1fe6:	57 ff       	sbrs	r21, 7
    1fe8:	1a c0       	rjmp	.+52     	; 0x201e <_fpadd_parts+0x286>
    1fea:	c9 01       	movw	r24, r18
    1fec:	aa 27       	eor	r26, r26
    1fee:	97 fd       	sbrc	r25, 7
    1ff0:	a0 95       	com	r26
    1ff2:	ba 2f       	mov	r27, r26
    1ff4:	81 70       	andi	r24, 0x01	; 1
    1ff6:	90 70       	andi	r25, 0x00	; 0
    1ff8:	a0 70       	andi	r26, 0x00	; 0
    1ffa:	b0 70       	andi	r27, 0x00	; 0
    1ffc:	56 95       	lsr	r21
    1ffe:	47 95       	ror	r20
    2000:	37 95       	ror	r19
    2002:	27 95       	ror	r18
    2004:	82 2b       	or	r24, r18
    2006:	93 2b       	or	r25, r19
    2008:	a4 2b       	or	r26, r20
    200a:	b5 2b       	or	r27, r21
    200c:	84 83       	std	Z+4, r24	; 0x04
    200e:	95 83       	std	Z+5, r25	; 0x05
    2010:	a6 83       	std	Z+6, r26	; 0x06
    2012:	b7 83       	std	Z+7, r27	; 0x07
    2014:	82 81       	ldd	r24, Z+2	; 0x02
    2016:	93 81       	ldd	r25, Z+3	; 0x03
    2018:	01 96       	adiw	r24, 0x01	; 1
    201a:	93 83       	std	Z+3, r25	; 0x03
    201c:	82 83       	std	Z+2, r24	; 0x02
    201e:	df 01       	movw	r26, r30
    2020:	01 c0       	rjmp	.+2      	; 0x2024 <_fpadd_parts+0x28c>
    2022:	d2 01       	movw	r26, r4
    2024:	cd 01       	movw	r24, r26
    2026:	cd b7       	in	r28, 0x3d	; 61
    2028:	de b7       	in	r29, 0x3e	; 62
    202a:	e2 e1       	ldi	r30, 0x12	; 18
    202c:	0c 94 66 26 	jmp	0x4ccc	; 0x4ccc <__epilogue_restores__>

00002030 <__subsf3>:
    2030:	a0 e2       	ldi	r26, 0x20	; 32
    2032:	b0 e0       	ldi	r27, 0x00	; 0
    2034:	ee e1       	ldi	r30, 0x1E	; 30
    2036:	f0 e1       	ldi	r31, 0x10	; 16
    2038:	0c 94 56 26 	jmp	0x4cac	; 0x4cac <__prologue_saves__+0x18>
    203c:	69 83       	std	Y+1, r22	; 0x01
    203e:	7a 83       	std	Y+2, r23	; 0x02
    2040:	8b 83       	std	Y+3, r24	; 0x03
    2042:	9c 83       	std	Y+4, r25	; 0x04
    2044:	2d 83       	std	Y+5, r18	; 0x05
    2046:	3e 83       	std	Y+6, r19	; 0x06
    2048:	4f 83       	std	Y+7, r20	; 0x07
    204a:	58 87       	std	Y+8, r21	; 0x08
    204c:	e9 e0       	ldi	r30, 0x09	; 9
    204e:	ee 2e       	mov	r14, r30
    2050:	f1 2c       	mov	r15, r1
    2052:	ec 0e       	add	r14, r28
    2054:	fd 1e       	adc	r15, r29
    2056:	ce 01       	movw	r24, r28
    2058:	01 96       	adiw	r24, 0x01	; 1
    205a:	b7 01       	movw	r22, r14
    205c:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2060:	8e 01       	movw	r16, r28
    2062:	0f 5e       	subi	r16, 0xEF	; 239
    2064:	1f 4f       	sbci	r17, 0xFF	; 255
    2066:	ce 01       	movw	r24, r28
    2068:	05 96       	adiw	r24, 0x05	; 5
    206a:	b8 01       	movw	r22, r16
    206c:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2070:	8a 89       	ldd	r24, Y+18	; 0x12
    2072:	91 e0       	ldi	r25, 0x01	; 1
    2074:	89 27       	eor	r24, r25
    2076:	8a 8b       	std	Y+18, r24	; 0x12
    2078:	c7 01       	movw	r24, r14
    207a:	b8 01       	movw	r22, r16
    207c:	ae 01       	movw	r20, r28
    207e:	47 5e       	subi	r20, 0xE7	; 231
    2080:	5f 4f       	sbci	r21, 0xFF	; 255
    2082:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <_fpadd_parts>
    2086:	0e 94 00 13 	call	0x2600	; 0x2600 <__pack_f>
    208a:	a0 96       	adiw	r28, 0x20	; 32
    208c:	e6 e0       	ldi	r30, 0x06	; 6
    208e:	0c 94 72 26 	jmp	0x4ce4	; 0x4ce4 <__epilogue_restores__+0x18>

00002092 <__addsf3>:
    2092:	a0 e2       	ldi	r26, 0x20	; 32
    2094:	b0 e0       	ldi	r27, 0x00	; 0
    2096:	ef e4       	ldi	r30, 0x4F	; 79
    2098:	f0 e1       	ldi	r31, 0x10	; 16
    209a:	0c 94 56 26 	jmp	0x4cac	; 0x4cac <__prologue_saves__+0x18>
    209e:	69 83       	std	Y+1, r22	; 0x01
    20a0:	7a 83       	std	Y+2, r23	; 0x02
    20a2:	8b 83       	std	Y+3, r24	; 0x03
    20a4:	9c 83       	std	Y+4, r25	; 0x04
    20a6:	2d 83       	std	Y+5, r18	; 0x05
    20a8:	3e 83       	std	Y+6, r19	; 0x06
    20aa:	4f 83       	std	Y+7, r20	; 0x07
    20ac:	58 87       	std	Y+8, r21	; 0x08
    20ae:	f9 e0       	ldi	r31, 0x09	; 9
    20b0:	ef 2e       	mov	r14, r31
    20b2:	f1 2c       	mov	r15, r1
    20b4:	ec 0e       	add	r14, r28
    20b6:	fd 1e       	adc	r15, r29
    20b8:	ce 01       	movw	r24, r28
    20ba:	01 96       	adiw	r24, 0x01	; 1
    20bc:	b7 01       	movw	r22, r14
    20be:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    20c2:	8e 01       	movw	r16, r28
    20c4:	0f 5e       	subi	r16, 0xEF	; 239
    20c6:	1f 4f       	sbci	r17, 0xFF	; 255
    20c8:	ce 01       	movw	r24, r28
    20ca:	05 96       	adiw	r24, 0x05	; 5
    20cc:	b8 01       	movw	r22, r16
    20ce:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    20d2:	c7 01       	movw	r24, r14
    20d4:	b8 01       	movw	r22, r16
    20d6:	ae 01       	movw	r20, r28
    20d8:	47 5e       	subi	r20, 0xE7	; 231
    20da:	5f 4f       	sbci	r21, 0xFF	; 255
    20dc:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <_fpadd_parts>
    20e0:	0e 94 00 13 	call	0x2600	; 0x2600 <__pack_f>
    20e4:	a0 96       	adiw	r28, 0x20	; 32
    20e6:	e6 e0       	ldi	r30, 0x06	; 6
    20e8:	0c 94 72 26 	jmp	0x4ce4	; 0x4ce4 <__epilogue_restores__+0x18>

000020ec <__mulsf3>:
    20ec:	a0 e2       	ldi	r26, 0x20	; 32
    20ee:	b0 e0       	ldi	r27, 0x00	; 0
    20f0:	ec e7       	ldi	r30, 0x7C	; 124
    20f2:	f0 e1       	ldi	r31, 0x10	; 16
    20f4:	0c 94 4a 26 	jmp	0x4c94	; 0x4c94 <__prologue_saves__>
    20f8:	69 83       	std	Y+1, r22	; 0x01
    20fa:	7a 83       	std	Y+2, r23	; 0x02
    20fc:	8b 83       	std	Y+3, r24	; 0x03
    20fe:	9c 83       	std	Y+4, r25	; 0x04
    2100:	2d 83       	std	Y+5, r18	; 0x05
    2102:	3e 83       	std	Y+6, r19	; 0x06
    2104:	4f 83       	std	Y+7, r20	; 0x07
    2106:	58 87       	std	Y+8, r21	; 0x08
    2108:	ce 01       	movw	r24, r28
    210a:	01 96       	adiw	r24, 0x01	; 1
    210c:	be 01       	movw	r22, r28
    210e:	67 5f       	subi	r22, 0xF7	; 247
    2110:	7f 4f       	sbci	r23, 0xFF	; 255
    2112:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2116:	ce 01       	movw	r24, r28
    2118:	05 96       	adiw	r24, 0x05	; 5
    211a:	be 01       	movw	r22, r28
    211c:	6f 5e       	subi	r22, 0xEF	; 239
    211e:	7f 4f       	sbci	r23, 0xFF	; 255
    2120:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2124:	99 85       	ldd	r25, Y+9	; 0x09
    2126:	92 30       	cpi	r25, 0x02	; 2
    2128:	88 f0       	brcs	.+34     	; 0x214c <__mulsf3+0x60>
    212a:	89 89       	ldd	r24, Y+17	; 0x11
    212c:	82 30       	cpi	r24, 0x02	; 2
    212e:	c8 f0       	brcs	.+50     	; 0x2162 <__mulsf3+0x76>
    2130:	94 30       	cpi	r25, 0x04	; 4
    2132:	19 f4       	brne	.+6      	; 0x213a <__mulsf3+0x4e>
    2134:	82 30       	cpi	r24, 0x02	; 2
    2136:	51 f4       	brne	.+20     	; 0x214c <__mulsf3+0x60>
    2138:	04 c0       	rjmp	.+8      	; 0x2142 <__mulsf3+0x56>
    213a:	84 30       	cpi	r24, 0x04	; 4
    213c:	29 f4       	brne	.+10     	; 0x2148 <__mulsf3+0x5c>
    213e:	92 30       	cpi	r25, 0x02	; 2
    2140:	81 f4       	brne	.+32     	; 0x2162 <__mulsf3+0x76>
    2142:	82 e7       	ldi	r24, 0x72	; 114
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	c6 c0       	rjmp	.+396    	; 0x22d4 <__mulsf3+0x1e8>
    2148:	92 30       	cpi	r25, 0x02	; 2
    214a:	49 f4       	brne	.+18     	; 0x215e <__mulsf3+0x72>
    214c:	20 e0       	ldi	r18, 0x00	; 0
    214e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2150:	8a 89       	ldd	r24, Y+18	; 0x12
    2152:	98 13       	cpse	r25, r24
    2154:	21 e0       	ldi	r18, 0x01	; 1
    2156:	2a 87       	std	Y+10, r18	; 0x0a
    2158:	ce 01       	movw	r24, r28
    215a:	09 96       	adiw	r24, 0x09	; 9
    215c:	bb c0       	rjmp	.+374    	; 0x22d4 <__mulsf3+0x1e8>
    215e:	82 30       	cpi	r24, 0x02	; 2
    2160:	49 f4       	brne	.+18     	; 0x2174 <__mulsf3+0x88>
    2162:	20 e0       	ldi	r18, 0x00	; 0
    2164:	9a 85       	ldd	r25, Y+10	; 0x0a
    2166:	8a 89       	ldd	r24, Y+18	; 0x12
    2168:	98 13       	cpse	r25, r24
    216a:	21 e0       	ldi	r18, 0x01	; 1
    216c:	2a 8b       	std	Y+18, r18	; 0x12
    216e:	ce 01       	movw	r24, r28
    2170:	41 96       	adiw	r24, 0x11	; 17
    2172:	b0 c0       	rjmp	.+352    	; 0x22d4 <__mulsf3+0x1e8>
    2174:	2d 84       	ldd	r2, Y+13	; 0x0d
    2176:	3e 84       	ldd	r3, Y+14	; 0x0e
    2178:	4f 84       	ldd	r4, Y+15	; 0x0f
    217a:	58 88       	ldd	r5, Y+16	; 0x10
    217c:	6d 88       	ldd	r6, Y+21	; 0x15
    217e:	7e 88       	ldd	r7, Y+22	; 0x16
    2180:	8f 88       	ldd	r8, Y+23	; 0x17
    2182:	98 8c       	ldd	r9, Y+24	; 0x18
    2184:	ee 24       	eor	r14, r14
    2186:	ff 24       	eor	r15, r15
    2188:	87 01       	movw	r16, r14
    218a:	aa 24       	eor	r10, r10
    218c:	bb 24       	eor	r11, r11
    218e:	65 01       	movw	r12, r10
    2190:	40 e0       	ldi	r20, 0x00	; 0
    2192:	50 e0       	ldi	r21, 0x00	; 0
    2194:	60 e0       	ldi	r22, 0x00	; 0
    2196:	70 e0       	ldi	r23, 0x00	; 0
    2198:	e0 e0       	ldi	r30, 0x00	; 0
    219a:	f0 e0       	ldi	r31, 0x00	; 0
    219c:	c1 01       	movw	r24, r2
    219e:	81 70       	andi	r24, 0x01	; 1
    21a0:	90 70       	andi	r25, 0x00	; 0
    21a2:	89 2b       	or	r24, r25
    21a4:	e9 f0       	breq	.+58     	; 0x21e0 <__mulsf3+0xf4>
    21a6:	e6 0c       	add	r14, r6
    21a8:	f7 1c       	adc	r15, r7
    21aa:	08 1d       	adc	r16, r8
    21ac:	19 1d       	adc	r17, r9
    21ae:	9a 01       	movw	r18, r20
    21b0:	ab 01       	movw	r20, r22
    21b2:	2a 0d       	add	r18, r10
    21b4:	3b 1d       	adc	r19, r11
    21b6:	4c 1d       	adc	r20, r12
    21b8:	5d 1d       	adc	r21, r13
    21ba:	80 e0       	ldi	r24, 0x00	; 0
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	a0 e0       	ldi	r26, 0x00	; 0
    21c0:	b0 e0       	ldi	r27, 0x00	; 0
    21c2:	e6 14       	cp	r14, r6
    21c4:	f7 04       	cpc	r15, r7
    21c6:	08 05       	cpc	r16, r8
    21c8:	19 05       	cpc	r17, r9
    21ca:	20 f4       	brcc	.+8      	; 0x21d4 <__mulsf3+0xe8>
    21cc:	81 e0       	ldi	r24, 0x01	; 1
    21ce:	90 e0       	ldi	r25, 0x00	; 0
    21d0:	a0 e0       	ldi	r26, 0x00	; 0
    21d2:	b0 e0       	ldi	r27, 0x00	; 0
    21d4:	ba 01       	movw	r22, r20
    21d6:	a9 01       	movw	r20, r18
    21d8:	48 0f       	add	r20, r24
    21da:	59 1f       	adc	r21, r25
    21dc:	6a 1f       	adc	r22, r26
    21de:	7b 1f       	adc	r23, r27
    21e0:	aa 0c       	add	r10, r10
    21e2:	bb 1c       	adc	r11, r11
    21e4:	cc 1c       	adc	r12, r12
    21e6:	dd 1c       	adc	r13, r13
    21e8:	97 fe       	sbrs	r9, 7
    21ea:	08 c0       	rjmp	.+16     	; 0x21fc <__mulsf3+0x110>
    21ec:	81 e0       	ldi	r24, 0x01	; 1
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	a0 e0       	ldi	r26, 0x00	; 0
    21f2:	b0 e0       	ldi	r27, 0x00	; 0
    21f4:	a8 2a       	or	r10, r24
    21f6:	b9 2a       	or	r11, r25
    21f8:	ca 2a       	or	r12, r26
    21fa:	db 2a       	or	r13, r27
    21fc:	31 96       	adiw	r30, 0x01	; 1
    21fe:	e0 32       	cpi	r30, 0x20	; 32
    2200:	f1 05       	cpc	r31, r1
    2202:	49 f0       	breq	.+18     	; 0x2216 <__mulsf3+0x12a>
    2204:	66 0c       	add	r6, r6
    2206:	77 1c       	adc	r7, r7
    2208:	88 1c       	adc	r8, r8
    220a:	99 1c       	adc	r9, r9
    220c:	56 94       	lsr	r5
    220e:	47 94       	ror	r4
    2210:	37 94       	ror	r3
    2212:	27 94       	ror	r2
    2214:	c3 cf       	rjmp	.-122    	; 0x219c <__mulsf3+0xb0>
    2216:	fa 85       	ldd	r31, Y+10	; 0x0a
    2218:	ea 89       	ldd	r30, Y+18	; 0x12
    221a:	2b 89       	ldd	r18, Y+19	; 0x13
    221c:	3c 89       	ldd	r19, Y+20	; 0x14
    221e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2220:	9c 85       	ldd	r25, Y+12	; 0x0c
    2222:	28 0f       	add	r18, r24
    2224:	39 1f       	adc	r19, r25
    2226:	2e 5f       	subi	r18, 0xFE	; 254
    2228:	3f 4f       	sbci	r19, 0xFF	; 255
    222a:	17 c0       	rjmp	.+46     	; 0x225a <__mulsf3+0x16e>
    222c:	ca 01       	movw	r24, r20
    222e:	81 70       	andi	r24, 0x01	; 1
    2230:	90 70       	andi	r25, 0x00	; 0
    2232:	89 2b       	or	r24, r25
    2234:	61 f0       	breq	.+24     	; 0x224e <__mulsf3+0x162>
    2236:	16 95       	lsr	r17
    2238:	07 95       	ror	r16
    223a:	f7 94       	ror	r15
    223c:	e7 94       	ror	r14
    223e:	80 e0       	ldi	r24, 0x00	; 0
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	a0 e0       	ldi	r26, 0x00	; 0
    2244:	b0 e8       	ldi	r27, 0x80	; 128
    2246:	e8 2a       	or	r14, r24
    2248:	f9 2a       	or	r15, r25
    224a:	0a 2b       	or	r16, r26
    224c:	1b 2b       	or	r17, r27
    224e:	76 95       	lsr	r23
    2250:	67 95       	ror	r22
    2252:	57 95       	ror	r21
    2254:	47 95       	ror	r20
    2256:	2f 5f       	subi	r18, 0xFF	; 255
    2258:	3f 4f       	sbci	r19, 0xFF	; 255
    225a:	77 fd       	sbrc	r23, 7
    225c:	e7 cf       	rjmp	.-50     	; 0x222c <__mulsf3+0x140>
    225e:	0c c0       	rjmp	.+24     	; 0x2278 <__mulsf3+0x18c>
    2260:	44 0f       	add	r20, r20
    2262:	55 1f       	adc	r21, r21
    2264:	66 1f       	adc	r22, r22
    2266:	77 1f       	adc	r23, r23
    2268:	17 fd       	sbrc	r17, 7
    226a:	41 60       	ori	r20, 0x01	; 1
    226c:	ee 0c       	add	r14, r14
    226e:	ff 1c       	adc	r15, r15
    2270:	00 1f       	adc	r16, r16
    2272:	11 1f       	adc	r17, r17
    2274:	21 50       	subi	r18, 0x01	; 1
    2276:	30 40       	sbci	r19, 0x00	; 0
    2278:	40 30       	cpi	r20, 0x00	; 0
    227a:	90 e0       	ldi	r25, 0x00	; 0
    227c:	59 07       	cpc	r21, r25
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	69 07       	cpc	r22, r25
    2282:	90 e4       	ldi	r25, 0x40	; 64
    2284:	79 07       	cpc	r23, r25
    2286:	60 f3       	brcs	.-40     	; 0x2260 <__mulsf3+0x174>
    2288:	2b 8f       	std	Y+27, r18	; 0x1b
    228a:	3c 8f       	std	Y+28, r19	; 0x1c
    228c:	db 01       	movw	r26, r22
    228e:	ca 01       	movw	r24, r20
    2290:	8f 77       	andi	r24, 0x7F	; 127
    2292:	90 70       	andi	r25, 0x00	; 0
    2294:	a0 70       	andi	r26, 0x00	; 0
    2296:	b0 70       	andi	r27, 0x00	; 0
    2298:	80 34       	cpi	r24, 0x40	; 64
    229a:	91 05       	cpc	r25, r1
    229c:	a1 05       	cpc	r26, r1
    229e:	b1 05       	cpc	r27, r1
    22a0:	61 f4       	brne	.+24     	; 0x22ba <__mulsf3+0x1ce>
    22a2:	47 fd       	sbrc	r20, 7
    22a4:	0a c0       	rjmp	.+20     	; 0x22ba <__mulsf3+0x1ce>
    22a6:	e1 14       	cp	r14, r1
    22a8:	f1 04       	cpc	r15, r1
    22aa:	01 05       	cpc	r16, r1
    22ac:	11 05       	cpc	r17, r1
    22ae:	29 f0       	breq	.+10     	; 0x22ba <__mulsf3+0x1ce>
    22b0:	40 5c       	subi	r20, 0xC0	; 192
    22b2:	5f 4f       	sbci	r21, 0xFF	; 255
    22b4:	6f 4f       	sbci	r22, 0xFF	; 255
    22b6:	7f 4f       	sbci	r23, 0xFF	; 255
    22b8:	40 78       	andi	r20, 0x80	; 128
    22ba:	1a 8e       	std	Y+26, r1	; 0x1a
    22bc:	fe 17       	cp	r31, r30
    22be:	11 f0       	breq	.+4      	; 0x22c4 <__mulsf3+0x1d8>
    22c0:	81 e0       	ldi	r24, 0x01	; 1
    22c2:	8a 8f       	std	Y+26, r24	; 0x1a
    22c4:	4d 8f       	std	Y+29, r20	; 0x1d
    22c6:	5e 8f       	std	Y+30, r21	; 0x1e
    22c8:	6f 8f       	std	Y+31, r22	; 0x1f
    22ca:	78 a3       	std	Y+32, r23	; 0x20
    22cc:	83 e0       	ldi	r24, 0x03	; 3
    22ce:	89 8f       	std	Y+25, r24	; 0x19
    22d0:	ce 01       	movw	r24, r28
    22d2:	49 96       	adiw	r24, 0x19	; 25
    22d4:	0e 94 00 13 	call	0x2600	; 0x2600 <__pack_f>
    22d8:	a0 96       	adiw	r28, 0x20	; 32
    22da:	e2 e1       	ldi	r30, 0x12	; 18
    22dc:	0c 94 66 26 	jmp	0x4ccc	; 0x4ccc <__epilogue_restores__>

000022e0 <__divsf3>:
    22e0:	a8 e1       	ldi	r26, 0x18	; 24
    22e2:	b0 e0       	ldi	r27, 0x00	; 0
    22e4:	e6 e7       	ldi	r30, 0x76	; 118
    22e6:	f1 e1       	ldi	r31, 0x11	; 17
    22e8:	0c 94 52 26 	jmp	0x4ca4	; 0x4ca4 <__prologue_saves__+0x10>
    22ec:	69 83       	std	Y+1, r22	; 0x01
    22ee:	7a 83       	std	Y+2, r23	; 0x02
    22f0:	8b 83       	std	Y+3, r24	; 0x03
    22f2:	9c 83       	std	Y+4, r25	; 0x04
    22f4:	2d 83       	std	Y+5, r18	; 0x05
    22f6:	3e 83       	std	Y+6, r19	; 0x06
    22f8:	4f 83       	std	Y+7, r20	; 0x07
    22fa:	58 87       	std	Y+8, r21	; 0x08
    22fc:	b9 e0       	ldi	r27, 0x09	; 9
    22fe:	eb 2e       	mov	r14, r27
    2300:	f1 2c       	mov	r15, r1
    2302:	ec 0e       	add	r14, r28
    2304:	fd 1e       	adc	r15, r29
    2306:	ce 01       	movw	r24, r28
    2308:	01 96       	adiw	r24, 0x01	; 1
    230a:	b7 01       	movw	r22, r14
    230c:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2310:	8e 01       	movw	r16, r28
    2312:	0f 5e       	subi	r16, 0xEF	; 239
    2314:	1f 4f       	sbci	r17, 0xFF	; 255
    2316:	ce 01       	movw	r24, r28
    2318:	05 96       	adiw	r24, 0x05	; 5
    231a:	b8 01       	movw	r22, r16
    231c:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2320:	29 85       	ldd	r18, Y+9	; 0x09
    2322:	22 30       	cpi	r18, 0x02	; 2
    2324:	08 f4       	brcc	.+2      	; 0x2328 <__divsf3+0x48>
    2326:	7e c0       	rjmp	.+252    	; 0x2424 <__divsf3+0x144>
    2328:	39 89       	ldd	r19, Y+17	; 0x11
    232a:	32 30       	cpi	r19, 0x02	; 2
    232c:	10 f4       	brcc	.+4      	; 0x2332 <__divsf3+0x52>
    232e:	b8 01       	movw	r22, r16
    2330:	7c c0       	rjmp	.+248    	; 0x242a <__divsf3+0x14a>
    2332:	8a 85       	ldd	r24, Y+10	; 0x0a
    2334:	9a 89       	ldd	r25, Y+18	; 0x12
    2336:	89 27       	eor	r24, r25
    2338:	8a 87       	std	Y+10, r24	; 0x0a
    233a:	24 30       	cpi	r18, 0x04	; 4
    233c:	11 f0       	breq	.+4      	; 0x2342 <__divsf3+0x62>
    233e:	22 30       	cpi	r18, 0x02	; 2
    2340:	31 f4       	brne	.+12     	; 0x234e <__divsf3+0x6e>
    2342:	23 17       	cp	r18, r19
    2344:	09 f0       	breq	.+2      	; 0x2348 <__divsf3+0x68>
    2346:	6e c0       	rjmp	.+220    	; 0x2424 <__divsf3+0x144>
    2348:	62 e7       	ldi	r22, 0x72	; 114
    234a:	70 e0       	ldi	r23, 0x00	; 0
    234c:	6e c0       	rjmp	.+220    	; 0x242a <__divsf3+0x14a>
    234e:	34 30       	cpi	r19, 0x04	; 4
    2350:	39 f4       	brne	.+14     	; 0x2360 <__divsf3+0x80>
    2352:	1d 86       	std	Y+13, r1	; 0x0d
    2354:	1e 86       	std	Y+14, r1	; 0x0e
    2356:	1f 86       	std	Y+15, r1	; 0x0f
    2358:	18 8a       	std	Y+16, r1	; 0x10
    235a:	1c 86       	std	Y+12, r1	; 0x0c
    235c:	1b 86       	std	Y+11, r1	; 0x0b
    235e:	04 c0       	rjmp	.+8      	; 0x2368 <__divsf3+0x88>
    2360:	32 30       	cpi	r19, 0x02	; 2
    2362:	21 f4       	brne	.+8      	; 0x236c <__divsf3+0x8c>
    2364:	84 e0       	ldi	r24, 0x04	; 4
    2366:	89 87       	std	Y+9, r24	; 0x09
    2368:	b7 01       	movw	r22, r14
    236a:	5f c0       	rjmp	.+190    	; 0x242a <__divsf3+0x14a>
    236c:	2b 85       	ldd	r18, Y+11	; 0x0b
    236e:	3c 85       	ldd	r19, Y+12	; 0x0c
    2370:	8b 89       	ldd	r24, Y+19	; 0x13
    2372:	9c 89       	ldd	r25, Y+20	; 0x14
    2374:	28 1b       	sub	r18, r24
    2376:	39 0b       	sbc	r19, r25
    2378:	3c 87       	std	Y+12, r19	; 0x0c
    237a:	2b 87       	std	Y+11, r18	; 0x0b
    237c:	ed 84       	ldd	r14, Y+13	; 0x0d
    237e:	fe 84       	ldd	r15, Y+14	; 0x0e
    2380:	0f 85       	ldd	r16, Y+15	; 0x0f
    2382:	18 89       	ldd	r17, Y+16	; 0x10
    2384:	ad 88       	ldd	r10, Y+21	; 0x15
    2386:	be 88       	ldd	r11, Y+22	; 0x16
    2388:	cf 88       	ldd	r12, Y+23	; 0x17
    238a:	d8 8c       	ldd	r13, Y+24	; 0x18
    238c:	ea 14       	cp	r14, r10
    238e:	fb 04       	cpc	r15, r11
    2390:	0c 05       	cpc	r16, r12
    2392:	1d 05       	cpc	r17, r13
    2394:	40 f4       	brcc	.+16     	; 0x23a6 <__divsf3+0xc6>
    2396:	ee 0c       	add	r14, r14
    2398:	ff 1c       	adc	r15, r15
    239a:	00 1f       	adc	r16, r16
    239c:	11 1f       	adc	r17, r17
    239e:	21 50       	subi	r18, 0x01	; 1
    23a0:	30 40       	sbci	r19, 0x00	; 0
    23a2:	3c 87       	std	Y+12, r19	; 0x0c
    23a4:	2b 87       	std	Y+11, r18	; 0x0b
    23a6:	20 e0       	ldi	r18, 0x00	; 0
    23a8:	30 e0       	ldi	r19, 0x00	; 0
    23aa:	40 e0       	ldi	r20, 0x00	; 0
    23ac:	50 e0       	ldi	r21, 0x00	; 0
    23ae:	80 e0       	ldi	r24, 0x00	; 0
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	a0 e0       	ldi	r26, 0x00	; 0
    23b4:	b0 e4       	ldi	r27, 0x40	; 64
    23b6:	60 e0       	ldi	r22, 0x00	; 0
    23b8:	70 e0       	ldi	r23, 0x00	; 0
    23ba:	ea 14       	cp	r14, r10
    23bc:	fb 04       	cpc	r15, r11
    23be:	0c 05       	cpc	r16, r12
    23c0:	1d 05       	cpc	r17, r13
    23c2:	40 f0       	brcs	.+16     	; 0x23d4 <__divsf3+0xf4>
    23c4:	28 2b       	or	r18, r24
    23c6:	39 2b       	or	r19, r25
    23c8:	4a 2b       	or	r20, r26
    23ca:	5b 2b       	or	r21, r27
    23cc:	ea 18       	sub	r14, r10
    23ce:	fb 08       	sbc	r15, r11
    23d0:	0c 09       	sbc	r16, r12
    23d2:	1d 09       	sbc	r17, r13
    23d4:	b6 95       	lsr	r27
    23d6:	a7 95       	ror	r26
    23d8:	97 95       	ror	r25
    23da:	87 95       	ror	r24
    23dc:	ee 0c       	add	r14, r14
    23de:	ff 1c       	adc	r15, r15
    23e0:	00 1f       	adc	r16, r16
    23e2:	11 1f       	adc	r17, r17
    23e4:	6f 5f       	subi	r22, 0xFF	; 255
    23e6:	7f 4f       	sbci	r23, 0xFF	; 255
    23e8:	6f 31       	cpi	r22, 0x1F	; 31
    23ea:	71 05       	cpc	r23, r1
    23ec:	31 f7       	brne	.-52     	; 0x23ba <__divsf3+0xda>
    23ee:	da 01       	movw	r26, r20
    23f0:	c9 01       	movw	r24, r18
    23f2:	8f 77       	andi	r24, 0x7F	; 127
    23f4:	90 70       	andi	r25, 0x00	; 0
    23f6:	a0 70       	andi	r26, 0x00	; 0
    23f8:	b0 70       	andi	r27, 0x00	; 0
    23fa:	80 34       	cpi	r24, 0x40	; 64
    23fc:	91 05       	cpc	r25, r1
    23fe:	a1 05       	cpc	r26, r1
    2400:	b1 05       	cpc	r27, r1
    2402:	61 f4       	brne	.+24     	; 0x241c <__divsf3+0x13c>
    2404:	27 fd       	sbrc	r18, 7
    2406:	0a c0       	rjmp	.+20     	; 0x241c <__divsf3+0x13c>
    2408:	e1 14       	cp	r14, r1
    240a:	f1 04       	cpc	r15, r1
    240c:	01 05       	cpc	r16, r1
    240e:	11 05       	cpc	r17, r1
    2410:	29 f0       	breq	.+10     	; 0x241c <__divsf3+0x13c>
    2412:	20 5c       	subi	r18, 0xC0	; 192
    2414:	3f 4f       	sbci	r19, 0xFF	; 255
    2416:	4f 4f       	sbci	r20, 0xFF	; 255
    2418:	5f 4f       	sbci	r21, 0xFF	; 255
    241a:	20 78       	andi	r18, 0x80	; 128
    241c:	2d 87       	std	Y+13, r18	; 0x0d
    241e:	3e 87       	std	Y+14, r19	; 0x0e
    2420:	4f 87       	std	Y+15, r20	; 0x0f
    2422:	58 8b       	std	Y+16, r21	; 0x10
    2424:	be 01       	movw	r22, r28
    2426:	67 5f       	subi	r22, 0xF7	; 247
    2428:	7f 4f       	sbci	r23, 0xFF	; 255
    242a:	cb 01       	movw	r24, r22
    242c:	0e 94 00 13 	call	0x2600	; 0x2600 <__pack_f>
    2430:	68 96       	adiw	r28, 0x18	; 24
    2432:	ea e0       	ldi	r30, 0x0A	; 10
    2434:	0c 94 6e 26 	jmp	0x4cdc	; 0x4cdc <__epilogue_restores__+0x10>

00002438 <__gtsf2>:
    2438:	a8 e1       	ldi	r26, 0x18	; 24
    243a:	b0 e0       	ldi	r27, 0x00	; 0
    243c:	e2 e2       	ldi	r30, 0x22	; 34
    243e:	f2 e1       	ldi	r31, 0x12	; 18
    2440:	0c 94 56 26 	jmp	0x4cac	; 0x4cac <__prologue_saves__+0x18>
    2444:	69 83       	std	Y+1, r22	; 0x01
    2446:	7a 83       	std	Y+2, r23	; 0x02
    2448:	8b 83       	std	Y+3, r24	; 0x03
    244a:	9c 83       	std	Y+4, r25	; 0x04
    244c:	2d 83       	std	Y+5, r18	; 0x05
    244e:	3e 83       	std	Y+6, r19	; 0x06
    2450:	4f 83       	std	Y+7, r20	; 0x07
    2452:	58 87       	std	Y+8, r21	; 0x08
    2454:	89 e0       	ldi	r24, 0x09	; 9
    2456:	e8 2e       	mov	r14, r24
    2458:	f1 2c       	mov	r15, r1
    245a:	ec 0e       	add	r14, r28
    245c:	fd 1e       	adc	r15, r29
    245e:	ce 01       	movw	r24, r28
    2460:	01 96       	adiw	r24, 0x01	; 1
    2462:	b7 01       	movw	r22, r14
    2464:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2468:	8e 01       	movw	r16, r28
    246a:	0f 5e       	subi	r16, 0xEF	; 239
    246c:	1f 4f       	sbci	r17, 0xFF	; 255
    246e:	ce 01       	movw	r24, r28
    2470:	05 96       	adiw	r24, 0x05	; 5
    2472:	b8 01       	movw	r22, r16
    2474:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2478:	89 85       	ldd	r24, Y+9	; 0x09
    247a:	82 30       	cpi	r24, 0x02	; 2
    247c:	40 f0       	brcs	.+16     	; 0x248e <__gtsf2+0x56>
    247e:	89 89       	ldd	r24, Y+17	; 0x11
    2480:	82 30       	cpi	r24, 0x02	; 2
    2482:	28 f0       	brcs	.+10     	; 0x248e <__gtsf2+0x56>
    2484:	c7 01       	movw	r24, r14
    2486:	b8 01       	movw	r22, r16
    2488:	0e 94 4d 14 	call	0x289a	; 0x289a <__fpcmp_parts_f>
    248c:	01 c0       	rjmp	.+2      	; 0x2490 <__gtsf2+0x58>
    248e:	8f ef       	ldi	r24, 0xFF	; 255
    2490:	68 96       	adiw	r28, 0x18	; 24
    2492:	e6 e0       	ldi	r30, 0x06	; 6
    2494:	0c 94 72 26 	jmp	0x4ce4	; 0x4ce4 <__epilogue_restores__+0x18>

00002498 <__gesf2>:
    2498:	a8 e1       	ldi	r26, 0x18	; 24
    249a:	b0 e0       	ldi	r27, 0x00	; 0
    249c:	e2 e5       	ldi	r30, 0x52	; 82
    249e:	f2 e1       	ldi	r31, 0x12	; 18
    24a0:	0c 94 56 26 	jmp	0x4cac	; 0x4cac <__prologue_saves__+0x18>
    24a4:	69 83       	std	Y+1, r22	; 0x01
    24a6:	7a 83       	std	Y+2, r23	; 0x02
    24a8:	8b 83       	std	Y+3, r24	; 0x03
    24aa:	9c 83       	std	Y+4, r25	; 0x04
    24ac:	2d 83       	std	Y+5, r18	; 0x05
    24ae:	3e 83       	std	Y+6, r19	; 0x06
    24b0:	4f 83       	std	Y+7, r20	; 0x07
    24b2:	58 87       	std	Y+8, r21	; 0x08
    24b4:	89 e0       	ldi	r24, 0x09	; 9
    24b6:	e8 2e       	mov	r14, r24
    24b8:	f1 2c       	mov	r15, r1
    24ba:	ec 0e       	add	r14, r28
    24bc:	fd 1e       	adc	r15, r29
    24be:	ce 01       	movw	r24, r28
    24c0:	01 96       	adiw	r24, 0x01	; 1
    24c2:	b7 01       	movw	r22, r14
    24c4:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    24c8:	8e 01       	movw	r16, r28
    24ca:	0f 5e       	subi	r16, 0xEF	; 239
    24cc:	1f 4f       	sbci	r17, 0xFF	; 255
    24ce:	ce 01       	movw	r24, r28
    24d0:	05 96       	adiw	r24, 0x05	; 5
    24d2:	b8 01       	movw	r22, r16
    24d4:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    24d8:	89 85       	ldd	r24, Y+9	; 0x09
    24da:	82 30       	cpi	r24, 0x02	; 2
    24dc:	40 f0       	brcs	.+16     	; 0x24ee <__gesf2+0x56>
    24de:	89 89       	ldd	r24, Y+17	; 0x11
    24e0:	82 30       	cpi	r24, 0x02	; 2
    24e2:	28 f0       	brcs	.+10     	; 0x24ee <__gesf2+0x56>
    24e4:	c7 01       	movw	r24, r14
    24e6:	b8 01       	movw	r22, r16
    24e8:	0e 94 4d 14 	call	0x289a	; 0x289a <__fpcmp_parts_f>
    24ec:	01 c0       	rjmp	.+2      	; 0x24f0 <__gesf2+0x58>
    24ee:	8f ef       	ldi	r24, 0xFF	; 255
    24f0:	68 96       	adiw	r28, 0x18	; 24
    24f2:	e6 e0       	ldi	r30, 0x06	; 6
    24f4:	0c 94 72 26 	jmp	0x4ce4	; 0x4ce4 <__epilogue_restores__+0x18>

000024f8 <__ltsf2>:
    24f8:	a8 e1       	ldi	r26, 0x18	; 24
    24fa:	b0 e0       	ldi	r27, 0x00	; 0
    24fc:	e2 e8       	ldi	r30, 0x82	; 130
    24fe:	f2 e1       	ldi	r31, 0x12	; 18
    2500:	0c 94 56 26 	jmp	0x4cac	; 0x4cac <__prologue_saves__+0x18>
    2504:	69 83       	std	Y+1, r22	; 0x01
    2506:	7a 83       	std	Y+2, r23	; 0x02
    2508:	8b 83       	std	Y+3, r24	; 0x03
    250a:	9c 83       	std	Y+4, r25	; 0x04
    250c:	2d 83       	std	Y+5, r18	; 0x05
    250e:	3e 83       	std	Y+6, r19	; 0x06
    2510:	4f 83       	std	Y+7, r20	; 0x07
    2512:	58 87       	std	Y+8, r21	; 0x08
    2514:	89 e0       	ldi	r24, 0x09	; 9
    2516:	e8 2e       	mov	r14, r24
    2518:	f1 2c       	mov	r15, r1
    251a:	ec 0e       	add	r14, r28
    251c:	fd 1e       	adc	r15, r29
    251e:	ce 01       	movw	r24, r28
    2520:	01 96       	adiw	r24, 0x01	; 1
    2522:	b7 01       	movw	r22, r14
    2524:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2528:	8e 01       	movw	r16, r28
    252a:	0f 5e       	subi	r16, 0xEF	; 239
    252c:	1f 4f       	sbci	r17, 0xFF	; 255
    252e:	ce 01       	movw	r24, r28
    2530:	05 96       	adiw	r24, 0x05	; 5
    2532:	b8 01       	movw	r22, r16
    2534:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    2538:	89 85       	ldd	r24, Y+9	; 0x09
    253a:	82 30       	cpi	r24, 0x02	; 2
    253c:	40 f0       	brcs	.+16     	; 0x254e <__ltsf2+0x56>
    253e:	89 89       	ldd	r24, Y+17	; 0x11
    2540:	82 30       	cpi	r24, 0x02	; 2
    2542:	28 f0       	brcs	.+10     	; 0x254e <__ltsf2+0x56>
    2544:	c7 01       	movw	r24, r14
    2546:	b8 01       	movw	r22, r16
    2548:	0e 94 4d 14 	call	0x289a	; 0x289a <__fpcmp_parts_f>
    254c:	01 c0       	rjmp	.+2      	; 0x2550 <__ltsf2+0x58>
    254e:	81 e0       	ldi	r24, 0x01	; 1
    2550:	68 96       	adiw	r28, 0x18	; 24
    2552:	e6 e0       	ldi	r30, 0x06	; 6
    2554:	0c 94 72 26 	jmp	0x4ce4	; 0x4ce4 <__epilogue_restores__+0x18>

00002558 <__fixsfsi>:
    2558:	ac e0       	ldi	r26, 0x0C	; 12
    255a:	b0 e0       	ldi	r27, 0x00	; 0
    255c:	e2 eb       	ldi	r30, 0xB2	; 178
    255e:	f2 e1       	ldi	r31, 0x12	; 18
    2560:	0c 94 5a 26 	jmp	0x4cb4	; 0x4cb4 <__prologue_saves__+0x20>
    2564:	69 83       	std	Y+1, r22	; 0x01
    2566:	7a 83       	std	Y+2, r23	; 0x02
    2568:	8b 83       	std	Y+3, r24	; 0x03
    256a:	9c 83       	std	Y+4, r25	; 0x04
    256c:	ce 01       	movw	r24, r28
    256e:	01 96       	adiw	r24, 0x01	; 1
    2570:	be 01       	movw	r22, r28
    2572:	6b 5f       	subi	r22, 0xFB	; 251
    2574:	7f 4f       	sbci	r23, 0xFF	; 255
    2576:	0e 94 d5 13 	call	0x27aa	; 0x27aa <__unpack_f>
    257a:	8d 81       	ldd	r24, Y+5	; 0x05
    257c:	82 30       	cpi	r24, 0x02	; 2
    257e:	61 f1       	breq	.+88     	; 0x25d8 <__fixsfsi+0x80>
    2580:	82 30       	cpi	r24, 0x02	; 2
    2582:	50 f1       	brcs	.+84     	; 0x25d8 <__fixsfsi+0x80>
    2584:	84 30       	cpi	r24, 0x04	; 4
    2586:	21 f4       	brne	.+8      	; 0x2590 <__fixsfsi+0x38>
    2588:	8e 81       	ldd	r24, Y+6	; 0x06
    258a:	88 23       	and	r24, r24
    258c:	51 f1       	breq	.+84     	; 0x25e2 <__fixsfsi+0x8a>
    258e:	2e c0       	rjmp	.+92     	; 0x25ec <__fixsfsi+0x94>
    2590:	2f 81       	ldd	r18, Y+7	; 0x07
    2592:	38 85       	ldd	r19, Y+8	; 0x08
    2594:	37 fd       	sbrc	r19, 7
    2596:	20 c0       	rjmp	.+64     	; 0x25d8 <__fixsfsi+0x80>
    2598:	6e 81       	ldd	r22, Y+6	; 0x06
    259a:	2f 31       	cpi	r18, 0x1F	; 31
    259c:	31 05       	cpc	r19, r1
    259e:	1c f0       	brlt	.+6      	; 0x25a6 <__fixsfsi+0x4e>
    25a0:	66 23       	and	r22, r22
    25a2:	f9 f0       	breq	.+62     	; 0x25e2 <__fixsfsi+0x8a>
    25a4:	23 c0       	rjmp	.+70     	; 0x25ec <__fixsfsi+0x94>
    25a6:	8e e1       	ldi	r24, 0x1E	; 30
    25a8:	90 e0       	ldi	r25, 0x00	; 0
    25aa:	82 1b       	sub	r24, r18
    25ac:	93 0b       	sbc	r25, r19
    25ae:	29 85       	ldd	r18, Y+9	; 0x09
    25b0:	3a 85       	ldd	r19, Y+10	; 0x0a
    25b2:	4b 85       	ldd	r20, Y+11	; 0x0b
    25b4:	5c 85       	ldd	r21, Y+12	; 0x0c
    25b6:	04 c0       	rjmp	.+8      	; 0x25c0 <__fixsfsi+0x68>
    25b8:	56 95       	lsr	r21
    25ba:	47 95       	ror	r20
    25bc:	37 95       	ror	r19
    25be:	27 95       	ror	r18
    25c0:	8a 95       	dec	r24
    25c2:	d2 f7       	brpl	.-12     	; 0x25b8 <__fixsfsi+0x60>
    25c4:	66 23       	and	r22, r22
    25c6:	b1 f0       	breq	.+44     	; 0x25f4 <__fixsfsi+0x9c>
    25c8:	50 95       	com	r21
    25ca:	40 95       	com	r20
    25cc:	30 95       	com	r19
    25ce:	21 95       	neg	r18
    25d0:	3f 4f       	sbci	r19, 0xFF	; 255
    25d2:	4f 4f       	sbci	r20, 0xFF	; 255
    25d4:	5f 4f       	sbci	r21, 0xFF	; 255
    25d6:	0e c0       	rjmp	.+28     	; 0x25f4 <__fixsfsi+0x9c>
    25d8:	20 e0       	ldi	r18, 0x00	; 0
    25da:	30 e0       	ldi	r19, 0x00	; 0
    25dc:	40 e0       	ldi	r20, 0x00	; 0
    25de:	50 e0       	ldi	r21, 0x00	; 0
    25e0:	09 c0       	rjmp	.+18     	; 0x25f4 <__fixsfsi+0x9c>
    25e2:	2f ef       	ldi	r18, 0xFF	; 255
    25e4:	3f ef       	ldi	r19, 0xFF	; 255
    25e6:	4f ef       	ldi	r20, 0xFF	; 255
    25e8:	5f e7       	ldi	r21, 0x7F	; 127
    25ea:	04 c0       	rjmp	.+8      	; 0x25f4 <__fixsfsi+0x9c>
    25ec:	20 e0       	ldi	r18, 0x00	; 0
    25ee:	30 e0       	ldi	r19, 0x00	; 0
    25f0:	40 e0       	ldi	r20, 0x00	; 0
    25f2:	50 e8       	ldi	r21, 0x80	; 128
    25f4:	b9 01       	movw	r22, r18
    25f6:	ca 01       	movw	r24, r20
    25f8:	2c 96       	adiw	r28, 0x0c	; 12
    25fa:	e2 e0       	ldi	r30, 0x02	; 2
    25fc:	0c 94 76 26 	jmp	0x4cec	; 0x4cec <__epilogue_restores__+0x20>

00002600 <__pack_f>:
    2600:	df 92       	push	r13
    2602:	ef 92       	push	r14
    2604:	ff 92       	push	r15
    2606:	0f 93       	push	r16
    2608:	1f 93       	push	r17
    260a:	fc 01       	movw	r30, r24
    260c:	e4 80       	ldd	r14, Z+4	; 0x04
    260e:	f5 80       	ldd	r15, Z+5	; 0x05
    2610:	06 81       	ldd	r16, Z+6	; 0x06
    2612:	17 81       	ldd	r17, Z+7	; 0x07
    2614:	d1 80       	ldd	r13, Z+1	; 0x01
    2616:	80 81       	ld	r24, Z
    2618:	82 30       	cpi	r24, 0x02	; 2
    261a:	48 f4       	brcc	.+18     	; 0x262e <__pack_f+0x2e>
    261c:	80 e0       	ldi	r24, 0x00	; 0
    261e:	90 e0       	ldi	r25, 0x00	; 0
    2620:	a0 e1       	ldi	r26, 0x10	; 16
    2622:	b0 e0       	ldi	r27, 0x00	; 0
    2624:	e8 2a       	or	r14, r24
    2626:	f9 2a       	or	r15, r25
    2628:	0a 2b       	or	r16, r26
    262a:	1b 2b       	or	r17, r27
    262c:	a5 c0       	rjmp	.+330    	; 0x2778 <__pack_f+0x178>
    262e:	84 30       	cpi	r24, 0x04	; 4
    2630:	09 f4       	brne	.+2      	; 0x2634 <__pack_f+0x34>
    2632:	9f c0       	rjmp	.+318    	; 0x2772 <__pack_f+0x172>
    2634:	82 30       	cpi	r24, 0x02	; 2
    2636:	21 f4       	brne	.+8      	; 0x2640 <__pack_f+0x40>
    2638:	ee 24       	eor	r14, r14
    263a:	ff 24       	eor	r15, r15
    263c:	87 01       	movw	r16, r14
    263e:	05 c0       	rjmp	.+10     	; 0x264a <__pack_f+0x4a>
    2640:	e1 14       	cp	r14, r1
    2642:	f1 04       	cpc	r15, r1
    2644:	01 05       	cpc	r16, r1
    2646:	11 05       	cpc	r17, r1
    2648:	19 f4       	brne	.+6      	; 0x2650 <__pack_f+0x50>
    264a:	e0 e0       	ldi	r30, 0x00	; 0
    264c:	f0 e0       	ldi	r31, 0x00	; 0
    264e:	96 c0       	rjmp	.+300    	; 0x277c <__pack_f+0x17c>
    2650:	62 81       	ldd	r22, Z+2	; 0x02
    2652:	73 81       	ldd	r23, Z+3	; 0x03
    2654:	9f ef       	ldi	r25, 0xFF	; 255
    2656:	62 38       	cpi	r22, 0x82	; 130
    2658:	79 07       	cpc	r23, r25
    265a:	0c f0       	brlt	.+2      	; 0x265e <__pack_f+0x5e>
    265c:	5b c0       	rjmp	.+182    	; 0x2714 <__pack_f+0x114>
    265e:	22 e8       	ldi	r18, 0x82	; 130
    2660:	3f ef       	ldi	r19, 0xFF	; 255
    2662:	26 1b       	sub	r18, r22
    2664:	37 0b       	sbc	r19, r23
    2666:	2a 31       	cpi	r18, 0x1A	; 26
    2668:	31 05       	cpc	r19, r1
    266a:	2c f0       	brlt	.+10     	; 0x2676 <__pack_f+0x76>
    266c:	20 e0       	ldi	r18, 0x00	; 0
    266e:	30 e0       	ldi	r19, 0x00	; 0
    2670:	40 e0       	ldi	r20, 0x00	; 0
    2672:	50 e0       	ldi	r21, 0x00	; 0
    2674:	2a c0       	rjmp	.+84     	; 0x26ca <__pack_f+0xca>
    2676:	b8 01       	movw	r22, r16
    2678:	a7 01       	movw	r20, r14
    267a:	02 2e       	mov	r0, r18
    267c:	04 c0       	rjmp	.+8      	; 0x2686 <__pack_f+0x86>
    267e:	76 95       	lsr	r23
    2680:	67 95       	ror	r22
    2682:	57 95       	ror	r21
    2684:	47 95       	ror	r20
    2686:	0a 94       	dec	r0
    2688:	d2 f7       	brpl	.-12     	; 0x267e <__pack_f+0x7e>
    268a:	81 e0       	ldi	r24, 0x01	; 1
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	a0 e0       	ldi	r26, 0x00	; 0
    2690:	b0 e0       	ldi	r27, 0x00	; 0
    2692:	04 c0       	rjmp	.+8      	; 0x269c <__pack_f+0x9c>
    2694:	88 0f       	add	r24, r24
    2696:	99 1f       	adc	r25, r25
    2698:	aa 1f       	adc	r26, r26
    269a:	bb 1f       	adc	r27, r27
    269c:	2a 95       	dec	r18
    269e:	d2 f7       	brpl	.-12     	; 0x2694 <__pack_f+0x94>
    26a0:	01 97       	sbiw	r24, 0x01	; 1
    26a2:	a1 09       	sbc	r26, r1
    26a4:	b1 09       	sbc	r27, r1
    26a6:	8e 21       	and	r24, r14
    26a8:	9f 21       	and	r25, r15
    26aa:	a0 23       	and	r26, r16
    26ac:	b1 23       	and	r27, r17
    26ae:	00 97       	sbiw	r24, 0x00	; 0
    26b0:	a1 05       	cpc	r26, r1
    26b2:	b1 05       	cpc	r27, r1
    26b4:	21 f0       	breq	.+8      	; 0x26be <__pack_f+0xbe>
    26b6:	81 e0       	ldi	r24, 0x01	; 1
    26b8:	90 e0       	ldi	r25, 0x00	; 0
    26ba:	a0 e0       	ldi	r26, 0x00	; 0
    26bc:	b0 e0       	ldi	r27, 0x00	; 0
    26be:	9a 01       	movw	r18, r20
    26c0:	ab 01       	movw	r20, r22
    26c2:	28 2b       	or	r18, r24
    26c4:	39 2b       	or	r19, r25
    26c6:	4a 2b       	or	r20, r26
    26c8:	5b 2b       	or	r21, r27
    26ca:	da 01       	movw	r26, r20
    26cc:	c9 01       	movw	r24, r18
    26ce:	8f 77       	andi	r24, 0x7F	; 127
    26d0:	90 70       	andi	r25, 0x00	; 0
    26d2:	a0 70       	andi	r26, 0x00	; 0
    26d4:	b0 70       	andi	r27, 0x00	; 0
    26d6:	80 34       	cpi	r24, 0x40	; 64
    26d8:	91 05       	cpc	r25, r1
    26da:	a1 05       	cpc	r26, r1
    26dc:	b1 05       	cpc	r27, r1
    26de:	39 f4       	brne	.+14     	; 0x26ee <__pack_f+0xee>
    26e0:	27 ff       	sbrs	r18, 7
    26e2:	09 c0       	rjmp	.+18     	; 0x26f6 <__pack_f+0xf6>
    26e4:	20 5c       	subi	r18, 0xC0	; 192
    26e6:	3f 4f       	sbci	r19, 0xFF	; 255
    26e8:	4f 4f       	sbci	r20, 0xFF	; 255
    26ea:	5f 4f       	sbci	r21, 0xFF	; 255
    26ec:	04 c0       	rjmp	.+8      	; 0x26f6 <__pack_f+0xf6>
    26ee:	21 5c       	subi	r18, 0xC1	; 193
    26f0:	3f 4f       	sbci	r19, 0xFF	; 255
    26f2:	4f 4f       	sbci	r20, 0xFF	; 255
    26f4:	5f 4f       	sbci	r21, 0xFF	; 255
    26f6:	e0 e0       	ldi	r30, 0x00	; 0
    26f8:	f0 e0       	ldi	r31, 0x00	; 0
    26fa:	20 30       	cpi	r18, 0x00	; 0
    26fc:	a0 e0       	ldi	r26, 0x00	; 0
    26fe:	3a 07       	cpc	r19, r26
    2700:	a0 e0       	ldi	r26, 0x00	; 0
    2702:	4a 07       	cpc	r20, r26
    2704:	a0 e4       	ldi	r26, 0x40	; 64
    2706:	5a 07       	cpc	r21, r26
    2708:	10 f0       	brcs	.+4      	; 0x270e <__pack_f+0x10e>
    270a:	e1 e0       	ldi	r30, 0x01	; 1
    270c:	f0 e0       	ldi	r31, 0x00	; 0
    270e:	79 01       	movw	r14, r18
    2710:	8a 01       	movw	r16, r20
    2712:	27 c0       	rjmp	.+78     	; 0x2762 <__pack_f+0x162>
    2714:	60 38       	cpi	r22, 0x80	; 128
    2716:	71 05       	cpc	r23, r1
    2718:	64 f5       	brge	.+88     	; 0x2772 <__pack_f+0x172>
    271a:	fb 01       	movw	r30, r22
    271c:	e1 58       	subi	r30, 0x81	; 129
    271e:	ff 4f       	sbci	r31, 0xFF	; 255
    2720:	d8 01       	movw	r26, r16
    2722:	c7 01       	movw	r24, r14
    2724:	8f 77       	andi	r24, 0x7F	; 127
    2726:	90 70       	andi	r25, 0x00	; 0
    2728:	a0 70       	andi	r26, 0x00	; 0
    272a:	b0 70       	andi	r27, 0x00	; 0
    272c:	80 34       	cpi	r24, 0x40	; 64
    272e:	91 05       	cpc	r25, r1
    2730:	a1 05       	cpc	r26, r1
    2732:	b1 05       	cpc	r27, r1
    2734:	39 f4       	brne	.+14     	; 0x2744 <__pack_f+0x144>
    2736:	e7 fe       	sbrs	r14, 7
    2738:	0d c0       	rjmp	.+26     	; 0x2754 <__pack_f+0x154>
    273a:	80 e4       	ldi	r24, 0x40	; 64
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	a0 e0       	ldi	r26, 0x00	; 0
    2740:	b0 e0       	ldi	r27, 0x00	; 0
    2742:	04 c0       	rjmp	.+8      	; 0x274c <__pack_f+0x14c>
    2744:	8f e3       	ldi	r24, 0x3F	; 63
    2746:	90 e0       	ldi	r25, 0x00	; 0
    2748:	a0 e0       	ldi	r26, 0x00	; 0
    274a:	b0 e0       	ldi	r27, 0x00	; 0
    274c:	e8 0e       	add	r14, r24
    274e:	f9 1e       	adc	r15, r25
    2750:	0a 1f       	adc	r16, r26
    2752:	1b 1f       	adc	r17, r27
    2754:	17 ff       	sbrs	r17, 7
    2756:	05 c0       	rjmp	.+10     	; 0x2762 <__pack_f+0x162>
    2758:	16 95       	lsr	r17
    275a:	07 95       	ror	r16
    275c:	f7 94       	ror	r15
    275e:	e7 94       	ror	r14
    2760:	31 96       	adiw	r30, 0x01	; 1
    2762:	87 e0       	ldi	r24, 0x07	; 7
    2764:	16 95       	lsr	r17
    2766:	07 95       	ror	r16
    2768:	f7 94       	ror	r15
    276a:	e7 94       	ror	r14
    276c:	8a 95       	dec	r24
    276e:	d1 f7       	brne	.-12     	; 0x2764 <__pack_f+0x164>
    2770:	05 c0       	rjmp	.+10     	; 0x277c <__pack_f+0x17c>
    2772:	ee 24       	eor	r14, r14
    2774:	ff 24       	eor	r15, r15
    2776:	87 01       	movw	r16, r14
    2778:	ef ef       	ldi	r30, 0xFF	; 255
    277a:	f0 e0       	ldi	r31, 0x00	; 0
    277c:	6e 2f       	mov	r22, r30
    277e:	67 95       	ror	r22
    2780:	66 27       	eor	r22, r22
    2782:	67 95       	ror	r22
    2784:	90 2f       	mov	r25, r16
    2786:	9f 77       	andi	r25, 0x7F	; 127
    2788:	d7 94       	ror	r13
    278a:	dd 24       	eor	r13, r13
    278c:	d7 94       	ror	r13
    278e:	8e 2f       	mov	r24, r30
    2790:	86 95       	lsr	r24
    2792:	49 2f       	mov	r20, r25
    2794:	46 2b       	or	r20, r22
    2796:	58 2f       	mov	r21, r24
    2798:	5d 29       	or	r21, r13
    279a:	b7 01       	movw	r22, r14
    279c:	ca 01       	movw	r24, r20
    279e:	1f 91       	pop	r17
    27a0:	0f 91       	pop	r16
    27a2:	ff 90       	pop	r15
    27a4:	ef 90       	pop	r14
    27a6:	df 90       	pop	r13
    27a8:	08 95       	ret

000027aa <__unpack_f>:
    27aa:	fc 01       	movw	r30, r24
    27ac:	db 01       	movw	r26, r22
    27ae:	40 81       	ld	r20, Z
    27b0:	51 81       	ldd	r21, Z+1	; 0x01
    27b2:	22 81       	ldd	r18, Z+2	; 0x02
    27b4:	62 2f       	mov	r22, r18
    27b6:	6f 77       	andi	r22, 0x7F	; 127
    27b8:	70 e0       	ldi	r23, 0x00	; 0
    27ba:	22 1f       	adc	r18, r18
    27bc:	22 27       	eor	r18, r18
    27be:	22 1f       	adc	r18, r18
    27c0:	93 81       	ldd	r25, Z+3	; 0x03
    27c2:	89 2f       	mov	r24, r25
    27c4:	88 0f       	add	r24, r24
    27c6:	82 2b       	or	r24, r18
    27c8:	28 2f       	mov	r18, r24
    27ca:	30 e0       	ldi	r19, 0x00	; 0
    27cc:	99 1f       	adc	r25, r25
    27ce:	99 27       	eor	r25, r25
    27d0:	99 1f       	adc	r25, r25
    27d2:	11 96       	adiw	r26, 0x01	; 1
    27d4:	9c 93       	st	X, r25
    27d6:	11 97       	sbiw	r26, 0x01	; 1
    27d8:	21 15       	cp	r18, r1
    27da:	31 05       	cpc	r19, r1
    27dc:	a9 f5       	brne	.+106    	; 0x2848 <__unpack_f+0x9e>
    27de:	41 15       	cp	r20, r1
    27e0:	51 05       	cpc	r21, r1
    27e2:	61 05       	cpc	r22, r1
    27e4:	71 05       	cpc	r23, r1
    27e6:	11 f4       	brne	.+4      	; 0x27ec <__unpack_f+0x42>
    27e8:	82 e0       	ldi	r24, 0x02	; 2
    27ea:	37 c0       	rjmp	.+110    	; 0x285a <__unpack_f+0xb0>
    27ec:	82 e8       	ldi	r24, 0x82	; 130
    27ee:	9f ef       	ldi	r25, 0xFF	; 255
    27f0:	13 96       	adiw	r26, 0x03	; 3
    27f2:	9c 93       	st	X, r25
    27f4:	8e 93       	st	-X, r24
    27f6:	12 97       	sbiw	r26, 0x02	; 2
    27f8:	9a 01       	movw	r18, r20
    27fa:	ab 01       	movw	r20, r22
    27fc:	67 e0       	ldi	r22, 0x07	; 7
    27fe:	22 0f       	add	r18, r18
    2800:	33 1f       	adc	r19, r19
    2802:	44 1f       	adc	r20, r20
    2804:	55 1f       	adc	r21, r21
    2806:	6a 95       	dec	r22
    2808:	d1 f7       	brne	.-12     	; 0x27fe <__unpack_f+0x54>
    280a:	83 e0       	ldi	r24, 0x03	; 3
    280c:	8c 93       	st	X, r24
    280e:	0d c0       	rjmp	.+26     	; 0x282a <__unpack_f+0x80>
    2810:	22 0f       	add	r18, r18
    2812:	33 1f       	adc	r19, r19
    2814:	44 1f       	adc	r20, r20
    2816:	55 1f       	adc	r21, r21
    2818:	12 96       	adiw	r26, 0x02	; 2
    281a:	8d 91       	ld	r24, X+
    281c:	9c 91       	ld	r25, X
    281e:	13 97       	sbiw	r26, 0x03	; 3
    2820:	01 97       	sbiw	r24, 0x01	; 1
    2822:	13 96       	adiw	r26, 0x03	; 3
    2824:	9c 93       	st	X, r25
    2826:	8e 93       	st	-X, r24
    2828:	12 97       	sbiw	r26, 0x02	; 2
    282a:	20 30       	cpi	r18, 0x00	; 0
    282c:	80 e0       	ldi	r24, 0x00	; 0
    282e:	38 07       	cpc	r19, r24
    2830:	80 e0       	ldi	r24, 0x00	; 0
    2832:	48 07       	cpc	r20, r24
    2834:	80 e4       	ldi	r24, 0x40	; 64
    2836:	58 07       	cpc	r21, r24
    2838:	58 f3       	brcs	.-42     	; 0x2810 <__unpack_f+0x66>
    283a:	14 96       	adiw	r26, 0x04	; 4
    283c:	2d 93       	st	X+, r18
    283e:	3d 93       	st	X+, r19
    2840:	4d 93       	st	X+, r20
    2842:	5c 93       	st	X, r21
    2844:	17 97       	sbiw	r26, 0x07	; 7
    2846:	08 95       	ret
    2848:	2f 3f       	cpi	r18, 0xFF	; 255
    284a:	31 05       	cpc	r19, r1
    284c:	79 f4       	brne	.+30     	; 0x286c <__unpack_f+0xc2>
    284e:	41 15       	cp	r20, r1
    2850:	51 05       	cpc	r21, r1
    2852:	61 05       	cpc	r22, r1
    2854:	71 05       	cpc	r23, r1
    2856:	19 f4       	brne	.+6      	; 0x285e <__unpack_f+0xb4>
    2858:	84 e0       	ldi	r24, 0x04	; 4
    285a:	8c 93       	st	X, r24
    285c:	08 95       	ret
    285e:	64 ff       	sbrs	r22, 4
    2860:	03 c0       	rjmp	.+6      	; 0x2868 <__unpack_f+0xbe>
    2862:	81 e0       	ldi	r24, 0x01	; 1
    2864:	8c 93       	st	X, r24
    2866:	12 c0       	rjmp	.+36     	; 0x288c <__unpack_f+0xe2>
    2868:	1c 92       	st	X, r1
    286a:	10 c0       	rjmp	.+32     	; 0x288c <__unpack_f+0xe2>
    286c:	2f 57       	subi	r18, 0x7F	; 127
    286e:	30 40       	sbci	r19, 0x00	; 0
    2870:	13 96       	adiw	r26, 0x03	; 3
    2872:	3c 93       	st	X, r19
    2874:	2e 93       	st	-X, r18
    2876:	12 97       	sbiw	r26, 0x02	; 2
    2878:	83 e0       	ldi	r24, 0x03	; 3
    287a:	8c 93       	st	X, r24
    287c:	87 e0       	ldi	r24, 0x07	; 7
    287e:	44 0f       	add	r20, r20
    2880:	55 1f       	adc	r21, r21
    2882:	66 1f       	adc	r22, r22
    2884:	77 1f       	adc	r23, r23
    2886:	8a 95       	dec	r24
    2888:	d1 f7       	brne	.-12     	; 0x287e <__unpack_f+0xd4>
    288a:	70 64       	ori	r23, 0x40	; 64
    288c:	14 96       	adiw	r26, 0x04	; 4
    288e:	4d 93       	st	X+, r20
    2890:	5d 93       	st	X+, r21
    2892:	6d 93       	st	X+, r22
    2894:	7c 93       	st	X, r23
    2896:	17 97       	sbiw	r26, 0x07	; 7
    2898:	08 95       	ret

0000289a <__fpcmp_parts_f>:
    289a:	1f 93       	push	r17
    289c:	dc 01       	movw	r26, r24
    289e:	fb 01       	movw	r30, r22
    28a0:	9c 91       	ld	r25, X
    28a2:	92 30       	cpi	r25, 0x02	; 2
    28a4:	08 f4       	brcc	.+2      	; 0x28a8 <__fpcmp_parts_f+0xe>
    28a6:	47 c0       	rjmp	.+142    	; 0x2936 <__fpcmp_parts_f+0x9c>
    28a8:	80 81       	ld	r24, Z
    28aa:	82 30       	cpi	r24, 0x02	; 2
    28ac:	08 f4       	brcc	.+2      	; 0x28b0 <__fpcmp_parts_f+0x16>
    28ae:	43 c0       	rjmp	.+134    	; 0x2936 <__fpcmp_parts_f+0x9c>
    28b0:	94 30       	cpi	r25, 0x04	; 4
    28b2:	51 f4       	brne	.+20     	; 0x28c8 <__fpcmp_parts_f+0x2e>
    28b4:	11 96       	adiw	r26, 0x01	; 1
    28b6:	1c 91       	ld	r17, X
    28b8:	84 30       	cpi	r24, 0x04	; 4
    28ba:	99 f5       	brne	.+102    	; 0x2922 <__fpcmp_parts_f+0x88>
    28bc:	81 81       	ldd	r24, Z+1	; 0x01
    28be:	68 2f       	mov	r22, r24
    28c0:	70 e0       	ldi	r23, 0x00	; 0
    28c2:	61 1b       	sub	r22, r17
    28c4:	71 09       	sbc	r23, r1
    28c6:	3f c0       	rjmp	.+126    	; 0x2946 <__fpcmp_parts_f+0xac>
    28c8:	84 30       	cpi	r24, 0x04	; 4
    28ca:	21 f0       	breq	.+8      	; 0x28d4 <__fpcmp_parts_f+0x3a>
    28cc:	92 30       	cpi	r25, 0x02	; 2
    28ce:	31 f4       	brne	.+12     	; 0x28dc <__fpcmp_parts_f+0x42>
    28d0:	82 30       	cpi	r24, 0x02	; 2
    28d2:	b9 f1       	breq	.+110    	; 0x2942 <__fpcmp_parts_f+0xa8>
    28d4:	81 81       	ldd	r24, Z+1	; 0x01
    28d6:	88 23       	and	r24, r24
    28d8:	89 f1       	breq	.+98     	; 0x293c <__fpcmp_parts_f+0xa2>
    28da:	2d c0       	rjmp	.+90     	; 0x2936 <__fpcmp_parts_f+0x9c>
    28dc:	11 96       	adiw	r26, 0x01	; 1
    28de:	1c 91       	ld	r17, X
    28e0:	11 97       	sbiw	r26, 0x01	; 1
    28e2:	82 30       	cpi	r24, 0x02	; 2
    28e4:	f1 f0       	breq	.+60     	; 0x2922 <__fpcmp_parts_f+0x88>
    28e6:	81 81       	ldd	r24, Z+1	; 0x01
    28e8:	18 17       	cp	r17, r24
    28ea:	d9 f4       	brne	.+54     	; 0x2922 <__fpcmp_parts_f+0x88>
    28ec:	12 96       	adiw	r26, 0x02	; 2
    28ee:	2d 91       	ld	r18, X+
    28f0:	3c 91       	ld	r19, X
    28f2:	13 97       	sbiw	r26, 0x03	; 3
    28f4:	82 81       	ldd	r24, Z+2	; 0x02
    28f6:	93 81       	ldd	r25, Z+3	; 0x03
    28f8:	82 17       	cp	r24, r18
    28fa:	93 07       	cpc	r25, r19
    28fc:	94 f0       	brlt	.+36     	; 0x2922 <__fpcmp_parts_f+0x88>
    28fe:	28 17       	cp	r18, r24
    2900:	39 07       	cpc	r19, r25
    2902:	bc f0       	brlt	.+46     	; 0x2932 <__fpcmp_parts_f+0x98>
    2904:	14 96       	adiw	r26, 0x04	; 4
    2906:	8d 91       	ld	r24, X+
    2908:	9d 91       	ld	r25, X+
    290a:	0d 90       	ld	r0, X+
    290c:	bc 91       	ld	r27, X
    290e:	a0 2d       	mov	r26, r0
    2910:	24 81       	ldd	r18, Z+4	; 0x04
    2912:	35 81       	ldd	r19, Z+5	; 0x05
    2914:	46 81       	ldd	r20, Z+6	; 0x06
    2916:	57 81       	ldd	r21, Z+7	; 0x07
    2918:	28 17       	cp	r18, r24
    291a:	39 07       	cpc	r19, r25
    291c:	4a 07       	cpc	r20, r26
    291e:	5b 07       	cpc	r21, r27
    2920:	18 f4       	brcc	.+6      	; 0x2928 <__fpcmp_parts_f+0x8e>
    2922:	11 23       	and	r17, r17
    2924:	41 f0       	breq	.+16     	; 0x2936 <__fpcmp_parts_f+0x9c>
    2926:	0a c0       	rjmp	.+20     	; 0x293c <__fpcmp_parts_f+0xa2>
    2928:	82 17       	cp	r24, r18
    292a:	93 07       	cpc	r25, r19
    292c:	a4 07       	cpc	r26, r20
    292e:	b5 07       	cpc	r27, r21
    2930:	40 f4       	brcc	.+16     	; 0x2942 <__fpcmp_parts_f+0xa8>
    2932:	11 23       	and	r17, r17
    2934:	19 f0       	breq	.+6      	; 0x293c <__fpcmp_parts_f+0xa2>
    2936:	61 e0       	ldi	r22, 0x01	; 1
    2938:	70 e0       	ldi	r23, 0x00	; 0
    293a:	05 c0       	rjmp	.+10     	; 0x2946 <__fpcmp_parts_f+0xac>
    293c:	6f ef       	ldi	r22, 0xFF	; 255
    293e:	7f ef       	ldi	r23, 0xFF	; 255
    2940:	02 c0       	rjmp	.+4      	; 0x2946 <__fpcmp_parts_f+0xac>
    2942:	60 e0       	ldi	r22, 0x00	; 0
    2944:	70 e0       	ldi	r23, 0x00	; 0
    2946:	cb 01       	movw	r24, r22
    2948:	1f 91       	pop	r17
    294a:	08 95       	ret

0000294c <ADC_VidInit>:
#include "INTERRUPT_Interface.h"
#include "ADC_interface.h"
#include "ADC_private.h"
#include "ADC_cfg.h"

void ADC_VidInit (void){
    294c:	df 93       	push	r29
    294e:	cf 93       	push	r28
    2950:	cd b7       	in	r28, 0x3d	; 61
    2952:	de b7       	in	r29, 0x3e	; 62
/* to choose which Voltage reference we need */
#if VREF_USED == AVCC_5V
	ADMUX = 0x40 ;
    2954:	e7 e2       	ldi	r30, 0x27	; 39
    2956:	f0 e0       	ldi	r31, 0x00	; 0
    2958:	80 e4       	ldi	r24, 0x40	; 64
    295a:	80 83       	st	Z, r24
#elif PRE_SCALAR ==   PRE_SCALAR_32
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS0) ;
#elif PRE_SCALAR ==  PRE_SCALAR_64
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) ;
#elif PRE_SCALAR == PRE_SCALAR_128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0) ;
    295c:	e6 e2       	ldi	r30, 0x26	; 38
    295e:	f0 e0       	ldi	r31, 0x00	; 0
    2960:	87 e8       	ldi	r24, 0x87	; 135
    2962:	80 83       	st	Z, r24
#endif

/*  to choose which adjusted we need to read from ADC DATA REGISTER   */
#if ADJUSTED_USED == RIGHT_ADJEUSTED
	CLR_BIT(ADMUX,ADLAR);                             //CLEAR ADLAR , RIGHT_ADJEUSTED
    2964:	a7 e2       	ldi	r26, 0x27	; 39
    2966:	b0 e0       	ldi	r27, 0x00	; 0
    2968:	e7 e2       	ldi	r30, 0x27	; 39
    296a:	f0 e0       	ldi	r31, 0x00	; 0
    296c:	80 81       	ld	r24, Z
    296e:	8f 7d       	andi	r24, 0xDF	; 223
    2970:	8c 93       	st	X, r24
#elif ADJUSTED_USED == LEFT_ADJUSTED
	SET_BIT(ADMUX,ADLAR);                             //SET ADLAR , LEFT_ADJUSTED
#endif

}
    2972:	cf 91       	pop	r28
    2974:	df 91       	pop	r29
    2976:	08 95       	ret

00002978 <ADC_VidReadChannel>:

u16 ADC_VidReadChannel (u8 Copy_U8Channel){
    2978:	2f 92       	push	r2
    297a:	3f 92       	push	r3
    297c:	4f 92       	push	r4
    297e:	5f 92       	push	r5
    2980:	6f 92       	push	r6
    2982:	7f 92       	push	r7
    2984:	8f 92       	push	r8
    2986:	9f 92       	push	r9
    2988:	af 92       	push	r10
    298a:	bf 92       	push	r11
    298c:	cf 92       	push	r12
    298e:	df 92       	push	r13
    2990:	ef 92       	push	r14
    2992:	ff 92       	push	r15
    2994:	0f 93       	push	r16
    2996:	1f 93       	push	r17
    2998:	df 93       	push	r29
    299a:	cf 93       	push	r28
    299c:	0f 92       	push	r0
    299e:	cd b7       	in	r28, 0x3d	; 61
    29a0:	de b7       	in	r29, 0x3e	; 62
    29a2:	89 83       	std	Y+1, r24	; 0x01
	ADMUX &= 0xE0 ;                                   //to clear ADMUX
    29a4:	a7 e2       	ldi	r26, 0x27	; 39
    29a6:	b0 e0       	ldi	r27, 0x00	; 0
    29a8:	e7 e2       	ldi	r30, 0x27	; 39
    29aa:	f0 e0       	ldi	r31, 0x00	; 0
    29ac:	80 81       	ld	r24, Z
    29ae:	80 7e       	andi	r24, 0xE0	; 224
    29b0:	8c 93       	st	X, r24
	ADMUX |= ( 0x1F & Copy_U8Channel ) ;              //to check that the channel out of 8 pins
    29b2:	a7 e2       	ldi	r26, 0x27	; 39
    29b4:	b0 e0       	ldi	r27, 0x00	; 0
    29b6:	e7 e2       	ldi	r30, 0x27	; 39
    29b8:	f0 e0       	ldi	r31, 0x00	; 0
    29ba:	80 81       	ld	r24, Z
    29bc:	98 2f       	mov	r25, r24
    29be:	89 81       	ldd	r24, Y+1	; 0x01
    29c0:	8f 71       	andi	r24, 0x1F	; 31
    29c2:	89 2b       	or	r24, r25
    29c4:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,ADSC) ;                            //to start conversion
    29c6:	a6 e2       	ldi	r26, 0x26	; 38
    29c8:	b0 e0       	ldi	r27, 0x00	; 0
    29ca:	e6 e2       	ldi	r30, 0x26	; 38
    29cc:	f0 e0       	ldi	r31, 0x00	; 0
    29ce:	80 81       	ld	r24, Z
    29d0:	80 64       	ori	r24, 0x40	; 64
    29d2:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,ADATE) ;                           //to disable  Auto Trigger
    29d4:	a6 e2       	ldi	r26, 0x26	; 38
    29d6:	b0 e0       	ldi	r27, 0x00	; 0
    29d8:	e6 e2       	ldi	r30, 0x26	; 38
    29da:	f0 e0       	ldi	r31, 0x00	; 0
    29dc:	80 81       	ld	r24, Z
    29de:	8f 7d       	andi	r24, 0xDF	; 223
    29e0:	8c 93       	st	X, r24
	while ( GET_BIT(ADCSRA,ADIF) == 0 ) ;             //to stac while conversion
    29e2:	e6 e2       	ldi	r30, 0x26	; 38
    29e4:	f0 e0       	ldi	r31, 0x00	; 0
    29e6:	80 81       	ld	r24, Z
    29e8:	82 95       	swap	r24
    29ea:	8f 70       	andi	r24, 0x0F	; 15
    29ec:	88 2f       	mov	r24, r24
    29ee:	90 e0       	ldi	r25, 0x00	; 0
    29f0:	81 70       	andi	r24, 0x01	; 1
    29f2:	90 70       	andi	r25, 0x00	; 0
    29f4:	00 97       	sbiw	r24, 0x00	; 0
    29f6:	a9 f3       	breq	.-22     	; 0x29e2 <ADC_VidReadChannel+0x6a>
    SET_BIT(ADCSRA,ADIF);                             //to clear flag
    29f8:	a6 e2       	ldi	r26, 0x26	; 38
    29fa:	b0 e0       	ldi	r27, 0x00	; 0
    29fc:	e6 e2       	ldi	r30, 0x26	; 38
    29fe:	f0 e0       	ldi	r31, 0x00	; 0
    2a00:	80 81       	ld	r24, Z
    2a02:	80 61       	ori	r24, 0x10	; 16
    2a04:	8c 93       	st	X, r24

#if ADJUSTED_USED == RIGHT_ADJEUSTED
    return ( (u64)ADC_REG*VREF*1000)/MAX_DIGITAL ;        //to return Analog value in mv value
    2a06:	e4 e2       	ldi	r30, 0x24	; 36
    2a08:	f0 e0       	ldi	r31, 0x00	; 0
    2a0a:	80 81       	ld	r24, Z
    2a0c:	91 81       	ldd	r25, Z+1	; 0x01
    2a0e:	5c 01       	movw	r10, r24
    2a10:	cc 24       	eor	r12, r12
    2a12:	dd 24       	eor	r13, r13
    2a14:	ee 24       	eor	r14, r14
    2a16:	ff 24       	eor	r15, r15
    2a18:	87 01       	movw	r16, r14
    2a1a:	2a 2d       	mov	r18, r10
    2a1c:	3b 2d       	mov	r19, r11
    2a1e:	4c 2d       	mov	r20, r12
    2a20:	5d 2d       	mov	r21, r13
    2a22:	6e 2d       	mov	r22, r14
    2a24:	7f 2d       	mov	r23, r15
    2a26:	80 2f       	mov	r24, r16
    2a28:	91 2f       	mov	r25, r17
    2a2a:	0f 2e       	mov	r0, r31
    2a2c:	f8 e8       	ldi	r31, 0x88	; 136
    2a2e:	af 2e       	mov	r10, r31
    2a30:	f0 2d       	mov	r31, r0
    2a32:	0f 2e       	mov	r0, r31
    2a34:	f3 e1       	ldi	r31, 0x13	; 19
    2a36:	bf 2e       	mov	r11, r31
    2a38:	f0 2d       	mov	r31, r0
    2a3a:	cc 24       	eor	r12, r12
    2a3c:	dd 24       	eor	r13, r13
    2a3e:	ee 24       	eor	r14, r14
    2a40:	ff 24       	eor	r15, r15
    2a42:	00 e0       	ldi	r16, 0x00	; 0
    2a44:	10 e0       	ldi	r17, 0x00	; 0
    2a46:	0e 94 41 00 	call	0x82	; 0x82 <__muldi3>
    2a4a:	22 2e       	mov	r2, r18
    2a4c:	33 2e       	mov	r3, r19
    2a4e:	44 2e       	mov	r4, r20
    2a50:	55 2e       	mov	r5, r21
    2a52:	66 2e       	mov	r6, r22
    2a54:	77 2e       	mov	r7, r23
    2a56:	88 2e       	mov	r8, r24
    2a58:	99 2e       	mov	r9, r25
    2a5a:	a2 2c       	mov	r10, r2
    2a5c:	b3 2c       	mov	r11, r3
    2a5e:	c4 2c       	mov	r12, r4
    2a60:	d5 2c       	mov	r13, r5
    2a62:	e6 2c       	mov	r14, r6
    2a64:	f7 2c       	mov	r15, r7
    2a66:	08 2d       	mov	r16, r8
    2a68:	19 2d       	mov	r17, r9
    2a6a:	2a 2d       	mov	r18, r10
    2a6c:	3b 2d       	mov	r19, r11
    2a6e:	4c 2d       	mov	r20, r12
    2a70:	5d 2d       	mov	r21, r13
    2a72:	6e 2d       	mov	r22, r14
    2a74:	7f 2d       	mov	r23, r15
    2a76:	80 2f       	mov	r24, r16
    2a78:	91 2f       	mov	r25, r17
    2a7a:	aa 24       	eor	r10, r10
    2a7c:	aa 94       	dec	r10
    2a7e:	0f 2e       	mov	r0, r31
    2a80:	f3 e0       	ldi	r31, 0x03	; 3
    2a82:	bf 2e       	mov	r11, r31
    2a84:	f0 2d       	mov	r31, r0
    2a86:	cc 24       	eor	r12, r12
    2a88:	dd 24       	eor	r13, r13
    2a8a:	ee 24       	eor	r14, r14
    2a8c:	ff 24       	eor	r15, r15
    2a8e:	00 e0       	ldi	r16, 0x00	; 0
    2a90:	10 e0       	ldi	r17, 0x00	; 0
    2a92:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__udivdi3>
    2a96:	a2 2e       	mov	r10, r18
    2a98:	b3 2e       	mov	r11, r19
    2a9a:	c4 2e       	mov	r12, r20
    2a9c:	d5 2e       	mov	r13, r21
    2a9e:	e6 2e       	mov	r14, r22
    2aa0:	f7 2e       	mov	r15, r23
    2aa2:	08 2f       	mov	r16, r24
    2aa4:	19 2f       	mov	r17, r25
    2aa6:	2a 2d       	mov	r18, r10
    2aa8:	3b 2d       	mov	r19, r11
    2aaa:	4c 2d       	mov	r20, r12
    2aac:	5d 2d       	mov	r21, r13
    2aae:	6e 2d       	mov	r22, r14
    2ab0:	7f 2d       	mov	r23, r15
    2ab2:	80 2f       	mov	r24, r16
    2ab4:	91 2f       	mov	r25, r17
    2ab6:	c9 01       	movw	r24, r18
#elif ADJUSTED_USED == LEFT_ADJUSTED
    ADCH = (ADCH<<2) ;
    return ( (u64)ADCH*VREF*1000)/MAX_DIGITAL ;        //to return Analog value in mv value
#endif
}
    2ab8:	0f 90       	pop	r0
    2aba:	cf 91       	pop	r28
    2abc:	df 91       	pop	r29
    2abe:	1f 91       	pop	r17
    2ac0:	0f 91       	pop	r16
    2ac2:	ff 90       	pop	r15
    2ac4:	ef 90       	pop	r14
    2ac6:	df 90       	pop	r13
    2ac8:	cf 90       	pop	r12
    2aca:	bf 90       	pop	r11
    2acc:	af 90       	pop	r10
    2ace:	9f 90       	pop	r9
    2ad0:	8f 90       	pop	r8
    2ad2:	7f 90       	pop	r7
    2ad4:	6f 90       	pop	r6
    2ad6:	5f 90       	pop	r5
    2ad8:	4f 90       	pop	r4
    2ada:	3f 90       	pop	r3
    2adc:	2f 90       	pop	r2
    2ade:	08 95       	ret

00002ae0 <ADC_VidDeinit>:

void ADC_VidDeinit (void){
    2ae0:	df 93       	push	r29
    2ae2:	cf 93       	push	r28
    2ae4:	cd b7       	in	r28, 0x3d	; 61
    2ae6:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ADCSRA,ADEN);                             //to disable ADC perpherial
    2ae8:	a6 e2       	ldi	r26, 0x26	; 38
    2aea:	b0 e0       	ldi	r27, 0x00	; 0
    2aec:	e6 e2       	ldi	r30, 0x26	; 38
    2aee:	f0 e0       	ldi	r31, 0x00	; 0
    2af0:	80 81       	ld	r24, Z
    2af2:	8f 77       	andi	r24, 0x7F	; 127
    2af4:	8c 93       	st	X, r24
    ADMUX = 0x00 ;                                    //to clear ADMUX
    2af6:	e7 e2       	ldi	r30, 0x27	; 39
    2af8:	f0 e0       	ldi	r31, 0x00	; 0
    2afa:	10 82       	st	Z, r1
}
    2afc:	cf 91       	pop	r28
    2afe:	df 91       	pop	r29
    2b00:	08 95       	ret

00002b02 <DIO_VidSetPinDirection>:
#include"../LIB/STD_TYPES.h"
#include"../LIB/BIT_MATH.h"
#include"DIO_private.h"
#include"DIO_interface.h"

void DIO_VidSetPinDirection (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Dir ) {
    2b02:	df 93       	push	r29
    2b04:	cf 93       	push	r28
    2b06:	cd b7       	in	r28, 0x3d	; 61
    2b08:	de b7       	in	r29, 0x3e	; 62
    2b0a:	27 97       	sbiw	r28, 0x07	; 7
    2b0c:	0f b6       	in	r0, 0x3f	; 63
    2b0e:	f8 94       	cli
    2b10:	de bf       	out	0x3e, r29	; 62
    2b12:	0f be       	out	0x3f, r0	; 63
    2b14:	cd bf       	out	0x3d, r28	; 61
    2b16:	89 83       	std	Y+1, r24	; 0x01
    2b18:	6a 83       	std	Y+2, r22	; 0x02
    2b1a:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Dir ){
    2b1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b1e:	81 30       	cpi	r24, 0x01	; 1
    2b20:	09 f0       	breq	.+2      	; 0x2b24 <DIO_VidSetPinDirection+0x22>
    2b22:	6f c0       	rjmp	.+222    	; 0x2c02 <DIO_VidSetPinDirection+0x100>
		switch (Copy_U8Port){
    2b24:	89 81       	ldd	r24, Y+1	; 0x01
    2b26:	28 2f       	mov	r18, r24
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	3f 83       	std	Y+7, r19	; 0x07
    2b2c:	2e 83       	std	Y+6, r18	; 0x06
    2b2e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b30:	9f 81       	ldd	r25, Y+7	; 0x07
    2b32:	81 30       	cpi	r24, 0x01	; 1
    2b34:	91 05       	cpc	r25, r1
    2b36:	49 f1       	breq	.+82     	; 0x2b8a <DIO_VidSetPinDirection+0x88>
    2b38:	2e 81       	ldd	r18, Y+6	; 0x06
    2b3a:	3f 81       	ldd	r19, Y+7	; 0x07
    2b3c:	22 30       	cpi	r18, 0x02	; 2
    2b3e:	31 05       	cpc	r19, r1
    2b40:	2c f4       	brge	.+10     	; 0x2b4c <DIO_VidSetPinDirection+0x4a>
    2b42:	8e 81       	ldd	r24, Y+6	; 0x06
    2b44:	9f 81       	ldd	r25, Y+7	; 0x07
    2b46:	00 97       	sbiw	r24, 0x00	; 0
    2b48:	61 f0       	breq	.+24     	; 0x2b62 <DIO_VidSetPinDirection+0x60>
    2b4a:	d2 c0       	rjmp	.+420    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
    2b4c:	2e 81       	ldd	r18, Y+6	; 0x06
    2b4e:	3f 81       	ldd	r19, Y+7	; 0x07
    2b50:	22 30       	cpi	r18, 0x02	; 2
    2b52:	31 05       	cpc	r19, r1
    2b54:	71 f1       	breq	.+92     	; 0x2bb2 <DIO_VidSetPinDirection+0xb0>
    2b56:	8e 81       	ldd	r24, Y+6	; 0x06
    2b58:	9f 81       	ldd	r25, Y+7	; 0x07
    2b5a:	83 30       	cpi	r24, 0x03	; 3
    2b5c:	91 05       	cpc	r25, r1
    2b5e:	e9 f1       	breq	.+122    	; 0x2bda <DIO_VidSetPinDirection+0xd8>
    2b60:	c7 c0       	rjmp	.+398    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    SET_BIT(DDRA,Copy_U8Pin);
    2b62:	aa e3       	ldi	r26, 0x3A	; 58
    2b64:	b0 e0       	ldi	r27, 0x00	; 0
    2b66:	ea e3       	ldi	r30, 0x3A	; 58
    2b68:	f0 e0       	ldi	r31, 0x00	; 0
    2b6a:	80 81       	ld	r24, Z
    2b6c:	48 2f       	mov	r20, r24
    2b6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b70:	28 2f       	mov	r18, r24
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	81 e0       	ldi	r24, 0x01	; 1
    2b76:	90 e0       	ldi	r25, 0x00	; 0
    2b78:	02 2e       	mov	r0, r18
    2b7a:	02 c0       	rjmp	.+4      	; 0x2b80 <DIO_VidSetPinDirection+0x7e>
    2b7c:	88 0f       	add	r24, r24
    2b7e:	99 1f       	adc	r25, r25
    2b80:	0a 94       	dec	r0
    2b82:	e2 f7       	brpl	.-8      	; 0x2b7c <DIO_VidSetPinDirection+0x7a>
    2b84:	84 2b       	or	r24, r20
    2b86:	8c 93       	st	X, r24
    2b88:	b3 c0       	rjmp	.+358    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(DDRB,Copy_U8Pin);
    2b8a:	a7 e3       	ldi	r26, 0x37	; 55
    2b8c:	b0 e0       	ldi	r27, 0x00	; 0
    2b8e:	e7 e3       	ldi	r30, 0x37	; 55
    2b90:	f0 e0       	ldi	r31, 0x00	; 0
    2b92:	80 81       	ld	r24, Z
    2b94:	48 2f       	mov	r20, r24
    2b96:	8a 81       	ldd	r24, Y+2	; 0x02
    2b98:	28 2f       	mov	r18, r24
    2b9a:	30 e0       	ldi	r19, 0x00	; 0
    2b9c:	81 e0       	ldi	r24, 0x01	; 1
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	02 2e       	mov	r0, r18
    2ba2:	02 c0       	rjmp	.+4      	; 0x2ba8 <DIO_VidSetPinDirection+0xa6>
    2ba4:	88 0f       	add	r24, r24
    2ba6:	99 1f       	adc	r25, r25
    2ba8:	0a 94       	dec	r0
    2baa:	e2 f7       	brpl	.-8      	; 0x2ba4 <DIO_VidSetPinDirection+0xa2>
    2bac:	84 2b       	or	r24, r20
    2bae:	8c 93       	st	X, r24
    2bb0:	9f c0       	rjmp	.+318    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(DDRC,Copy_U8Pin);
    2bb2:	a4 e3       	ldi	r26, 0x34	; 52
    2bb4:	b0 e0       	ldi	r27, 0x00	; 0
    2bb6:	e4 e3       	ldi	r30, 0x34	; 52
    2bb8:	f0 e0       	ldi	r31, 0x00	; 0
    2bba:	80 81       	ld	r24, Z
    2bbc:	48 2f       	mov	r20, r24
    2bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    2bc0:	28 2f       	mov	r18, r24
    2bc2:	30 e0       	ldi	r19, 0x00	; 0
    2bc4:	81 e0       	ldi	r24, 0x01	; 1
    2bc6:	90 e0       	ldi	r25, 0x00	; 0
    2bc8:	02 2e       	mov	r0, r18
    2bca:	02 c0       	rjmp	.+4      	; 0x2bd0 <DIO_VidSetPinDirection+0xce>
    2bcc:	88 0f       	add	r24, r24
    2bce:	99 1f       	adc	r25, r25
    2bd0:	0a 94       	dec	r0
    2bd2:	e2 f7       	brpl	.-8      	; 0x2bcc <DIO_VidSetPinDirection+0xca>
    2bd4:	84 2b       	or	r24, r20
    2bd6:	8c 93       	st	X, r24
    2bd8:	8b c0       	rjmp	.+278    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(DDRD,Copy_U8Pin);
    2bda:	a1 e3       	ldi	r26, 0x31	; 49
    2bdc:	b0 e0       	ldi	r27, 0x00	; 0
    2bde:	e1 e3       	ldi	r30, 0x31	; 49
    2be0:	f0 e0       	ldi	r31, 0x00	; 0
    2be2:	80 81       	ld	r24, Z
    2be4:	48 2f       	mov	r20, r24
    2be6:	8a 81       	ldd	r24, Y+2	; 0x02
    2be8:	28 2f       	mov	r18, r24
    2bea:	30 e0       	ldi	r19, 0x00	; 0
    2bec:	81 e0       	ldi	r24, 0x01	; 1
    2bee:	90 e0       	ldi	r25, 0x00	; 0
    2bf0:	02 2e       	mov	r0, r18
    2bf2:	02 c0       	rjmp	.+4      	; 0x2bf8 <DIO_VidSetPinDirection+0xf6>
    2bf4:	88 0f       	add	r24, r24
    2bf6:	99 1f       	adc	r25, r25
    2bf8:	0a 94       	dec	r0
    2bfa:	e2 f7       	brpl	.-8      	; 0x2bf4 <DIO_VidSetPinDirection+0xf2>
    2bfc:	84 2b       	or	r24, r20
    2bfe:	8c 93       	st	X, r24
    2c00:	77 c0       	rjmp	.+238    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Dir ) {
    2c02:	8b 81       	ldd	r24, Y+3	; 0x03
    2c04:	88 23       	and	r24, r24
    2c06:	09 f0       	breq	.+2      	; 0x2c0a <DIO_VidSetPinDirection+0x108>
    2c08:	73 c0       	rjmp	.+230    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
		switch (Copy_U8Port){
    2c0a:	89 81       	ldd	r24, Y+1	; 0x01
    2c0c:	28 2f       	mov	r18, r24
    2c0e:	30 e0       	ldi	r19, 0x00	; 0
    2c10:	3d 83       	std	Y+5, r19	; 0x05
    2c12:	2c 83       	std	Y+4, r18	; 0x04
    2c14:	8c 81       	ldd	r24, Y+4	; 0x04
    2c16:	9d 81       	ldd	r25, Y+5	; 0x05
    2c18:	81 30       	cpi	r24, 0x01	; 1
    2c1a:	91 05       	cpc	r25, r1
    2c1c:	59 f1       	breq	.+86     	; 0x2c74 <DIO_VidSetPinDirection+0x172>
    2c1e:	2c 81       	ldd	r18, Y+4	; 0x04
    2c20:	3d 81       	ldd	r19, Y+5	; 0x05
    2c22:	22 30       	cpi	r18, 0x02	; 2
    2c24:	31 05       	cpc	r19, r1
    2c26:	2c f4       	brge	.+10     	; 0x2c32 <DIO_VidSetPinDirection+0x130>
    2c28:	8c 81       	ldd	r24, Y+4	; 0x04
    2c2a:	9d 81       	ldd	r25, Y+5	; 0x05
    2c2c:	00 97       	sbiw	r24, 0x00	; 0
    2c2e:	69 f0       	breq	.+26     	; 0x2c4a <DIO_VidSetPinDirection+0x148>
    2c30:	5f c0       	rjmp	.+190    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
    2c32:	2c 81       	ldd	r18, Y+4	; 0x04
    2c34:	3d 81       	ldd	r19, Y+5	; 0x05
    2c36:	22 30       	cpi	r18, 0x02	; 2
    2c38:	31 05       	cpc	r19, r1
    2c3a:	89 f1       	breq	.+98     	; 0x2c9e <DIO_VidSetPinDirection+0x19c>
    2c3c:	8c 81       	ldd	r24, Y+4	; 0x04
    2c3e:	9d 81       	ldd	r25, Y+5	; 0x05
    2c40:	83 30       	cpi	r24, 0x03	; 3
    2c42:	91 05       	cpc	r25, r1
    2c44:	09 f4       	brne	.+2      	; 0x2c48 <DIO_VidSetPinDirection+0x146>
    2c46:	40 c0       	rjmp	.+128    	; 0x2cc8 <DIO_VidSetPinDirection+0x1c6>
    2c48:	53 c0       	rjmp	.+166    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    CLR_BIT(DDRA,Copy_U8Pin);
    2c4a:	aa e3       	ldi	r26, 0x3A	; 58
    2c4c:	b0 e0       	ldi	r27, 0x00	; 0
    2c4e:	ea e3       	ldi	r30, 0x3A	; 58
    2c50:	f0 e0       	ldi	r31, 0x00	; 0
    2c52:	80 81       	ld	r24, Z
    2c54:	48 2f       	mov	r20, r24
    2c56:	8a 81       	ldd	r24, Y+2	; 0x02
    2c58:	28 2f       	mov	r18, r24
    2c5a:	30 e0       	ldi	r19, 0x00	; 0
    2c5c:	81 e0       	ldi	r24, 0x01	; 1
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	02 2e       	mov	r0, r18
    2c62:	02 c0       	rjmp	.+4      	; 0x2c68 <DIO_VidSetPinDirection+0x166>
    2c64:	88 0f       	add	r24, r24
    2c66:	99 1f       	adc	r25, r25
    2c68:	0a 94       	dec	r0
    2c6a:	e2 f7       	brpl	.-8      	; 0x2c64 <DIO_VidSetPinDirection+0x162>
    2c6c:	80 95       	com	r24
    2c6e:	84 23       	and	r24, r20
    2c70:	8c 93       	st	X, r24
    2c72:	3e c0       	rjmp	.+124    	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(DDRB,Copy_U8Pin);
    2c74:	a7 e3       	ldi	r26, 0x37	; 55
    2c76:	b0 e0       	ldi	r27, 0x00	; 0
    2c78:	e7 e3       	ldi	r30, 0x37	; 55
    2c7a:	f0 e0       	ldi	r31, 0x00	; 0
    2c7c:	80 81       	ld	r24, Z
    2c7e:	48 2f       	mov	r20, r24
    2c80:	8a 81       	ldd	r24, Y+2	; 0x02
    2c82:	28 2f       	mov	r18, r24
    2c84:	30 e0       	ldi	r19, 0x00	; 0
    2c86:	81 e0       	ldi	r24, 0x01	; 1
    2c88:	90 e0       	ldi	r25, 0x00	; 0
    2c8a:	02 2e       	mov	r0, r18
    2c8c:	02 c0       	rjmp	.+4      	; 0x2c92 <DIO_VidSetPinDirection+0x190>
    2c8e:	88 0f       	add	r24, r24
    2c90:	99 1f       	adc	r25, r25
    2c92:	0a 94       	dec	r0
    2c94:	e2 f7       	brpl	.-8      	; 0x2c8e <DIO_VidSetPinDirection+0x18c>
    2c96:	80 95       	com	r24
    2c98:	84 23       	and	r24, r20
    2c9a:	8c 93       	st	X, r24
    2c9c:	29 c0       	rjmp	.+82     	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(DDRC,Copy_U8Pin);
    2c9e:	a4 e3       	ldi	r26, 0x34	; 52
    2ca0:	b0 e0       	ldi	r27, 0x00	; 0
    2ca2:	e4 e3       	ldi	r30, 0x34	; 52
    2ca4:	f0 e0       	ldi	r31, 0x00	; 0
    2ca6:	80 81       	ld	r24, Z
    2ca8:	48 2f       	mov	r20, r24
    2caa:	8a 81       	ldd	r24, Y+2	; 0x02
    2cac:	28 2f       	mov	r18, r24
    2cae:	30 e0       	ldi	r19, 0x00	; 0
    2cb0:	81 e0       	ldi	r24, 0x01	; 1
    2cb2:	90 e0       	ldi	r25, 0x00	; 0
    2cb4:	02 2e       	mov	r0, r18
    2cb6:	02 c0       	rjmp	.+4      	; 0x2cbc <DIO_VidSetPinDirection+0x1ba>
    2cb8:	88 0f       	add	r24, r24
    2cba:	99 1f       	adc	r25, r25
    2cbc:	0a 94       	dec	r0
    2cbe:	e2 f7       	brpl	.-8      	; 0x2cb8 <DIO_VidSetPinDirection+0x1b6>
    2cc0:	80 95       	com	r24
    2cc2:	84 23       	and	r24, r20
    2cc4:	8c 93       	st	X, r24
    2cc6:	14 c0       	rjmp	.+40     	; 0x2cf0 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(DDRD,Copy_U8Pin);
    2cc8:	a1 e3       	ldi	r26, 0x31	; 49
    2cca:	b0 e0       	ldi	r27, 0x00	; 0
    2ccc:	e1 e3       	ldi	r30, 0x31	; 49
    2cce:	f0 e0       	ldi	r31, 0x00	; 0
    2cd0:	80 81       	ld	r24, Z
    2cd2:	48 2f       	mov	r20, r24
    2cd4:	8a 81       	ldd	r24, Y+2	; 0x02
    2cd6:	28 2f       	mov	r18, r24
    2cd8:	30 e0       	ldi	r19, 0x00	; 0
    2cda:	81 e0       	ldi	r24, 0x01	; 1
    2cdc:	90 e0       	ldi	r25, 0x00	; 0
    2cde:	02 2e       	mov	r0, r18
    2ce0:	02 c0       	rjmp	.+4      	; 0x2ce6 <DIO_VidSetPinDirection+0x1e4>
    2ce2:	88 0f       	add	r24, r24
    2ce4:	99 1f       	adc	r25, r25
    2ce6:	0a 94       	dec	r0
    2ce8:	e2 f7       	brpl	.-8      	; 0x2ce2 <DIO_VidSetPinDirection+0x1e0>
    2cea:	80 95       	com	r24
    2cec:	84 23       	and	r24, r20
    2cee:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if 
}//end FUNC DIO_VidSetPinDirection
    2cf0:	27 96       	adiw	r28, 0x07	; 7
    2cf2:	0f b6       	in	r0, 0x3f	; 63
    2cf4:	f8 94       	cli
    2cf6:	de bf       	out	0x3e, r29	; 62
    2cf8:	0f be       	out	0x3f, r0	; 63
    2cfa:	cd bf       	out	0x3d, r28	; 61
    2cfc:	cf 91       	pop	r28
    2cfe:	df 91       	pop	r29
    2d00:	08 95       	ret

00002d02 <DIO_VidSetPortDirection>:
void DIO_VidSetPortDirection (u8 Copy_U8Port , u8 Copy_U8Dir ) {
    2d02:	df 93       	push	r29
    2d04:	cf 93       	push	r28
    2d06:	00 d0       	rcall	.+0      	; 0x2d08 <DIO_VidSetPortDirection+0x6>
    2d08:	00 d0       	rcall	.+0      	; 0x2d0a <DIO_VidSetPortDirection+0x8>
    2d0a:	cd b7       	in	r28, 0x3d	; 61
    2d0c:	de b7       	in	r29, 0x3e	; 62
    2d0e:	89 83       	std	Y+1, r24	; 0x01
    2d10:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2d12:	89 81       	ldd	r24, Y+1	; 0x01
    2d14:	28 2f       	mov	r18, r24
    2d16:	30 e0       	ldi	r19, 0x00	; 0
    2d18:	3c 83       	std	Y+4, r19	; 0x04
    2d1a:	2b 83       	std	Y+3, r18	; 0x03
    2d1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d1e:	9c 81       	ldd	r25, Y+4	; 0x04
    2d20:	81 30       	cpi	r24, 0x01	; 1
    2d22:	91 05       	cpc	r25, r1
    2d24:	d1 f0       	breq	.+52     	; 0x2d5a <DIO_VidSetPortDirection+0x58>
    2d26:	2b 81       	ldd	r18, Y+3	; 0x03
    2d28:	3c 81       	ldd	r19, Y+4	; 0x04
    2d2a:	22 30       	cpi	r18, 0x02	; 2
    2d2c:	31 05       	cpc	r19, r1
    2d2e:	2c f4       	brge	.+10     	; 0x2d3a <DIO_VidSetPortDirection+0x38>
    2d30:	8b 81       	ldd	r24, Y+3	; 0x03
    2d32:	9c 81       	ldd	r25, Y+4	; 0x04
    2d34:	00 97       	sbiw	r24, 0x00	; 0
    2d36:	61 f0       	breq	.+24     	; 0x2d50 <DIO_VidSetPortDirection+0x4e>
    2d38:	1e c0       	rjmp	.+60     	; 0x2d76 <DIO_VidSetPortDirection+0x74>
    2d3a:	2b 81       	ldd	r18, Y+3	; 0x03
    2d3c:	3c 81       	ldd	r19, Y+4	; 0x04
    2d3e:	22 30       	cpi	r18, 0x02	; 2
    2d40:	31 05       	cpc	r19, r1
    2d42:	81 f0       	breq	.+32     	; 0x2d64 <DIO_VidSetPortDirection+0x62>
    2d44:	8b 81       	ldd	r24, Y+3	; 0x03
    2d46:	9c 81       	ldd	r25, Y+4	; 0x04
    2d48:	83 30       	cpi	r24, 0x03	; 3
    2d4a:	91 05       	cpc	r25, r1
    2d4c:	81 f0       	breq	.+32     	; 0x2d6e <DIO_VidSetPortDirection+0x6c>
    2d4e:	13 c0       	rjmp	.+38     	; 0x2d76 <DIO_VidSetPortDirection+0x74>
		case 0 : 
			DDRA = Copy_U8Dir ;
    2d50:	ea e3       	ldi	r30, 0x3A	; 58
    2d52:	f0 e0       	ldi	r31, 0x00	; 0
    2d54:	8a 81       	ldd	r24, Y+2	; 0x02
    2d56:	80 83       	st	Z, r24
    2d58:	0e c0       	rjmp	.+28     	; 0x2d76 <DIO_VidSetPortDirection+0x74>
			break ;  
		case 1 : 
			DDRB = Copy_U8Dir ;
    2d5a:	e7 e3       	ldi	r30, 0x37	; 55
    2d5c:	f0 e0       	ldi	r31, 0x00	; 0
    2d5e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d60:	80 83       	st	Z, r24
    2d62:	09 c0       	rjmp	.+18     	; 0x2d76 <DIO_VidSetPortDirection+0x74>
			break ;			
		case 2 : 
			DDRC = Copy_U8Dir ;
    2d64:	e4 e3       	ldi	r30, 0x34	; 52
    2d66:	f0 e0       	ldi	r31, 0x00	; 0
    2d68:	8a 81       	ldd	r24, Y+2	; 0x02
    2d6a:	80 83       	st	Z, r24
    2d6c:	04 c0       	rjmp	.+8      	; 0x2d76 <DIO_VidSetPortDirection+0x74>
			break ;  
		case 3 : 
			DDRD = Copy_U8Dir ;
    2d6e:	e1 e3       	ldi	r30, 0x31	; 49
    2d70:	f0 e0       	ldi	r31, 0x00	; 0
    2d72:	8a 81       	ldd	r24, Y+2	; 0x02
    2d74:	80 83       	st	Z, r24
			break ; 
		}//end switch
}// end FUNC DIO_VidSetPortDirection
    2d76:	0f 90       	pop	r0
    2d78:	0f 90       	pop	r0
    2d7a:	0f 90       	pop	r0
    2d7c:	0f 90       	pop	r0
    2d7e:	cf 91       	pop	r28
    2d80:	df 91       	pop	r29
    2d82:	08 95       	ret

00002d84 <DIO_VidSetPinValue>:
void DIO_VidSetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Val ) {
    2d84:	df 93       	push	r29
    2d86:	cf 93       	push	r28
    2d88:	cd b7       	in	r28, 0x3d	; 61
    2d8a:	de b7       	in	r29, 0x3e	; 62
    2d8c:	27 97       	sbiw	r28, 0x07	; 7
    2d8e:	0f b6       	in	r0, 0x3f	; 63
    2d90:	f8 94       	cli
    2d92:	de bf       	out	0x3e, r29	; 62
    2d94:	0f be       	out	0x3f, r0	; 63
    2d96:	cd bf       	out	0x3d, r28	; 61
    2d98:	89 83       	std	Y+1, r24	; 0x01
    2d9a:	6a 83       	std	Y+2, r22	; 0x02
    2d9c:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Val ){
    2d9e:	8b 81       	ldd	r24, Y+3	; 0x03
    2da0:	81 30       	cpi	r24, 0x01	; 1
    2da2:	09 f0       	breq	.+2      	; 0x2da6 <DIO_VidSetPinValue+0x22>
    2da4:	6f c0       	rjmp	.+222    	; 0x2e84 <DIO_VidSetPinValue+0x100>
		switch (Copy_U8Port){
    2da6:	89 81       	ldd	r24, Y+1	; 0x01
    2da8:	28 2f       	mov	r18, r24
    2daa:	30 e0       	ldi	r19, 0x00	; 0
    2dac:	3f 83       	std	Y+7, r19	; 0x07
    2dae:	2e 83       	std	Y+6, r18	; 0x06
    2db0:	8e 81       	ldd	r24, Y+6	; 0x06
    2db2:	9f 81       	ldd	r25, Y+7	; 0x07
    2db4:	81 30       	cpi	r24, 0x01	; 1
    2db6:	91 05       	cpc	r25, r1
    2db8:	49 f1       	breq	.+82     	; 0x2e0c <DIO_VidSetPinValue+0x88>
    2dba:	2e 81       	ldd	r18, Y+6	; 0x06
    2dbc:	3f 81       	ldd	r19, Y+7	; 0x07
    2dbe:	22 30       	cpi	r18, 0x02	; 2
    2dc0:	31 05       	cpc	r19, r1
    2dc2:	2c f4       	brge	.+10     	; 0x2dce <DIO_VidSetPinValue+0x4a>
    2dc4:	8e 81       	ldd	r24, Y+6	; 0x06
    2dc6:	9f 81       	ldd	r25, Y+7	; 0x07
    2dc8:	00 97       	sbiw	r24, 0x00	; 0
    2dca:	61 f0       	breq	.+24     	; 0x2de4 <DIO_VidSetPinValue+0x60>
    2dcc:	d2 c0       	rjmp	.+420    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
    2dce:	2e 81       	ldd	r18, Y+6	; 0x06
    2dd0:	3f 81       	ldd	r19, Y+7	; 0x07
    2dd2:	22 30       	cpi	r18, 0x02	; 2
    2dd4:	31 05       	cpc	r19, r1
    2dd6:	71 f1       	breq	.+92     	; 0x2e34 <DIO_VidSetPinValue+0xb0>
    2dd8:	8e 81       	ldd	r24, Y+6	; 0x06
    2dda:	9f 81       	ldd	r25, Y+7	; 0x07
    2ddc:	83 30       	cpi	r24, 0x03	; 3
    2dde:	91 05       	cpc	r25, r1
    2de0:	e9 f1       	breq	.+122    	; 0x2e5c <DIO_VidSetPinValue+0xd8>
    2de2:	c7 c0       	rjmp	.+398    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    SET_BIT(PORTA,Copy_U8Pin);
    2de4:	ab e3       	ldi	r26, 0x3B	; 59
    2de6:	b0 e0       	ldi	r27, 0x00	; 0
    2de8:	eb e3       	ldi	r30, 0x3B	; 59
    2dea:	f0 e0       	ldi	r31, 0x00	; 0
    2dec:	80 81       	ld	r24, Z
    2dee:	48 2f       	mov	r20, r24
    2df0:	8a 81       	ldd	r24, Y+2	; 0x02
    2df2:	28 2f       	mov	r18, r24
    2df4:	30 e0       	ldi	r19, 0x00	; 0
    2df6:	81 e0       	ldi	r24, 0x01	; 1
    2df8:	90 e0       	ldi	r25, 0x00	; 0
    2dfa:	02 2e       	mov	r0, r18
    2dfc:	02 c0       	rjmp	.+4      	; 0x2e02 <DIO_VidSetPinValue+0x7e>
    2dfe:	88 0f       	add	r24, r24
    2e00:	99 1f       	adc	r25, r25
    2e02:	0a 94       	dec	r0
    2e04:	e2 f7       	brpl	.-8      	; 0x2dfe <DIO_VidSetPinValue+0x7a>
    2e06:	84 2b       	or	r24, r20
    2e08:	8c 93       	st	X, r24
    2e0a:	b3 c0       	rjmp	.+358    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(PORTB,Copy_U8Pin);
    2e0c:	a8 e3       	ldi	r26, 0x38	; 56
    2e0e:	b0 e0       	ldi	r27, 0x00	; 0
    2e10:	e8 e3       	ldi	r30, 0x38	; 56
    2e12:	f0 e0       	ldi	r31, 0x00	; 0
    2e14:	80 81       	ld	r24, Z
    2e16:	48 2f       	mov	r20, r24
    2e18:	8a 81       	ldd	r24, Y+2	; 0x02
    2e1a:	28 2f       	mov	r18, r24
    2e1c:	30 e0       	ldi	r19, 0x00	; 0
    2e1e:	81 e0       	ldi	r24, 0x01	; 1
    2e20:	90 e0       	ldi	r25, 0x00	; 0
    2e22:	02 2e       	mov	r0, r18
    2e24:	02 c0       	rjmp	.+4      	; 0x2e2a <DIO_VidSetPinValue+0xa6>
    2e26:	88 0f       	add	r24, r24
    2e28:	99 1f       	adc	r25, r25
    2e2a:	0a 94       	dec	r0
    2e2c:	e2 f7       	brpl	.-8      	; 0x2e26 <DIO_VidSetPinValue+0xa2>
    2e2e:	84 2b       	or	r24, r20
    2e30:	8c 93       	st	X, r24
    2e32:	9f c0       	rjmp	.+318    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(PORTC,Copy_U8Pin);
    2e34:	a5 e3       	ldi	r26, 0x35	; 53
    2e36:	b0 e0       	ldi	r27, 0x00	; 0
    2e38:	e5 e3       	ldi	r30, 0x35	; 53
    2e3a:	f0 e0       	ldi	r31, 0x00	; 0
    2e3c:	80 81       	ld	r24, Z
    2e3e:	48 2f       	mov	r20, r24
    2e40:	8a 81       	ldd	r24, Y+2	; 0x02
    2e42:	28 2f       	mov	r18, r24
    2e44:	30 e0       	ldi	r19, 0x00	; 0
    2e46:	81 e0       	ldi	r24, 0x01	; 1
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	02 2e       	mov	r0, r18
    2e4c:	02 c0       	rjmp	.+4      	; 0x2e52 <DIO_VidSetPinValue+0xce>
    2e4e:	88 0f       	add	r24, r24
    2e50:	99 1f       	adc	r25, r25
    2e52:	0a 94       	dec	r0
    2e54:	e2 f7       	brpl	.-8      	; 0x2e4e <DIO_VidSetPinValue+0xca>
    2e56:	84 2b       	or	r24, r20
    2e58:	8c 93       	st	X, r24
    2e5a:	8b c0       	rjmp	.+278    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(PORTD,Copy_U8Pin);
    2e5c:	a2 e3       	ldi	r26, 0x32	; 50
    2e5e:	b0 e0       	ldi	r27, 0x00	; 0
    2e60:	e2 e3       	ldi	r30, 0x32	; 50
    2e62:	f0 e0       	ldi	r31, 0x00	; 0
    2e64:	80 81       	ld	r24, Z
    2e66:	48 2f       	mov	r20, r24
    2e68:	8a 81       	ldd	r24, Y+2	; 0x02
    2e6a:	28 2f       	mov	r18, r24
    2e6c:	30 e0       	ldi	r19, 0x00	; 0
    2e6e:	81 e0       	ldi	r24, 0x01	; 1
    2e70:	90 e0       	ldi	r25, 0x00	; 0
    2e72:	02 2e       	mov	r0, r18
    2e74:	02 c0       	rjmp	.+4      	; 0x2e7a <DIO_VidSetPinValue+0xf6>
    2e76:	88 0f       	add	r24, r24
    2e78:	99 1f       	adc	r25, r25
    2e7a:	0a 94       	dec	r0
    2e7c:	e2 f7       	brpl	.-8      	; 0x2e76 <DIO_VidSetPinValue+0xf2>
    2e7e:	84 2b       	or	r24, r20
    2e80:	8c 93       	st	X, r24
    2e82:	77 c0       	rjmp	.+238    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Val){
    2e84:	8b 81       	ldd	r24, Y+3	; 0x03
    2e86:	88 23       	and	r24, r24
    2e88:	09 f0       	breq	.+2      	; 0x2e8c <DIO_VidSetPinValue+0x108>
    2e8a:	73 c0       	rjmp	.+230    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
		switch (Copy_U8Port){
    2e8c:	89 81       	ldd	r24, Y+1	; 0x01
    2e8e:	28 2f       	mov	r18, r24
    2e90:	30 e0       	ldi	r19, 0x00	; 0
    2e92:	3d 83       	std	Y+5, r19	; 0x05
    2e94:	2c 83       	std	Y+4, r18	; 0x04
    2e96:	8c 81       	ldd	r24, Y+4	; 0x04
    2e98:	9d 81       	ldd	r25, Y+5	; 0x05
    2e9a:	81 30       	cpi	r24, 0x01	; 1
    2e9c:	91 05       	cpc	r25, r1
    2e9e:	59 f1       	breq	.+86     	; 0x2ef6 <DIO_VidSetPinValue+0x172>
    2ea0:	2c 81       	ldd	r18, Y+4	; 0x04
    2ea2:	3d 81       	ldd	r19, Y+5	; 0x05
    2ea4:	22 30       	cpi	r18, 0x02	; 2
    2ea6:	31 05       	cpc	r19, r1
    2ea8:	2c f4       	brge	.+10     	; 0x2eb4 <DIO_VidSetPinValue+0x130>
    2eaa:	8c 81       	ldd	r24, Y+4	; 0x04
    2eac:	9d 81       	ldd	r25, Y+5	; 0x05
    2eae:	00 97       	sbiw	r24, 0x00	; 0
    2eb0:	69 f0       	breq	.+26     	; 0x2ecc <DIO_VidSetPinValue+0x148>
    2eb2:	5f c0       	rjmp	.+190    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
    2eb4:	2c 81       	ldd	r18, Y+4	; 0x04
    2eb6:	3d 81       	ldd	r19, Y+5	; 0x05
    2eb8:	22 30       	cpi	r18, 0x02	; 2
    2eba:	31 05       	cpc	r19, r1
    2ebc:	89 f1       	breq	.+98     	; 0x2f20 <DIO_VidSetPinValue+0x19c>
    2ebe:	8c 81       	ldd	r24, Y+4	; 0x04
    2ec0:	9d 81       	ldd	r25, Y+5	; 0x05
    2ec2:	83 30       	cpi	r24, 0x03	; 3
    2ec4:	91 05       	cpc	r25, r1
    2ec6:	09 f4       	brne	.+2      	; 0x2eca <DIO_VidSetPinValue+0x146>
    2ec8:	40 c0       	rjmp	.+128    	; 0x2f4a <DIO_VidSetPinValue+0x1c6>
    2eca:	53 c0       	rjmp	.+166    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    CLR_BIT(PORTA,Copy_U8Pin);
    2ecc:	ab e3       	ldi	r26, 0x3B	; 59
    2ece:	b0 e0       	ldi	r27, 0x00	; 0
    2ed0:	eb e3       	ldi	r30, 0x3B	; 59
    2ed2:	f0 e0       	ldi	r31, 0x00	; 0
    2ed4:	80 81       	ld	r24, Z
    2ed6:	48 2f       	mov	r20, r24
    2ed8:	8a 81       	ldd	r24, Y+2	; 0x02
    2eda:	28 2f       	mov	r18, r24
    2edc:	30 e0       	ldi	r19, 0x00	; 0
    2ede:	81 e0       	ldi	r24, 0x01	; 1
    2ee0:	90 e0       	ldi	r25, 0x00	; 0
    2ee2:	02 2e       	mov	r0, r18
    2ee4:	02 c0       	rjmp	.+4      	; 0x2eea <DIO_VidSetPinValue+0x166>
    2ee6:	88 0f       	add	r24, r24
    2ee8:	99 1f       	adc	r25, r25
    2eea:	0a 94       	dec	r0
    2eec:	e2 f7       	brpl	.-8      	; 0x2ee6 <DIO_VidSetPinValue+0x162>
    2eee:	80 95       	com	r24
    2ef0:	84 23       	and	r24, r20
    2ef2:	8c 93       	st	X, r24
    2ef4:	3e c0       	rjmp	.+124    	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(PORTB,Copy_U8Pin);
    2ef6:	a8 e3       	ldi	r26, 0x38	; 56
    2ef8:	b0 e0       	ldi	r27, 0x00	; 0
    2efa:	e8 e3       	ldi	r30, 0x38	; 56
    2efc:	f0 e0       	ldi	r31, 0x00	; 0
    2efe:	80 81       	ld	r24, Z
    2f00:	48 2f       	mov	r20, r24
    2f02:	8a 81       	ldd	r24, Y+2	; 0x02
    2f04:	28 2f       	mov	r18, r24
    2f06:	30 e0       	ldi	r19, 0x00	; 0
    2f08:	81 e0       	ldi	r24, 0x01	; 1
    2f0a:	90 e0       	ldi	r25, 0x00	; 0
    2f0c:	02 2e       	mov	r0, r18
    2f0e:	02 c0       	rjmp	.+4      	; 0x2f14 <DIO_VidSetPinValue+0x190>
    2f10:	88 0f       	add	r24, r24
    2f12:	99 1f       	adc	r25, r25
    2f14:	0a 94       	dec	r0
    2f16:	e2 f7       	brpl	.-8      	; 0x2f10 <DIO_VidSetPinValue+0x18c>
    2f18:	80 95       	com	r24
    2f1a:	84 23       	and	r24, r20
    2f1c:	8c 93       	st	X, r24
    2f1e:	29 c0       	rjmp	.+82     	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(PORTC,Copy_U8Pin);
    2f20:	a5 e3       	ldi	r26, 0x35	; 53
    2f22:	b0 e0       	ldi	r27, 0x00	; 0
    2f24:	e5 e3       	ldi	r30, 0x35	; 53
    2f26:	f0 e0       	ldi	r31, 0x00	; 0
    2f28:	80 81       	ld	r24, Z
    2f2a:	48 2f       	mov	r20, r24
    2f2c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f2e:	28 2f       	mov	r18, r24
    2f30:	30 e0       	ldi	r19, 0x00	; 0
    2f32:	81 e0       	ldi	r24, 0x01	; 1
    2f34:	90 e0       	ldi	r25, 0x00	; 0
    2f36:	02 2e       	mov	r0, r18
    2f38:	02 c0       	rjmp	.+4      	; 0x2f3e <DIO_VidSetPinValue+0x1ba>
    2f3a:	88 0f       	add	r24, r24
    2f3c:	99 1f       	adc	r25, r25
    2f3e:	0a 94       	dec	r0
    2f40:	e2 f7       	brpl	.-8      	; 0x2f3a <DIO_VidSetPinValue+0x1b6>
    2f42:	80 95       	com	r24
    2f44:	84 23       	and	r24, r20
    2f46:	8c 93       	st	X, r24
    2f48:	14 c0       	rjmp	.+40     	; 0x2f72 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(PORTD,Copy_U8Pin);
    2f4a:	a2 e3       	ldi	r26, 0x32	; 50
    2f4c:	b0 e0       	ldi	r27, 0x00	; 0
    2f4e:	e2 e3       	ldi	r30, 0x32	; 50
    2f50:	f0 e0       	ldi	r31, 0x00	; 0
    2f52:	80 81       	ld	r24, Z
    2f54:	48 2f       	mov	r20, r24
    2f56:	8a 81       	ldd	r24, Y+2	; 0x02
    2f58:	28 2f       	mov	r18, r24
    2f5a:	30 e0       	ldi	r19, 0x00	; 0
    2f5c:	81 e0       	ldi	r24, 0x01	; 1
    2f5e:	90 e0       	ldi	r25, 0x00	; 0
    2f60:	02 2e       	mov	r0, r18
    2f62:	02 c0       	rjmp	.+4      	; 0x2f68 <DIO_VidSetPinValue+0x1e4>
    2f64:	88 0f       	add	r24, r24
    2f66:	99 1f       	adc	r25, r25
    2f68:	0a 94       	dec	r0
    2f6a:	e2 f7       	brpl	.-8      	; 0x2f64 <DIO_VidSetPinValue+0x1e0>
    2f6c:	80 95       	com	r24
    2f6e:	84 23       	and	r24, r20
    2f70:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if
}// end FUNC DIO_VidSetPinValue
    2f72:	27 96       	adiw	r28, 0x07	; 7
    2f74:	0f b6       	in	r0, 0x3f	; 63
    2f76:	f8 94       	cli
    2f78:	de bf       	out	0x3e, r29	; 62
    2f7a:	0f be       	out	0x3f, r0	; 63
    2f7c:	cd bf       	out	0x3d, r28	; 61
    2f7e:	cf 91       	pop	r28
    2f80:	df 91       	pop	r29
    2f82:	08 95       	ret

00002f84 <DIO_VidSetPortValue>:
void DIO_VidSetPortValue (u8 Copy_U8Port , u8 Copy_U8Val ) {
    2f84:	df 93       	push	r29
    2f86:	cf 93       	push	r28
    2f88:	00 d0       	rcall	.+0      	; 0x2f8a <DIO_VidSetPortValue+0x6>
    2f8a:	00 d0       	rcall	.+0      	; 0x2f8c <DIO_VidSetPortValue+0x8>
    2f8c:	cd b7       	in	r28, 0x3d	; 61
    2f8e:	de b7       	in	r29, 0x3e	; 62
    2f90:	89 83       	std	Y+1, r24	; 0x01
    2f92:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2f94:	89 81       	ldd	r24, Y+1	; 0x01
    2f96:	28 2f       	mov	r18, r24
    2f98:	30 e0       	ldi	r19, 0x00	; 0
    2f9a:	3c 83       	std	Y+4, r19	; 0x04
    2f9c:	2b 83       	std	Y+3, r18	; 0x03
    2f9e:	8b 81       	ldd	r24, Y+3	; 0x03
    2fa0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fa2:	81 30       	cpi	r24, 0x01	; 1
    2fa4:	91 05       	cpc	r25, r1
    2fa6:	d1 f0       	breq	.+52     	; 0x2fdc <DIO_VidSetPortValue+0x58>
    2fa8:	2b 81       	ldd	r18, Y+3	; 0x03
    2faa:	3c 81       	ldd	r19, Y+4	; 0x04
    2fac:	22 30       	cpi	r18, 0x02	; 2
    2fae:	31 05       	cpc	r19, r1
    2fb0:	2c f4       	brge	.+10     	; 0x2fbc <DIO_VidSetPortValue+0x38>
    2fb2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fb4:	9c 81       	ldd	r25, Y+4	; 0x04
    2fb6:	00 97       	sbiw	r24, 0x00	; 0
    2fb8:	61 f0       	breq	.+24     	; 0x2fd2 <DIO_VidSetPortValue+0x4e>
    2fba:	1e c0       	rjmp	.+60     	; 0x2ff8 <DIO_VidSetPortValue+0x74>
    2fbc:	2b 81       	ldd	r18, Y+3	; 0x03
    2fbe:	3c 81       	ldd	r19, Y+4	; 0x04
    2fc0:	22 30       	cpi	r18, 0x02	; 2
    2fc2:	31 05       	cpc	r19, r1
    2fc4:	81 f0       	breq	.+32     	; 0x2fe6 <DIO_VidSetPortValue+0x62>
    2fc6:	8b 81       	ldd	r24, Y+3	; 0x03
    2fc8:	9c 81       	ldd	r25, Y+4	; 0x04
    2fca:	83 30       	cpi	r24, 0x03	; 3
    2fcc:	91 05       	cpc	r25, r1
    2fce:	81 f0       	breq	.+32     	; 0x2ff0 <DIO_VidSetPortValue+0x6c>
    2fd0:	13 c0       	rjmp	.+38     	; 0x2ff8 <DIO_VidSetPortValue+0x74>
		case 0 : 
			PORTA = Copy_U8Val ;
    2fd2:	eb e3       	ldi	r30, 0x3B	; 59
    2fd4:	f0 e0       	ldi	r31, 0x00	; 0
    2fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    2fd8:	80 83       	st	Z, r24
    2fda:	0e c0       	rjmp	.+28     	; 0x2ff8 <DIO_VidSetPortValue+0x74>
			break ;  
		case 1 : 
			PORTB = Copy_U8Val ;
    2fdc:	e8 e3       	ldi	r30, 0x38	; 56
    2fde:	f0 e0       	ldi	r31, 0x00	; 0
    2fe0:	8a 81       	ldd	r24, Y+2	; 0x02
    2fe2:	80 83       	st	Z, r24
    2fe4:	09 c0       	rjmp	.+18     	; 0x2ff8 <DIO_VidSetPortValue+0x74>
			break ;			
		case 2 : 
			PORTC = Copy_U8Val ;
    2fe6:	e5 e3       	ldi	r30, 0x35	; 53
    2fe8:	f0 e0       	ldi	r31, 0x00	; 0
    2fea:	8a 81       	ldd	r24, Y+2	; 0x02
    2fec:	80 83       	st	Z, r24
    2fee:	04 c0       	rjmp	.+8      	; 0x2ff8 <DIO_VidSetPortValue+0x74>
			break ;  
		case 3 : 
			PORTD = Copy_U8Val ;
    2ff0:	e2 e3       	ldi	r30, 0x32	; 50
    2ff2:	f0 e0       	ldi	r31, 0x00	; 0
    2ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ff6:	80 83       	st	Z, r24
			break ; 
		}//end switch
}//end FUNC DIO_VidSetPortValue
    2ff8:	0f 90       	pop	r0
    2ffa:	0f 90       	pop	r0
    2ffc:	0f 90       	pop	r0
    2ffe:	0f 90       	pop	r0
    3000:	cf 91       	pop	r28
    3002:	df 91       	pop	r29
    3004:	08 95       	ret

00003006 <DIO_VidTogglePinValue>:
void DIO_VidTogglePinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    3006:	df 93       	push	r29
    3008:	cf 93       	push	r28
    300a:	00 d0       	rcall	.+0      	; 0x300c <DIO_VidTogglePinValue+0x6>
    300c:	00 d0       	rcall	.+0      	; 0x300e <DIO_VidTogglePinValue+0x8>
    300e:	cd b7       	in	r28, 0x3d	; 61
    3010:	de b7       	in	r29, 0x3e	; 62
    3012:	89 83       	std	Y+1, r24	; 0x01
    3014:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    3016:	89 81       	ldd	r24, Y+1	; 0x01
    3018:	28 2f       	mov	r18, r24
    301a:	30 e0       	ldi	r19, 0x00	; 0
    301c:	3c 83       	std	Y+4, r19	; 0x04
    301e:	2b 83       	std	Y+3, r18	; 0x03
    3020:	8b 81       	ldd	r24, Y+3	; 0x03
    3022:	9c 81       	ldd	r25, Y+4	; 0x04
    3024:	81 30       	cpi	r24, 0x01	; 1
    3026:	91 05       	cpc	r25, r1
    3028:	49 f1       	breq	.+82     	; 0x307c <DIO_VidTogglePinValue+0x76>
    302a:	2b 81       	ldd	r18, Y+3	; 0x03
    302c:	3c 81       	ldd	r19, Y+4	; 0x04
    302e:	22 30       	cpi	r18, 0x02	; 2
    3030:	31 05       	cpc	r19, r1
    3032:	2c f4       	brge	.+10     	; 0x303e <DIO_VidTogglePinValue+0x38>
    3034:	8b 81       	ldd	r24, Y+3	; 0x03
    3036:	9c 81       	ldd	r25, Y+4	; 0x04
    3038:	00 97       	sbiw	r24, 0x00	; 0
    303a:	61 f0       	breq	.+24     	; 0x3054 <DIO_VidTogglePinValue+0x4e>
    303c:	5a c0       	rjmp	.+180    	; 0x30f2 <DIO_VidTogglePinValue+0xec>
    303e:	2b 81       	ldd	r18, Y+3	; 0x03
    3040:	3c 81       	ldd	r19, Y+4	; 0x04
    3042:	22 30       	cpi	r18, 0x02	; 2
    3044:	31 05       	cpc	r19, r1
    3046:	71 f1       	breq	.+92     	; 0x30a4 <DIO_VidTogglePinValue+0x9e>
    3048:	8b 81       	ldd	r24, Y+3	; 0x03
    304a:	9c 81       	ldd	r25, Y+4	; 0x04
    304c:	83 30       	cpi	r24, 0x03	; 3
    304e:	91 05       	cpc	r25, r1
    3050:	e9 f1       	breq	.+122    	; 0x30cc <DIO_VidTogglePinValue+0xc6>
    3052:	4f c0       	rjmp	.+158    	; 0x30f2 <DIO_VidTogglePinValue+0xec>
		case 0 : 
		    TOGGLE_BIT( PORTA , Copy_U8Pin ) ;
    3054:	ab e3       	ldi	r26, 0x3B	; 59
    3056:	b0 e0       	ldi	r27, 0x00	; 0
    3058:	eb e3       	ldi	r30, 0x3B	; 59
    305a:	f0 e0       	ldi	r31, 0x00	; 0
    305c:	80 81       	ld	r24, Z
    305e:	48 2f       	mov	r20, r24
    3060:	8a 81       	ldd	r24, Y+2	; 0x02
    3062:	28 2f       	mov	r18, r24
    3064:	30 e0       	ldi	r19, 0x00	; 0
    3066:	81 e0       	ldi	r24, 0x01	; 1
    3068:	90 e0       	ldi	r25, 0x00	; 0
    306a:	02 2e       	mov	r0, r18
    306c:	02 c0       	rjmp	.+4      	; 0x3072 <DIO_VidTogglePinValue+0x6c>
    306e:	88 0f       	add	r24, r24
    3070:	99 1f       	adc	r25, r25
    3072:	0a 94       	dec	r0
    3074:	e2 f7       	brpl	.-8      	; 0x306e <DIO_VidTogglePinValue+0x68>
    3076:	84 27       	eor	r24, r20
    3078:	8c 93       	st	X, r24
    307a:	3b c0       	rjmp	.+118    	; 0x30f2 <DIO_VidTogglePinValue+0xec>
			break ;  
		case 1 : 
			TOGGLE_BIT( PORTB , Copy_U8Pin ) ;
    307c:	a8 e3       	ldi	r26, 0x38	; 56
    307e:	b0 e0       	ldi	r27, 0x00	; 0
    3080:	e8 e3       	ldi	r30, 0x38	; 56
    3082:	f0 e0       	ldi	r31, 0x00	; 0
    3084:	80 81       	ld	r24, Z
    3086:	48 2f       	mov	r20, r24
    3088:	8a 81       	ldd	r24, Y+2	; 0x02
    308a:	28 2f       	mov	r18, r24
    308c:	30 e0       	ldi	r19, 0x00	; 0
    308e:	81 e0       	ldi	r24, 0x01	; 1
    3090:	90 e0       	ldi	r25, 0x00	; 0
    3092:	02 2e       	mov	r0, r18
    3094:	02 c0       	rjmp	.+4      	; 0x309a <DIO_VidTogglePinValue+0x94>
    3096:	88 0f       	add	r24, r24
    3098:	99 1f       	adc	r25, r25
    309a:	0a 94       	dec	r0
    309c:	e2 f7       	brpl	.-8      	; 0x3096 <DIO_VidTogglePinValue+0x90>
    309e:	84 27       	eor	r24, r20
    30a0:	8c 93       	st	X, r24
    30a2:	27 c0       	rjmp	.+78     	; 0x30f2 <DIO_VidTogglePinValue+0xec>
			break ;			
		case 2 : 
			TOGGLE_BIT( PORTC , Copy_U8Pin ) ;
    30a4:	a5 e3       	ldi	r26, 0x35	; 53
    30a6:	b0 e0       	ldi	r27, 0x00	; 0
    30a8:	e5 e3       	ldi	r30, 0x35	; 53
    30aa:	f0 e0       	ldi	r31, 0x00	; 0
    30ac:	80 81       	ld	r24, Z
    30ae:	48 2f       	mov	r20, r24
    30b0:	8a 81       	ldd	r24, Y+2	; 0x02
    30b2:	28 2f       	mov	r18, r24
    30b4:	30 e0       	ldi	r19, 0x00	; 0
    30b6:	81 e0       	ldi	r24, 0x01	; 1
    30b8:	90 e0       	ldi	r25, 0x00	; 0
    30ba:	02 2e       	mov	r0, r18
    30bc:	02 c0       	rjmp	.+4      	; 0x30c2 <DIO_VidTogglePinValue+0xbc>
    30be:	88 0f       	add	r24, r24
    30c0:	99 1f       	adc	r25, r25
    30c2:	0a 94       	dec	r0
    30c4:	e2 f7       	brpl	.-8      	; 0x30be <DIO_VidTogglePinValue+0xb8>
    30c6:	84 27       	eor	r24, r20
    30c8:	8c 93       	st	X, r24
    30ca:	13 c0       	rjmp	.+38     	; 0x30f2 <DIO_VidTogglePinValue+0xec>
			break ;  
		case 3 : 
			TOGGLE_BIT( PORTD , Copy_U8Pin ) ;
    30cc:	a2 e3       	ldi	r26, 0x32	; 50
    30ce:	b0 e0       	ldi	r27, 0x00	; 0
    30d0:	e2 e3       	ldi	r30, 0x32	; 50
    30d2:	f0 e0       	ldi	r31, 0x00	; 0
    30d4:	80 81       	ld	r24, Z
    30d6:	48 2f       	mov	r20, r24
    30d8:	8a 81       	ldd	r24, Y+2	; 0x02
    30da:	28 2f       	mov	r18, r24
    30dc:	30 e0       	ldi	r19, 0x00	; 0
    30de:	81 e0       	ldi	r24, 0x01	; 1
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	02 2e       	mov	r0, r18
    30e4:	02 c0       	rjmp	.+4      	; 0x30ea <DIO_VidTogglePinValue+0xe4>
    30e6:	88 0f       	add	r24, r24
    30e8:	99 1f       	adc	r25, r25
    30ea:	0a 94       	dec	r0
    30ec:	e2 f7       	brpl	.-8      	; 0x30e6 <DIO_VidTogglePinValue+0xe0>
    30ee:	84 27       	eor	r24, r20
    30f0:	8c 93       	st	X, r24
			break ; 
	}//end switch
}//end FUNC DIO_VidTogglePinValue
    30f2:	0f 90       	pop	r0
    30f4:	0f 90       	pop	r0
    30f6:	0f 90       	pop	r0
    30f8:	0f 90       	pop	r0
    30fa:	cf 91       	pop	r28
    30fc:	df 91       	pop	r29
    30fe:	08 95       	ret

00003100 <DIO_U8GetPinValue>:
u8 DIO_U8GetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    3100:	df 93       	push	r29
    3102:	cf 93       	push	r28
    3104:	00 d0       	rcall	.+0      	; 0x3106 <DIO_U8GetPinValue+0x6>
    3106:	00 d0       	rcall	.+0      	; 0x3108 <DIO_U8GetPinValue+0x8>
    3108:	00 d0       	rcall	.+0      	; 0x310a <DIO_U8GetPinValue+0xa>
    310a:	cd b7       	in	r28, 0x3d	; 61
    310c:	de b7       	in	r29, 0x3e	; 62
    310e:	89 83       	std	Y+1, r24	; 0x01
    3110:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    3112:	89 81       	ldd	r24, Y+1	; 0x01
    3114:	28 2f       	mov	r18, r24
    3116:	30 e0       	ldi	r19, 0x00	; 0
    3118:	3d 83       	std	Y+5, r19	; 0x05
    311a:	2c 83       	std	Y+4, r18	; 0x04
    311c:	4c 81       	ldd	r20, Y+4	; 0x04
    311e:	5d 81       	ldd	r21, Y+5	; 0x05
    3120:	41 30       	cpi	r20, 0x01	; 1
    3122:	51 05       	cpc	r21, r1
    3124:	49 f1       	breq	.+82     	; 0x3178 <DIO_U8GetPinValue+0x78>
    3126:	8c 81       	ldd	r24, Y+4	; 0x04
    3128:	9d 81       	ldd	r25, Y+5	; 0x05
    312a:	82 30       	cpi	r24, 0x02	; 2
    312c:	91 05       	cpc	r25, r1
    312e:	34 f4       	brge	.+12     	; 0x313c <DIO_U8GetPinValue+0x3c>
    3130:	2c 81       	ldd	r18, Y+4	; 0x04
    3132:	3d 81       	ldd	r19, Y+5	; 0x05
    3134:	21 15       	cp	r18, r1
    3136:	31 05       	cpc	r19, r1
    3138:	61 f0       	breq	.+24     	; 0x3152 <DIO_U8GetPinValue+0x52>
    313a:	57 c0       	rjmp	.+174    	; 0x31ea <DIO_U8GetPinValue+0xea>
    313c:	4c 81       	ldd	r20, Y+4	; 0x04
    313e:	5d 81       	ldd	r21, Y+5	; 0x05
    3140:	42 30       	cpi	r20, 0x02	; 2
    3142:	51 05       	cpc	r21, r1
    3144:	61 f1       	breq	.+88     	; 0x319e <DIO_U8GetPinValue+0x9e>
    3146:	8c 81       	ldd	r24, Y+4	; 0x04
    3148:	9d 81       	ldd	r25, Y+5	; 0x05
    314a:	83 30       	cpi	r24, 0x03	; 3
    314c:	91 05       	cpc	r25, r1
    314e:	d1 f1       	breq	.+116    	; 0x31c4 <DIO_U8GetPinValue+0xc4>
    3150:	4c c0       	rjmp	.+152    	; 0x31ea <DIO_U8GetPinValue+0xea>
		case 0 : 
		   return GET_BIT( PINA , Copy_U8Pin ) ;
    3152:	e9 e3       	ldi	r30, 0x39	; 57
    3154:	f0 e0       	ldi	r31, 0x00	; 0
    3156:	80 81       	ld	r24, Z
    3158:	28 2f       	mov	r18, r24
    315a:	30 e0       	ldi	r19, 0x00	; 0
    315c:	8a 81       	ldd	r24, Y+2	; 0x02
    315e:	88 2f       	mov	r24, r24
    3160:	90 e0       	ldi	r25, 0x00	; 0
    3162:	a9 01       	movw	r20, r18
    3164:	02 c0       	rjmp	.+4      	; 0x316a <DIO_U8GetPinValue+0x6a>
    3166:	55 95       	asr	r21
    3168:	47 95       	ror	r20
    316a:	8a 95       	dec	r24
    316c:	e2 f7       	brpl	.-8      	; 0x3166 <DIO_U8GetPinValue+0x66>
    316e:	ca 01       	movw	r24, r20
    3170:	58 2f       	mov	r21, r24
    3172:	51 70       	andi	r21, 0x01	; 1
    3174:	5b 83       	std	Y+3, r21	; 0x03
    3176:	3a c0       	rjmp	.+116    	; 0x31ec <DIO_U8GetPinValue+0xec>
		case 1 : 
			return GET_BIT( PINB , Copy_U8Pin ) ;
    3178:	e6 e3       	ldi	r30, 0x36	; 54
    317a:	f0 e0       	ldi	r31, 0x00	; 0
    317c:	80 81       	ld	r24, Z
    317e:	28 2f       	mov	r18, r24
    3180:	30 e0       	ldi	r19, 0x00	; 0
    3182:	8a 81       	ldd	r24, Y+2	; 0x02
    3184:	88 2f       	mov	r24, r24
    3186:	90 e0       	ldi	r25, 0x00	; 0
    3188:	a9 01       	movw	r20, r18
    318a:	02 c0       	rjmp	.+4      	; 0x3190 <DIO_U8GetPinValue+0x90>
    318c:	55 95       	asr	r21
    318e:	47 95       	ror	r20
    3190:	8a 95       	dec	r24
    3192:	e2 f7       	brpl	.-8      	; 0x318c <DIO_U8GetPinValue+0x8c>
    3194:	ca 01       	movw	r24, r20
    3196:	58 2f       	mov	r21, r24
    3198:	51 70       	andi	r21, 0x01	; 1
    319a:	5b 83       	std	Y+3, r21	; 0x03
    319c:	27 c0       	rjmp	.+78     	; 0x31ec <DIO_U8GetPinValue+0xec>
		case 2 : 
			return GET_BIT( PINC , Copy_U8Pin ) ;
    319e:	e3 e3       	ldi	r30, 0x33	; 51
    31a0:	f0 e0       	ldi	r31, 0x00	; 0
    31a2:	80 81       	ld	r24, Z
    31a4:	28 2f       	mov	r18, r24
    31a6:	30 e0       	ldi	r19, 0x00	; 0
    31a8:	8a 81       	ldd	r24, Y+2	; 0x02
    31aa:	88 2f       	mov	r24, r24
    31ac:	90 e0       	ldi	r25, 0x00	; 0
    31ae:	a9 01       	movw	r20, r18
    31b0:	02 c0       	rjmp	.+4      	; 0x31b6 <DIO_U8GetPinValue+0xb6>
    31b2:	55 95       	asr	r21
    31b4:	47 95       	ror	r20
    31b6:	8a 95       	dec	r24
    31b8:	e2 f7       	brpl	.-8      	; 0x31b2 <DIO_U8GetPinValue+0xb2>
    31ba:	ca 01       	movw	r24, r20
    31bc:	58 2f       	mov	r21, r24
    31be:	51 70       	andi	r21, 0x01	; 1
    31c0:	5b 83       	std	Y+3, r21	; 0x03
    31c2:	14 c0       	rjmp	.+40     	; 0x31ec <DIO_U8GetPinValue+0xec>
		case 3 : 
			return GET_BIT( PIND , Copy_U8Pin ) ;
    31c4:	e0 e3       	ldi	r30, 0x30	; 48
    31c6:	f0 e0       	ldi	r31, 0x00	; 0
    31c8:	80 81       	ld	r24, Z
    31ca:	28 2f       	mov	r18, r24
    31cc:	30 e0       	ldi	r19, 0x00	; 0
    31ce:	8a 81       	ldd	r24, Y+2	; 0x02
    31d0:	88 2f       	mov	r24, r24
    31d2:	90 e0       	ldi	r25, 0x00	; 0
    31d4:	a9 01       	movw	r20, r18
    31d6:	02 c0       	rjmp	.+4      	; 0x31dc <DIO_U8GetPinValue+0xdc>
    31d8:	55 95       	asr	r21
    31da:	47 95       	ror	r20
    31dc:	8a 95       	dec	r24
    31de:	e2 f7       	brpl	.-8      	; 0x31d8 <DIO_U8GetPinValue+0xd8>
    31e0:	ca 01       	movw	r24, r20
    31e2:	58 2f       	mov	r21, r24
    31e4:	51 70       	andi	r21, 0x01	; 1
    31e6:	5b 83       	std	Y+3, r21	; 0x03
    31e8:	01 c0       	rjmp	.+2      	; 0x31ec <DIO_U8GetPinValue+0xec>
    31ea:	02 c0       	rjmp	.+4      	; 0x31f0 <DIO_U8GetPinValue+0xf0>
	}//end switch	
}//end FUNC DIO_VidU8PinValue 
    31ec:	8b 81       	ldd	r24, Y+3	; 0x03
    31ee:	8e 83       	std	Y+6, r24	; 0x06
    31f0:	8e 81       	ldd	r24, Y+6	; 0x06
    31f2:	26 96       	adiw	r28, 0x06	; 6
    31f4:	0f b6       	in	r0, 0x3f	; 63
    31f6:	f8 94       	cli
    31f8:	de bf       	out	0x3e, r29	; 62
    31fa:	0f be       	out	0x3f, r0	; 63
    31fc:	cd bf       	out	0x3d, r28	; 61
    31fe:	cf 91       	pop	r28
    3200:	df 91       	pop	r29
    3202:	08 95       	ret

00003204 <GIE_VidEnable>:
#include"../LIB/BIT_MATH.h"
#include "DIO_interface.h"
#include "INTERRUPT_Interface.h"
#include "INTERRUPT_private.h"

void GIE_VidEnable (void){
    3204:	df 93       	push	r29
    3206:	cf 93       	push	r28
    3208:	cd b7       	in	r28, 0x3d	; 61
    320a:	de b7       	in	r29, 0x3e	; 62
	//to enable general interrupt
	SET_BIT(SREG,I_BIT);
    320c:	af e5       	ldi	r26, 0x5F	; 95
    320e:	b0 e0       	ldi	r27, 0x00	; 0
    3210:	ef e5       	ldi	r30, 0x5F	; 95
    3212:	f0 e0       	ldi	r31, 0x00	; 0
    3214:	80 81       	ld	r24, Z
    3216:	80 68       	ori	r24, 0x80	; 128
    3218:	8c 93       	st	X, r24
}
    321a:	cf 91       	pop	r28
    321c:	df 91       	pop	r29
    321e:	08 95       	ret

00003220 <GIE_VidDisable>:

void GIE_VidDisable (void){
    3220:	df 93       	push	r29
    3222:	cf 93       	push	r28
    3224:	cd b7       	in	r28, 0x3d	; 61
    3226:	de b7       	in	r29, 0x3e	; 62
	//to disable general interrupt
	CLR_BIT(SREG,I_BIT);
    3228:	af e5       	ldi	r26, 0x5F	; 95
    322a:	b0 e0       	ldi	r27, 0x00	; 0
    322c:	ef e5       	ldi	r30, 0x5F	; 95
    322e:	f0 e0       	ldi	r31, 0x00	; 0
    3230:	80 81       	ld	r24, Z
    3232:	8f 77       	andi	r24, 0x7F	; 127
    3234:	8c 93       	st	X, r24
}
    3236:	cf 91       	pop	r28
    3238:	df 91       	pop	r29
    323a:	08 95       	ret

0000323c <LCD_VidSendCommend>:
#include"LCD_cfg.h"
#include"LCD_private.h" 
#include<avr/delay.h>


void LCD_VidSendCommend(u8 Copy_U8Commend){
    323c:	df 93       	push	r29
    323e:	cf 93       	push	r28
    3240:	cd b7       	in	r28, 0x3d	; 61
    3242:	de b7       	in	r29, 0x3e	; 62
    3244:	6d 97       	sbiw	r28, 0x1d	; 29
    3246:	0f b6       	in	r0, 0x3f	; 63
    3248:	f8 94       	cli
    324a:	de bf       	out	0x3e, r29	; 62
    324c:	0f be       	out	0x3f, r0	; 63
    324e:	cd bf       	out	0x3d, r28	; 61
    3250:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT

/**************to disable RS *** *********************/
	DIO_VidSetPinValue(CONTROL_PORT,RS,LOW);
    3252:	83 e0       	ldi	r24, 0x03	; 3
    3254:	60 e0       	ldi	r22, 0x00	; 0
    3256:	40 e0       	ldi	r20, 0x00	; 0
    3258:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <DIO_VidSetPinValue>
/******to out the value of commend on data port *****/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Commend);
    325c:	82 e0       	ldi	r24, 0x02	; 2
    325e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3260:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <DIO_VidSetPortValue>
/*************to make pulse for enable **************/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    3264:	83 e0       	ldi	r24, 0x03	; 3
    3266:	61 e0       	ldi	r22, 0x01	; 1
    3268:	41 e0       	ldi	r20, 0x01	; 1
    326a:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <DIO_VidSetPinValue>
    326e:	80 e0       	ldi	r24, 0x00	; 0
    3270:	90 e0       	ldi	r25, 0x00	; 0
    3272:	a0 e8       	ldi	r26, 0x80	; 128
    3274:	bf e3       	ldi	r27, 0x3F	; 63
    3276:	89 8f       	std	Y+25, r24	; 0x19
    3278:	9a 8f       	std	Y+26, r25	; 0x1a
    327a:	ab 8f       	std	Y+27, r26	; 0x1b
    327c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    327e:	69 8d       	ldd	r22, Y+25	; 0x19
    3280:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3282:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3284:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3286:	20 e0       	ldi	r18, 0x00	; 0
    3288:	30 e0       	ldi	r19, 0x00	; 0
    328a:	4a ef       	ldi	r20, 0xFA	; 250
    328c:	54 e4       	ldi	r21, 0x44	; 68
    328e:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3292:	dc 01       	movw	r26, r24
    3294:	cb 01       	movw	r24, r22
    3296:	8d 8b       	std	Y+21, r24	; 0x15
    3298:	9e 8b       	std	Y+22, r25	; 0x16
    329a:	af 8b       	std	Y+23, r26	; 0x17
    329c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    329e:	6d 89       	ldd	r22, Y+21	; 0x15
    32a0:	7e 89       	ldd	r23, Y+22	; 0x16
    32a2:	8f 89       	ldd	r24, Y+23	; 0x17
    32a4:	98 8d       	ldd	r25, Y+24	; 0x18
    32a6:	20 e0       	ldi	r18, 0x00	; 0
    32a8:	30 e0       	ldi	r19, 0x00	; 0
    32aa:	40 e8       	ldi	r20, 0x80	; 128
    32ac:	5f e3       	ldi	r21, 0x3F	; 63
    32ae:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    32b2:	88 23       	and	r24, r24
    32b4:	2c f4       	brge	.+10     	; 0x32c0 <LCD_VidSendCommend+0x84>
		__ticks = 1;
    32b6:	81 e0       	ldi	r24, 0x01	; 1
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	9c 8b       	std	Y+20, r25	; 0x14
    32bc:	8b 8b       	std	Y+19, r24	; 0x13
    32be:	3f c0       	rjmp	.+126    	; 0x333e <LCD_VidSendCommend+0x102>
	else if (__tmp > 65535)
    32c0:	6d 89       	ldd	r22, Y+21	; 0x15
    32c2:	7e 89       	ldd	r23, Y+22	; 0x16
    32c4:	8f 89       	ldd	r24, Y+23	; 0x17
    32c6:	98 8d       	ldd	r25, Y+24	; 0x18
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	3f ef       	ldi	r19, 0xFF	; 255
    32cc:	4f e7       	ldi	r20, 0x7F	; 127
    32ce:	57 e4       	ldi	r21, 0x47	; 71
    32d0:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    32d4:	18 16       	cp	r1, r24
    32d6:	4c f5       	brge	.+82     	; 0x332a <LCD_VidSendCommend+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32d8:	69 8d       	ldd	r22, Y+25	; 0x19
    32da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    32dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    32e0:	20 e0       	ldi	r18, 0x00	; 0
    32e2:	30 e0       	ldi	r19, 0x00	; 0
    32e4:	40 e2       	ldi	r20, 0x20	; 32
    32e6:	51 e4       	ldi	r21, 0x41	; 65
    32e8:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    32ec:	dc 01       	movw	r26, r24
    32ee:	cb 01       	movw	r24, r22
    32f0:	bc 01       	movw	r22, r24
    32f2:	cd 01       	movw	r24, r26
    32f4:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    32f8:	dc 01       	movw	r26, r24
    32fa:	cb 01       	movw	r24, r22
    32fc:	9c 8b       	std	Y+20, r25	; 0x14
    32fe:	8b 8b       	std	Y+19, r24	; 0x13
    3300:	0f c0       	rjmp	.+30     	; 0x3320 <LCD_VidSendCommend+0xe4>
    3302:	88 ec       	ldi	r24, 0xC8	; 200
    3304:	90 e0       	ldi	r25, 0x00	; 0
    3306:	9a 8b       	std	Y+18, r25	; 0x12
    3308:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    330a:	89 89       	ldd	r24, Y+17	; 0x11
    330c:	9a 89       	ldd	r25, Y+18	; 0x12
    330e:	01 97       	sbiw	r24, 0x01	; 1
    3310:	f1 f7       	brne	.-4      	; 0x330e <LCD_VidSendCommend+0xd2>
    3312:	9a 8b       	std	Y+18, r25	; 0x12
    3314:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3316:	8b 89       	ldd	r24, Y+19	; 0x13
    3318:	9c 89       	ldd	r25, Y+20	; 0x14
    331a:	01 97       	sbiw	r24, 0x01	; 1
    331c:	9c 8b       	std	Y+20, r25	; 0x14
    331e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3320:	8b 89       	ldd	r24, Y+19	; 0x13
    3322:	9c 89       	ldd	r25, Y+20	; 0x14
    3324:	00 97       	sbiw	r24, 0x00	; 0
    3326:	69 f7       	brne	.-38     	; 0x3302 <LCD_VidSendCommend+0xc6>
    3328:	14 c0       	rjmp	.+40     	; 0x3352 <LCD_VidSendCommend+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    332a:	6d 89       	ldd	r22, Y+21	; 0x15
    332c:	7e 89       	ldd	r23, Y+22	; 0x16
    332e:	8f 89       	ldd	r24, Y+23	; 0x17
    3330:	98 8d       	ldd	r25, Y+24	; 0x18
    3332:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3336:	dc 01       	movw	r26, r24
    3338:	cb 01       	movw	r24, r22
    333a:	9c 8b       	std	Y+20, r25	; 0x14
    333c:	8b 8b       	std	Y+19, r24	; 0x13
    333e:	8b 89       	ldd	r24, Y+19	; 0x13
    3340:	9c 89       	ldd	r25, Y+20	; 0x14
    3342:	98 8b       	std	Y+16, r25	; 0x10
    3344:	8f 87       	std	Y+15, r24	; 0x0f
    3346:	8f 85       	ldd	r24, Y+15	; 0x0f
    3348:	98 89       	ldd	r25, Y+16	; 0x10
    334a:	01 97       	sbiw	r24, 0x01	; 1
    334c:	f1 f7       	brne	.-4      	; 0x334a <LCD_VidSendCommend+0x10e>
    334e:	98 8b       	std	Y+16, r25	; 0x10
    3350:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    3352:	83 e0       	ldi	r24, 0x03	; 3
    3354:	61 e0       	ldi	r22, 0x01	; 1
    3356:	40 e0       	ldi	r20, 0x00	; 0
    3358:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <DIO_VidSetPinValue>
    335c:	80 e0       	ldi	r24, 0x00	; 0
    335e:	90 e0       	ldi	r25, 0x00	; 0
    3360:	a0 e0       	ldi	r26, 0x00	; 0
    3362:	b0 e4       	ldi	r27, 0x40	; 64
    3364:	8b 87       	std	Y+11, r24	; 0x0b
    3366:	9c 87       	std	Y+12, r25	; 0x0c
    3368:	ad 87       	std	Y+13, r26	; 0x0d
    336a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    336c:	6b 85       	ldd	r22, Y+11	; 0x0b
    336e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3370:	8d 85       	ldd	r24, Y+13	; 0x0d
    3372:	9e 85       	ldd	r25, Y+14	; 0x0e
    3374:	20 e0       	ldi	r18, 0x00	; 0
    3376:	30 e0       	ldi	r19, 0x00	; 0
    3378:	4a ef       	ldi	r20, 0xFA	; 250
    337a:	54 e4       	ldi	r21, 0x44	; 68
    337c:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3380:	dc 01       	movw	r26, r24
    3382:	cb 01       	movw	r24, r22
    3384:	8f 83       	std	Y+7, r24	; 0x07
    3386:	98 87       	std	Y+8, r25	; 0x08
    3388:	a9 87       	std	Y+9, r26	; 0x09
    338a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    338c:	6f 81       	ldd	r22, Y+7	; 0x07
    338e:	78 85       	ldd	r23, Y+8	; 0x08
    3390:	89 85       	ldd	r24, Y+9	; 0x09
    3392:	9a 85       	ldd	r25, Y+10	; 0x0a
    3394:	20 e0       	ldi	r18, 0x00	; 0
    3396:	30 e0       	ldi	r19, 0x00	; 0
    3398:	40 e8       	ldi	r20, 0x80	; 128
    339a:	5f e3       	ldi	r21, 0x3F	; 63
    339c:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    33a0:	88 23       	and	r24, r24
    33a2:	2c f4       	brge	.+10     	; 0x33ae <LCD_VidSendCommend+0x172>
		__ticks = 1;
    33a4:	81 e0       	ldi	r24, 0x01	; 1
    33a6:	90 e0       	ldi	r25, 0x00	; 0
    33a8:	9e 83       	std	Y+6, r25	; 0x06
    33aa:	8d 83       	std	Y+5, r24	; 0x05
    33ac:	3f c0       	rjmp	.+126    	; 0x342c <LCD_VidSendCommend+0x1f0>
	else if (__tmp > 65535)
    33ae:	6f 81       	ldd	r22, Y+7	; 0x07
    33b0:	78 85       	ldd	r23, Y+8	; 0x08
    33b2:	89 85       	ldd	r24, Y+9	; 0x09
    33b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    33b6:	20 e0       	ldi	r18, 0x00	; 0
    33b8:	3f ef       	ldi	r19, 0xFF	; 255
    33ba:	4f e7       	ldi	r20, 0x7F	; 127
    33bc:	57 e4       	ldi	r21, 0x47	; 71
    33be:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    33c2:	18 16       	cp	r1, r24
    33c4:	4c f5       	brge	.+82     	; 0x3418 <LCD_VidSendCommend+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    33c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    33ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    33cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    33ce:	20 e0       	ldi	r18, 0x00	; 0
    33d0:	30 e0       	ldi	r19, 0x00	; 0
    33d2:	40 e2       	ldi	r20, 0x20	; 32
    33d4:	51 e4       	ldi	r21, 0x41	; 65
    33d6:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    33da:	dc 01       	movw	r26, r24
    33dc:	cb 01       	movw	r24, r22
    33de:	bc 01       	movw	r22, r24
    33e0:	cd 01       	movw	r24, r26
    33e2:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	9e 83       	std	Y+6, r25	; 0x06
    33ec:	8d 83       	std	Y+5, r24	; 0x05
    33ee:	0f c0       	rjmp	.+30     	; 0x340e <LCD_VidSendCommend+0x1d2>
    33f0:	88 ec       	ldi	r24, 0xC8	; 200
    33f2:	90 e0       	ldi	r25, 0x00	; 0
    33f4:	9c 83       	std	Y+4, r25	; 0x04
    33f6:	8b 83       	std	Y+3, r24	; 0x03
    33f8:	8b 81       	ldd	r24, Y+3	; 0x03
    33fa:	9c 81       	ldd	r25, Y+4	; 0x04
    33fc:	01 97       	sbiw	r24, 0x01	; 1
    33fe:	f1 f7       	brne	.-4      	; 0x33fc <LCD_VidSendCommend+0x1c0>
    3400:	9c 83       	std	Y+4, r25	; 0x04
    3402:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3404:	8d 81       	ldd	r24, Y+5	; 0x05
    3406:	9e 81       	ldd	r25, Y+6	; 0x06
    3408:	01 97       	sbiw	r24, 0x01	; 1
    340a:	9e 83       	std	Y+6, r25	; 0x06
    340c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    340e:	8d 81       	ldd	r24, Y+5	; 0x05
    3410:	9e 81       	ldd	r25, Y+6	; 0x06
    3412:	00 97       	sbiw	r24, 0x00	; 0
    3414:	69 f7       	brne	.-38     	; 0x33f0 <LCD_VidSendCommend+0x1b4>
    3416:	14 c0       	rjmp	.+40     	; 0x3440 <LCD_VidSendCommend+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3418:	6f 81       	ldd	r22, Y+7	; 0x07
    341a:	78 85       	ldd	r23, Y+8	; 0x08
    341c:	89 85       	ldd	r24, Y+9	; 0x09
    341e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3420:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3424:	dc 01       	movw	r26, r24
    3426:	cb 01       	movw	r24, r22
    3428:	9e 83       	std	Y+6, r25	; 0x06
    342a:	8d 83       	std	Y+5, r24	; 0x05
    342c:	8d 81       	ldd	r24, Y+5	; 0x05
    342e:	9e 81       	ldd	r25, Y+6	; 0x06
    3430:	9a 83       	std	Y+2, r25	; 0x02
    3432:	89 83       	std	Y+1, r24	; 0x01
    3434:	89 81       	ldd	r24, Y+1	; 0x01
    3436:	9a 81       	ldd	r25, Y+2	; 0x02
    3438:	01 97       	sbiw	r24, 0x01	; 1
    343a:	f1 f7       	brne	.-4      	; 0x3438 <LCD_VidSendCommend+0x1fc>
    343c:	9a 83       	std	Y+2, r25	; 0x02
    343e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
	_delay_ms(2);

#endif
}
    3440:	6d 96       	adiw	r28, 0x1d	; 29
    3442:	0f b6       	in	r0, 0x3f	; 63
    3444:	f8 94       	cli
    3446:	de bf       	out	0x3e, r29	; 62
    3448:	0f be       	out	0x3f, r0	; 63
    344a:	cd bf       	out	0x3d, r28	; 61
    344c:	cf 91       	pop	r28
    344e:	df 91       	pop	r29
    3450:	08 95       	ret

00003452 <LCD_VidInit>:



void LCD_VidInit (void) {
    3452:	0f 93       	push	r16
    3454:	1f 93       	push	r17
    3456:	df 93       	push	r29
    3458:	cf 93       	push	r28
    345a:	cd b7       	in	r28, 0x3d	; 61
    345c:	de b7       	in	r29, 0x3e	; 62
    345e:	c4 56       	subi	r28, 0x64	; 100
    3460:	d0 40       	sbci	r29, 0x00	; 0
    3462:	0f b6       	in	r0, 0x3f	; 63
    3464:	f8 94       	cli
    3466:	de bf       	out	0x3e, r29	; 62
    3468:	0f be       	out	0x3f, r0	; 63
    346a:	cd bf       	out	0x3d, r28	; 61

#ifdef EIGHT_BIT

/****to define CONTROL PORT as OUTPUT PINS******/
	DIO_VidSetPinDirection(CONTROL_PORT,RS,HIGH);
    346c:	83 e0       	ldi	r24, 0x03	; 3
    346e:	60 e0       	ldi	r22, 0x00	; 0
    3470:	41 e0       	ldi	r20, 0x01	; 1
    3472:	0e 94 81 15 	call	0x2b02	; 0x2b02 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(CONTROL_PORT,E,HIGH);
    3476:	83 e0       	ldi	r24, 0x03	; 3
    3478:	61 e0       	ldi	r22, 0x01	; 1
    347a:	41 e0       	ldi	r20, 0x01	; 1
    347c:	0e 94 81 15 	call	0x2b02	; 0x2b02 <DIO_VidSetPinDirection>
/****to define DATA PORT as OUTPUT PINS********/
	DIO_VidSetPortDirection(DATA_PORT,0xff);
    3480:	82 e0       	ldi	r24, 0x02	; 2
    3482:	6f ef       	ldi	r22, 0xFF	; 255
    3484:	0e 94 81 16 	call	0x2d02	; 0x2d02 <DIO_VidSetPortDirection>
    3488:	fe 01       	movw	r30, r28
    348a:	ef 59       	subi	r30, 0x9F	; 159
    348c:	ff 4f       	sbci	r31, 0xFF	; 255
    348e:	80 e0       	ldi	r24, 0x00	; 0
    3490:	90 e0       	ldi	r25, 0x00	; 0
    3492:	a0 e2       	ldi	r26, 0x20	; 32
    3494:	b2 e4       	ldi	r27, 0x42	; 66
    3496:	80 83       	st	Z, r24
    3498:	91 83       	std	Z+1, r25	; 0x01
    349a:	a2 83       	std	Z+2, r26	; 0x02
    349c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    349e:	8e 01       	movw	r16, r28
    34a0:	03 5a       	subi	r16, 0xA3	; 163
    34a2:	1f 4f       	sbci	r17, 0xFF	; 255
    34a4:	fe 01       	movw	r30, r28
    34a6:	ef 59       	subi	r30, 0x9F	; 159
    34a8:	ff 4f       	sbci	r31, 0xFF	; 255
    34aa:	60 81       	ld	r22, Z
    34ac:	71 81       	ldd	r23, Z+1	; 0x01
    34ae:	82 81       	ldd	r24, Z+2	; 0x02
    34b0:	93 81       	ldd	r25, Z+3	; 0x03
    34b2:	20 e0       	ldi	r18, 0x00	; 0
    34b4:	30 e0       	ldi	r19, 0x00	; 0
    34b6:	4a ef       	ldi	r20, 0xFA	; 250
    34b8:	54 e4       	ldi	r21, 0x44	; 68
    34ba:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    34be:	dc 01       	movw	r26, r24
    34c0:	cb 01       	movw	r24, r22
    34c2:	f8 01       	movw	r30, r16
    34c4:	80 83       	st	Z, r24
    34c6:	91 83       	std	Z+1, r25	; 0x01
    34c8:	a2 83       	std	Z+2, r26	; 0x02
    34ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34cc:	fe 01       	movw	r30, r28
    34ce:	e3 5a       	subi	r30, 0xA3	; 163
    34d0:	ff 4f       	sbci	r31, 0xFF	; 255
    34d2:	60 81       	ld	r22, Z
    34d4:	71 81       	ldd	r23, Z+1	; 0x01
    34d6:	82 81       	ldd	r24, Z+2	; 0x02
    34d8:	93 81       	ldd	r25, Z+3	; 0x03
    34da:	20 e0       	ldi	r18, 0x00	; 0
    34dc:	30 e0       	ldi	r19, 0x00	; 0
    34de:	40 e8       	ldi	r20, 0x80	; 128
    34e0:	5f e3       	ldi	r21, 0x3F	; 63
    34e2:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    34e6:	88 23       	and	r24, r24
    34e8:	44 f4       	brge	.+16     	; 0x34fa <LCD_VidInit+0xa8>
		__ticks = 1;
    34ea:	fe 01       	movw	r30, r28
    34ec:	e5 5a       	subi	r30, 0xA5	; 165
    34ee:	ff 4f       	sbci	r31, 0xFF	; 255
    34f0:	81 e0       	ldi	r24, 0x01	; 1
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	91 83       	std	Z+1, r25	; 0x01
    34f6:	80 83       	st	Z, r24
    34f8:	64 c0       	rjmp	.+200    	; 0x35c2 <LCD_VidInit+0x170>
	else if (__tmp > 65535)
    34fa:	fe 01       	movw	r30, r28
    34fc:	e3 5a       	subi	r30, 0xA3	; 163
    34fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3500:	60 81       	ld	r22, Z
    3502:	71 81       	ldd	r23, Z+1	; 0x01
    3504:	82 81       	ldd	r24, Z+2	; 0x02
    3506:	93 81       	ldd	r25, Z+3	; 0x03
    3508:	20 e0       	ldi	r18, 0x00	; 0
    350a:	3f ef       	ldi	r19, 0xFF	; 255
    350c:	4f e7       	ldi	r20, 0x7F	; 127
    350e:	57 e4       	ldi	r21, 0x47	; 71
    3510:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3514:	18 16       	cp	r1, r24
    3516:	0c f0       	brlt	.+2      	; 0x351a <LCD_VidInit+0xc8>
    3518:	43 c0       	rjmp	.+134    	; 0x35a0 <LCD_VidInit+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    351a:	fe 01       	movw	r30, r28
    351c:	ef 59       	subi	r30, 0x9F	; 159
    351e:	ff 4f       	sbci	r31, 0xFF	; 255
    3520:	60 81       	ld	r22, Z
    3522:	71 81       	ldd	r23, Z+1	; 0x01
    3524:	82 81       	ldd	r24, Z+2	; 0x02
    3526:	93 81       	ldd	r25, Z+3	; 0x03
    3528:	20 e0       	ldi	r18, 0x00	; 0
    352a:	30 e0       	ldi	r19, 0x00	; 0
    352c:	40 e2       	ldi	r20, 0x20	; 32
    352e:	51 e4       	ldi	r21, 0x41	; 65
    3530:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3534:	dc 01       	movw	r26, r24
    3536:	cb 01       	movw	r24, r22
    3538:	8e 01       	movw	r16, r28
    353a:	05 5a       	subi	r16, 0xA5	; 165
    353c:	1f 4f       	sbci	r17, 0xFF	; 255
    353e:	bc 01       	movw	r22, r24
    3540:	cd 01       	movw	r24, r26
    3542:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3546:	dc 01       	movw	r26, r24
    3548:	cb 01       	movw	r24, r22
    354a:	f8 01       	movw	r30, r16
    354c:	91 83       	std	Z+1, r25	; 0x01
    354e:	80 83       	st	Z, r24
    3550:	1f c0       	rjmp	.+62     	; 0x3590 <LCD_VidInit+0x13e>
    3552:	fe 01       	movw	r30, r28
    3554:	e7 5a       	subi	r30, 0xA7	; 167
    3556:	ff 4f       	sbci	r31, 0xFF	; 255
    3558:	88 ec       	ldi	r24, 0xC8	; 200
    355a:	90 e0       	ldi	r25, 0x00	; 0
    355c:	91 83       	std	Z+1, r25	; 0x01
    355e:	80 83       	st	Z, r24
    3560:	fe 01       	movw	r30, r28
    3562:	e7 5a       	subi	r30, 0xA7	; 167
    3564:	ff 4f       	sbci	r31, 0xFF	; 255
    3566:	80 81       	ld	r24, Z
    3568:	91 81       	ldd	r25, Z+1	; 0x01
    356a:	01 97       	sbiw	r24, 0x01	; 1
    356c:	f1 f7       	brne	.-4      	; 0x356a <LCD_VidInit+0x118>
    356e:	fe 01       	movw	r30, r28
    3570:	e7 5a       	subi	r30, 0xA7	; 167
    3572:	ff 4f       	sbci	r31, 0xFF	; 255
    3574:	91 83       	std	Z+1, r25	; 0x01
    3576:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3578:	de 01       	movw	r26, r28
    357a:	a5 5a       	subi	r26, 0xA5	; 165
    357c:	bf 4f       	sbci	r27, 0xFF	; 255
    357e:	fe 01       	movw	r30, r28
    3580:	e5 5a       	subi	r30, 0xA5	; 165
    3582:	ff 4f       	sbci	r31, 0xFF	; 255
    3584:	80 81       	ld	r24, Z
    3586:	91 81       	ldd	r25, Z+1	; 0x01
    3588:	01 97       	sbiw	r24, 0x01	; 1
    358a:	11 96       	adiw	r26, 0x01	; 1
    358c:	9c 93       	st	X, r25
    358e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3590:	fe 01       	movw	r30, r28
    3592:	e5 5a       	subi	r30, 0xA5	; 165
    3594:	ff 4f       	sbci	r31, 0xFF	; 255
    3596:	80 81       	ld	r24, Z
    3598:	91 81       	ldd	r25, Z+1	; 0x01
    359a:	00 97       	sbiw	r24, 0x00	; 0
    359c:	d1 f6       	brne	.-76     	; 0x3552 <LCD_VidInit+0x100>
    359e:	27 c0       	rjmp	.+78     	; 0x35ee <LCD_VidInit+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35a0:	8e 01       	movw	r16, r28
    35a2:	05 5a       	subi	r16, 0xA5	; 165
    35a4:	1f 4f       	sbci	r17, 0xFF	; 255
    35a6:	fe 01       	movw	r30, r28
    35a8:	e3 5a       	subi	r30, 0xA3	; 163
    35aa:	ff 4f       	sbci	r31, 0xFF	; 255
    35ac:	60 81       	ld	r22, Z
    35ae:	71 81       	ldd	r23, Z+1	; 0x01
    35b0:	82 81       	ldd	r24, Z+2	; 0x02
    35b2:	93 81       	ldd	r25, Z+3	; 0x03
    35b4:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    35b8:	dc 01       	movw	r26, r24
    35ba:	cb 01       	movw	r24, r22
    35bc:	f8 01       	movw	r30, r16
    35be:	91 83       	std	Z+1, r25	; 0x01
    35c0:	80 83       	st	Z, r24
    35c2:	de 01       	movw	r26, r28
    35c4:	a9 5a       	subi	r26, 0xA9	; 169
    35c6:	bf 4f       	sbci	r27, 0xFF	; 255
    35c8:	fe 01       	movw	r30, r28
    35ca:	e5 5a       	subi	r30, 0xA5	; 165
    35cc:	ff 4f       	sbci	r31, 0xFF	; 255
    35ce:	80 81       	ld	r24, Z
    35d0:	91 81       	ldd	r25, Z+1	; 0x01
    35d2:	8d 93       	st	X+, r24
    35d4:	9c 93       	st	X, r25
    35d6:	fe 01       	movw	r30, r28
    35d8:	e9 5a       	subi	r30, 0xA9	; 169
    35da:	ff 4f       	sbci	r31, 0xFF	; 255
    35dc:	80 81       	ld	r24, Z
    35de:	91 81       	ldd	r25, Z+1	; 0x01
    35e0:	01 97       	sbiw	r24, 0x01	; 1
    35e2:	f1 f7       	brne	.-4      	; 0x35e0 <LCD_VidInit+0x18e>
    35e4:	fe 01       	movw	r30, r28
    35e6:	e9 5a       	subi	r30, 0xA9	; 169
    35e8:	ff 4f       	sbci	r31, 0xFF	; 255
    35ea:	91 83       	std	Z+1, r25	; 0x01
    35ec:	80 83       	st	Z, r24
/******to initialize LCD after power***********/
	_delay_ms(40);
	//send function set commend
	LCD_VidSendCommend (FUNC_SET);
    35ee:	8c e3       	ldi	r24, 0x3C	; 60
    35f0:	0e 94 1e 19 	call	0x323c	; 0x323c <LCD_VidSendCommend>
    35f4:	fe 01       	movw	r30, r28
    35f6:	ed 5a       	subi	r30, 0xAD	; 173
    35f8:	ff 4f       	sbci	r31, 0xFF	; 255
    35fa:	80 e0       	ldi	r24, 0x00	; 0
    35fc:	90 e0       	ldi	r25, 0x00	; 0
    35fe:	a0 e2       	ldi	r26, 0x20	; 32
    3600:	b2 e4       	ldi	r27, 0x42	; 66
    3602:	80 83       	st	Z, r24
    3604:	91 83       	std	Z+1, r25	; 0x01
    3606:	a2 83       	std	Z+2, r26	; 0x02
    3608:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    360a:	8e 01       	movw	r16, r28
    360c:	01 5b       	subi	r16, 0xB1	; 177
    360e:	1f 4f       	sbci	r17, 0xFF	; 255
    3610:	fe 01       	movw	r30, r28
    3612:	ed 5a       	subi	r30, 0xAD	; 173
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	60 81       	ld	r22, Z
    3618:	71 81       	ldd	r23, Z+1	; 0x01
    361a:	82 81       	ldd	r24, Z+2	; 0x02
    361c:	93 81       	ldd	r25, Z+3	; 0x03
    361e:	2b ea       	ldi	r18, 0xAB	; 171
    3620:	3a ea       	ldi	r19, 0xAA	; 170
    3622:	4a e2       	ldi	r20, 0x2A	; 42
    3624:	50 e4       	ldi	r21, 0x40	; 64
    3626:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    362a:	dc 01       	movw	r26, r24
    362c:	cb 01       	movw	r24, r22
    362e:	f8 01       	movw	r30, r16
    3630:	80 83       	st	Z, r24
    3632:	91 83       	std	Z+1, r25	; 0x01
    3634:	a2 83       	std	Z+2, r26	; 0x02
    3636:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3638:	fe 01       	movw	r30, r28
    363a:	e1 5b       	subi	r30, 0xB1	; 177
    363c:	ff 4f       	sbci	r31, 0xFF	; 255
    363e:	60 81       	ld	r22, Z
    3640:	71 81       	ldd	r23, Z+1	; 0x01
    3642:	82 81       	ldd	r24, Z+2	; 0x02
    3644:	93 81       	ldd	r25, Z+3	; 0x03
    3646:	20 e0       	ldi	r18, 0x00	; 0
    3648:	30 e0       	ldi	r19, 0x00	; 0
    364a:	40 e8       	ldi	r20, 0x80	; 128
    364c:	5f e3       	ldi	r21, 0x3F	; 63
    364e:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3652:	88 23       	and	r24, r24
    3654:	34 f4       	brge	.+12     	; 0x3662 <LCD_VidInit+0x210>
		__ticks = 1;
    3656:	fe 01       	movw	r30, r28
    3658:	e2 5b       	subi	r30, 0xB2	; 178
    365a:	ff 4f       	sbci	r31, 0xFF	; 255
    365c:	81 e0       	ldi	r24, 0x01	; 1
    365e:	80 83       	st	Z, r24
    3660:	e0 c0       	rjmp	.+448    	; 0x3822 <LCD_VidInit+0x3d0>
	else if (__tmp > 255)
    3662:	fe 01       	movw	r30, r28
    3664:	e1 5b       	subi	r30, 0xB1	; 177
    3666:	ff 4f       	sbci	r31, 0xFF	; 255
    3668:	60 81       	ld	r22, Z
    366a:	71 81       	ldd	r23, Z+1	; 0x01
    366c:	82 81       	ldd	r24, Z+2	; 0x02
    366e:	93 81       	ldd	r25, Z+3	; 0x03
    3670:	20 e0       	ldi	r18, 0x00	; 0
    3672:	30 e0       	ldi	r19, 0x00	; 0
    3674:	4f e7       	ldi	r20, 0x7F	; 127
    3676:	53 e4       	ldi	r21, 0x43	; 67
    3678:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    367c:	18 16       	cp	r1, r24
    367e:	0c f0       	brlt	.+2      	; 0x3682 <LCD_VidInit+0x230>
    3680:	c0 c0       	rjmp	.+384    	; 0x3802 <LCD_VidInit+0x3b0>
	{
		_delay_ms(__us / 1000.0);
    3682:	fe 01       	movw	r30, r28
    3684:	ed 5a       	subi	r30, 0xAD	; 173
    3686:	ff 4f       	sbci	r31, 0xFF	; 255
    3688:	60 81       	ld	r22, Z
    368a:	71 81       	ldd	r23, Z+1	; 0x01
    368c:	82 81       	ldd	r24, Z+2	; 0x02
    368e:	93 81       	ldd	r25, Z+3	; 0x03
    3690:	20 e0       	ldi	r18, 0x00	; 0
    3692:	30 e0       	ldi	r19, 0x00	; 0
    3694:	4a e7       	ldi	r20, 0x7A	; 122
    3696:	54 e4       	ldi	r21, 0x44	; 68
    3698:	0e 94 70 11 	call	0x22e0	; 0x22e0 <__divsf3>
    369c:	dc 01       	movw	r26, r24
    369e:	cb 01       	movw	r24, r22
    36a0:	fe 01       	movw	r30, r28
    36a2:	e6 5b       	subi	r30, 0xB6	; 182
    36a4:	ff 4f       	sbci	r31, 0xFF	; 255
    36a6:	80 83       	st	Z, r24
    36a8:	91 83       	std	Z+1, r25	; 0x01
    36aa:	a2 83       	std	Z+2, r26	; 0x02
    36ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36ae:	8e 01       	movw	r16, r28
    36b0:	0a 5b       	subi	r16, 0xBA	; 186
    36b2:	1f 4f       	sbci	r17, 0xFF	; 255
    36b4:	fe 01       	movw	r30, r28
    36b6:	e6 5b       	subi	r30, 0xB6	; 182
    36b8:	ff 4f       	sbci	r31, 0xFF	; 255
    36ba:	60 81       	ld	r22, Z
    36bc:	71 81       	ldd	r23, Z+1	; 0x01
    36be:	82 81       	ldd	r24, Z+2	; 0x02
    36c0:	93 81       	ldd	r25, Z+3	; 0x03
    36c2:	20 e0       	ldi	r18, 0x00	; 0
    36c4:	30 e0       	ldi	r19, 0x00	; 0
    36c6:	4a ef       	ldi	r20, 0xFA	; 250
    36c8:	54 e4       	ldi	r21, 0x44	; 68
    36ca:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    36ce:	dc 01       	movw	r26, r24
    36d0:	cb 01       	movw	r24, r22
    36d2:	f8 01       	movw	r30, r16
    36d4:	80 83       	st	Z, r24
    36d6:	91 83       	std	Z+1, r25	; 0x01
    36d8:	a2 83       	std	Z+2, r26	; 0x02
    36da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    36dc:	fe 01       	movw	r30, r28
    36de:	ea 5b       	subi	r30, 0xBA	; 186
    36e0:	ff 4f       	sbci	r31, 0xFF	; 255
    36e2:	60 81       	ld	r22, Z
    36e4:	71 81       	ldd	r23, Z+1	; 0x01
    36e6:	82 81       	ldd	r24, Z+2	; 0x02
    36e8:	93 81       	ldd	r25, Z+3	; 0x03
    36ea:	20 e0       	ldi	r18, 0x00	; 0
    36ec:	30 e0       	ldi	r19, 0x00	; 0
    36ee:	40 e8       	ldi	r20, 0x80	; 128
    36f0:	5f e3       	ldi	r21, 0x3F	; 63
    36f2:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    36f6:	88 23       	and	r24, r24
    36f8:	44 f4       	brge	.+16     	; 0x370a <LCD_VidInit+0x2b8>
		__ticks = 1;
    36fa:	fe 01       	movw	r30, r28
    36fc:	ec 5b       	subi	r30, 0xBC	; 188
    36fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3700:	81 e0       	ldi	r24, 0x01	; 1
    3702:	90 e0       	ldi	r25, 0x00	; 0
    3704:	91 83       	std	Z+1, r25	; 0x01
    3706:	80 83       	st	Z, r24
    3708:	64 c0       	rjmp	.+200    	; 0x37d2 <LCD_VidInit+0x380>
	else if (__tmp > 65535)
    370a:	fe 01       	movw	r30, r28
    370c:	ea 5b       	subi	r30, 0xBA	; 186
    370e:	ff 4f       	sbci	r31, 0xFF	; 255
    3710:	60 81       	ld	r22, Z
    3712:	71 81       	ldd	r23, Z+1	; 0x01
    3714:	82 81       	ldd	r24, Z+2	; 0x02
    3716:	93 81       	ldd	r25, Z+3	; 0x03
    3718:	20 e0       	ldi	r18, 0x00	; 0
    371a:	3f ef       	ldi	r19, 0xFF	; 255
    371c:	4f e7       	ldi	r20, 0x7F	; 127
    371e:	57 e4       	ldi	r21, 0x47	; 71
    3720:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3724:	18 16       	cp	r1, r24
    3726:	0c f0       	brlt	.+2      	; 0x372a <LCD_VidInit+0x2d8>
    3728:	43 c0       	rjmp	.+134    	; 0x37b0 <LCD_VidInit+0x35e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    372a:	fe 01       	movw	r30, r28
    372c:	e6 5b       	subi	r30, 0xB6	; 182
    372e:	ff 4f       	sbci	r31, 0xFF	; 255
    3730:	60 81       	ld	r22, Z
    3732:	71 81       	ldd	r23, Z+1	; 0x01
    3734:	82 81       	ldd	r24, Z+2	; 0x02
    3736:	93 81       	ldd	r25, Z+3	; 0x03
    3738:	20 e0       	ldi	r18, 0x00	; 0
    373a:	30 e0       	ldi	r19, 0x00	; 0
    373c:	40 e2       	ldi	r20, 0x20	; 32
    373e:	51 e4       	ldi	r21, 0x41	; 65
    3740:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	8e 01       	movw	r16, r28
    374a:	0c 5b       	subi	r16, 0xBC	; 188
    374c:	1f 4f       	sbci	r17, 0xFF	; 255
    374e:	bc 01       	movw	r22, r24
    3750:	cd 01       	movw	r24, r26
    3752:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3756:	dc 01       	movw	r26, r24
    3758:	cb 01       	movw	r24, r22
    375a:	f8 01       	movw	r30, r16
    375c:	91 83       	std	Z+1, r25	; 0x01
    375e:	80 83       	st	Z, r24
    3760:	1f c0       	rjmp	.+62     	; 0x37a0 <LCD_VidInit+0x34e>
    3762:	fe 01       	movw	r30, r28
    3764:	ee 5b       	subi	r30, 0xBE	; 190
    3766:	ff 4f       	sbci	r31, 0xFF	; 255
    3768:	88 ec       	ldi	r24, 0xC8	; 200
    376a:	90 e0       	ldi	r25, 0x00	; 0
    376c:	91 83       	std	Z+1, r25	; 0x01
    376e:	80 83       	st	Z, r24
    3770:	fe 01       	movw	r30, r28
    3772:	ee 5b       	subi	r30, 0xBE	; 190
    3774:	ff 4f       	sbci	r31, 0xFF	; 255
    3776:	80 81       	ld	r24, Z
    3778:	91 81       	ldd	r25, Z+1	; 0x01
    377a:	01 97       	sbiw	r24, 0x01	; 1
    377c:	f1 f7       	brne	.-4      	; 0x377a <LCD_VidInit+0x328>
    377e:	fe 01       	movw	r30, r28
    3780:	ee 5b       	subi	r30, 0xBE	; 190
    3782:	ff 4f       	sbci	r31, 0xFF	; 255
    3784:	91 83       	std	Z+1, r25	; 0x01
    3786:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3788:	de 01       	movw	r26, r28
    378a:	ac 5b       	subi	r26, 0xBC	; 188
    378c:	bf 4f       	sbci	r27, 0xFF	; 255
    378e:	fe 01       	movw	r30, r28
    3790:	ec 5b       	subi	r30, 0xBC	; 188
    3792:	ff 4f       	sbci	r31, 0xFF	; 255
    3794:	80 81       	ld	r24, Z
    3796:	91 81       	ldd	r25, Z+1	; 0x01
    3798:	01 97       	sbiw	r24, 0x01	; 1
    379a:	11 96       	adiw	r26, 0x01	; 1
    379c:	9c 93       	st	X, r25
    379e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37a0:	fe 01       	movw	r30, r28
    37a2:	ec 5b       	subi	r30, 0xBC	; 188
    37a4:	ff 4f       	sbci	r31, 0xFF	; 255
    37a6:	80 81       	ld	r24, Z
    37a8:	91 81       	ldd	r25, Z+1	; 0x01
    37aa:	00 97       	sbiw	r24, 0x00	; 0
    37ac:	d1 f6       	brne	.-76     	; 0x3762 <LCD_VidInit+0x310>
    37ae:	42 c0       	rjmp	.+132    	; 0x3834 <LCD_VidInit+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37b0:	8e 01       	movw	r16, r28
    37b2:	0c 5b       	subi	r16, 0xBC	; 188
    37b4:	1f 4f       	sbci	r17, 0xFF	; 255
    37b6:	fe 01       	movw	r30, r28
    37b8:	ea 5b       	subi	r30, 0xBA	; 186
    37ba:	ff 4f       	sbci	r31, 0xFF	; 255
    37bc:	60 81       	ld	r22, Z
    37be:	71 81       	ldd	r23, Z+1	; 0x01
    37c0:	82 81       	ldd	r24, Z+2	; 0x02
    37c2:	93 81       	ldd	r25, Z+3	; 0x03
    37c4:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    37c8:	dc 01       	movw	r26, r24
    37ca:	cb 01       	movw	r24, r22
    37cc:	f8 01       	movw	r30, r16
    37ce:	91 83       	std	Z+1, r25	; 0x01
    37d0:	80 83       	st	Z, r24
    37d2:	de 01       	movw	r26, r28
    37d4:	a0 5c       	subi	r26, 0xC0	; 192
    37d6:	bf 4f       	sbci	r27, 0xFF	; 255
    37d8:	fe 01       	movw	r30, r28
    37da:	ec 5b       	subi	r30, 0xBC	; 188
    37dc:	ff 4f       	sbci	r31, 0xFF	; 255
    37de:	80 81       	ld	r24, Z
    37e0:	91 81       	ldd	r25, Z+1	; 0x01
    37e2:	11 96       	adiw	r26, 0x01	; 1
    37e4:	9c 93       	st	X, r25
    37e6:	8e 93       	st	-X, r24
    37e8:	fe 01       	movw	r30, r28
    37ea:	e0 5c       	subi	r30, 0xC0	; 192
    37ec:	ff 4f       	sbci	r31, 0xFF	; 255
    37ee:	80 81       	ld	r24, Z
    37f0:	91 81       	ldd	r25, Z+1	; 0x01
    37f2:	01 97       	sbiw	r24, 0x01	; 1
    37f4:	f1 f7       	brne	.-4      	; 0x37f2 <LCD_VidInit+0x3a0>
    37f6:	fe 01       	movw	r30, r28
    37f8:	e0 5c       	subi	r30, 0xC0	; 192
    37fa:	ff 4f       	sbci	r31, 0xFF	; 255
    37fc:	91 83       	std	Z+1, r25	; 0x01
    37fe:	80 83       	st	Z, r24
    3800:	19 c0       	rjmp	.+50     	; 0x3834 <LCD_VidInit+0x3e2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3802:	8e 01       	movw	r16, r28
    3804:	02 5b       	subi	r16, 0xB2	; 178
    3806:	1f 4f       	sbci	r17, 0xFF	; 255
    3808:	fe 01       	movw	r30, r28
    380a:	e1 5b       	subi	r30, 0xB1	; 177
    380c:	ff 4f       	sbci	r31, 0xFF	; 255
    380e:	60 81       	ld	r22, Z
    3810:	71 81       	ldd	r23, Z+1	; 0x01
    3812:	82 81       	ldd	r24, Z+2	; 0x02
    3814:	93 81       	ldd	r25, Z+3	; 0x03
    3816:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    381a:	dc 01       	movw	r26, r24
    381c:	cb 01       	movw	r24, r22
    381e:	f8 01       	movw	r30, r16
    3820:	80 83       	st	Z, r24
    3822:	fe 01       	movw	r30, r28
    3824:	e2 5b       	subi	r30, 0xB2	; 178
    3826:	ff 4f       	sbci	r31, 0xFF	; 255
    3828:	80 81       	ld	r24, Z
    382a:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    382c:	8f ad       	ldd	r24, Y+63	; 0x3f
    382e:	8a 95       	dec	r24
    3830:	f1 f7       	brne	.-4      	; 0x382e <LCD_VidInit+0x3dc>
    3832:	8f af       	std	Y+63, r24	; 0x3f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Display_ON & Cursor_OFF Command
	LCD_VidSendCommend(DISPLAY_ON_CURSOR_OFF);
    3834:	8c e0       	ldi	r24, 0x0C	; 12
    3836:	0e 94 1e 19 	call	0x323c	; 0x323c <LCD_VidSendCommend>
    383a:	80 e0       	ldi	r24, 0x00	; 0
    383c:	90 e0       	ldi	r25, 0x00	; 0
    383e:	a0 e2       	ldi	r26, 0x20	; 32
    3840:	b2 e4       	ldi	r27, 0x42	; 66
    3842:	8b af       	std	Y+59, r24	; 0x3b
    3844:	9c af       	std	Y+60, r25	; 0x3c
    3846:	ad af       	std	Y+61, r26	; 0x3d
    3848:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    384a:	6b ad       	ldd	r22, Y+59	; 0x3b
    384c:	7c ad       	ldd	r23, Y+60	; 0x3c
    384e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3850:	9e ad       	ldd	r25, Y+62	; 0x3e
    3852:	2b ea       	ldi	r18, 0xAB	; 171
    3854:	3a ea       	ldi	r19, 0xAA	; 170
    3856:	4a e2       	ldi	r20, 0x2A	; 42
    3858:	50 e4       	ldi	r21, 0x40	; 64
    385a:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    385e:	dc 01       	movw	r26, r24
    3860:	cb 01       	movw	r24, r22
    3862:	8f ab       	std	Y+55, r24	; 0x37
    3864:	98 af       	std	Y+56, r25	; 0x38
    3866:	a9 af       	std	Y+57, r26	; 0x39
    3868:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    386a:	6f a9       	ldd	r22, Y+55	; 0x37
    386c:	78 ad       	ldd	r23, Y+56	; 0x38
    386e:	89 ad       	ldd	r24, Y+57	; 0x39
    3870:	9a ad       	ldd	r25, Y+58	; 0x3a
    3872:	20 e0       	ldi	r18, 0x00	; 0
    3874:	30 e0       	ldi	r19, 0x00	; 0
    3876:	40 e8       	ldi	r20, 0x80	; 128
    3878:	5f e3       	ldi	r21, 0x3F	; 63
    387a:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    387e:	88 23       	and	r24, r24
    3880:	1c f4       	brge	.+6      	; 0x3888 <LCD_VidInit+0x436>
		__ticks = 1;
    3882:	81 e0       	ldi	r24, 0x01	; 1
    3884:	8e ab       	std	Y+54, r24	; 0x36
    3886:	91 c0       	rjmp	.+290    	; 0x39aa <LCD_VidInit+0x558>
	else if (__tmp > 255)
    3888:	6f a9       	ldd	r22, Y+55	; 0x37
    388a:	78 ad       	ldd	r23, Y+56	; 0x38
    388c:	89 ad       	ldd	r24, Y+57	; 0x39
    388e:	9a ad       	ldd	r25, Y+58	; 0x3a
    3890:	20 e0       	ldi	r18, 0x00	; 0
    3892:	30 e0       	ldi	r19, 0x00	; 0
    3894:	4f e7       	ldi	r20, 0x7F	; 127
    3896:	53 e4       	ldi	r21, 0x43	; 67
    3898:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    389c:	18 16       	cp	r1, r24
    389e:	0c f0       	brlt	.+2      	; 0x38a2 <LCD_VidInit+0x450>
    38a0:	7b c0       	rjmp	.+246    	; 0x3998 <LCD_VidInit+0x546>
	{
		_delay_ms(__us / 1000.0);
    38a2:	6b ad       	ldd	r22, Y+59	; 0x3b
    38a4:	7c ad       	ldd	r23, Y+60	; 0x3c
    38a6:	8d ad       	ldd	r24, Y+61	; 0x3d
    38a8:	9e ad       	ldd	r25, Y+62	; 0x3e
    38aa:	20 e0       	ldi	r18, 0x00	; 0
    38ac:	30 e0       	ldi	r19, 0x00	; 0
    38ae:	4a e7       	ldi	r20, 0x7A	; 122
    38b0:	54 e4       	ldi	r21, 0x44	; 68
    38b2:	0e 94 70 11 	call	0x22e0	; 0x22e0 <__divsf3>
    38b6:	dc 01       	movw	r26, r24
    38b8:	cb 01       	movw	r24, r22
    38ba:	8a ab       	std	Y+50, r24	; 0x32
    38bc:	9b ab       	std	Y+51, r25	; 0x33
    38be:	ac ab       	std	Y+52, r26	; 0x34
    38c0:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38c2:	6a a9       	ldd	r22, Y+50	; 0x32
    38c4:	7b a9       	ldd	r23, Y+51	; 0x33
    38c6:	8c a9       	ldd	r24, Y+52	; 0x34
    38c8:	9d a9       	ldd	r25, Y+53	; 0x35
    38ca:	20 e0       	ldi	r18, 0x00	; 0
    38cc:	30 e0       	ldi	r19, 0x00	; 0
    38ce:	4a ef       	ldi	r20, 0xFA	; 250
    38d0:	54 e4       	ldi	r21, 0x44	; 68
    38d2:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    38d6:	dc 01       	movw	r26, r24
    38d8:	cb 01       	movw	r24, r22
    38da:	8e a7       	std	Y+46, r24	; 0x2e
    38dc:	9f a7       	std	Y+47, r25	; 0x2f
    38de:	a8 ab       	std	Y+48, r26	; 0x30
    38e0:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    38e2:	6e a5       	ldd	r22, Y+46	; 0x2e
    38e4:	7f a5       	ldd	r23, Y+47	; 0x2f
    38e6:	88 a9       	ldd	r24, Y+48	; 0x30
    38e8:	99 a9       	ldd	r25, Y+49	; 0x31
    38ea:	20 e0       	ldi	r18, 0x00	; 0
    38ec:	30 e0       	ldi	r19, 0x00	; 0
    38ee:	40 e8       	ldi	r20, 0x80	; 128
    38f0:	5f e3       	ldi	r21, 0x3F	; 63
    38f2:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    38f6:	88 23       	and	r24, r24
    38f8:	2c f4       	brge	.+10     	; 0x3904 <LCD_VidInit+0x4b2>
		__ticks = 1;
    38fa:	81 e0       	ldi	r24, 0x01	; 1
    38fc:	90 e0       	ldi	r25, 0x00	; 0
    38fe:	9d a7       	std	Y+45, r25	; 0x2d
    3900:	8c a7       	std	Y+44, r24	; 0x2c
    3902:	3f c0       	rjmp	.+126    	; 0x3982 <LCD_VidInit+0x530>
	else if (__tmp > 65535)
    3904:	6e a5       	ldd	r22, Y+46	; 0x2e
    3906:	7f a5       	ldd	r23, Y+47	; 0x2f
    3908:	88 a9       	ldd	r24, Y+48	; 0x30
    390a:	99 a9       	ldd	r25, Y+49	; 0x31
    390c:	20 e0       	ldi	r18, 0x00	; 0
    390e:	3f ef       	ldi	r19, 0xFF	; 255
    3910:	4f e7       	ldi	r20, 0x7F	; 127
    3912:	57 e4       	ldi	r21, 0x47	; 71
    3914:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3918:	18 16       	cp	r1, r24
    391a:	4c f5       	brge	.+82     	; 0x396e <LCD_VidInit+0x51c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    391c:	6a a9       	ldd	r22, Y+50	; 0x32
    391e:	7b a9       	ldd	r23, Y+51	; 0x33
    3920:	8c a9       	ldd	r24, Y+52	; 0x34
    3922:	9d a9       	ldd	r25, Y+53	; 0x35
    3924:	20 e0       	ldi	r18, 0x00	; 0
    3926:	30 e0       	ldi	r19, 0x00	; 0
    3928:	40 e2       	ldi	r20, 0x20	; 32
    392a:	51 e4       	ldi	r21, 0x41	; 65
    392c:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3930:	dc 01       	movw	r26, r24
    3932:	cb 01       	movw	r24, r22
    3934:	bc 01       	movw	r22, r24
    3936:	cd 01       	movw	r24, r26
    3938:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    393c:	dc 01       	movw	r26, r24
    393e:	cb 01       	movw	r24, r22
    3940:	9d a7       	std	Y+45, r25	; 0x2d
    3942:	8c a7       	std	Y+44, r24	; 0x2c
    3944:	0f c0       	rjmp	.+30     	; 0x3964 <LCD_VidInit+0x512>
    3946:	88 ec       	ldi	r24, 0xC8	; 200
    3948:	90 e0       	ldi	r25, 0x00	; 0
    394a:	9b a7       	std	Y+43, r25	; 0x2b
    394c:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    394e:	8a a5       	ldd	r24, Y+42	; 0x2a
    3950:	9b a5       	ldd	r25, Y+43	; 0x2b
    3952:	01 97       	sbiw	r24, 0x01	; 1
    3954:	f1 f7       	brne	.-4      	; 0x3952 <LCD_VidInit+0x500>
    3956:	9b a7       	std	Y+43, r25	; 0x2b
    3958:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    395a:	8c a5       	ldd	r24, Y+44	; 0x2c
    395c:	9d a5       	ldd	r25, Y+45	; 0x2d
    395e:	01 97       	sbiw	r24, 0x01	; 1
    3960:	9d a7       	std	Y+45, r25	; 0x2d
    3962:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3964:	8c a5       	ldd	r24, Y+44	; 0x2c
    3966:	9d a5       	ldd	r25, Y+45	; 0x2d
    3968:	00 97       	sbiw	r24, 0x00	; 0
    396a:	69 f7       	brne	.-38     	; 0x3946 <LCD_VidInit+0x4f4>
    396c:	24 c0       	rjmp	.+72     	; 0x39b6 <LCD_VidInit+0x564>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    396e:	6e a5       	ldd	r22, Y+46	; 0x2e
    3970:	7f a5       	ldd	r23, Y+47	; 0x2f
    3972:	88 a9       	ldd	r24, Y+48	; 0x30
    3974:	99 a9       	ldd	r25, Y+49	; 0x31
    3976:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    397a:	dc 01       	movw	r26, r24
    397c:	cb 01       	movw	r24, r22
    397e:	9d a7       	std	Y+45, r25	; 0x2d
    3980:	8c a7       	std	Y+44, r24	; 0x2c
    3982:	8c a5       	ldd	r24, Y+44	; 0x2c
    3984:	9d a5       	ldd	r25, Y+45	; 0x2d
    3986:	99 a7       	std	Y+41, r25	; 0x29
    3988:	88 a7       	std	Y+40, r24	; 0x28
    398a:	88 a5       	ldd	r24, Y+40	; 0x28
    398c:	99 a5       	ldd	r25, Y+41	; 0x29
    398e:	01 97       	sbiw	r24, 0x01	; 1
    3990:	f1 f7       	brne	.-4      	; 0x398e <LCD_VidInit+0x53c>
    3992:	99 a7       	std	Y+41, r25	; 0x29
    3994:	88 a7       	std	Y+40, r24	; 0x28
    3996:	0f c0       	rjmp	.+30     	; 0x39b6 <LCD_VidInit+0x564>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3998:	6f a9       	ldd	r22, Y+55	; 0x37
    399a:	78 ad       	ldd	r23, Y+56	; 0x38
    399c:	89 ad       	ldd	r24, Y+57	; 0x39
    399e:	9a ad       	ldd	r25, Y+58	; 0x3a
    39a0:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    39a4:	dc 01       	movw	r26, r24
    39a6:	cb 01       	movw	r24, r22
    39a8:	8e ab       	std	Y+54, r24	; 0x36
    39aa:	8e a9       	ldd	r24, Y+54	; 0x36
    39ac:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    39ae:	8f a1       	ldd	r24, Y+39	; 0x27
    39b0:	8a 95       	dec	r24
    39b2:	f1 f7       	brne	.-4      	; 0x39b0 <LCD_VidInit+0x55e>
    39b4:	8f a3       	std	Y+39, r24	; 0x27
	// Delay for more than 39 us
	_delay_us(40);
	// Send Entry Mode Set Command
	LCD_VidSendCommend(ENTERY_MODE);
    39b6:	86 e0       	ldi	r24, 0x06	; 6
    39b8:	0e 94 1e 19 	call	0x323c	; 0x323c <LCD_VidSendCommend>
    39bc:	80 e0       	ldi	r24, 0x00	; 0
    39be:	90 e0       	ldi	r25, 0x00	; 0
    39c0:	a0 e2       	ldi	r26, 0x20	; 32
    39c2:	b2 e4       	ldi	r27, 0x42	; 66
    39c4:	8b a3       	std	Y+35, r24	; 0x23
    39c6:	9c a3       	std	Y+36, r25	; 0x24
    39c8:	ad a3       	std	Y+37, r26	; 0x25
    39ca:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    39cc:	6b a1       	ldd	r22, Y+35	; 0x23
    39ce:	7c a1       	ldd	r23, Y+36	; 0x24
    39d0:	8d a1       	ldd	r24, Y+37	; 0x25
    39d2:	9e a1       	ldd	r25, Y+38	; 0x26
    39d4:	2b ea       	ldi	r18, 0xAB	; 171
    39d6:	3a ea       	ldi	r19, 0xAA	; 170
    39d8:	4a e2       	ldi	r20, 0x2A	; 42
    39da:	50 e4       	ldi	r21, 0x40	; 64
    39dc:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    39e0:	dc 01       	movw	r26, r24
    39e2:	cb 01       	movw	r24, r22
    39e4:	8f 8f       	std	Y+31, r24	; 0x1f
    39e6:	98 a3       	std	Y+32, r25	; 0x20
    39e8:	a9 a3       	std	Y+33, r26	; 0x21
    39ea:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    39ec:	6f 8d       	ldd	r22, Y+31	; 0x1f
    39ee:	78 a1       	ldd	r23, Y+32	; 0x20
    39f0:	89 a1       	ldd	r24, Y+33	; 0x21
    39f2:	9a a1       	ldd	r25, Y+34	; 0x22
    39f4:	20 e0       	ldi	r18, 0x00	; 0
    39f6:	30 e0       	ldi	r19, 0x00	; 0
    39f8:	40 e8       	ldi	r20, 0x80	; 128
    39fa:	5f e3       	ldi	r21, 0x3F	; 63
    39fc:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3a00:	88 23       	and	r24, r24
    3a02:	1c f4       	brge	.+6      	; 0x3a0a <LCD_VidInit+0x5b8>
		__ticks = 1;
    3a04:	81 e0       	ldi	r24, 0x01	; 1
    3a06:	8e 8f       	std	Y+30, r24	; 0x1e
    3a08:	91 c0       	rjmp	.+290    	; 0x3b2c <LCD_VidInit+0x6da>
	else if (__tmp > 255)
    3a0a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3a0c:	78 a1       	ldd	r23, Y+32	; 0x20
    3a0e:	89 a1       	ldd	r24, Y+33	; 0x21
    3a10:	9a a1       	ldd	r25, Y+34	; 0x22
    3a12:	20 e0       	ldi	r18, 0x00	; 0
    3a14:	30 e0       	ldi	r19, 0x00	; 0
    3a16:	4f e7       	ldi	r20, 0x7F	; 127
    3a18:	53 e4       	ldi	r21, 0x43	; 67
    3a1a:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3a1e:	18 16       	cp	r1, r24
    3a20:	0c f0       	brlt	.+2      	; 0x3a24 <LCD_VidInit+0x5d2>
    3a22:	7b c0       	rjmp	.+246    	; 0x3b1a <LCD_VidInit+0x6c8>
	{
		_delay_ms(__us / 1000.0);
    3a24:	6b a1       	ldd	r22, Y+35	; 0x23
    3a26:	7c a1       	ldd	r23, Y+36	; 0x24
    3a28:	8d a1       	ldd	r24, Y+37	; 0x25
    3a2a:	9e a1       	ldd	r25, Y+38	; 0x26
    3a2c:	20 e0       	ldi	r18, 0x00	; 0
    3a2e:	30 e0       	ldi	r19, 0x00	; 0
    3a30:	4a e7       	ldi	r20, 0x7A	; 122
    3a32:	54 e4       	ldi	r21, 0x44	; 68
    3a34:	0e 94 70 11 	call	0x22e0	; 0x22e0 <__divsf3>
    3a38:	dc 01       	movw	r26, r24
    3a3a:	cb 01       	movw	r24, r22
    3a3c:	8a 8f       	std	Y+26, r24	; 0x1a
    3a3e:	9b 8f       	std	Y+27, r25	; 0x1b
    3a40:	ac 8f       	std	Y+28, r26	; 0x1c
    3a42:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a44:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3a46:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3a48:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3a4a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3a4c:	20 e0       	ldi	r18, 0x00	; 0
    3a4e:	30 e0       	ldi	r19, 0x00	; 0
    3a50:	4a ef       	ldi	r20, 0xFA	; 250
    3a52:	54 e4       	ldi	r21, 0x44	; 68
    3a54:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3a58:	dc 01       	movw	r26, r24
    3a5a:	cb 01       	movw	r24, r22
    3a5c:	8e 8b       	std	Y+22, r24	; 0x16
    3a5e:	9f 8b       	std	Y+23, r25	; 0x17
    3a60:	a8 8f       	std	Y+24, r26	; 0x18
    3a62:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    3a64:	6e 89       	ldd	r22, Y+22	; 0x16
    3a66:	7f 89       	ldd	r23, Y+23	; 0x17
    3a68:	88 8d       	ldd	r24, Y+24	; 0x18
    3a6a:	99 8d       	ldd	r25, Y+25	; 0x19
    3a6c:	20 e0       	ldi	r18, 0x00	; 0
    3a6e:	30 e0       	ldi	r19, 0x00	; 0
    3a70:	40 e8       	ldi	r20, 0x80	; 128
    3a72:	5f e3       	ldi	r21, 0x3F	; 63
    3a74:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3a78:	88 23       	and	r24, r24
    3a7a:	2c f4       	brge	.+10     	; 0x3a86 <LCD_VidInit+0x634>
		__ticks = 1;
    3a7c:	81 e0       	ldi	r24, 0x01	; 1
    3a7e:	90 e0       	ldi	r25, 0x00	; 0
    3a80:	9d 8b       	std	Y+21, r25	; 0x15
    3a82:	8c 8b       	std	Y+20, r24	; 0x14
    3a84:	3f c0       	rjmp	.+126    	; 0x3b04 <LCD_VidInit+0x6b2>
	else if (__tmp > 65535)
    3a86:	6e 89       	ldd	r22, Y+22	; 0x16
    3a88:	7f 89       	ldd	r23, Y+23	; 0x17
    3a8a:	88 8d       	ldd	r24, Y+24	; 0x18
    3a8c:	99 8d       	ldd	r25, Y+25	; 0x19
    3a8e:	20 e0       	ldi	r18, 0x00	; 0
    3a90:	3f ef       	ldi	r19, 0xFF	; 255
    3a92:	4f e7       	ldi	r20, 0x7F	; 127
    3a94:	57 e4       	ldi	r21, 0x47	; 71
    3a96:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3a9a:	18 16       	cp	r1, r24
    3a9c:	4c f5       	brge	.+82     	; 0x3af0 <LCD_VidInit+0x69e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a9e:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3aa0:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3aa2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3aa4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3aa6:	20 e0       	ldi	r18, 0x00	; 0
    3aa8:	30 e0       	ldi	r19, 0x00	; 0
    3aaa:	40 e2       	ldi	r20, 0x20	; 32
    3aac:	51 e4       	ldi	r21, 0x41	; 65
    3aae:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3ab2:	dc 01       	movw	r26, r24
    3ab4:	cb 01       	movw	r24, r22
    3ab6:	bc 01       	movw	r22, r24
    3ab8:	cd 01       	movw	r24, r26
    3aba:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3abe:	dc 01       	movw	r26, r24
    3ac0:	cb 01       	movw	r24, r22
    3ac2:	9d 8b       	std	Y+21, r25	; 0x15
    3ac4:	8c 8b       	std	Y+20, r24	; 0x14
    3ac6:	0f c0       	rjmp	.+30     	; 0x3ae6 <LCD_VidInit+0x694>
    3ac8:	88 ec       	ldi	r24, 0xC8	; 200
    3aca:	90 e0       	ldi	r25, 0x00	; 0
    3acc:	9b 8b       	std	Y+19, r25	; 0x13
    3ace:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3ad0:	8a 89       	ldd	r24, Y+18	; 0x12
    3ad2:	9b 89       	ldd	r25, Y+19	; 0x13
    3ad4:	01 97       	sbiw	r24, 0x01	; 1
    3ad6:	f1 f7       	brne	.-4      	; 0x3ad4 <LCD_VidInit+0x682>
    3ad8:	9b 8b       	std	Y+19, r25	; 0x13
    3ada:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3adc:	8c 89       	ldd	r24, Y+20	; 0x14
    3ade:	9d 89       	ldd	r25, Y+21	; 0x15
    3ae0:	01 97       	sbiw	r24, 0x01	; 1
    3ae2:	9d 8b       	std	Y+21, r25	; 0x15
    3ae4:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ae6:	8c 89       	ldd	r24, Y+20	; 0x14
    3ae8:	9d 89       	ldd	r25, Y+21	; 0x15
    3aea:	00 97       	sbiw	r24, 0x00	; 0
    3aec:	69 f7       	brne	.-38     	; 0x3ac8 <LCD_VidInit+0x676>
    3aee:	24 c0       	rjmp	.+72     	; 0x3b38 <LCD_VidInit+0x6e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3af0:	6e 89       	ldd	r22, Y+22	; 0x16
    3af2:	7f 89       	ldd	r23, Y+23	; 0x17
    3af4:	88 8d       	ldd	r24, Y+24	; 0x18
    3af6:	99 8d       	ldd	r25, Y+25	; 0x19
    3af8:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3afc:	dc 01       	movw	r26, r24
    3afe:	cb 01       	movw	r24, r22
    3b00:	9d 8b       	std	Y+21, r25	; 0x15
    3b02:	8c 8b       	std	Y+20, r24	; 0x14
    3b04:	8c 89       	ldd	r24, Y+20	; 0x14
    3b06:	9d 89       	ldd	r25, Y+21	; 0x15
    3b08:	99 8b       	std	Y+17, r25	; 0x11
    3b0a:	88 8b       	std	Y+16, r24	; 0x10
    3b0c:	88 89       	ldd	r24, Y+16	; 0x10
    3b0e:	99 89       	ldd	r25, Y+17	; 0x11
    3b10:	01 97       	sbiw	r24, 0x01	; 1
    3b12:	f1 f7       	brne	.-4      	; 0x3b10 <LCD_VidInit+0x6be>
    3b14:	99 8b       	std	Y+17, r25	; 0x11
    3b16:	88 8b       	std	Y+16, r24	; 0x10
    3b18:	0f c0       	rjmp	.+30     	; 0x3b38 <LCD_VidInit+0x6e6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3b1a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3b1c:	78 a1       	ldd	r23, Y+32	; 0x20
    3b1e:	89 a1       	ldd	r24, Y+33	; 0x21
    3b20:	9a a1       	ldd	r25, Y+34	; 0x22
    3b22:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3b26:	dc 01       	movw	r26, r24
    3b28:	cb 01       	movw	r24, r22
    3b2a:	8e 8f       	std	Y+30, r24	; 0x1e
    3b2c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3b2e:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3b30:	8f 85       	ldd	r24, Y+15	; 0x0f
    3b32:	8a 95       	dec	r24
    3b34:	f1 f7       	brne	.-4      	; 0x3b32 <LCD_VidInit+0x6e0>
    3b36:	8f 87       	std	Y+15, r24	; 0x0f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
    3b38:	81 e0       	ldi	r24, 0x01	; 1
    3b3a:	0e 94 1e 19 	call	0x323c	; 0x323c <LCD_VidSendCommend>
    3b3e:	80 e0       	ldi	r24, 0x00	; 0
    3b40:	90 e0       	ldi	r25, 0x00	; 0
    3b42:	a0 e0       	ldi	r26, 0x00	; 0
    3b44:	b0 e4       	ldi	r27, 0x40	; 64
    3b46:	8b 87       	std	Y+11, r24	; 0x0b
    3b48:	9c 87       	std	Y+12, r25	; 0x0c
    3b4a:	ad 87       	std	Y+13, r26	; 0x0d
    3b4c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b4e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b50:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b52:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b54:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b56:	20 e0       	ldi	r18, 0x00	; 0
    3b58:	30 e0       	ldi	r19, 0x00	; 0
    3b5a:	4a ef       	ldi	r20, 0xFA	; 250
    3b5c:	54 e4       	ldi	r21, 0x44	; 68
    3b5e:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3b62:	dc 01       	movw	r26, r24
    3b64:	cb 01       	movw	r24, r22
    3b66:	8f 83       	std	Y+7, r24	; 0x07
    3b68:	98 87       	std	Y+8, r25	; 0x08
    3b6a:	a9 87       	std	Y+9, r26	; 0x09
    3b6c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b6e:	6f 81       	ldd	r22, Y+7	; 0x07
    3b70:	78 85       	ldd	r23, Y+8	; 0x08
    3b72:	89 85       	ldd	r24, Y+9	; 0x09
    3b74:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b76:	20 e0       	ldi	r18, 0x00	; 0
    3b78:	30 e0       	ldi	r19, 0x00	; 0
    3b7a:	40 e8       	ldi	r20, 0x80	; 128
    3b7c:	5f e3       	ldi	r21, 0x3F	; 63
    3b7e:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3b82:	88 23       	and	r24, r24
    3b84:	2c f4       	brge	.+10     	; 0x3b90 <LCD_VidInit+0x73e>
		__ticks = 1;
    3b86:	81 e0       	ldi	r24, 0x01	; 1
    3b88:	90 e0       	ldi	r25, 0x00	; 0
    3b8a:	9e 83       	std	Y+6, r25	; 0x06
    3b8c:	8d 83       	std	Y+5, r24	; 0x05
    3b8e:	3f c0       	rjmp	.+126    	; 0x3c0e <LCD_VidInit+0x7bc>
	else if (__tmp > 65535)
    3b90:	6f 81       	ldd	r22, Y+7	; 0x07
    3b92:	78 85       	ldd	r23, Y+8	; 0x08
    3b94:	89 85       	ldd	r24, Y+9	; 0x09
    3b96:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b98:	20 e0       	ldi	r18, 0x00	; 0
    3b9a:	3f ef       	ldi	r19, 0xFF	; 255
    3b9c:	4f e7       	ldi	r20, 0x7F	; 127
    3b9e:	57 e4       	ldi	r21, 0x47	; 71
    3ba0:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3ba4:	18 16       	cp	r1, r24
    3ba6:	4c f5       	brge	.+82     	; 0x3bfa <LCD_VidInit+0x7a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ba8:	6b 85       	ldd	r22, Y+11	; 0x0b
    3baa:	7c 85       	ldd	r23, Y+12	; 0x0c
    3bac:	8d 85       	ldd	r24, Y+13	; 0x0d
    3bae:	9e 85       	ldd	r25, Y+14	; 0x0e
    3bb0:	20 e0       	ldi	r18, 0x00	; 0
    3bb2:	30 e0       	ldi	r19, 0x00	; 0
    3bb4:	40 e2       	ldi	r20, 0x20	; 32
    3bb6:	51 e4       	ldi	r21, 0x41	; 65
    3bb8:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3bbc:	dc 01       	movw	r26, r24
    3bbe:	cb 01       	movw	r24, r22
    3bc0:	bc 01       	movw	r22, r24
    3bc2:	cd 01       	movw	r24, r26
    3bc4:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3bc8:	dc 01       	movw	r26, r24
    3bca:	cb 01       	movw	r24, r22
    3bcc:	9e 83       	std	Y+6, r25	; 0x06
    3bce:	8d 83       	std	Y+5, r24	; 0x05
    3bd0:	0f c0       	rjmp	.+30     	; 0x3bf0 <LCD_VidInit+0x79e>
    3bd2:	88 ec       	ldi	r24, 0xC8	; 200
    3bd4:	90 e0       	ldi	r25, 0x00	; 0
    3bd6:	9c 83       	std	Y+4, r25	; 0x04
    3bd8:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3bda:	8b 81       	ldd	r24, Y+3	; 0x03
    3bdc:	9c 81       	ldd	r25, Y+4	; 0x04
    3bde:	01 97       	sbiw	r24, 0x01	; 1
    3be0:	f1 f7       	brne	.-4      	; 0x3bde <LCD_VidInit+0x78c>
    3be2:	9c 83       	std	Y+4, r25	; 0x04
    3be4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3be6:	8d 81       	ldd	r24, Y+5	; 0x05
    3be8:	9e 81       	ldd	r25, Y+6	; 0x06
    3bea:	01 97       	sbiw	r24, 0x01	; 1
    3bec:	9e 83       	std	Y+6, r25	; 0x06
    3bee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bf0:	8d 81       	ldd	r24, Y+5	; 0x05
    3bf2:	9e 81       	ldd	r25, Y+6	; 0x06
    3bf4:	00 97       	sbiw	r24, 0x00	; 0
    3bf6:	69 f7       	brne	.-38     	; 0x3bd2 <LCD_VidInit+0x780>
    3bf8:	14 c0       	rjmp	.+40     	; 0x3c22 <LCD_VidInit+0x7d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bfa:	6f 81       	ldd	r22, Y+7	; 0x07
    3bfc:	78 85       	ldd	r23, Y+8	; 0x08
    3bfe:	89 85       	ldd	r24, Y+9	; 0x09
    3c00:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c02:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3c06:	dc 01       	movw	r26, r24
    3c08:	cb 01       	movw	r24, r22
    3c0a:	9e 83       	std	Y+6, r25	; 0x06
    3c0c:	8d 83       	std	Y+5, r24	; 0x05
    3c0e:	8d 81       	ldd	r24, Y+5	; 0x05
    3c10:	9e 81       	ldd	r25, Y+6	; 0x06
    3c12:	9a 83       	std	Y+2, r25	; 0x02
    3c14:	89 83       	std	Y+1, r24	; 0x01
    3c16:	89 81       	ldd	r24, Y+1	; 0x01
    3c18:	9a 81       	ldd	r25, Y+2	; 0x02
    3c1a:	01 97       	sbiw	r24, 0x01	; 1
    3c1c:	f1 f7       	brne	.-4      	; 0x3c1a <LCD_VidInit+0x7c8>
    3c1e:	9a 83       	std	Y+2, r25	; 0x02
    3c20:	89 83       	std	Y+1, r24	; 0x01
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
	// Delay for more than 1.53 ms
	_delay_ms(2);
#endif
}
    3c22:	cc 59       	subi	r28, 0x9C	; 156
    3c24:	df 4f       	sbci	r29, 0xFF	; 255
    3c26:	0f b6       	in	r0, 0x3f	; 63
    3c28:	f8 94       	cli
    3c2a:	de bf       	out	0x3e, r29	; 62
    3c2c:	0f be       	out	0x3f, r0	; 63
    3c2e:	cd bf       	out	0x3d, r28	; 61
    3c30:	cf 91       	pop	r28
    3c32:	df 91       	pop	r29
    3c34:	1f 91       	pop	r17
    3c36:	0f 91       	pop	r16
    3c38:	08 95       	ret

00003c3a <LCD_VidSendChar>:

void LCD_VidSendChar(u8 Copy_U8Char){
    3c3a:	df 93       	push	r29
    3c3c:	cf 93       	push	r28
    3c3e:	cd b7       	in	r28, 0x3d	; 61
    3c40:	de b7       	in	r29, 0x3e	; 62
    3c42:	6d 97       	sbiw	r28, 0x1d	; 29
    3c44:	0f b6       	in	r0, 0x3f	; 63
    3c46:	f8 94       	cli
    3c48:	de bf       	out	0x3e, r29	; 62
    3c4a:	0f be       	out	0x3f, r0	; 63
    3c4c:	cd bf       	out	0x3d, r28	; 61
    3c4e:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT
	/******* to define RS / RW ***********/
	DIO_VidSetPinValue(CONTROL_PORT,RS,HIGH);
    3c50:	83 e0       	ldi	r24, 0x03	; 3
    3c52:	60 e0       	ldi	r22, 0x00	; 0
    3c54:	41 e0       	ldi	r20, 0x01	; 1
    3c56:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <DIO_VidSetPinValue>
	/*to define value of character on port*/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Char);
    3c5a:	82 e0       	ldi	r24, 0x02	; 2
    3c5c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3c5e:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <DIO_VidSetPortValue>
	/*********to make enable pulse*********/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    3c62:	83 e0       	ldi	r24, 0x03	; 3
    3c64:	61 e0       	ldi	r22, 0x01	; 1
    3c66:	41 e0       	ldi	r20, 0x01	; 1
    3c68:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <DIO_VidSetPinValue>
    3c6c:	80 e0       	ldi	r24, 0x00	; 0
    3c6e:	90 e0       	ldi	r25, 0x00	; 0
    3c70:	a0 e8       	ldi	r26, 0x80	; 128
    3c72:	bf e3       	ldi	r27, 0x3F	; 63
    3c74:	89 8f       	std	Y+25, r24	; 0x19
    3c76:	9a 8f       	std	Y+26, r25	; 0x1a
    3c78:	ab 8f       	std	Y+27, r26	; 0x1b
    3c7a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c7c:	69 8d       	ldd	r22, Y+25	; 0x19
    3c7e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c80:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c82:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c84:	20 e0       	ldi	r18, 0x00	; 0
    3c86:	30 e0       	ldi	r19, 0x00	; 0
    3c88:	4a ef       	ldi	r20, 0xFA	; 250
    3c8a:	54 e4       	ldi	r21, 0x44	; 68
    3c8c:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3c90:	dc 01       	movw	r26, r24
    3c92:	cb 01       	movw	r24, r22
    3c94:	8d 8b       	std	Y+21, r24	; 0x15
    3c96:	9e 8b       	std	Y+22, r25	; 0x16
    3c98:	af 8b       	std	Y+23, r26	; 0x17
    3c9a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3c9c:	6d 89       	ldd	r22, Y+21	; 0x15
    3c9e:	7e 89       	ldd	r23, Y+22	; 0x16
    3ca0:	8f 89       	ldd	r24, Y+23	; 0x17
    3ca2:	98 8d       	ldd	r25, Y+24	; 0x18
    3ca4:	20 e0       	ldi	r18, 0x00	; 0
    3ca6:	30 e0       	ldi	r19, 0x00	; 0
    3ca8:	40 e8       	ldi	r20, 0x80	; 128
    3caa:	5f e3       	ldi	r21, 0x3F	; 63
    3cac:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3cb0:	88 23       	and	r24, r24
    3cb2:	2c f4       	brge	.+10     	; 0x3cbe <LCD_VidSendChar+0x84>
		__ticks = 1;
    3cb4:	81 e0       	ldi	r24, 0x01	; 1
    3cb6:	90 e0       	ldi	r25, 0x00	; 0
    3cb8:	9c 8b       	std	Y+20, r25	; 0x14
    3cba:	8b 8b       	std	Y+19, r24	; 0x13
    3cbc:	3f c0       	rjmp	.+126    	; 0x3d3c <LCD_VidSendChar+0x102>
	else if (__tmp > 65535)
    3cbe:	6d 89       	ldd	r22, Y+21	; 0x15
    3cc0:	7e 89       	ldd	r23, Y+22	; 0x16
    3cc2:	8f 89       	ldd	r24, Y+23	; 0x17
    3cc4:	98 8d       	ldd	r25, Y+24	; 0x18
    3cc6:	20 e0       	ldi	r18, 0x00	; 0
    3cc8:	3f ef       	ldi	r19, 0xFF	; 255
    3cca:	4f e7       	ldi	r20, 0x7F	; 127
    3ccc:	57 e4       	ldi	r21, 0x47	; 71
    3cce:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3cd2:	18 16       	cp	r1, r24
    3cd4:	4c f5       	brge	.+82     	; 0x3d28 <LCD_VidSendChar+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cd6:	69 8d       	ldd	r22, Y+25	; 0x19
    3cd8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3cda:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3cdc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3cde:	20 e0       	ldi	r18, 0x00	; 0
    3ce0:	30 e0       	ldi	r19, 0x00	; 0
    3ce2:	40 e2       	ldi	r20, 0x20	; 32
    3ce4:	51 e4       	ldi	r21, 0x41	; 65
    3ce6:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3cea:	dc 01       	movw	r26, r24
    3cec:	cb 01       	movw	r24, r22
    3cee:	bc 01       	movw	r22, r24
    3cf0:	cd 01       	movw	r24, r26
    3cf2:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3cf6:	dc 01       	movw	r26, r24
    3cf8:	cb 01       	movw	r24, r22
    3cfa:	9c 8b       	std	Y+20, r25	; 0x14
    3cfc:	8b 8b       	std	Y+19, r24	; 0x13
    3cfe:	0f c0       	rjmp	.+30     	; 0x3d1e <LCD_VidSendChar+0xe4>
    3d00:	88 ec       	ldi	r24, 0xC8	; 200
    3d02:	90 e0       	ldi	r25, 0x00	; 0
    3d04:	9a 8b       	std	Y+18, r25	; 0x12
    3d06:	89 8b       	std	Y+17, r24	; 0x11
    3d08:	89 89       	ldd	r24, Y+17	; 0x11
    3d0a:	9a 89       	ldd	r25, Y+18	; 0x12
    3d0c:	01 97       	sbiw	r24, 0x01	; 1
    3d0e:	f1 f7       	brne	.-4      	; 0x3d0c <LCD_VidSendChar+0xd2>
    3d10:	9a 8b       	std	Y+18, r25	; 0x12
    3d12:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d14:	8b 89       	ldd	r24, Y+19	; 0x13
    3d16:	9c 89       	ldd	r25, Y+20	; 0x14
    3d18:	01 97       	sbiw	r24, 0x01	; 1
    3d1a:	9c 8b       	std	Y+20, r25	; 0x14
    3d1c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d1e:	8b 89       	ldd	r24, Y+19	; 0x13
    3d20:	9c 89       	ldd	r25, Y+20	; 0x14
    3d22:	00 97       	sbiw	r24, 0x00	; 0
    3d24:	69 f7       	brne	.-38     	; 0x3d00 <LCD_VidSendChar+0xc6>
    3d26:	14 c0       	rjmp	.+40     	; 0x3d50 <LCD_VidSendChar+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d28:	6d 89       	ldd	r22, Y+21	; 0x15
    3d2a:	7e 89       	ldd	r23, Y+22	; 0x16
    3d2c:	8f 89       	ldd	r24, Y+23	; 0x17
    3d2e:	98 8d       	ldd	r25, Y+24	; 0x18
    3d30:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3d34:	dc 01       	movw	r26, r24
    3d36:	cb 01       	movw	r24, r22
    3d38:	9c 8b       	std	Y+20, r25	; 0x14
    3d3a:	8b 8b       	std	Y+19, r24	; 0x13
    3d3c:	8b 89       	ldd	r24, Y+19	; 0x13
    3d3e:	9c 89       	ldd	r25, Y+20	; 0x14
    3d40:	98 8b       	std	Y+16, r25	; 0x10
    3d42:	8f 87       	std	Y+15, r24	; 0x0f
    3d44:	8f 85       	ldd	r24, Y+15	; 0x0f
    3d46:	98 89       	ldd	r25, Y+16	; 0x10
    3d48:	01 97       	sbiw	r24, 0x01	; 1
    3d4a:	f1 f7       	brne	.-4      	; 0x3d48 <LCD_VidSendChar+0x10e>
    3d4c:	98 8b       	std	Y+16, r25	; 0x10
    3d4e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    3d50:	83 e0       	ldi	r24, 0x03	; 3
    3d52:	61 e0       	ldi	r22, 0x01	; 1
    3d54:	40 e0       	ldi	r20, 0x00	; 0
    3d56:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <DIO_VidSetPinValue>
    3d5a:	80 e0       	ldi	r24, 0x00	; 0
    3d5c:	90 e0       	ldi	r25, 0x00	; 0
    3d5e:	a0 e0       	ldi	r26, 0x00	; 0
    3d60:	b0 e4       	ldi	r27, 0x40	; 64
    3d62:	8b 87       	std	Y+11, r24	; 0x0b
    3d64:	9c 87       	std	Y+12, r25	; 0x0c
    3d66:	ad 87       	std	Y+13, r26	; 0x0d
    3d68:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d6a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3d6c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3d6e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d70:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d72:	20 e0       	ldi	r18, 0x00	; 0
    3d74:	30 e0       	ldi	r19, 0x00	; 0
    3d76:	4a ef       	ldi	r20, 0xFA	; 250
    3d78:	54 e4       	ldi	r21, 0x44	; 68
    3d7a:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3d7e:	dc 01       	movw	r26, r24
    3d80:	cb 01       	movw	r24, r22
    3d82:	8f 83       	std	Y+7, r24	; 0x07
    3d84:	98 87       	std	Y+8, r25	; 0x08
    3d86:	a9 87       	std	Y+9, r26	; 0x09
    3d88:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3d8a:	6f 81       	ldd	r22, Y+7	; 0x07
    3d8c:	78 85       	ldd	r23, Y+8	; 0x08
    3d8e:	89 85       	ldd	r24, Y+9	; 0x09
    3d90:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d92:	20 e0       	ldi	r18, 0x00	; 0
    3d94:	30 e0       	ldi	r19, 0x00	; 0
    3d96:	40 e8       	ldi	r20, 0x80	; 128
    3d98:	5f e3       	ldi	r21, 0x3F	; 63
    3d9a:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3d9e:	88 23       	and	r24, r24
    3da0:	2c f4       	brge	.+10     	; 0x3dac <LCD_VidSendChar+0x172>
		__ticks = 1;
    3da2:	81 e0       	ldi	r24, 0x01	; 1
    3da4:	90 e0       	ldi	r25, 0x00	; 0
    3da6:	9e 83       	std	Y+6, r25	; 0x06
    3da8:	8d 83       	std	Y+5, r24	; 0x05
    3daa:	3f c0       	rjmp	.+126    	; 0x3e2a <LCD_VidSendChar+0x1f0>
	else if (__tmp > 65535)
    3dac:	6f 81       	ldd	r22, Y+7	; 0x07
    3dae:	78 85       	ldd	r23, Y+8	; 0x08
    3db0:	89 85       	ldd	r24, Y+9	; 0x09
    3db2:	9a 85       	ldd	r25, Y+10	; 0x0a
    3db4:	20 e0       	ldi	r18, 0x00	; 0
    3db6:	3f ef       	ldi	r19, 0xFF	; 255
    3db8:	4f e7       	ldi	r20, 0x7F	; 127
    3dba:	57 e4       	ldi	r21, 0x47	; 71
    3dbc:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3dc0:	18 16       	cp	r1, r24
    3dc2:	4c f5       	brge	.+82     	; 0x3e16 <LCD_VidSendChar+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dc4:	6b 85       	ldd	r22, Y+11	; 0x0b
    3dc6:	7c 85       	ldd	r23, Y+12	; 0x0c
    3dc8:	8d 85       	ldd	r24, Y+13	; 0x0d
    3dca:	9e 85       	ldd	r25, Y+14	; 0x0e
    3dcc:	20 e0       	ldi	r18, 0x00	; 0
    3dce:	30 e0       	ldi	r19, 0x00	; 0
    3dd0:	40 e2       	ldi	r20, 0x20	; 32
    3dd2:	51 e4       	ldi	r21, 0x41	; 65
    3dd4:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3dd8:	dc 01       	movw	r26, r24
    3dda:	cb 01       	movw	r24, r22
    3ddc:	bc 01       	movw	r22, r24
    3dde:	cd 01       	movw	r24, r26
    3de0:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3de4:	dc 01       	movw	r26, r24
    3de6:	cb 01       	movw	r24, r22
    3de8:	9e 83       	std	Y+6, r25	; 0x06
    3dea:	8d 83       	std	Y+5, r24	; 0x05
    3dec:	0f c0       	rjmp	.+30     	; 0x3e0c <LCD_VidSendChar+0x1d2>
    3dee:	88 ec       	ldi	r24, 0xC8	; 200
    3df0:	90 e0       	ldi	r25, 0x00	; 0
    3df2:	9c 83       	std	Y+4, r25	; 0x04
    3df4:	8b 83       	std	Y+3, r24	; 0x03
    3df6:	8b 81       	ldd	r24, Y+3	; 0x03
    3df8:	9c 81       	ldd	r25, Y+4	; 0x04
    3dfa:	01 97       	sbiw	r24, 0x01	; 1
    3dfc:	f1 f7       	brne	.-4      	; 0x3dfa <LCD_VidSendChar+0x1c0>
    3dfe:	9c 83       	std	Y+4, r25	; 0x04
    3e00:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e02:	8d 81       	ldd	r24, Y+5	; 0x05
    3e04:	9e 81       	ldd	r25, Y+6	; 0x06
    3e06:	01 97       	sbiw	r24, 0x01	; 1
    3e08:	9e 83       	std	Y+6, r25	; 0x06
    3e0a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e0c:	8d 81       	ldd	r24, Y+5	; 0x05
    3e0e:	9e 81       	ldd	r25, Y+6	; 0x06
    3e10:	00 97       	sbiw	r24, 0x00	; 0
    3e12:	69 f7       	brne	.-38     	; 0x3dee <LCD_VidSendChar+0x1b4>
    3e14:	14 c0       	rjmp	.+40     	; 0x3e3e <LCD_VidSendChar+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e16:	6f 81       	ldd	r22, Y+7	; 0x07
    3e18:	78 85       	ldd	r23, Y+8	; 0x08
    3e1a:	89 85       	ldd	r24, Y+9	; 0x09
    3e1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e1e:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3e22:	dc 01       	movw	r26, r24
    3e24:	cb 01       	movw	r24, r22
    3e26:	9e 83       	std	Y+6, r25	; 0x06
    3e28:	8d 83       	std	Y+5, r24	; 0x05
    3e2a:	8d 81       	ldd	r24, Y+5	; 0x05
    3e2c:	9e 81       	ldd	r25, Y+6	; 0x06
    3e2e:	9a 83       	std	Y+2, r25	; 0x02
    3e30:	89 83       	std	Y+1, r24	; 0x01
    3e32:	89 81       	ldd	r24, Y+1	; 0x01
    3e34:	9a 81       	ldd	r25, Y+2	; 0x02
    3e36:	01 97       	sbiw	r24, 0x01	; 1
    3e38:	f1 f7       	brne	.-4      	; 0x3e36 <LCD_VidSendChar+0x1fc>
    3e3a:	9a 83       	std	Y+2, r25	; 0x02
    3e3c:	89 83       	std	Y+1, r24	; 0x01
		DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
		_delay_ms(2);

#endif

}
    3e3e:	6d 96       	adiw	r28, 0x1d	; 29
    3e40:	0f b6       	in	r0, 0x3f	; 63
    3e42:	f8 94       	cli
    3e44:	de bf       	out	0x3e, r29	; 62
    3e46:	0f be       	out	0x3f, r0	; 63
    3e48:	cd bf       	out	0x3d, r28	; 61
    3e4a:	cf 91       	pop	r28
    3e4c:	df 91       	pop	r29
    3e4e:	08 95       	ret

00003e50 <LCD_VidSendString>:

void LCD_VidSendString(u8 Copy_U8String[] ){
    3e50:	df 93       	push	r29
    3e52:	cf 93       	push	r28
    3e54:	cd b7       	in	r28, 0x3d	; 61
    3e56:	de b7       	in	r29, 0x3e	; 62
    3e58:	6b 97       	sbiw	r28, 0x1b	; 27
    3e5a:	0f b6       	in	r0, 0x3f	; 63
    3e5c:	f8 94       	cli
    3e5e:	de bf       	out	0x3e, r29	; 62
    3e60:	0f be       	out	0x3f, r0	; 63
    3e62:	cd bf       	out	0x3d, r28	; 61
    3e64:	9b 8f       	std	Y+27, r25	; 0x1b
    3e66:	8a 8f       	std	Y+26, r24	; 0x1a
	u8 i=0;
    3e68:	19 8e       	std	Y+25, r1	; 0x19
    3e6a:	d2 c0       	rjmp	.+420    	; 0x4010 <LCD_VidSendString+0x1c0>
	while( Copy_U8String[i] != '\0' ){
		if (15 == i){
    3e6c:	89 8d       	ldd	r24, Y+25	; 0x19
    3e6e:	8f 30       	cpi	r24, 0x0F	; 15
    3e70:	19 f4       	brne	.+6      	; 0x3e78 <LCD_VidSendString+0x28>
			LCD_VidSendCommend(LINE_2_START);
    3e72:	80 ec       	ldi	r24, 0xC0	; 192
    3e74:	0e 94 1e 19 	call	0x323c	; 0x323c <LCD_VidSendCommend>
		}
		LCD_VidSendChar(Copy_U8String[i]);
    3e78:	89 8d       	ldd	r24, Y+25	; 0x19
    3e7a:	28 2f       	mov	r18, r24
    3e7c:	30 e0       	ldi	r19, 0x00	; 0
    3e7e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e80:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e82:	fc 01       	movw	r30, r24
    3e84:	e2 0f       	add	r30, r18
    3e86:	f3 1f       	adc	r31, r19
    3e88:	80 81       	ld	r24, Z
    3e8a:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <LCD_VidSendChar>
    3e8e:	80 e0       	ldi	r24, 0x00	; 0
    3e90:	90 e0       	ldi	r25, 0x00	; 0
    3e92:	a0 e8       	ldi	r26, 0x80	; 128
    3e94:	bf e3       	ldi	r27, 0x3F	; 63
    3e96:	8d 8b       	std	Y+21, r24	; 0x15
    3e98:	9e 8b       	std	Y+22, r25	; 0x16
    3e9a:	af 8b       	std	Y+23, r26	; 0x17
    3e9c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3e9e:	6d 89       	ldd	r22, Y+21	; 0x15
    3ea0:	7e 89       	ldd	r23, Y+22	; 0x16
    3ea2:	8f 89       	ldd	r24, Y+23	; 0x17
    3ea4:	98 8d       	ldd	r25, Y+24	; 0x18
    3ea6:	2b ea       	ldi	r18, 0xAB	; 171
    3ea8:	3a ea       	ldi	r19, 0xAA	; 170
    3eaa:	4a e2       	ldi	r20, 0x2A	; 42
    3eac:	50 e4       	ldi	r21, 0x40	; 64
    3eae:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3eb2:	dc 01       	movw	r26, r24
    3eb4:	cb 01       	movw	r24, r22
    3eb6:	89 8b       	std	Y+17, r24	; 0x11
    3eb8:	9a 8b       	std	Y+18, r25	; 0x12
    3eba:	ab 8b       	std	Y+19, r26	; 0x13
    3ebc:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    3ebe:	69 89       	ldd	r22, Y+17	; 0x11
    3ec0:	7a 89       	ldd	r23, Y+18	; 0x12
    3ec2:	8b 89       	ldd	r24, Y+19	; 0x13
    3ec4:	9c 89       	ldd	r25, Y+20	; 0x14
    3ec6:	20 e0       	ldi	r18, 0x00	; 0
    3ec8:	30 e0       	ldi	r19, 0x00	; 0
    3eca:	40 e8       	ldi	r20, 0x80	; 128
    3ecc:	5f e3       	ldi	r21, 0x3F	; 63
    3ece:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3ed2:	88 23       	and	r24, r24
    3ed4:	1c f4       	brge	.+6      	; 0x3edc <LCD_VidSendString+0x8c>
		__ticks = 1;
    3ed6:	81 e0       	ldi	r24, 0x01	; 1
    3ed8:	88 8b       	std	Y+16, r24	; 0x10
    3eda:	91 c0       	rjmp	.+290    	; 0x3ffe <LCD_VidSendString+0x1ae>
	else if (__tmp > 255)
    3edc:	69 89       	ldd	r22, Y+17	; 0x11
    3ede:	7a 89       	ldd	r23, Y+18	; 0x12
    3ee0:	8b 89       	ldd	r24, Y+19	; 0x13
    3ee2:	9c 89       	ldd	r25, Y+20	; 0x14
    3ee4:	20 e0       	ldi	r18, 0x00	; 0
    3ee6:	30 e0       	ldi	r19, 0x00	; 0
    3ee8:	4f e7       	ldi	r20, 0x7F	; 127
    3eea:	53 e4       	ldi	r21, 0x43	; 67
    3eec:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3ef0:	18 16       	cp	r1, r24
    3ef2:	0c f0       	brlt	.+2      	; 0x3ef6 <LCD_VidSendString+0xa6>
    3ef4:	7b c0       	rjmp	.+246    	; 0x3fec <LCD_VidSendString+0x19c>
	{
		_delay_ms(__us / 1000.0);
    3ef6:	6d 89       	ldd	r22, Y+21	; 0x15
    3ef8:	7e 89       	ldd	r23, Y+22	; 0x16
    3efa:	8f 89       	ldd	r24, Y+23	; 0x17
    3efc:	98 8d       	ldd	r25, Y+24	; 0x18
    3efe:	20 e0       	ldi	r18, 0x00	; 0
    3f00:	30 e0       	ldi	r19, 0x00	; 0
    3f02:	4a e7       	ldi	r20, 0x7A	; 122
    3f04:	54 e4       	ldi	r21, 0x44	; 68
    3f06:	0e 94 70 11 	call	0x22e0	; 0x22e0 <__divsf3>
    3f0a:	dc 01       	movw	r26, r24
    3f0c:	cb 01       	movw	r24, r22
    3f0e:	8c 87       	std	Y+12, r24	; 0x0c
    3f10:	9d 87       	std	Y+13, r25	; 0x0d
    3f12:	ae 87       	std	Y+14, r26	; 0x0e
    3f14:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f16:	6c 85       	ldd	r22, Y+12	; 0x0c
    3f18:	7d 85       	ldd	r23, Y+13	; 0x0d
    3f1a:	8e 85       	ldd	r24, Y+14	; 0x0e
    3f1c:	9f 85       	ldd	r25, Y+15	; 0x0f
    3f1e:	20 e0       	ldi	r18, 0x00	; 0
    3f20:	30 e0       	ldi	r19, 0x00	; 0
    3f22:	4a ef       	ldi	r20, 0xFA	; 250
    3f24:	54 e4       	ldi	r21, 0x44	; 68
    3f26:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3f2a:	dc 01       	movw	r26, r24
    3f2c:	cb 01       	movw	r24, r22
    3f2e:	88 87       	std	Y+8, r24	; 0x08
    3f30:	99 87       	std	Y+9, r25	; 0x09
    3f32:	aa 87       	std	Y+10, r26	; 0x0a
    3f34:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    3f36:	68 85       	ldd	r22, Y+8	; 0x08
    3f38:	79 85       	ldd	r23, Y+9	; 0x09
    3f3a:	8a 85       	ldd	r24, Y+10	; 0x0a
    3f3c:	9b 85       	ldd	r25, Y+11	; 0x0b
    3f3e:	20 e0       	ldi	r18, 0x00	; 0
    3f40:	30 e0       	ldi	r19, 0x00	; 0
    3f42:	40 e8       	ldi	r20, 0x80	; 128
    3f44:	5f e3       	ldi	r21, 0x3F	; 63
    3f46:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__ltsf2>
    3f4a:	88 23       	and	r24, r24
    3f4c:	2c f4       	brge	.+10     	; 0x3f58 <LCD_VidSendString+0x108>
		__ticks = 1;
    3f4e:	81 e0       	ldi	r24, 0x01	; 1
    3f50:	90 e0       	ldi	r25, 0x00	; 0
    3f52:	9f 83       	std	Y+7, r25	; 0x07
    3f54:	8e 83       	std	Y+6, r24	; 0x06
    3f56:	3f c0       	rjmp	.+126    	; 0x3fd6 <LCD_VidSendString+0x186>
	else if (__tmp > 65535)
    3f58:	68 85       	ldd	r22, Y+8	; 0x08
    3f5a:	79 85       	ldd	r23, Y+9	; 0x09
    3f5c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3f5e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3f60:	20 e0       	ldi	r18, 0x00	; 0
    3f62:	3f ef       	ldi	r19, 0xFF	; 255
    3f64:	4f e7       	ldi	r20, 0x7F	; 127
    3f66:	57 e4       	ldi	r21, 0x47	; 71
    3f68:	0e 94 1c 12 	call	0x2438	; 0x2438 <__gtsf2>
    3f6c:	18 16       	cp	r1, r24
    3f6e:	4c f5       	brge	.+82     	; 0x3fc2 <LCD_VidSendString+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f70:	6c 85       	ldd	r22, Y+12	; 0x0c
    3f72:	7d 85       	ldd	r23, Y+13	; 0x0d
    3f74:	8e 85       	ldd	r24, Y+14	; 0x0e
    3f76:	9f 85       	ldd	r25, Y+15	; 0x0f
    3f78:	20 e0       	ldi	r18, 0x00	; 0
    3f7a:	30 e0       	ldi	r19, 0x00	; 0
    3f7c:	40 e2       	ldi	r20, 0x20	; 32
    3f7e:	51 e4       	ldi	r21, 0x41	; 65
    3f80:	0e 94 76 10 	call	0x20ec	; 0x20ec <__mulsf3>
    3f84:	dc 01       	movw	r26, r24
    3f86:	cb 01       	movw	r24, r22
    3f88:	bc 01       	movw	r22, r24
    3f8a:	cd 01       	movw	r24, r26
    3f8c:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3f90:	dc 01       	movw	r26, r24
    3f92:	cb 01       	movw	r24, r22
    3f94:	9f 83       	std	Y+7, r25	; 0x07
    3f96:	8e 83       	std	Y+6, r24	; 0x06
    3f98:	0f c0       	rjmp	.+30     	; 0x3fb8 <LCD_VidSendString+0x168>
    3f9a:	88 ec       	ldi	r24, 0xC8	; 200
    3f9c:	90 e0       	ldi	r25, 0x00	; 0
    3f9e:	9d 83       	std	Y+5, r25	; 0x05
    3fa0:	8c 83       	std	Y+4, r24	; 0x04
    3fa2:	8c 81       	ldd	r24, Y+4	; 0x04
    3fa4:	9d 81       	ldd	r25, Y+5	; 0x05
    3fa6:	01 97       	sbiw	r24, 0x01	; 1
    3fa8:	f1 f7       	brne	.-4      	; 0x3fa6 <LCD_VidSendString+0x156>
    3faa:	9d 83       	std	Y+5, r25	; 0x05
    3fac:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fae:	8e 81       	ldd	r24, Y+6	; 0x06
    3fb0:	9f 81       	ldd	r25, Y+7	; 0x07
    3fb2:	01 97       	sbiw	r24, 0x01	; 1
    3fb4:	9f 83       	std	Y+7, r25	; 0x07
    3fb6:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fb8:	8e 81       	ldd	r24, Y+6	; 0x06
    3fba:	9f 81       	ldd	r25, Y+7	; 0x07
    3fbc:	00 97       	sbiw	r24, 0x00	; 0
    3fbe:	69 f7       	brne	.-38     	; 0x3f9a <LCD_VidSendString+0x14a>
    3fc0:	24 c0       	rjmp	.+72     	; 0x400a <LCD_VidSendString+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fc2:	68 85       	ldd	r22, Y+8	; 0x08
    3fc4:	79 85       	ldd	r23, Y+9	; 0x09
    3fc6:	8a 85       	ldd	r24, Y+10	; 0x0a
    3fc8:	9b 85       	ldd	r25, Y+11	; 0x0b
    3fca:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3fce:	dc 01       	movw	r26, r24
    3fd0:	cb 01       	movw	r24, r22
    3fd2:	9f 83       	std	Y+7, r25	; 0x07
    3fd4:	8e 83       	std	Y+6, r24	; 0x06
    3fd6:	8e 81       	ldd	r24, Y+6	; 0x06
    3fd8:	9f 81       	ldd	r25, Y+7	; 0x07
    3fda:	9b 83       	std	Y+3, r25	; 0x03
    3fdc:	8a 83       	std	Y+2, r24	; 0x02
    3fde:	8a 81       	ldd	r24, Y+2	; 0x02
    3fe0:	9b 81       	ldd	r25, Y+3	; 0x03
    3fe2:	01 97       	sbiw	r24, 0x01	; 1
    3fe4:	f1 f7       	brne	.-4      	; 0x3fe2 <LCD_VidSendString+0x192>
    3fe6:	9b 83       	std	Y+3, r25	; 0x03
    3fe8:	8a 83       	std	Y+2, r24	; 0x02
    3fea:	0f c0       	rjmp	.+30     	; 0x400a <LCD_VidSendString+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3fec:	69 89       	ldd	r22, Y+17	; 0x11
    3fee:	7a 89       	ldd	r23, Y+18	; 0x12
    3ff0:	8b 89       	ldd	r24, Y+19	; 0x13
    3ff2:	9c 89       	ldd	r25, Y+20	; 0x14
    3ff4:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
    3ff8:	dc 01       	movw	r26, r24
    3ffa:	cb 01       	movw	r24, r22
    3ffc:	88 8b       	std	Y+16, r24	; 0x10
    3ffe:	88 89       	ldd	r24, Y+16	; 0x10
    4000:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4002:	89 81       	ldd	r24, Y+1	; 0x01
    4004:	8a 95       	dec	r24
    4006:	f1 f7       	brne	.-4      	; 0x4004 <LCD_VidSendString+0x1b4>
    4008:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(1);
		i++;
    400a:	89 8d       	ldd	r24, Y+25	; 0x19
    400c:	8f 5f       	subi	r24, 0xFF	; 255
    400e:	89 8f       	std	Y+25, r24	; 0x19

}

void LCD_VidSendString(u8 Copy_U8String[] ){
	u8 i=0;
	while( Copy_U8String[i] != '\0' ){
    4010:	89 8d       	ldd	r24, Y+25	; 0x19
    4012:	28 2f       	mov	r18, r24
    4014:	30 e0       	ldi	r19, 0x00	; 0
    4016:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4018:	9b 8d       	ldd	r25, Y+27	; 0x1b
    401a:	fc 01       	movw	r30, r24
    401c:	e2 0f       	add	r30, r18
    401e:	f3 1f       	adc	r31, r19
    4020:	80 81       	ld	r24, Z
    4022:	88 23       	and	r24, r24
    4024:	09 f0       	breq	.+2      	; 0x4028 <LCD_VidSendString+0x1d8>
    4026:	22 cf       	rjmp	.-444    	; 0x3e6c <LCD_VidSendString+0x1c>
		}
		LCD_VidSendChar(Copy_U8String[i]);
		_delay_us(1);
		i++;
	}//end while
}//end FUNC LCD_VidSendString
    4028:	6b 96       	adiw	r28, 0x1b	; 27
    402a:	0f b6       	in	r0, 0x3f	; 63
    402c:	f8 94       	cli
    402e:	de bf       	out	0x3e, r29	; 62
    4030:	0f be       	out	0x3f, r0	; 63
    4032:	cd bf       	out	0x3d, r28	; 61
    4034:	cf 91       	pop	r28
    4036:	df 91       	pop	r29
    4038:	08 95       	ret

0000403a <LCD_U32Pow>:

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
    403a:	df 93       	push	r29
    403c:	cf 93       	push	r28
    403e:	00 d0       	rcall	.+0      	; 0x4040 <LCD_U32Pow+0x6>
    4040:	00 d0       	rcall	.+0      	; 0x4042 <LCD_U32Pow+0x8>
    4042:	cd b7       	in	r28, 0x3d	; 61
    4044:	de b7       	in	r29, 0x3e	; 62
    4046:	8b 83       	std	Y+3, r24	; 0x03
    4048:	6c 83       	std	Y+4, r22	; 0x04
  u32 local_res = 1 ;
    404a:	81 e0       	ldi	r24, 0x01	; 1
    404c:	90 e0       	ldi	r25, 0x00	; 0
    404e:	9a 83       	std	Y+2, r25	; 0x02
    4050:	89 83       	std	Y+1, r24	; 0x01
    4052:	12 c0       	rjmp	.+36     	; 0x4078 <LCD_U32Pow+0x3e>
  while (Copy_U8Bow >0 ){
	  local_res *= Copy_U8Base ;
    4054:	8b 81       	ldd	r24, Y+3	; 0x03
    4056:	28 2f       	mov	r18, r24
    4058:	30 e0       	ldi	r19, 0x00	; 0
    405a:	89 81       	ldd	r24, Y+1	; 0x01
    405c:	9a 81       	ldd	r25, Y+2	; 0x02
    405e:	ac 01       	movw	r20, r24
    4060:	42 9f       	mul	r20, r18
    4062:	c0 01       	movw	r24, r0
    4064:	43 9f       	mul	r20, r19
    4066:	90 0d       	add	r25, r0
    4068:	52 9f       	mul	r21, r18
    406a:	90 0d       	add	r25, r0
    406c:	11 24       	eor	r1, r1
    406e:	9a 83       	std	Y+2, r25	; 0x02
    4070:	89 83       	std	Y+1, r24	; 0x01
	  Copy_U8Bow--;
    4072:	8c 81       	ldd	r24, Y+4	; 0x04
    4074:	81 50       	subi	r24, 0x01	; 1
    4076:	8c 83       	std	Y+4, r24	; 0x04
	}//end while
}//end FUNC LCD_VidSendString

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
  u32 local_res = 1 ;
  while (Copy_U8Bow >0 ){
    4078:	8c 81       	ldd	r24, Y+4	; 0x04
    407a:	88 23       	and	r24, r24
    407c:	59 f7       	brne	.-42     	; 0x4054 <LCD_U32Pow+0x1a>
	  local_res *= Copy_U8Base ;
	  Copy_U8Bow--;
  }
  return  local_res ;
    407e:	89 81       	ldd	r24, Y+1	; 0x01
    4080:	9a 81       	ldd	r25, Y+2	; 0x02
}
    4082:	0f 90       	pop	r0
    4084:	0f 90       	pop	r0
    4086:	0f 90       	pop	r0
    4088:	0f 90       	pop	r0
    408a:	cf 91       	pop	r28
    408c:	df 91       	pop	r29
    408e:	08 95       	ret

00004090 <LCD_VidPrintVar>:

void LCD_VidPrintVar(u64 Copy_U8Var){
    4090:	2f 92       	push	r2
    4092:	3f 92       	push	r3
    4094:	4f 92       	push	r4
    4096:	5f 92       	push	r5
    4098:	6f 92       	push	r6
    409a:	7f 92       	push	r7
    409c:	8f 92       	push	r8
    409e:	9f 92       	push	r9
    40a0:	af 92       	push	r10
    40a2:	bf 92       	push	r11
    40a4:	cf 92       	push	r12
    40a6:	df 92       	push	r13
    40a8:	ef 92       	push	r14
    40aa:	ff 92       	push	r15
    40ac:	0f 93       	push	r16
    40ae:	1f 93       	push	r17
    40b0:	df 93       	push	r29
    40b2:	cf 93       	push	r28
    40b4:	cd b7       	in	r28, 0x3d	; 61
    40b6:	de b7       	in	r29, 0x3e	; 62
    40b8:	c5 54       	subi	r28, 0x45	; 69
    40ba:	d0 40       	sbci	r29, 0x00	; 0
    40bc:	0f b6       	in	r0, 0x3f	; 63
    40be:	f8 94       	cli
    40c0:	de bf       	out	0x3e, r29	; 62
    40c2:	0f be       	out	0x3f, r0	; 63
    40c4:	cd bf       	out	0x3d, r28	; 61
    40c6:	2b 87       	std	Y+11, r18	; 0x0b
    40c8:	3c 87       	std	Y+12, r19	; 0x0c
    40ca:	4d 87       	std	Y+13, r20	; 0x0d
    40cc:	5e 87       	std	Y+14, r21	; 0x0e
    40ce:	6f 87       	std	Y+15, r22	; 0x0f
    40d0:	78 8b       	std	Y+16, r23	; 0x10
    40d2:	89 8b       	std	Y+17, r24	; 0x11
    40d4:	9a 8b       	std	Y+18, r25	; 0x12
    u64 local_num = 0 ;
    40d6:	1b 82       	std	Y+3, r1	; 0x03
    40d8:	1c 82       	std	Y+4, r1	; 0x04
    40da:	1d 82       	std	Y+5, r1	; 0x05
    40dc:	1e 82       	std	Y+6, r1	; 0x06
    40de:	1f 82       	std	Y+7, r1	; 0x07
    40e0:	18 86       	std	Y+8, r1	; 0x08
    40e2:	19 86       	std	Y+9, r1	; 0x09
    40e4:	1a 86       	std	Y+10, r1	; 0x0a
    u8 i = 0 ;
    40e6:	1a 82       	std	Y+2, r1	; 0x02
    // to check if it 0
	if (0 == Copy_U8Var){
    40e8:	8b 85       	ldd	r24, Y+11	; 0x0b
    40ea:	9c 85       	ldd	r25, Y+12	; 0x0c
    40ec:	89 2b       	or	r24, r25
    40ee:	9d 85       	ldd	r25, Y+13	; 0x0d
    40f0:	89 2b       	or	r24, r25
    40f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    40f4:	89 2b       	or	r24, r25
    40f6:	9f 85       	ldd	r25, Y+15	; 0x0f
    40f8:	89 2b       	or	r24, r25
    40fa:	98 89       	ldd	r25, Y+16	; 0x10
    40fc:	89 2b       	or	r24, r25
    40fe:	99 89       	ldd	r25, Y+17	; 0x11
    4100:	89 2b       	or	r24, r25
    4102:	9a 89       	ldd	r25, Y+18	; 0x12
    4104:	89 2b       	or	r24, r25
    4106:	88 23       	and	r24, r24
    4108:	39 f4       	brne	.+14     	; 0x4118 <LCD_VidPrintVar+0x88>
		LCD_VidSendChar('0');
    410a:	80 e3       	ldi	r24, 0x30	; 48
    410c:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <LCD_VidSendChar>
    4110:	41 c2       	rjmp	.+1154   	; 0x4594 <LCD_VidPrintVar+0x504>
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
		i++ ;
    4112:	8a 81       	ldd	r24, Y+2	; 0x02
    4114:	8f 5f       	subi	r24, 0xFF	; 255
    4116:	8a 83       	std	Y+2, r24	; 0x02
		LCD_VidSendChar('0');
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
    4118:	8a e0       	ldi	r24, 0x0A	; 10
    411a:	6a 81       	ldd	r22, Y+2	; 0x02
    411c:	0e 94 1d 20 	call	0x403a	; 0x403a <LCD_U32Pow>
    4120:	1c 01       	movw	r2, r24
    4122:	44 24       	eor	r4, r4
    4124:	55 24       	eor	r5, r5
    4126:	66 24       	eor	r6, r6
    4128:	77 24       	eor	r7, r7
    412a:	43 01       	movw	r8, r6
    412c:	2b 85       	ldd	r18, Y+11	; 0x0b
    412e:	3c 85       	ldd	r19, Y+12	; 0x0c
    4130:	4d 85       	ldd	r20, Y+13	; 0x0d
    4132:	5e 85       	ldd	r21, Y+14	; 0x0e
    4134:	6f 85       	ldd	r22, Y+15	; 0x0f
    4136:	78 89       	ldd	r23, Y+16	; 0x10
    4138:	89 89       	ldd	r24, Y+17	; 0x11
    413a:	9a 89       	ldd	r25, Y+18	; 0x12
    413c:	a2 2c       	mov	r10, r2
    413e:	b3 2c       	mov	r11, r3
    4140:	c4 2c       	mov	r12, r4
    4142:	d5 2c       	mov	r13, r5
    4144:	e6 2c       	mov	r14, r6
    4146:	f7 2c       	mov	r15, r7
    4148:	08 2d       	mov	r16, r8
    414a:	19 2d       	mov	r17, r9
    414c:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__udivdi3>
    4150:	a2 2e       	mov	r10, r18
    4152:	b3 2e       	mov	r11, r19
    4154:	c4 2e       	mov	r12, r20
    4156:	d5 2e       	mov	r13, r21
    4158:	e6 2e       	mov	r14, r22
    415a:	f7 2e       	mov	r15, r23
    415c:	08 2f       	mov	r16, r24
    415e:	19 2f       	mov	r17, r25
    4160:	2a 2d       	mov	r18, r10
    4162:	3b 2d       	mov	r19, r11
    4164:	4c 2d       	mov	r20, r12
    4166:	5d 2d       	mov	r21, r13
    4168:	6e 2d       	mov	r22, r14
    416a:	7f 2d       	mov	r23, r15
    416c:	80 2f       	mov	r24, r16
    416e:	91 2f       	mov	r25, r17
    4170:	e2 2f       	mov	r30, r18
    4172:	e3 2b       	or	r30, r19
    4174:	e4 2b       	or	r30, r20
    4176:	e5 2b       	or	r30, r21
    4178:	e6 2b       	or	r30, r22
    417a:	e7 2b       	or	r30, r23
    417c:	e8 2b       	or	r30, r24
    417e:	e9 2b       	or	r30, r25
    4180:	ee 23       	and	r30, r30
    4182:	39 f6       	brne	.-114    	; 0x4112 <LCD_VidPrintVar+0x82>
		i++ ;
	}

	s8 copy_i = i-1 ;
    4184:	8a 81       	ldd	r24, Y+2	; 0x02
    4186:	81 50       	subi	r24, 0x01	; 1
    4188:	89 83       	std	Y+1, r24	; 0x01
    418a:	9a c1       	rjmp	.+820    	; 0x44c0 <LCD_VidPrintVar+0x430>

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
		local_num += (Copy_U8Var % 10) * ( LCD_U32Pow(10,copy_i) ) ;
    418c:	ab 84       	ldd	r10, Y+11	; 0x0b
    418e:	bc 84       	ldd	r11, Y+12	; 0x0c
    4190:	cd 84       	ldd	r12, Y+13	; 0x0d
    4192:	de 84       	ldd	r13, Y+14	; 0x0e
    4194:	ef 84       	ldd	r14, Y+15	; 0x0f
    4196:	f8 88       	ldd	r15, Y+16	; 0x10
    4198:	09 89       	ldd	r16, Y+17	; 0x11
    419a:	1a 89       	ldd	r17, Y+18	; 0x12
    419c:	2a 2d       	mov	r18, r10
    419e:	3b 2d       	mov	r19, r11
    41a0:	4c 2d       	mov	r20, r12
    41a2:	5d 2d       	mov	r21, r13
    41a4:	6e 2d       	mov	r22, r14
    41a6:	7f 2d       	mov	r23, r15
    41a8:	80 2f       	mov	r24, r16
    41aa:	91 2f       	mov	r25, r17
    41ac:	0f 2e       	mov	r0, r31
    41ae:	fa e0       	ldi	r31, 0x0A	; 10
    41b0:	af 2e       	mov	r10, r31
    41b2:	f0 2d       	mov	r31, r0
    41b4:	bb 24       	eor	r11, r11
    41b6:	cc 24       	eor	r12, r12
    41b8:	dd 24       	eor	r13, r13
    41ba:	ee 24       	eor	r14, r14
    41bc:	ff 24       	eor	r15, r15
    41be:	00 e0       	ldi	r16, 0x00	; 0
    41c0:	10 e0       	ldi	r17, 0x00	; 0
    41c2:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__umoddi3>
    41c6:	a2 2e       	mov	r10, r18
    41c8:	b3 2e       	mov	r11, r19
    41ca:	c4 2e       	mov	r12, r20
    41cc:	d5 2e       	mov	r13, r21
    41ce:	e6 2e       	mov	r14, r22
    41d0:	f7 2e       	mov	r15, r23
    41d2:	08 2f       	mov	r16, r24
    41d4:	19 2f       	mov	r17, r25
    41d6:	2a 2c       	mov	r2, r10
    41d8:	3b 2c       	mov	r3, r11
    41da:	4c 2c       	mov	r4, r12
    41dc:	5d 2c       	mov	r5, r13
    41de:	6e 2c       	mov	r6, r14
    41e0:	7f 2c       	mov	r7, r15
    41e2:	80 2e       	mov	r8, r16
    41e4:	91 2e       	mov	r9, r17
    41e6:	99 81       	ldd	r25, Y+1	; 0x01
    41e8:	8a e0       	ldi	r24, 0x0A	; 10
    41ea:	69 2f       	mov	r22, r25
    41ec:	0e 94 1d 20 	call	0x403a	; 0x403a <LCD_U32Pow>
    41f0:	8c 01       	movw	r16, r24
    41f2:	20 e0       	ldi	r18, 0x00	; 0
    41f4:	30 e0       	ldi	r19, 0x00	; 0
    41f6:	40 e0       	ldi	r20, 0x00	; 0
    41f8:	50 e0       	ldi	r21, 0x00	; 0
    41fa:	60 e0       	ldi	r22, 0x00	; 0
    41fc:	70 e0       	ldi	r23, 0x00	; 0
    41fe:	0b 8f       	std	Y+27, r16	; 0x1b
    4200:	1c 8f       	std	Y+28, r17	; 0x1c
    4202:	2d 8f       	std	Y+29, r18	; 0x1d
    4204:	3e 8f       	std	Y+30, r19	; 0x1e
    4206:	4f 8f       	std	Y+31, r20	; 0x1f
    4208:	58 a3       	std	Y+32, r21	; 0x20
    420a:	69 a3       	std	Y+33, r22	; 0x21
    420c:	7a a3       	std	Y+34, r23	; 0x22
    420e:	22 2d       	mov	r18, r2
    4210:	33 2d       	mov	r19, r3
    4212:	44 2d       	mov	r20, r4
    4214:	55 2d       	mov	r21, r5
    4216:	66 2d       	mov	r22, r6
    4218:	77 2d       	mov	r23, r7
    421a:	88 2d       	mov	r24, r8
    421c:	99 2d       	mov	r25, r9
    421e:	ab 8c       	ldd	r10, Y+27	; 0x1b
    4220:	bc 8c       	ldd	r11, Y+28	; 0x1c
    4222:	cd 8c       	ldd	r12, Y+29	; 0x1d
    4224:	de 8c       	ldd	r13, Y+30	; 0x1e
    4226:	ef 8c       	ldd	r14, Y+31	; 0x1f
    4228:	f8 a0       	ldd	r15, Y+32	; 0x20
    422a:	09 a1       	ldd	r16, Y+33	; 0x21
    422c:	1a a1       	ldd	r17, Y+34	; 0x22
    422e:	0e 94 41 00 	call	0x82	; 0x82 <__muldi3>
    4232:	a2 2e       	mov	r10, r18
    4234:	b3 2e       	mov	r11, r19
    4236:	c4 2e       	mov	r12, r20
    4238:	d5 2e       	mov	r13, r21
    423a:	e6 2e       	mov	r14, r22
    423c:	f7 2e       	mov	r15, r23
    423e:	08 2f       	mov	r16, r24
    4240:	19 2f       	mov	r17, r25
    4242:	ab 8a       	std	Y+19, r10	; 0x13
    4244:	bc 8a       	std	Y+20, r11	; 0x14
    4246:	cd 8a       	std	Y+21, r12	; 0x15
    4248:	de 8a       	std	Y+22, r13	; 0x16
    424a:	ef 8a       	std	Y+23, r14	; 0x17
    424c:	f8 8e       	std	Y+24, r15	; 0x18
    424e:	09 8f       	std	Y+25, r16	; 0x19
    4250:	1a 8f       	std	Y+26, r17	; 0x1a
    4252:	1b 81       	ldd	r17, Y+3	; 0x03
    4254:	1b a3       	std	Y+35, r17	; 0x23
    4256:	2c 81       	ldd	r18, Y+4	; 0x04
    4258:	2c a3       	std	Y+36, r18	; 0x24
    425a:	3d 81       	ldd	r19, Y+5	; 0x05
    425c:	3d a3       	std	Y+37, r19	; 0x25
    425e:	4e 81       	ldd	r20, Y+6	; 0x06
    4260:	4e a3       	std	Y+38, r20	; 0x26
    4262:	5f 81       	ldd	r21, Y+7	; 0x07
    4264:	5f a3       	std	Y+39, r21	; 0x27
    4266:	68 85       	ldd	r22, Y+8	; 0x08
    4268:	68 a7       	std	Y+40, r22	; 0x28
    426a:	79 85       	ldd	r23, Y+9	; 0x09
    426c:	79 a7       	std	Y+41, r23	; 0x29
    426e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4270:	8a a7       	std	Y+42, r24	; 0x2a
    4272:	9b a1       	ldd	r25, Y+35	; 0x23
    4274:	0b 89       	ldd	r16, Y+19	; 0x13
    4276:	90 0f       	add	r25, r16
    4278:	9b a7       	std	Y+43, r25	; 0x2b
    427a:	11 e0       	ldi	r17, 0x01	; 1
    427c:	1b ab       	std	Y+51, r17	; 0x33
    427e:	2b a5       	ldd	r18, Y+43	; 0x2b
    4280:	3b a1       	ldd	r19, Y+35	; 0x23
    4282:	23 17       	cp	r18, r19
    4284:	08 f0       	brcs	.+2      	; 0x4288 <LCD_VidPrintVar+0x1f8>
    4286:	1b aa       	std	Y+51, r1	; 0x33
    4288:	4c a1       	ldd	r20, Y+36	; 0x24
    428a:	5c 89       	ldd	r21, Y+20	; 0x14
    428c:	45 0f       	add	r20, r21
    428e:	4c a7       	std	Y+44, r20	; 0x2c
    4290:	61 e0       	ldi	r22, 0x01	; 1
    4292:	6c ab       	std	Y+52, r22	; 0x34
    4294:	7c a5       	ldd	r23, Y+44	; 0x2c
    4296:	8c a1       	ldd	r24, Y+36	; 0x24
    4298:	78 17       	cp	r23, r24
    429a:	08 f0       	brcs	.+2      	; 0x429e <LCD_VidPrintVar+0x20e>
    429c:	1c aa       	std	Y+52, r1	; 0x34
    429e:	9b a9       	ldd	r25, Y+51	; 0x33
    42a0:	0c a5       	ldd	r16, Y+44	; 0x2c
    42a2:	90 0f       	add	r25, r16
    42a4:	9d ab       	std	Y+53, r25	; 0x35
    42a6:	11 e0       	ldi	r17, 0x01	; 1
    42a8:	1e ab       	std	Y+54, r17	; 0x36
    42aa:	2d a9       	ldd	r18, Y+53	; 0x35
    42ac:	3c a5       	ldd	r19, Y+44	; 0x2c
    42ae:	23 17       	cp	r18, r19
    42b0:	08 f0       	brcs	.+2      	; 0x42b4 <LCD_VidPrintVar+0x224>
    42b2:	1e aa       	std	Y+54, r1	; 0x36
    42b4:	4c a9       	ldd	r20, Y+52	; 0x34
    42b6:	5e a9       	ldd	r21, Y+54	; 0x36
    42b8:	45 2b       	or	r20, r21
    42ba:	4c ab       	std	Y+52, r20	; 0x34
    42bc:	6d a9       	ldd	r22, Y+53	; 0x35
    42be:	6c a7       	std	Y+44, r22	; 0x2c
    42c0:	7d a1       	ldd	r23, Y+37	; 0x25
    42c2:	8d 89       	ldd	r24, Y+21	; 0x15
    42c4:	78 0f       	add	r23, r24
    42c6:	7d a7       	std	Y+45, r23	; 0x2d
    42c8:	91 e0       	ldi	r25, 0x01	; 1
    42ca:	9f ab       	std	Y+55, r25	; 0x37
    42cc:	0d a5       	ldd	r16, Y+45	; 0x2d
    42ce:	1d a1       	ldd	r17, Y+37	; 0x25
    42d0:	01 17       	cp	r16, r17
    42d2:	08 f0       	brcs	.+2      	; 0x42d6 <LCD_VidPrintVar+0x246>
    42d4:	1f aa       	std	Y+55, r1	; 0x37
    42d6:	2c a9       	ldd	r18, Y+52	; 0x34
    42d8:	3d a5       	ldd	r19, Y+45	; 0x2d
    42da:	23 0f       	add	r18, r19
    42dc:	28 af       	std	Y+56, r18	; 0x38
    42de:	41 e0       	ldi	r20, 0x01	; 1
    42e0:	49 af       	std	Y+57, r20	; 0x39
    42e2:	58 ad       	ldd	r21, Y+56	; 0x38
    42e4:	6d a5       	ldd	r22, Y+45	; 0x2d
    42e6:	56 17       	cp	r21, r22
    42e8:	08 f0       	brcs	.+2      	; 0x42ec <LCD_VidPrintVar+0x25c>
    42ea:	19 ae       	std	Y+57, r1	; 0x39
    42ec:	7f a9       	ldd	r23, Y+55	; 0x37
    42ee:	89 ad       	ldd	r24, Y+57	; 0x39
    42f0:	78 2b       	or	r23, r24
    42f2:	7f ab       	std	Y+55, r23	; 0x37
    42f4:	98 ad       	ldd	r25, Y+56	; 0x38
    42f6:	9d a7       	std	Y+45, r25	; 0x2d
    42f8:	0e a1       	ldd	r16, Y+38	; 0x26
    42fa:	1e 89       	ldd	r17, Y+22	; 0x16
    42fc:	01 0f       	add	r16, r17
    42fe:	0e a7       	std	Y+46, r16	; 0x2e
    4300:	21 e0       	ldi	r18, 0x01	; 1
    4302:	2a af       	std	Y+58, r18	; 0x3a
    4304:	3e a5       	ldd	r19, Y+46	; 0x2e
    4306:	4e a1       	ldd	r20, Y+38	; 0x26
    4308:	34 17       	cp	r19, r20
    430a:	08 f0       	brcs	.+2      	; 0x430e <LCD_VidPrintVar+0x27e>
    430c:	1a ae       	std	Y+58, r1	; 0x3a
    430e:	5f a9       	ldd	r21, Y+55	; 0x37
    4310:	6e a5       	ldd	r22, Y+46	; 0x2e
    4312:	56 0f       	add	r21, r22
    4314:	5b af       	std	Y+59, r21	; 0x3b
    4316:	71 e0       	ldi	r23, 0x01	; 1
    4318:	7c af       	std	Y+60, r23	; 0x3c
    431a:	8b ad       	ldd	r24, Y+59	; 0x3b
    431c:	9e a5       	ldd	r25, Y+46	; 0x2e
    431e:	89 17       	cp	r24, r25
    4320:	08 f0       	brcs	.+2      	; 0x4324 <LCD_VidPrintVar+0x294>
    4322:	1c ae       	std	Y+60, r1	; 0x3c
    4324:	0a ad       	ldd	r16, Y+58	; 0x3a
    4326:	1c ad       	ldd	r17, Y+60	; 0x3c
    4328:	01 2b       	or	r16, r17
    432a:	0a af       	std	Y+58, r16	; 0x3a
    432c:	2b ad       	ldd	r18, Y+59	; 0x3b
    432e:	2e a7       	std	Y+46, r18	; 0x2e
    4330:	3f a1       	ldd	r19, Y+39	; 0x27
    4332:	4f 89       	ldd	r20, Y+23	; 0x17
    4334:	34 0f       	add	r19, r20
    4336:	3f a7       	std	Y+47, r19	; 0x2f
    4338:	51 e0       	ldi	r21, 0x01	; 1
    433a:	5d af       	std	Y+61, r21	; 0x3d
    433c:	6f a5       	ldd	r22, Y+47	; 0x2f
    433e:	7f a1       	ldd	r23, Y+39	; 0x27
    4340:	67 17       	cp	r22, r23
    4342:	08 f0       	brcs	.+2      	; 0x4346 <LCD_VidPrintVar+0x2b6>
    4344:	1d ae       	std	Y+61, r1	; 0x3d
    4346:	8a ad       	ldd	r24, Y+58	; 0x3a
    4348:	9f a5       	ldd	r25, Y+47	; 0x2f
    434a:	89 0f       	add	r24, r25
    434c:	8e af       	std	Y+62, r24	; 0x3e
    434e:	01 e0       	ldi	r16, 0x01	; 1
    4350:	0f af       	std	Y+63, r16	; 0x3f
    4352:	1e ad       	ldd	r17, Y+62	; 0x3e
    4354:	2f a5       	ldd	r18, Y+47	; 0x2f
    4356:	12 17       	cp	r17, r18
    4358:	08 f0       	brcs	.+2      	; 0x435c <LCD_VidPrintVar+0x2cc>
    435a:	1f ae       	std	Y+63, r1	; 0x3f
    435c:	3d ad       	ldd	r19, Y+61	; 0x3d
    435e:	4f ad       	ldd	r20, Y+63	; 0x3f
    4360:	34 2b       	or	r19, r20
    4362:	3d af       	std	Y+61, r19	; 0x3d
    4364:	5e ad       	ldd	r21, Y+62	; 0x3e
    4366:	5f a7       	std	Y+47, r21	; 0x2f
    4368:	68 a5       	ldd	r22, Y+40	; 0x28
    436a:	78 8d       	ldd	r23, Y+24	; 0x18
    436c:	67 0f       	add	r22, r23
    436e:	68 ab       	std	Y+48, r22	; 0x30
    4370:	81 e0       	ldi	r24, 0x01	; 1
    4372:	21 96       	adiw	r28, 0x01	; 1
    4374:	8f af       	std	Y+63, r24	; 0x3f
    4376:	21 97       	sbiw	r28, 0x01	; 1
    4378:	98 a9       	ldd	r25, Y+48	; 0x30
    437a:	08 a5       	ldd	r16, Y+40	; 0x28
    437c:	90 17       	cp	r25, r16
    437e:	18 f0       	brcs	.+6      	; 0x4386 <LCD_VidPrintVar+0x2f6>
    4380:	21 96       	adiw	r28, 0x01	; 1
    4382:	1f ae       	std	Y+63, r1	; 0x3f
    4384:	21 97       	sbiw	r28, 0x01	; 1
    4386:	1d ad       	ldd	r17, Y+61	; 0x3d
    4388:	28 a9       	ldd	r18, Y+48	; 0x30
    438a:	12 0f       	add	r17, r18
    438c:	22 96       	adiw	r28, 0x02	; 2
    438e:	1f af       	std	Y+63, r17	; 0x3f
    4390:	22 97       	sbiw	r28, 0x02	; 2
    4392:	31 e0       	ldi	r19, 0x01	; 1
    4394:	23 96       	adiw	r28, 0x03	; 3
    4396:	3f af       	std	Y+63, r19	; 0x3f
    4398:	23 97       	sbiw	r28, 0x03	; 3
    439a:	22 96       	adiw	r28, 0x02	; 2
    439c:	4f ad       	ldd	r20, Y+63	; 0x3f
    439e:	22 97       	sbiw	r28, 0x02	; 2
    43a0:	58 a9       	ldd	r21, Y+48	; 0x30
    43a2:	45 17       	cp	r20, r21
    43a4:	18 f0       	brcs	.+6      	; 0x43ac <LCD_VidPrintVar+0x31c>
    43a6:	23 96       	adiw	r28, 0x03	; 3
    43a8:	1f ae       	std	Y+63, r1	; 0x3f
    43aa:	23 97       	sbiw	r28, 0x03	; 3
    43ac:	21 96       	adiw	r28, 0x01	; 1
    43ae:	6f ad       	ldd	r22, Y+63	; 0x3f
    43b0:	21 97       	sbiw	r28, 0x01	; 1
    43b2:	23 96       	adiw	r28, 0x03	; 3
    43b4:	7f ad       	ldd	r23, Y+63	; 0x3f
    43b6:	23 97       	sbiw	r28, 0x03	; 3
    43b8:	67 2b       	or	r22, r23
    43ba:	21 96       	adiw	r28, 0x01	; 1
    43bc:	6f af       	std	Y+63, r22	; 0x3f
    43be:	21 97       	sbiw	r28, 0x01	; 1
    43c0:	22 96       	adiw	r28, 0x02	; 2
    43c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    43c4:	22 97       	sbiw	r28, 0x02	; 2
    43c6:	88 ab       	std	Y+48, r24	; 0x30
    43c8:	99 a5       	ldd	r25, Y+41	; 0x29
    43ca:	09 8d       	ldd	r16, Y+25	; 0x19
    43cc:	90 0f       	add	r25, r16
    43ce:	99 ab       	std	Y+49, r25	; 0x31
    43d0:	11 e0       	ldi	r17, 0x01	; 1
    43d2:	24 96       	adiw	r28, 0x04	; 4
    43d4:	1f af       	std	Y+63, r17	; 0x3f
    43d6:	24 97       	sbiw	r28, 0x04	; 4
    43d8:	29 a9       	ldd	r18, Y+49	; 0x31
    43da:	39 a5       	ldd	r19, Y+41	; 0x29
    43dc:	23 17       	cp	r18, r19
    43de:	18 f0       	brcs	.+6      	; 0x43e6 <LCD_VidPrintVar+0x356>
    43e0:	24 96       	adiw	r28, 0x04	; 4
    43e2:	1f ae       	std	Y+63, r1	; 0x3f
    43e4:	24 97       	sbiw	r28, 0x04	; 4
    43e6:	21 96       	adiw	r28, 0x01	; 1
    43e8:	4f ad       	ldd	r20, Y+63	; 0x3f
    43ea:	21 97       	sbiw	r28, 0x01	; 1
    43ec:	59 a9       	ldd	r21, Y+49	; 0x31
    43ee:	45 0f       	add	r20, r21
    43f0:	25 96       	adiw	r28, 0x05	; 5
    43f2:	4f af       	std	Y+63, r20	; 0x3f
    43f4:	25 97       	sbiw	r28, 0x05	; 5
    43f6:	61 e0       	ldi	r22, 0x01	; 1
    43f8:	26 96       	adiw	r28, 0x06	; 6
    43fa:	6f af       	std	Y+63, r22	; 0x3f
    43fc:	26 97       	sbiw	r28, 0x06	; 6
    43fe:	25 96       	adiw	r28, 0x05	; 5
    4400:	7f ad       	ldd	r23, Y+63	; 0x3f
    4402:	25 97       	sbiw	r28, 0x05	; 5
    4404:	89 a9       	ldd	r24, Y+49	; 0x31
    4406:	78 17       	cp	r23, r24
    4408:	18 f0       	brcs	.+6      	; 0x4410 <LCD_VidPrintVar+0x380>
    440a:	26 96       	adiw	r28, 0x06	; 6
    440c:	1f ae       	std	Y+63, r1	; 0x3f
    440e:	26 97       	sbiw	r28, 0x06	; 6
    4410:	24 96       	adiw	r28, 0x04	; 4
    4412:	9f ad       	ldd	r25, Y+63	; 0x3f
    4414:	24 97       	sbiw	r28, 0x04	; 4
    4416:	26 96       	adiw	r28, 0x06	; 6
    4418:	0f ad       	ldd	r16, Y+63	; 0x3f
    441a:	26 97       	sbiw	r28, 0x06	; 6
    441c:	90 2b       	or	r25, r16
    441e:	24 96       	adiw	r28, 0x04	; 4
    4420:	9f af       	std	Y+63, r25	; 0x3f
    4422:	24 97       	sbiw	r28, 0x04	; 4
    4424:	25 96       	adiw	r28, 0x05	; 5
    4426:	1f ad       	ldd	r17, Y+63	; 0x3f
    4428:	25 97       	sbiw	r28, 0x05	; 5
    442a:	19 ab       	std	Y+49, r17	; 0x31
    442c:	2a a5       	ldd	r18, Y+42	; 0x2a
    442e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    4430:	23 0f       	add	r18, r19
    4432:	2a ab       	std	Y+50, r18	; 0x32
    4434:	24 96       	adiw	r28, 0x04	; 4
    4436:	8f ad       	ldd	r24, Y+63	; 0x3f
    4438:	24 97       	sbiw	r28, 0x04	; 4
    443a:	4a a9       	ldd	r20, Y+50	; 0x32
    443c:	84 0f       	add	r24, r20
    443e:	8a ab       	std	Y+50, r24	; 0x32
    4440:	5b a5       	ldd	r21, Y+43	; 0x2b
    4442:	5b 83       	std	Y+3, r21	; 0x03
    4444:	6c a5       	ldd	r22, Y+44	; 0x2c
    4446:	6c 83       	std	Y+4, r22	; 0x04
    4448:	7d a5       	ldd	r23, Y+45	; 0x2d
    444a:	7d 83       	std	Y+5, r23	; 0x05
    444c:	8e a5       	ldd	r24, Y+46	; 0x2e
    444e:	8e 83       	std	Y+6, r24	; 0x06
    4450:	9f a5       	ldd	r25, Y+47	; 0x2f
    4452:	9f 83       	std	Y+7, r25	; 0x07
    4454:	08 a9       	ldd	r16, Y+48	; 0x30
    4456:	08 87       	std	Y+8, r16	; 0x08
    4458:	19 a9       	ldd	r17, Y+49	; 0x31
    445a:	19 87       	std	Y+9, r17	; 0x09
    445c:	2a a9       	ldd	r18, Y+50	; 0x32
    445e:	2a 87       	std	Y+10, r18	; 0x0a
		Copy_U8Var/=10 ;
    4460:	ab 84       	ldd	r10, Y+11	; 0x0b
    4462:	bc 84       	ldd	r11, Y+12	; 0x0c
    4464:	cd 84       	ldd	r12, Y+13	; 0x0d
    4466:	de 84       	ldd	r13, Y+14	; 0x0e
    4468:	ef 84       	ldd	r14, Y+15	; 0x0f
    446a:	f8 88       	ldd	r15, Y+16	; 0x10
    446c:	09 89       	ldd	r16, Y+17	; 0x11
    446e:	1a 89       	ldd	r17, Y+18	; 0x12
    4470:	2a 2d       	mov	r18, r10
    4472:	3b 2d       	mov	r19, r11
    4474:	4c 2d       	mov	r20, r12
    4476:	5d 2d       	mov	r21, r13
    4478:	6e 2d       	mov	r22, r14
    447a:	7f 2d       	mov	r23, r15
    447c:	80 2f       	mov	r24, r16
    447e:	91 2f       	mov	r25, r17
    4480:	0f 2e       	mov	r0, r31
    4482:	fa e0       	ldi	r31, 0x0A	; 10
    4484:	af 2e       	mov	r10, r31
    4486:	f0 2d       	mov	r31, r0
    4488:	bb 24       	eor	r11, r11
    448a:	cc 24       	eor	r12, r12
    448c:	dd 24       	eor	r13, r13
    448e:	ee 24       	eor	r14, r14
    4490:	ff 24       	eor	r15, r15
    4492:	00 e0       	ldi	r16, 0x00	; 0
    4494:	10 e0       	ldi	r17, 0x00	; 0
    4496:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__udivdi3>
    449a:	a2 2e       	mov	r10, r18
    449c:	b3 2e       	mov	r11, r19
    449e:	c4 2e       	mov	r12, r20
    44a0:	d5 2e       	mov	r13, r21
    44a2:	e6 2e       	mov	r14, r22
    44a4:	f7 2e       	mov	r15, r23
    44a6:	08 2f       	mov	r16, r24
    44a8:	19 2f       	mov	r17, r25
    44aa:	ab 86       	std	Y+11, r10	; 0x0b
    44ac:	bc 86       	std	Y+12, r11	; 0x0c
    44ae:	cd 86       	std	Y+13, r12	; 0x0d
    44b0:	de 86       	std	Y+14, r13	; 0x0e
    44b2:	ef 86       	std	Y+15, r14	; 0x0f
    44b4:	f8 8a       	std	Y+16, r15	; 0x10
    44b6:	09 8b       	std	Y+17, r16	; 0x11
    44b8:	1a 8b       	std	Y+18, r17	; 0x12
		copy_i-- ;
    44ba:	89 81       	ldd	r24, Y+1	; 0x01
    44bc:	81 50       	subi	r24, 0x01	; 1
    44be:	89 83       	std	Y+1, r24	; 0x01
	}

	s8 copy_i = i-1 ;

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
    44c0:	89 81       	ldd	r24, Y+1	; 0x01
    44c2:	88 23       	and	r24, r24
    44c4:	0c f0       	brlt	.+2      	; 0x44c8 <LCD_VidPrintVar+0x438>
    44c6:	62 ce       	rjmp	.-828    	; 0x418c <LCD_VidPrintVar+0xfc>
    44c8:	61 c0       	rjmp	.+194    	; 0x458c <LCD_VidPrintVar+0x4fc>
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
    44ca:	ab 80       	ldd	r10, Y+3	; 0x03
    44cc:	bc 80       	ldd	r11, Y+4	; 0x04
    44ce:	cd 80       	ldd	r12, Y+5	; 0x05
    44d0:	de 80       	ldd	r13, Y+6	; 0x06
    44d2:	ef 80       	ldd	r14, Y+7	; 0x07
    44d4:	f8 84       	ldd	r15, Y+8	; 0x08
    44d6:	09 85       	ldd	r16, Y+9	; 0x09
    44d8:	1a 85       	ldd	r17, Y+10	; 0x0a
    44da:	2a 2d       	mov	r18, r10
    44dc:	3b 2d       	mov	r19, r11
    44de:	4c 2d       	mov	r20, r12
    44e0:	5d 2d       	mov	r21, r13
    44e2:	6e 2d       	mov	r22, r14
    44e4:	7f 2d       	mov	r23, r15
    44e6:	80 2f       	mov	r24, r16
    44e8:	91 2f       	mov	r25, r17
    44ea:	0f 2e       	mov	r0, r31
    44ec:	fa e0       	ldi	r31, 0x0A	; 10
    44ee:	af 2e       	mov	r10, r31
    44f0:	f0 2d       	mov	r31, r0
    44f2:	bb 24       	eor	r11, r11
    44f4:	cc 24       	eor	r12, r12
    44f6:	dd 24       	eor	r13, r13
    44f8:	ee 24       	eor	r14, r14
    44fa:	ff 24       	eor	r15, r15
    44fc:	00 e0       	ldi	r16, 0x00	; 0
    44fe:	10 e0       	ldi	r17, 0x00	; 0
    4500:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__umoddi3>
    4504:	a2 2e       	mov	r10, r18
    4506:	b3 2e       	mov	r11, r19
    4508:	c4 2e       	mov	r12, r20
    450a:	d5 2e       	mov	r13, r21
    450c:	e6 2e       	mov	r14, r22
    450e:	f7 2e       	mov	r15, r23
    4510:	08 2f       	mov	r16, r24
    4512:	19 2f       	mov	r17, r25
    4514:	2a 2d       	mov	r18, r10
    4516:	3b 2d       	mov	r19, r11
    4518:	4c 2d       	mov	r20, r12
    451a:	5d 2d       	mov	r21, r13
    451c:	6e 2d       	mov	r22, r14
    451e:	7f 2d       	mov	r23, r15
    4520:	80 2f       	mov	r24, r16
    4522:	91 2f       	mov	r25, r17
    4524:	82 2f       	mov	r24, r18
    4526:	80 5d       	subi	r24, 0xD0	; 208
    4528:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <LCD_VidSendChar>
		local_num /= 10 ;
    452c:	ab 80       	ldd	r10, Y+3	; 0x03
    452e:	bc 80       	ldd	r11, Y+4	; 0x04
    4530:	cd 80       	ldd	r12, Y+5	; 0x05
    4532:	de 80       	ldd	r13, Y+6	; 0x06
    4534:	ef 80       	ldd	r14, Y+7	; 0x07
    4536:	f8 84       	ldd	r15, Y+8	; 0x08
    4538:	09 85       	ldd	r16, Y+9	; 0x09
    453a:	1a 85       	ldd	r17, Y+10	; 0x0a
    453c:	2a 2d       	mov	r18, r10
    453e:	3b 2d       	mov	r19, r11
    4540:	4c 2d       	mov	r20, r12
    4542:	5d 2d       	mov	r21, r13
    4544:	6e 2d       	mov	r22, r14
    4546:	7f 2d       	mov	r23, r15
    4548:	80 2f       	mov	r24, r16
    454a:	91 2f       	mov	r25, r17
    454c:	0f 2e       	mov	r0, r31
    454e:	fa e0       	ldi	r31, 0x0A	; 10
    4550:	af 2e       	mov	r10, r31
    4552:	f0 2d       	mov	r31, r0
    4554:	bb 24       	eor	r11, r11
    4556:	cc 24       	eor	r12, r12
    4558:	dd 24       	eor	r13, r13
    455a:	ee 24       	eor	r14, r14
    455c:	ff 24       	eor	r15, r15
    455e:	00 e0       	ldi	r16, 0x00	; 0
    4560:	10 e0       	ldi	r17, 0x00	; 0
    4562:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__udivdi3>
    4566:	a2 2e       	mov	r10, r18
    4568:	b3 2e       	mov	r11, r19
    456a:	c4 2e       	mov	r12, r20
    456c:	d5 2e       	mov	r13, r21
    456e:	e6 2e       	mov	r14, r22
    4570:	f7 2e       	mov	r15, r23
    4572:	08 2f       	mov	r16, r24
    4574:	19 2f       	mov	r17, r25
    4576:	ab 82       	std	Y+3, r10	; 0x03
    4578:	bc 82       	std	Y+4, r11	; 0x04
    457a:	cd 82       	std	Y+5, r12	; 0x05
    457c:	de 82       	std	Y+6, r13	; 0x06
    457e:	ef 82       	std	Y+7, r14	; 0x07
    4580:	f8 86       	std	Y+8, r15	; 0x08
    4582:	09 87       	std	Y+9, r16	; 0x09
    4584:	1a 87       	std	Y+10, r17	; 0x0a
		i--;
    4586:	8a 81       	ldd	r24, Y+2	; 0x02
    4588:	81 50       	subi	r24, 0x01	; 1
    458a:	8a 83       	std	Y+2, r24	; 0x02
		Copy_U8Var/=10 ;
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
    458c:	8a 81       	ldd	r24, Y+2	; 0x02
    458e:	88 23       	and	r24, r24
    4590:	09 f0       	breq	.+2      	; 0x4594 <LCD_VidPrintVar+0x504>
    4592:	9b cf       	rjmp	.-202    	; 0x44ca <LCD_VidPrintVar+0x43a>
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
		local_num /= 10 ;
		i--;
	}//end while

}
    4594:	cb 5b       	subi	r28, 0xBB	; 187
    4596:	df 4f       	sbci	r29, 0xFF	; 255
    4598:	0f b6       	in	r0, 0x3f	; 63
    459a:	f8 94       	cli
    459c:	de bf       	out	0x3e, r29	; 62
    459e:	0f be       	out	0x3f, r0	; 63
    45a0:	cd bf       	out	0x3d, r28	; 61
    45a2:	cf 91       	pop	r28
    45a4:	df 91       	pop	r29
    45a6:	1f 91       	pop	r17
    45a8:	0f 91       	pop	r16
    45aa:	ff 90       	pop	r15
    45ac:	ef 90       	pop	r14
    45ae:	df 90       	pop	r13
    45b0:	cf 90       	pop	r12
    45b2:	bf 90       	pop	r11
    45b4:	af 90       	pop	r10
    45b6:	9f 90       	pop	r9
    45b8:	8f 90       	pop	r8
    45ba:	7f 90       	pop	r7
    45bc:	6f 90       	pop	r6
    45be:	5f 90       	pop	r5
    45c0:	4f 90       	pop	r4
    45c2:	3f 90       	pop	r3
    45c4:	2f 90       	pop	r2
    45c6:	08 95       	ret

000045c8 <LCD_VidPosCur>:
void LCD_VidPosCur(u8 Copy_U8Row , u8 Copy_U8Col ) {
    45c8:	df 93       	push	r29
    45ca:	cf 93       	push	r28
    45cc:	00 d0       	rcall	.+0      	; 0x45ce <LCD_VidPosCur+0x6>
    45ce:	0f 92       	push	r0
    45d0:	cd b7       	in	r28, 0x3d	; 61
    45d2:	de b7       	in	r29, 0x3e	; 62
    45d4:	8a 83       	std	Y+2, r24	; 0x02
    45d6:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_Address = 0 ;
    45d8:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_U8Row == 0)
    45da:	8a 81       	ldd	r24, Y+2	; 0x02
    45dc:	88 23       	and	r24, r24
    45de:	19 f4       	brne	.+6      	; 0x45e6 <LCD_VidPosCur+0x1e>
		Local_Address =0x80 ;
    45e0:	80 e8       	ldi	r24, 0x80	; 128
    45e2:	89 83       	std	Y+1, r24	; 0x01
    45e4:	05 c0       	rjmp	.+10     	; 0x45f0 <LCD_VidPosCur+0x28>
	else if (Copy_U8Row == 1)
    45e6:	8a 81       	ldd	r24, Y+2	; 0x02
    45e8:	81 30       	cpi	r24, 0x01	; 1
    45ea:	11 f4       	brne	.+4      	; 0x45f0 <LCD_VidPosCur+0x28>
		Local_Address =0xC0 ;
    45ec:	80 ec       	ldi	r24, 0xC0	; 192
    45ee:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_U8Col < 16 )
    45f0:	8b 81       	ldd	r24, Y+3	; 0x03
    45f2:	80 31       	cpi	r24, 0x10	; 16
    45f4:	20 f4       	brcc	.+8      	; 0x45fe <LCD_VidPosCur+0x36>
		Local_Address += Copy_U8Col ;
    45f6:	89 81       	ldd	r24, Y+1	; 0x01
    45f8:	9b 81       	ldd	r25, Y+3	; 0x03
    45fa:	89 0f       	add	r24, r25
    45fc:	89 83       	std	Y+1, r24	; 0x01
	LCD_VidSendCommend ( Local_Address );
    45fe:	89 81       	ldd	r24, Y+1	; 0x01
    4600:	0e 94 1e 19 	call	0x323c	; 0x323c <LCD_VidSendCommend>
}
    4604:	0f 90       	pop	r0
    4606:	0f 90       	pop	r0
    4608:	0f 90       	pop	r0
    460a:	cf 91       	pop	r28
    460c:	df 91       	pop	r29
    460e:	08 95       	ret

00004610 <LCD_VidClear>:
void LCD_VidClear (){
    4610:	df 93       	push	r29
    4612:	cf 93       	push	r28
    4614:	cd b7       	in	r28, 0x3d	; 61
    4616:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommend(DISPLAY_CLEAR) ;
    4618:	81 e0       	ldi	r24, 0x01	; 1
    461a:	0e 94 1e 19 	call	0x323c	; 0x323c <LCD_VidSendCommend>
}
    461e:	cf 91       	pop	r28
    4620:	df 91       	pop	r29
    4622:	08 95       	ret

00004624 <main>:
#include "DIO_interface.h"
#include "INTERRUPT_Interface.h"
#include "ADC_interface.h"
#include "avr/delay.h"

void main (void){
    4624:	af 92       	push	r10
    4626:	bf 92       	push	r11
    4628:	cf 92       	push	r12
    462a:	df 92       	push	r13
    462c:	ef 92       	push	r14
    462e:	ff 92       	push	r15
    4630:	0f 93       	push	r16
    4632:	1f 93       	push	r17
    4634:	df 93       	push	r29
    4636:	cf 93       	push	r28
    4638:	cd b7       	in	r28, 0x3d	; 61
    463a:	de b7       	in	r29, 0x3e	; 62
    463c:	c0 55       	subi	r28, 0x50	; 80
    463e:	d0 40       	sbci	r29, 0x00	; 0
    4640:	0f b6       	in	r0, 0x3f	; 63
    4642:	f8 94       	cli
    4644:	de bf       	out	0x3e, r29	; 62
    4646:	0f be       	out	0x3f, r0	; 63
    4648:	cd bf       	out	0x3d, r28	; 61
	//to initailize LCD
	LCD_VidInit();
    464a:	0e 94 29 1a 	call	0x3452	; 0x3452 <LCD_VidInit>

	//initialize ADC
	ADC_VidInit();
    464e:	0e 94 a6 14 	call	0x294c	; 0x294c <ADC_VidInit>

	u16 DIGITAL ;

	while(1){
   	    LCD_VidPosCur(0,0);
    4652:	80 e0       	ldi	r24, 0x00	; 0
    4654:	60 e0       	ldi	r22, 0x00	; 0
    4656:	0e 94 e4 22 	call	0x45c8	; 0x45c8 <LCD_VidPosCur>
     	LCD_VidSendString("ANA:");
    465a:	80 e6       	ldi	r24, 0x60	; 96
    465c:	90 e0       	ldi	r25, 0x00	; 0
    465e:	0e 94 28 1f 	call	0x3e50	; 0x3e50 <LCD_VidSendString>
		LCD_VidPrintVar(ADC_VidReadChannel(0));
    4662:	80 e0       	ldi	r24, 0x00	; 0
    4664:	0e 94 bc 14 	call	0x2978	; 0x2978 <ADC_VidReadChannel>
    4668:	5c 01       	movw	r10, r24
    466a:	cc 24       	eor	r12, r12
    466c:	dd 24       	eor	r13, r13
    466e:	ee 24       	eor	r14, r14
    4670:	ff 24       	eor	r15, r15
    4672:	87 01       	movw	r16, r14
    4674:	2a 2d       	mov	r18, r10
    4676:	3b 2d       	mov	r19, r11
    4678:	4c 2d       	mov	r20, r12
    467a:	5d 2d       	mov	r21, r13
    467c:	6e 2d       	mov	r22, r14
    467e:	7f 2d       	mov	r23, r15
    4680:	80 2f       	mov	r24, r16
    4682:	91 2f       	mov	r25, r17
    4684:	0e 94 48 20 	call	0x4090	; 0x4090 <LCD_VidPrintVar>
		LCD_VidSendString("mV");
    4688:	85 e6       	ldi	r24, 0x65	; 101
    468a:	90 e0       	ldi	r25, 0x00	; 0
    468c:	0e 94 28 1f 	call	0x3e50	; 0x3e50 <LCD_VidSendString>
		LCD_VidSendString(" D:");
    4690:	88 e6       	ldi	r24, 0x68	; 104
    4692:	90 e0       	ldi	r25, 0x00	; 0
    4694:	0e 94 28 1f 	call	0x3e50	; 0x3e50 <LCD_VidSendString>
		DIGITAL = ( ((u64)ADC_VidReadChannel(0)*1023)/5000)  ;
    4698:	80 e0       	ldi	r24, 0x00	; 0
    469a:	0e 94 bc 14 	call	0x2978	; 0x2978 <ADC_VidReadChannel>
    469e:	8c 01       	movw	r16, r24
    46a0:	20 e0       	ldi	r18, 0x00	; 0
    46a2:	30 e0       	ldi	r19, 0x00	; 0
    46a4:	40 e0       	ldi	r20, 0x00	; 0
    46a6:	50 e0       	ldi	r21, 0x00	; 0
    46a8:	60 e0       	ldi	r22, 0x00	; 0
    46aa:	70 e0       	ldi	r23, 0x00	; 0
    46ac:	0b 83       	std	Y+3, r16	; 0x03
    46ae:	1c 83       	std	Y+4, r17	; 0x04
    46b0:	2d 83       	std	Y+5, r18	; 0x05
    46b2:	3e 83       	std	Y+6, r19	; 0x06
    46b4:	4f 83       	std	Y+7, r20	; 0x07
    46b6:	58 87       	std	Y+8, r21	; 0x08
    46b8:	69 87       	std	Y+9, r22	; 0x09
    46ba:	7a 87       	std	Y+10, r23	; 0x0a
    46bc:	ab 80       	ldd	r10, Y+3	; 0x03
    46be:	bc 80       	ldd	r11, Y+4	; 0x04
    46c0:	cd 80       	ldd	r12, Y+5	; 0x05
    46c2:	de 80       	ldd	r13, Y+6	; 0x06
    46c4:	ef 80       	ldd	r14, Y+7	; 0x07
    46c6:	f8 84       	ldd	r15, Y+8	; 0x08
    46c8:	09 85       	ldd	r16, Y+9	; 0x09
    46ca:	1a 85       	ldd	r17, Y+10	; 0x0a
    46cc:	2a 2d       	mov	r18, r10
    46ce:	3b 2d       	mov	r19, r11
    46d0:	4c 2d       	mov	r20, r12
    46d2:	5d 2d       	mov	r21, r13
    46d4:	6e 2d       	mov	r22, r14
    46d6:	7f 2d       	mov	r23, r15
    46d8:	80 2f       	mov	r24, r16
    46da:	91 2f       	mov	r25, r17
    46dc:	05 e0       	ldi	r16, 0x05	; 5
    46de:	0e 94 3c 01 	call	0x278	; 0x278 <__ashldi3>
    46e2:	2b 87       	std	Y+11, r18	; 0x0b
    46e4:	3c 87       	std	Y+12, r19	; 0x0c
    46e6:	4d 87       	std	Y+13, r20	; 0x0d
    46e8:	5e 87       	std	Y+14, r21	; 0x0e
    46ea:	6f 87       	std	Y+15, r22	; 0x0f
    46ec:	78 8b       	std	Y+16, r23	; 0x10
    46ee:	89 8b       	std	Y+17, r24	; 0x11
    46f0:	9a 8b       	std	Y+18, r25	; 0x12
    46f2:	1b 85       	ldd	r17, Y+11	; 0x0b
    46f4:	2b 81       	ldd	r18, Y+3	; 0x03
    46f6:	12 1b       	sub	r17, r18
    46f8:	1b 8b       	std	Y+19, r17	; 0x13
    46fa:	31 e0       	ldi	r19, 0x01	; 1
    46fc:	3b 8f       	std	Y+27, r19	; 0x1b
    46fe:	4b 89       	ldd	r20, Y+19	; 0x13
    4700:	5b 85       	ldd	r21, Y+11	; 0x0b
    4702:	54 17       	cp	r21, r20
    4704:	08 f0       	brcs	.+2      	; 0x4708 <main+0xe4>
    4706:	1b 8e       	std	Y+27, r1	; 0x1b
    4708:	6c 85       	ldd	r22, Y+12	; 0x0c
    470a:	7c 81       	ldd	r23, Y+4	; 0x04
    470c:	67 1b       	sub	r22, r23
    470e:	6c 8b       	std	Y+20, r22	; 0x14
    4710:	81 e0       	ldi	r24, 0x01	; 1
    4712:	8c 8f       	std	Y+28, r24	; 0x1c
    4714:	9c 89       	ldd	r25, Y+20	; 0x14
    4716:	0c 85       	ldd	r16, Y+12	; 0x0c
    4718:	09 17       	cp	r16, r25
    471a:	08 f0       	brcs	.+2      	; 0x471e <main+0xfa>
    471c:	1c 8e       	std	Y+28, r1	; 0x1c
    471e:	1c 89       	ldd	r17, Y+20	; 0x14
    4720:	2b 8d       	ldd	r18, Y+27	; 0x1b
    4722:	12 1b       	sub	r17, r18
    4724:	1d 8f       	std	Y+29, r17	; 0x1d
    4726:	31 e0       	ldi	r19, 0x01	; 1
    4728:	3e 8f       	std	Y+30, r19	; 0x1e
    472a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    472c:	5c 89       	ldd	r21, Y+20	; 0x14
    472e:	54 17       	cp	r21, r20
    4730:	08 f0       	brcs	.+2      	; 0x4734 <main+0x110>
    4732:	1e 8e       	std	Y+30, r1	; 0x1e
    4734:	6c 8d       	ldd	r22, Y+28	; 0x1c
    4736:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4738:	67 2b       	or	r22, r23
    473a:	6c 8f       	std	Y+28, r22	; 0x1c
    473c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    473e:	8c 8b       	std	Y+20, r24	; 0x14
    4740:	9d 85       	ldd	r25, Y+13	; 0x0d
    4742:	0d 81       	ldd	r16, Y+5	; 0x05
    4744:	90 1b       	sub	r25, r16
    4746:	9d 8b       	std	Y+21, r25	; 0x15
    4748:	11 e0       	ldi	r17, 0x01	; 1
    474a:	1f 8f       	std	Y+31, r17	; 0x1f
    474c:	2d 89       	ldd	r18, Y+21	; 0x15
    474e:	3d 85       	ldd	r19, Y+13	; 0x0d
    4750:	32 17       	cp	r19, r18
    4752:	08 f0       	brcs	.+2      	; 0x4756 <main+0x132>
    4754:	1f 8e       	std	Y+31, r1	; 0x1f
    4756:	4d 89       	ldd	r20, Y+21	; 0x15
    4758:	5c 8d       	ldd	r21, Y+28	; 0x1c
    475a:	45 1b       	sub	r20, r21
    475c:	48 a3       	std	Y+32, r20	; 0x20
    475e:	61 e0       	ldi	r22, 0x01	; 1
    4760:	69 a3       	std	Y+33, r22	; 0x21
    4762:	78 a1       	ldd	r23, Y+32	; 0x20
    4764:	8d 89       	ldd	r24, Y+21	; 0x15
    4766:	87 17       	cp	r24, r23
    4768:	08 f0       	brcs	.+2      	; 0x476c <main+0x148>
    476a:	19 a2       	std	Y+33, r1	; 0x21
    476c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    476e:	09 a1       	ldd	r16, Y+33	; 0x21
    4770:	90 2b       	or	r25, r16
    4772:	9f 8f       	std	Y+31, r25	; 0x1f
    4774:	18 a1       	ldd	r17, Y+32	; 0x20
    4776:	1d 8b       	std	Y+21, r17	; 0x15
    4778:	2e 85       	ldd	r18, Y+14	; 0x0e
    477a:	3e 81       	ldd	r19, Y+6	; 0x06
    477c:	23 1b       	sub	r18, r19
    477e:	2e 8b       	std	Y+22, r18	; 0x16
    4780:	41 e0       	ldi	r20, 0x01	; 1
    4782:	4a a3       	std	Y+34, r20	; 0x22
    4784:	5e 89       	ldd	r21, Y+22	; 0x16
    4786:	6e 85       	ldd	r22, Y+14	; 0x0e
    4788:	65 17       	cp	r22, r21
    478a:	08 f0       	brcs	.+2      	; 0x478e <main+0x16a>
    478c:	1a a2       	std	Y+34, r1	; 0x22
    478e:	7e 89       	ldd	r23, Y+22	; 0x16
    4790:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4792:	78 1b       	sub	r23, r24
    4794:	7b a3       	std	Y+35, r23	; 0x23
    4796:	91 e0       	ldi	r25, 0x01	; 1
    4798:	9c a3       	std	Y+36, r25	; 0x24
    479a:	0b a1       	ldd	r16, Y+35	; 0x23
    479c:	1e 89       	ldd	r17, Y+22	; 0x16
    479e:	10 17       	cp	r17, r16
    47a0:	08 f0       	brcs	.+2      	; 0x47a4 <main+0x180>
    47a2:	1c a2       	std	Y+36, r1	; 0x24
    47a4:	2a a1       	ldd	r18, Y+34	; 0x22
    47a6:	3c a1       	ldd	r19, Y+36	; 0x24
    47a8:	23 2b       	or	r18, r19
    47aa:	2a a3       	std	Y+34, r18	; 0x22
    47ac:	4b a1       	ldd	r20, Y+35	; 0x23
    47ae:	4e 8b       	std	Y+22, r20	; 0x16
    47b0:	5f 85       	ldd	r21, Y+15	; 0x0f
    47b2:	6f 81       	ldd	r22, Y+7	; 0x07
    47b4:	56 1b       	sub	r21, r22
    47b6:	5f 8b       	std	Y+23, r21	; 0x17
    47b8:	71 e0       	ldi	r23, 0x01	; 1
    47ba:	7d a3       	std	Y+37, r23	; 0x25
    47bc:	8f 89       	ldd	r24, Y+23	; 0x17
    47be:	9f 85       	ldd	r25, Y+15	; 0x0f
    47c0:	98 17       	cp	r25, r24
    47c2:	08 f0       	brcs	.+2      	; 0x47c6 <main+0x1a2>
    47c4:	1d a2       	std	Y+37, r1	; 0x25
    47c6:	0f 89       	ldd	r16, Y+23	; 0x17
    47c8:	1a a1       	ldd	r17, Y+34	; 0x22
    47ca:	01 1b       	sub	r16, r17
    47cc:	0e a3       	std	Y+38, r16	; 0x26
    47ce:	21 e0       	ldi	r18, 0x01	; 1
    47d0:	2f a3       	std	Y+39, r18	; 0x27
    47d2:	3e a1       	ldd	r19, Y+38	; 0x26
    47d4:	4f 89       	ldd	r20, Y+23	; 0x17
    47d6:	43 17       	cp	r20, r19
    47d8:	08 f0       	brcs	.+2      	; 0x47dc <main+0x1b8>
    47da:	1f a2       	std	Y+39, r1	; 0x27
    47dc:	5d a1       	ldd	r21, Y+37	; 0x25
    47de:	6f a1       	ldd	r22, Y+39	; 0x27
    47e0:	56 2b       	or	r21, r22
    47e2:	5d a3       	std	Y+37, r21	; 0x25
    47e4:	7e a1       	ldd	r23, Y+38	; 0x26
    47e6:	7f 8b       	std	Y+23, r23	; 0x17
    47e8:	88 89       	ldd	r24, Y+16	; 0x10
    47ea:	98 85       	ldd	r25, Y+8	; 0x08
    47ec:	89 1b       	sub	r24, r25
    47ee:	88 8f       	std	Y+24, r24	; 0x18
    47f0:	01 e0       	ldi	r16, 0x01	; 1
    47f2:	08 a7       	std	Y+40, r16	; 0x28
    47f4:	18 8d       	ldd	r17, Y+24	; 0x18
    47f6:	28 89       	ldd	r18, Y+16	; 0x10
    47f8:	21 17       	cp	r18, r17
    47fa:	08 f0       	brcs	.+2      	; 0x47fe <main+0x1da>
    47fc:	18 a6       	std	Y+40, r1	; 0x28
    47fe:	38 8d       	ldd	r19, Y+24	; 0x18
    4800:	4d a1       	ldd	r20, Y+37	; 0x25
    4802:	34 1b       	sub	r19, r20
    4804:	39 a7       	std	Y+41, r19	; 0x29
    4806:	51 e0       	ldi	r21, 0x01	; 1
    4808:	5a a7       	std	Y+42, r21	; 0x2a
    480a:	69 a5       	ldd	r22, Y+41	; 0x29
    480c:	78 8d       	ldd	r23, Y+24	; 0x18
    480e:	76 17       	cp	r23, r22
    4810:	08 f0       	brcs	.+2      	; 0x4814 <main+0x1f0>
    4812:	1a a6       	std	Y+42, r1	; 0x2a
    4814:	88 a5       	ldd	r24, Y+40	; 0x28
    4816:	9a a5       	ldd	r25, Y+42	; 0x2a
    4818:	89 2b       	or	r24, r25
    481a:	88 a7       	std	Y+40, r24	; 0x28
    481c:	09 a5       	ldd	r16, Y+41	; 0x29
    481e:	08 8f       	std	Y+24, r16	; 0x18
    4820:	19 89       	ldd	r17, Y+17	; 0x11
    4822:	29 85       	ldd	r18, Y+9	; 0x09
    4824:	12 1b       	sub	r17, r18
    4826:	19 8f       	std	Y+25, r17	; 0x19
    4828:	31 e0       	ldi	r19, 0x01	; 1
    482a:	3b a7       	std	Y+43, r19	; 0x2b
    482c:	49 8d       	ldd	r20, Y+25	; 0x19
    482e:	59 89       	ldd	r21, Y+17	; 0x11
    4830:	54 17       	cp	r21, r20
    4832:	08 f0       	brcs	.+2      	; 0x4836 <main+0x212>
    4834:	1b a6       	std	Y+43, r1	; 0x2b
    4836:	69 8d       	ldd	r22, Y+25	; 0x19
    4838:	78 a5       	ldd	r23, Y+40	; 0x28
    483a:	67 1b       	sub	r22, r23
    483c:	6c a7       	std	Y+44, r22	; 0x2c
    483e:	81 e0       	ldi	r24, 0x01	; 1
    4840:	8d a7       	std	Y+45, r24	; 0x2d
    4842:	9c a5       	ldd	r25, Y+44	; 0x2c
    4844:	09 8d       	ldd	r16, Y+25	; 0x19
    4846:	09 17       	cp	r16, r25
    4848:	08 f0       	brcs	.+2      	; 0x484c <main+0x228>
    484a:	1d a6       	std	Y+45, r1	; 0x2d
    484c:	1b a5       	ldd	r17, Y+43	; 0x2b
    484e:	2d a5       	ldd	r18, Y+45	; 0x2d
    4850:	12 2b       	or	r17, r18
    4852:	1b a7       	std	Y+43, r17	; 0x2b
    4854:	3c a5       	ldd	r19, Y+44	; 0x2c
    4856:	39 8f       	std	Y+25, r19	; 0x19
    4858:	4a 89       	ldd	r20, Y+18	; 0x12
    485a:	5a 85       	ldd	r21, Y+10	; 0x0a
    485c:	45 1b       	sub	r20, r21
    485e:	4a 8f       	std	Y+26, r20	; 0x1a
    4860:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4862:	6b a5       	ldd	r22, Y+43	; 0x2b
    4864:	86 1b       	sub	r24, r22
    4866:	8a 8f       	std	Y+26, r24	; 0x1a
    4868:	7b 89       	ldd	r23, Y+19	; 0x13
    486a:	7b 87       	std	Y+11, r23	; 0x0b
    486c:	8c 89       	ldd	r24, Y+20	; 0x14
    486e:	8c 87       	std	Y+12, r24	; 0x0c
    4870:	9d 89       	ldd	r25, Y+21	; 0x15
    4872:	9d 87       	std	Y+13, r25	; 0x0d
    4874:	0e 89       	ldd	r16, Y+22	; 0x16
    4876:	0e 87       	std	Y+14, r16	; 0x0e
    4878:	1f 89       	ldd	r17, Y+23	; 0x17
    487a:	1f 87       	std	Y+15, r17	; 0x0f
    487c:	28 8d       	ldd	r18, Y+24	; 0x18
    487e:	28 8b       	std	Y+16, r18	; 0x10
    4880:	39 8d       	ldd	r19, Y+25	; 0x19
    4882:	39 8b       	std	Y+17, r19	; 0x11
    4884:	4a 8d       	ldd	r20, Y+26	; 0x1a
    4886:	4a 8b       	std	Y+18, r20	; 0x12
    4888:	2b 85       	ldd	r18, Y+11	; 0x0b
    488a:	3c 85       	ldd	r19, Y+12	; 0x0c
    488c:	4d 85       	ldd	r20, Y+13	; 0x0d
    488e:	5e 85       	ldd	r21, Y+14	; 0x0e
    4890:	6f 85       	ldd	r22, Y+15	; 0x0f
    4892:	78 89       	ldd	r23, Y+16	; 0x10
    4894:	89 89       	ldd	r24, Y+17	; 0x11
    4896:	9a 89       	ldd	r25, Y+18	; 0x12
    4898:	05 e0       	ldi	r16, 0x05	; 5
    489a:	0e 94 3c 01 	call	0x278	; 0x278 <__ashldi3>
    489e:	2e a7       	std	Y+46, r18	; 0x2e
    48a0:	3f a7       	std	Y+47, r19	; 0x2f
    48a2:	48 ab       	std	Y+48, r20	; 0x30
    48a4:	59 ab       	std	Y+49, r21	; 0x31
    48a6:	6a ab       	std	Y+50, r22	; 0x32
    48a8:	7b ab       	std	Y+51, r23	; 0x33
    48aa:	8c ab       	std	Y+52, r24	; 0x34
    48ac:	9d ab       	std	Y+53, r25	; 0x35
    48ae:	5b 85       	ldd	r21, Y+11	; 0x0b
    48b0:	6e a5       	ldd	r22, Y+46	; 0x2e
    48b2:	56 0f       	add	r21, r22
    48b4:	5e ab       	std	Y+54, r21	; 0x36
    48b6:	71 e0       	ldi	r23, 0x01	; 1
    48b8:	7e af       	std	Y+62, r23	; 0x3e
    48ba:	8e a9       	ldd	r24, Y+54	; 0x36
    48bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    48be:	89 17       	cp	r24, r25
    48c0:	08 f0       	brcs	.+2      	; 0x48c4 <main+0x2a0>
    48c2:	1e ae       	std	Y+62, r1	; 0x3e
    48c4:	0c 85       	ldd	r16, Y+12	; 0x0c
    48c6:	1f a5       	ldd	r17, Y+47	; 0x2f
    48c8:	01 0f       	add	r16, r17
    48ca:	0f ab       	std	Y+55, r16	; 0x37
    48cc:	21 e0       	ldi	r18, 0x01	; 1
    48ce:	2f af       	std	Y+63, r18	; 0x3f
    48d0:	3f a9       	ldd	r19, Y+55	; 0x37
    48d2:	4c 85       	ldd	r20, Y+12	; 0x0c
    48d4:	34 17       	cp	r19, r20
    48d6:	08 f0       	brcs	.+2      	; 0x48da <main+0x2b6>
    48d8:	1f ae       	std	Y+63, r1	; 0x3f
    48da:	5e ad       	ldd	r21, Y+62	; 0x3e
    48dc:	6f a9       	ldd	r22, Y+55	; 0x37
    48de:	56 0f       	add	r21, r22
    48e0:	21 96       	adiw	r28, 0x01	; 1
    48e2:	5f af       	std	Y+63, r21	; 0x3f
    48e4:	21 97       	sbiw	r28, 0x01	; 1
    48e6:	71 e0       	ldi	r23, 0x01	; 1
    48e8:	22 96       	adiw	r28, 0x02	; 2
    48ea:	7f af       	std	Y+63, r23	; 0x3f
    48ec:	22 97       	sbiw	r28, 0x02	; 2
    48ee:	21 96       	adiw	r28, 0x01	; 1
    48f0:	8f ad       	ldd	r24, Y+63	; 0x3f
    48f2:	21 97       	sbiw	r28, 0x01	; 1
    48f4:	9f a9       	ldd	r25, Y+55	; 0x37
    48f6:	89 17       	cp	r24, r25
    48f8:	18 f0       	brcs	.+6      	; 0x4900 <main+0x2dc>
    48fa:	22 96       	adiw	r28, 0x02	; 2
    48fc:	1f ae       	std	Y+63, r1	; 0x3f
    48fe:	22 97       	sbiw	r28, 0x02	; 2
    4900:	0f ad       	ldd	r16, Y+63	; 0x3f
    4902:	22 96       	adiw	r28, 0x02	; 2
    4904:	1f ad       	ldd	r17, Y+63	; 0x3f
    4906:	22 97       	sbiw	r28, 0x02	; 2
    4908:	01 2b       	or	r16, r17
    490a:	0f af       	std	Y+63, r16	; 0x3f
    490c:	21 96       	adiw	r28, 0x01	; 1
    490e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4910:	21 97       	sbiw	r28, 0x01	; 1
    4912:	2f ab       	std	Y+55, r18	; 0x37
    4914:	3d 85       	ldd	r19, Y+13	; 0x0d
    4916:	48 a9       	ldd	r20, Y+48	; 0x30
    4918:	34 0f       	add	r19, r20
    491a:	38 af       	std	Y+56, r19	; 0x38
    491c:	51 e0       	ldi	r21, 0x01	; 1
    491e:	23 96       	adiw	r28, 0x03	; 3
    4920:	5f af       	std	Y+63, r21	; 0x3f
    4922:	23 97       	sbiw	r28, 0x03	; 3
    4924:	68 ad       	ldd	r22, Y+56	; 0x38
    4926:	7d 85       	ldd	r23, Y+13	; 0x0d
    4928:	67 17       	cp	r22, r23
    492a:	18 f0       	brcs	.+6      	; 0x4932 <main+0x30e>
    492c:	23 96       	adiw	r28, 0x03	; 3
    492e:	1f ae       	std	Y+63, r1	; 0x3f
    4930:	23 97       	sbiw	r28, 0x03	; 3
    4932:	8f ad       	ldd	r24, Y+63	; 0x3f
    4934:	98 ad       	ldd	r25, Y+56	; 0x38
    4936:	89 0f       	add	r24, r25
    4938:	24 96       	adiw	r28, 0x04	; 4
    493a:	8f af       	std	Y+63, r24	; 0x3f
    493c:	24 97       	sbiw	r28, 0x04	; 4
    493e:	01 e0       	ldi	r16, 0x01	; 1
    4940:	25 96       	adiw	r28, 0x05	; 5
    4942:	0f af       	std	Y+63, r16	; 0x3f
    4944:	25 97       	sbiw	r28, 0x05	; 5
    4946:	24 96       	adiw	r28, 0x04	; 4
    4948:	1f ad       	ldd	r17, Y+63	; 0x3f
    494a:	24 97       	sbiw	r28, 0x04	; 4
    494c:	28 ad       	ldd	r18, Y+56	; 0x38
    494e:	12 17       	cp	r17, r18
    4950:	18 f0       	brcs	.+6      	; 0x4958 <main+0x334>
    4952:	25 96       	adiw	r28, 0x05	; 5
    4954:	1f ae       	std	Y+63, r1	; 0x3f
    4956:	25 97       	sbiw	r28, 0x05	; 5
    4958:	23 96       	adiw	r28, 0x03	; 3
    495a:	3f ad       	ldd	r19, Y+63	; 0x3f
    495c:	23 97       	sbiw	r28, 0x03	; 3
    495e:	25 96       	adiw	r28, 0x05	; 5
    4960:	4f ad       	ldd	r20, Y+63	; 0x3f
    4962:	25 97       	sbiw	r28, 0x05	; 5
    4964:	34 2b       	or	r19, r20
    4966:	23 96       	adiw	r28, 0x03	; 3
    4968:	3f af       	std	Y+63, r19	; 0x3f
    496a:	23 97       	sbiw	r28, 0x03	; 3
    496c:	24 96       	adiw	r28, 0x04	; 4
    496e:	5f ad       	ldd	r21, Y+63	; 0x3f
    4970:	24 97       	sbiw	r28, 0x04	; 4
    4972:	58 af       	std	Y+56, r21	; 0x38
    4974:	6e 85       	ldd	r22, Y+14	; 0x0e
    4976:	79 a9       	ldd	r23, Y+49	; 0x31
    4978:	67 0f       	add	r22, r23
    497a:	69 af       	std	Y+57, r22	; 0x39
    497c:	81 e0       	ldi	r24, 0x01	; 1
    497e:	26 96       	adiw	r28, 0x06	; 6
    4980:	8f af       	std	Y+63, r24	; 0x3f
    4982:	26 97       	sbiw	r28, 0x06	; 6
    4984:	99 ad       	ldd	r25, Y+57	; 0x39
    4986:	0e 85       	ldd	r16, Y+14	; 0x0e
    4988:	90 17       	cp	r25, r16
    498a:	18 f0       	brcs	.+6      	; 0x4992 <main+0x36e>
    498c:	26 96       	adiw	r28, 0x06	; 6
    498e:	1f ae       	std	Y+63, r1	; 0x3f
    4990:	26 97       	sbiw	r28, 0x06	; 6
    4992:	23 96       	adiw	r28, 0x03	; 3
    4994:	1f ad       	ldd	r17, Y+63	; 0x3f
    4996:	23 97       	sbiw	r28, 0x03	; 3
    4998:	29 ad       	ldd	r18, Y+57	; 0x39
    499a:	12 0f       	add	r17, r18
    499c:	27 96       	adiw	r28, 0x07	; 7
    499e:	1f af       	std	Y+63, r17	; 0x3f
    49a0:	27 97       	sbiw	r28, 0x07	; 7
    49a2:	31 e0       	ldi	r19, 0x01	; 1
    49a4:	28 96       	adiw	r28, 0x08	; 8
    49a6:	3f af       	std	Y+63, r19	; 0x3f
    49a8:	28 97       	sbiw	r28, 0x08	; 8
    49aa:	27 96       	adiw	r28, 0x07	; 7
    49ac:	4f ad       	ldd	r20, Y+63	; 0x3f
    49ae:	27 97       	sbiw	r28, 0x07	; 7
    49b0:	59 ad       	ldd	r21, Y+57	; 0x39
    49b2:	45 17       	cp	r20, r21
    49b4:	18 f0       	brcs	.+6      	; 0x49bc <main+0x398>
    49b6:	28 96       	adiw	r28, 0x08	; 8
    49b8:	1f ae       	std	Y+63, r1	; 0x3f
    49ba:	28 97       	sbiw	r28, 0x08	; 8
    49bc:	26 96       	adiw	r28, 0x06	; 6
    49be:	6f ad       	ldd	r22, Y+63	; 0x3f
    49c0:	26 97       	sbiw	r28, 0x06	; 6
    49c2:	28 96       	adiw	r28, 0x08	; 8
    49c4:	7f ad       	ldd	r23, Y+63	; 0x3f
    49c6:	28 97       	sbiw	r28, 0x08	; 8
    49c8:	67 2b       	or	r22, r23
    49ca:	26 96       	adiw	r28, 0x06	; 6
    49cc:	6f af       	std	Y+63, r22	; 0x3f
    49ce:	26 97       	sbiw	r28, 0x06	; 6
    49d0:	27 96       	adiw	r28, 0x07	; 7
    49d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    49d4:	27 97       	sbiw	r28, 0x07	; 7
    49d6:	89 af       	std	Y+57, r24	; 0x39
    49d8:	9f 85       	ldd	r25, Y+15	; 0x0f
    49da:	0a a9       	ldd	r16, Y+50	; 0x32
    49dc:	90 0f       	add	r25, r16
    49de:	9a af       	std	Y+58, r25	; 0x3a
    49e0:	11 e0       	ldi	r17, 0x01	; 1
    49e2:	29 96       	adiw	r28, 0x09	; 9
    49e4:	1f af       	std	Y+63, r17	; 0x3f
    49e6:	29 97       	sbiw	r28, 0x09	; 9
    49e8:	2a ad       	ldd	r18, Y+58	; 0x3a
    49ea:	3f 85       	ldd	r19, Y+15	; 0x0f
    49ec:	23 17       	cp	r18, r19
    49ee:	18 f0       	brcs	.+6      	; 0x49f6 <main+0x3d2>
    49f0:	29 96       	adiw	r28, 0x09	; 9
    49f2:	1f ae       	std	Y+63, r1	; 0x3f
    49f4:	29 97       	sbiw	r28, 0x09	; 9
    49f6:	26 96       	adiw	r28, 0x06	; 6
    49f8:	4f ad       	ldd	r20, Y+63	; 0x3f
    49fa:	26 97       	sbiw	r28, 0x06	; 6
    49fc:	5a ad       	ldd	r21, Y+58	; 0x3a
    49fe:	45 0f       	add	r20, r21
    4a00:	2a 96       	adiw	r28, 0x0a	; 10
    4a02:	4f af       	std	Y+63, r20	; 0x3f
    4a04:	2a 97       	sbiw	r28, 0x0a	; 10
    4a06:	61 e0       	ldi	r22, 0x01	; 1
    4a08:	2b 96       	adiw	r28, 0x0b	; 11
    4a0a:	6f af       	std	Y+63, r22	; 0x3f
    4a0c:	2b 97       	sbiw	r28, 0x0b	; 11
    4a0e:	2a 96       	adiw	r28, 0x0a	; 10
    4a10:	7f ad       	ldd	r23, Y+63	; 0x3f
    4a12:	2a 97       	sbiw	r28, 0x0a	; 10
    4a14:	8a ad       	ldd	r24, Y+58	; 0x3a
    4a16:	78 17       	cp	r23, r24
    4a18:	18 f0       	brcs	.+6      	; 0x4a20 <main+0x3fc>
    4a1a:	2b 96       	adiw	r28, 0x0b	; 11
    4a1c:	1f ae       	std	Y+63, r1	; 0x3f
    4a1e:	2b 97       	sbiw	r28, 0x0b	; 11
    4a20:	29 96       	adiw	r28, 0x09	; 9
    4a22:	9f ad       	ldd	r25, Y+63	; 0x3f
    4a24:	29 97       	sbiw	r28, 0x09	; 9
    4a26:	2b 96       	adiw	r28, 0x0b	; 11
    4a28:	0f ad       	ldd	r16, Y+63	; 0x3f
    4a2a:	2b 97       	sbiw	r28, 0x0b	; 11
    4a2c:	90 2b       	or	r25, r16
    4a2e:	29 96       	adiw	r28, 0x09	; 9
    4a30:	9f af       	std	Y+63, r25	; 0x3f
    4a32:	29 97       	sbiw	r28, 0x09	; 9
    4a34:	2a 96       	adiw	r28, 0x0a	; 10
    4a36:	1f ad       	ldd	r17, Y+63	; 0x3f
    4a38:	2a 97       	sbiw	r28, 0x0a	; 10
    4a3a:	1a af       	std	Y+58, r17	; 0x3a
    4a3c:	28 89       	ldd	r18, Y+16	; 0x10
    4a3e:	3b a9       	ldd	r19, Y+51	; 0x33
    4a40:	23 0f       	add	r18, r19
    4a42:	2b af       	std	Y+59, r18	; 0x3b
    4a44:	41 e0       	ldi	r20, 0x01	; 1
    4a46:	2c 96       	adiw	r28, 0x0c	; 12
    4a48:	4f af       	std	Y+63, r20	; 0x3f
    4a4a:	2c 97       	sbiw	r28, 0x0c	; 12
    4a4c:	5b ad       	ldd	r21, Y+59	; 0x3b
    4a4e:	68 89       	ldd	r22, Y+16	; 0x10
    4a50:	56 17       	cp	r21, r22
    4a52:	18 f0       	brcs	.+6      	; 0x4a5a <main+0x436>
    4a54:	2c 96       	adiw	r28, 0x0c	; 12
    4a56:	1f ae       	std	Y+63, r1	; 0x3f
    4a58:	2c 97       	sbiw	r28, 0x0c	; 12
    4a5a:	29 96       	adiw	r28, 0x09	; 9
    4a5c:	7f ad       	ldd	r23, Y+63	; 0x3f
    4a5e:	29 97       	sbiw	r28, 0x09	; 9
    4a60:	8b ad       	ldd	r24, Y+59	; 0x3b
    4a62:	78 0f       	add	r23, r24
    4a64:	2d 96       	adiw	r28, 0x0d	; 13
    4a66:	7f af       	std	Y+63, r23	; 0x3f
    4a68:	2d 97       	sbiw	r28, 0x0d	; 13
    4a6a:	91 e0       	ldi	r25, 0x01	; 1
    4a6c:	2e 96       	adiw	r28, 0x0e	; 14
    4a6e:	9f af       	std	Y+63, r25	; 0x3f
    4a70:	2e 97       	sbiw	r28, 0x0e	; 14
    4a72:	2d 96       	adiw	r28, 0x0d	; 13
    4a74:	0f ad       	ldd	r16, Y+63	; 0x3f
    4a76:	2d 97       	sbiw	r28, 0x0d	; 13
    4a78:	1b ad       	ldd	r17, Y+59	; 0x3b
    4a7a:	01 17       	cp	r16, r17
    4a7c:	18 f0       	brcs	.+6      	; 0x4a84 <main+0x460>
    4a7e:	2e 96       	adiw	r28, 0x0e	; 14
    4a80:	1f ae       	std	Y+63, r1	; 0x3f
    4a82:	2e 97       	sbiw	r28, 0x0e	; 14
    4a84:	2c 96       	adiw	r28, 0x0c	; 12
    4a86:	2f ad       	ldd	r18, Y+63	; 0x3f
    4a88:	2c 97       	sbiw	r28, 0x0c	; 12
    4a8a:	2e 96       	adiw	r28, 0x0e	; 14
    4a8c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a8e:	2e 97       	sbiw	r28, 0x0e	; 14
    4a90:	23 2b       	or	r18, r19
    4a92:	2c 96       	adiw	r28, 0x0c	; 12
    4a94:	2f af       	std	Y+63, r18	; 0x3f
    4a96:	2c 97       	sbiw	r28, 0x0c	; 12
    4a98:	2d 96       	adiw	r28, 0x0d	; 13
    4a9a:	4f ad       	ldd	r20, Y+63	; 0x3f
    4a9c:	2d 97       	sbiw	r28, 0x0d	; 13
    4a9e:	4b af       	std	Y+59, r20	; 0x3b
    4aa0:	59 89       	ldd	r21, Y+17	; 0x11
    4aa2:	6c a9       	ldd	r22, Y+52	; 0x34
    4aa4:	56 0f       	add	r21, r22
    4aa6:	5c af       	std	Y+60, r21	; 0x3c
    4aa8:	71 e0       	ldi	r23, 0x01	; 1
    4aaa:	2f 96       	adiw	r28, 0x0f	; 15
    4aac:	7f af       	std	Y+63, r23	; 0x3f
    4aae:	2f 97       	sbiw	r28, 0x0f	; 15
    4ab0:	8c ad       	ldd	r24, Y+60	; 0x3c
    4ab2:	99 89       	ldd	r25, Y+17	; 0x11
    4ab4:	89 17       	cp	r24, r25
    4ab6:	18 f0       	brcs	.+6      	; 0x4abe <main+0x49a>
    4ab8:	2f 96       	adiw	r28, 0x0f	; 15
    4aba:	1f ae       	std	Y+63, r1	; 0x3f
    4abc:	2f 97       	sbiw	r28, 0x0f	; 15
    4abe:	2c 96       	adiw	r28, 0x0c	; 12
    4ac0:	0f ad       	ldd	r16, Y+63	; 0x3f
    4ac2:	2c 97       	sbiw	r28, 0x0c	; 12
    4ac4:	1c ad       	ldd	r17, Y+60	; 0x3c
    4ac6:	01 0f       	add	r16, r17
    4ac8:	60 96       	adiw	r28, 0x10	; 16
    4aca:	0f af       	std	Y+63, r16	; 0x3f
    4acc:	60 97       	sbiw	r28, 0x10	; 16
    4ace:	21 e0       	ldi	r18, 0x01	; 1
    4ad0:	61 96       	adiw	r28, 0x11	; 17
    4ad2:	2f af       	std	Y+63, r18	; 0x3f
    4ad4:	61 97       	sbiw	r28, 0x11	; 17
    4ad6:	60 96       	adiw	r28, 0x10	; 16
    4ad8:	3f ad       	ldd	r19, Y+63	; 0x3f
    4ada:	60 97       	sbiw	r28, 0x10	; 16
    4adc:	4c ad       	ldd	r20, Y+60	; 0x3c
    4ade:	34 17       	cp	r19, r20
    4ae0:	18 f0       	brcs	.+6      	; 0x4ae8 <main+0x4c4>
    4ae2:	61 96       	adiw	r28, 0x11	; 17
    4ae4:	1f ae       	std	Y+63, r1	; 0x3f
    4ae6:	61 97       	sbiw	r28, 0x11	; 17
    4ae8:	2f 96       	adiw	r28, 0x0f	; 15
    4aea:	5f ad       	ldd	r21, Y+63	; 0x3f
    4aec:	2f 97       	sbiw	r28, 0x0f	; 15
    4aee:	61 96       	adiw	r28, 0x11	; 17
    4af0:	6f ad       	ldd	r22, Y+63	; 0x3f
    4af2:	61 97       	sbiw	r28, 0x11	; 17
    4af4:	56 2b       	or	r21, r22
    4af6:	2f 96       	adiw	r28, 0x0f	; 15
    4af8:	5f af       	std	Y+63, r21	; 0x3f
    4afa:	2f 97       	sbiw	r28, 0x0f	; 15
    4afc:	60 96       	adiw	r28, 0x10	; 16
    4afe:	7f ad       	ldd	r23, Y+63	; 0x3f
    4b00:	60 97       	sbiw	r28, 0x10	; 16
    4b02:	7c af       	std	Y+60, r23	; 0x3c
    4b04:	8a 89       	ldd	r24, Y+18	; 0x12
    4b06:	9d a9       	ldd	r25, Y+53	; 0x35
    4b08:	89 0f       	add	r24, r25
    4b0a:	8d af       	std	Y+61, r24	; 0x3d
    4b0c:	2f 96       	adiw	r28, 0x0f	; 15
    4b0e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b10:	2f 97       	sbiw	r28, 0x0f	; 15
    4b12:	0d ad       	ldd	r16, Y+61	; 0x3d
    4b14:	80 0f       	add	r24, r16
    4b16:	8d af       	std	Y+61, r24	; 0x3d
    4b18:	ae a8       	ldd	r10, Y+54	; 0x36
    4b1a:	bf a8       	ldd	r11, Y+55	; 0x37
    4b1c:	c8 ac       	ldd	r12, Y+56	; 0x38
    4b1e:	d9 ac       	ldd	r13, Y+57	; 0x39
    4b20:	ea ac       	ldd	r14, Y+58	; 0x3a
    4b22:	fb ac       	ldd	r15, Y+59	; 0x3b
    4b24:	0c ad       	ldd	r16, Y+60	; 0x3c
    4b26:	1d ad       	ldd	r17, Y+61	; 0x3d
    4b28:	2a 2d       	mov	r18, r10
    4b2a:	3b 2d       	mov	r19, r11
    4b2c:	4c 2d       	mov	r20, r12
    4b2e:	5d 2d       	mov	r21, r13
    4b30:	6e 2d       	mov	r22, r14
    4b32:	7f 2d       	mov	r23, r15
    4b34:	80 2f       	mov	r24, r16
    4b36:	91 2f       	mov	r25, r17
    4b38:	0f 2e       	mov	r0, r31
    4b3a:	f8 e8       	ldi	r31, 0x88	; 136
    4b3c:	af 2e       	mov	r10, r31
    4b3e:	f0 2d       	mov	r31, r0
    4b40:	0f 2e       	mov	r0, r31
    4b42:	f3 e1       	ldi	r31, 0x13	; 19
    4b44:	bf 2e       	mov	r11, r31
    4b46:	f0 2d       	mov	r31, r0
    4b48:	cc 24       	eor	r12, r12
    4b4a:	dd 24       	eor	r13, r13
    4b4c:	ee 24       	eor	r14, r14
    4b4e:	ff 24       	eor	r15, r15
    4b50:	00 e0       	ldi	r16, 0x00	; 0
    4b52:	10 e0       	ldi	r17, 0x00	; 0
    4b54:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__udivdi3>
    4b58:	a2 2e       	mov	r10, r18
    4b5a:	b3 2e       	mov	r11, r19
    4b5c:	c4 2e       	mov	r12, r20
    4b5e:	d5 2e       	mov	r13, r21
    4b60:	e6 2e       	mov	r14, r22
    4b62:	f7 2e       	mov	r15, r23
    4b64:	08 2f       	mov	r16, r24
    4b66:	19 2f       	mov	r17, r25
    4b68:	2a 2d       	mov	r18, r10
    4b6a:	3b 2d       	mov	r19, r11
    4b6c:	4c 2d       	mov	r20, r12
    4b6e:	5d 2d       	mov	r21, r13
    4b70:	6e 2d       	mov	r22, r14
    4b72:	7f 2d       	mov	r23, r15
    4b74:	80 2f       	mov	r24, r16
    4b76:	91 2f       	mov	r25, r17
    4b78:	3a 83       	std	Y+2, r19	; 0x02
    4b7a:	29 83       	std	Y+1, r18	; 0x01
		LCD_VidPrintVar(DIGITAL);
    4b7c:	89 81       	ldd	r24, Y+1	; 0x01
    4b7e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b80:	5c 01       	movw	r10, r24
    4b82:	cc 24       	eor	r12, r12
    4b84:	dd 24       	eor	r13, r13
    4b86:	ee 24       	eor	r14, r14
    4b88:	ff 24       	eor	r15, r15
    4b8a:	87 01       	movw	r16, r14
    4b8c:	2a 2d       	mov	r18, r10
    4b8e:	3b 2d       	mov	r19, r11
    4b90:	4c 2d       	mov	r20, r12
    4b92:	5d 2d       	mov	r21, r13
    4b94:	6e 2d       	mov	r22, r14
    4b96:	7f 2d       	mov	r23, r15
    4b98:	80 2f       	mov	r24, r16
    4b9a:	91 2f       	mov	r25, r17
    4b9c:	0e 94 48 20 	call	0x4090	; 0x4090 <LCD_VidPrintVar>
		LCD_VidPosCur(1,0);
    4ba0:	81 e0       	ldi	r24, 0x01	; 1
    4ba2:	60 e0       	ldi	r22, 0x00	; 0
    4ba4:	0e 94 e4 22 	call	0x45c8	; 0x45c8 <LCD_VidPosCur>
		LCD_VidSendString("TEMP:");
    4ba8:	8c e6       	ldi	r24, 0x6C	; 108
    4baa:	90 e0       	ldi	r25, 0x00	; 0
    4bac:	0e 94 28 1f 	call	0x3e50	; 0x3e50 <LCD_VidSendString>
		LCD_VidPrintVar(ADC_VidReadChannel(0)/10);
    4bb0:	80 e0       	ldi	r24, 0x00	; 0
    4bb2:	0e 94 bc 14 	call	0x2978	; 0x2978 <ADC_VidReadChannel>
    4bb6:	2a e0       	ldi	r18, 0x0A	; 10
    4bb8:	30 e0       	ldi	r19, 0x00	; 0
    4bba:	b9 01       	movw	r22, r18
    4bbc:	0e 94 f5 25 	call	0x4bea	; 0x4bea <__udivmodhi4>
    4bc0:	cb 01       	movw	r24, r22
    4bc2:	5c 01       	movw	r10, r24
    4bc4:	cc 24       	eor	r12, r12
    4bc6:	dd 24       	eor	r13, r13
    4bc8:	ee 24       	eor	r14, r14
    4bca:	ff 24       	eor	r15, r15
    4bcc:	87 01       	movw	r16, r14
    4bce:	2a 2d       	mov	r18, r10
    4bd0:	3b 2d       	mov	r19, r11
    4bd2:	4c 2d       	mov	r20, r12
    4bd4:	5d 2d       	mov	r21, r13
    4bd6:	6e 2d       	mov	r22, r14
    4bd8:	7f 2d       	mov	r23, r15
    4bda:	80 2f       	mov	r24, r16
    4bdc:	91 2f       	mov	r25, r17
    4bde:	0e 94 48 20 	call	0x4090	; 0x4090 <LCD_VidPrintVar>
		LCD_VidSendChar('C');
    4be2:	83 e4       	ldi	r24, 0x43	; 67
    4be4:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <LCD_VidSendChar>
    4be8:	34 cd       	rjmp	.-1432   	; 0x4652 <main+0x2e>

00004bea <__udivmodhi4>:
    4bea:	aa 1b       	sub	r26, r26
    4bec:	bb 1b       	sub	r27, r27
    4bee:	51 e1       	ldi	r21, 0x11	; 17
    4bf0:	07 c0       	rjmp	.+14     	; 0x4c00 <__udivmodhi4_ep>

00004bf2 <__udivmodhi4_loop>:
    4bf2:	aa 1f       	adc	r26, r26
    4bf4:	bb 1f       	adc	r27, r27
    4bf6:	a6 17       	cp	r26, r22
    4bf8:	b7 07       	cpc	r27, r23
    4bfa:	10 f0       	brcs	.+4      	; 0x4c00 <__udivmodhi4_ep>
    4bfc:	a6 1b       	sub	r26, r22
    4bfe:	b7 0b       	sbc	r27, r23

00004c00 <__udivmodhi4_ep>:
    4c00:	88 1f       	adc	r24, r24
    4c02:	99 1f       	adc	r25, r25
    4c04:	5a 95       	dec	r21
    4c06:	a9 f7       	brne	.-22     	; 0x4bf2 <__udivmodhi4_loop>
    4c08:	80 95       	com	r24
    4c0a:	90 95       	com	r25
    4c0c:	bc 01       	movw	r22, r24
    4c0e:	cd 01       	movw	r24, r26
    4c10:	08 95       	ret

00004c12 <__mulsi3>:
    4c12:	62 9f       	mul	r22, r18
    4c14:	d0 01       	movw	r26, r0
    4c16:	73 9f       	mul	r23, r19
    4c18:	f0 01       	movw	r30, r0
    4c1a:	82 9f       	mul	r24, r18
    4c1c:	e0 0d       	add	r30, r0
    4c1e:	f1 1d       	adc	r31, r1
    4c20:	64 9f       	mul	r22, r20
    4c22:	e0 0d       	add	r30, r0
    4c24:	f1 1d       	adc	r31, r1
    4c26:	92 9f       	mul	r25, r18
    4c28:	f0 0d       	add	r31, r0
    4c2a:	83 9f       	mul	r24, r19
    4c2c:	f0 0d       	add	r31, r0
    4c2e:	74 9f       	mul	r23, r20
    4c30:	f0 0d       	add	r31, r0
    4c32:	65 9f       	mul	r22, r21
    4c34:	f0 0d       	add	r31, r0
    4c36:	99 27       	eor	r25, r25
    4c38:	72 9f       	mul	r23, r18
    4c3a:	b0 0d       	add	r27, r0
    4c3c:	e1 1d       	adc	r30, r1
    4c3e:	f9 1f       	adc	r31, r25
    4c40:	63 9f       	mul	r22, r19
    4c42:	b0 0d       	add	r27, r0
    4c44:	e1 1d       	adc	r30, r1
    4c46:	f9 1f       	adc	r31, r25
    4c48:	bd 01       	movw	r22, r26
    4c4a:	cf 01       	movw	r24, r30
    4c4c:	11 24       	eor	r1, r1
    4c4e:	08 95       	ret

00004c50 <__udivmodsi4>:
    4c50:	a1 e2       	ldi	r26, 0x21	; 33
    4c52:	1a 2e       	mov	r1, r26
    4c54:	aa 1b       	sub	r26, r26
    4c56:	bb 1b       	sub	r27, r27
    4c58:	fd 01       	movw	r30, r26
    4c5a:	0d c0       	rjmp	.+26     	; 0x4c76 <__udivmodsi4_ep>

00004c5c <__udivmodsi4_loop>:
    4c5c:	aa 1f       	adc	r26, r26
    4c5e:	bb 1f       	adc	r27, r27
    4c60:	ee 1f       	adc	r30, r30
    4c62:	ff 1f       	adc	r31, r31
    4c64:	a2 17       	cp	r26, r18
    4c66:	b3 07       	cpc	r27, r19
    4c68:	e4 07       	cpc	r30, r20
    4c6a:	f5 07       	cpc	r31, r21
    4c6c:	20 f0       	brcs	.+8      	; 0x4c76 <__udivmodsi4_ep>
    4c6e:	a2 1b       	sub	r26, r18
    4c70:	b3 0b       	sbc	r27, r19
    4c72:	e4 0b       	sbc	r30, r20
    4c74:	f5 0b       	sbc	r31, r21

00004c76 <__udivmodsi4_ep>:
    4c76:	66 1f       	adc	r22, r22
    4c78:	77 1f       	adc	r23, r23
    4c7a:	88 1f       	adc	r24, r24
    4c7c:	99 1f       	adc	r25, r25
    4c7e:	1a 94       	dec	r1
    4c80:	69 f7       	brne	.-38     	; 0x4c5c <__udivmodsi4_loop>
    4c82:	60 95       	com	r22
    4c84:	70 95       	com	r23
    4c86:	80 95       	com	r24
    4c88:	90 95       	com	r25
    4c8a:	9b 01       	movw	r18, r22
    4c8c:	ac 01       	movw	r20, r24
    4c8e:	bd 01       	movw	r22, r26
    4c90:	cf 01       	movw	r24, r30
    4c92:	08 95       	ret

00004c94 <__prologue_saves__>:
    4c94:	2f 92       	push	r2
    4c96:	3f 92       	push	r3
    4c98:	4f 92       	push	r4
    4c9a:	5f 92       	push	r5
    4c9c:	6f 92       	push	r6
    4c9e:	7f 92       	push	r7
    4ca0:	8f 92       	push	r8
    4ca2:	9f 92       	push	r9
    4ca4:	af 92       	push	r10
    4ca6:	bf 92       	push	r11
    4ca8:	cf 92       	push	r12
    4caa:	df 92       	push	r13
    4cac:	ef 92       	push	r14
    4cae:	ff 92       	push	r15
    4cb0:	0f 93       	push	r16
    4cb2:	1f 93       	push	r17
    4cb4:	cf 93       	push	r28
    4cb6:	df 93       	push	r29
    4cb8:	cd b7       	in	r28, 0x3d	; 61
    4cba:	de b7       	in	r29, 0x3e	; 62
    4cbc:	ca 1b       	sub	r28, r26
    4cbe:	db 0b       	sbc	r29, r27
    4cc0:	0f b6       	in	r0, 0x3f	; 63
    4cc2:	f8 94       	cli
    4cc4:	de bf       	out	0x3e, r29	; 62
    4cc6:	0f be       	out	0x3f, r0	; 63
    4cc8:	cd bf       	out	0x3d, r28	; 61
    4cca:	09 94       	ijmp

00004ccc <__epilogue_restores__>:
    4ccc:	2a 88       	ldd	r2, Y+18	; 0x12
    4cce:	39 88       	ldd	r3, Y+17	; 0x11
    4cd0:	48 88       	ldd	r4, Y+16	; 0x10
    4cd2:	5f 84       	ldd	r5, Y+15	; 0x0f
    4cd4:	6e 84       	ldd	r6, Y+14	; 0x0e
    4cd6:	7d 84       	ldd	r7, Y+13	; 0x0d
    4cd8:	8c 84       	ldd	r8, Y+12	; 0x0c
    4cda:	9b 84       	ldd	r9, Y+11	; 0x0b
    4cdc:	aa 84       	ldd	r10, Y+10	; 0x0a
    4cde:	b9 84       	ldd	r11, Y+9	; 0x09
    4ce0:	c8 84       	ldd	r12, Y+8	; 0x08
    4ce2:	df 80       	ldd	r13, Y+7	; 0x07
    4ce4:	ee 80       	ldd	r14, Y+6	; 0x06
    4ce6:	fd 80       	ldd	r15, Y+5	; 0x05
    4ce8:	0c 81       	ldd	r16, Y+4	; 0x04
    4cea:	1b 81       	ldd	r17, Y+3	; 0x03
    4cec:	aa 81       	ldd	r26, Y+2	; 0x02
    4cee:	b9 81       	ldd	r27, Y+1	; 0x01
    4cf0:	ce 0f       	add	r28, r30
    4cf2:	d1 1d       	adc	r29, r1
    4cf4:	0f b6       	in	r0, 0x3f	; 63
    4cf6:	f8 94       	cli
    4cf8:	de bf       	out	0x3e, r29	; 62
    4cfa:	0f be       	out	0x3f, r0	; 63
    4cfc:	cd bf       	out	0x3d, r28	; 61
    4cfe:	ed 01       	movw	r28, r26
    4d00:	08 95       	ret

00004d02 <_exit>:
    4d02:	f8 94       	cli

00004d04 <__stop_program>:
    4d04:	ff cf       	rjmp	.-2      	; 0x4d04 <__stop_program>
