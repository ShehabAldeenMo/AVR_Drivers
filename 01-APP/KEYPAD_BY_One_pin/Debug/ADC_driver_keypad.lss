
ADC_driver_keypad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000524e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000120  00800060  0000524e  000052c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000020e8  00000000  00000000  000053e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ace  00000000  00000000  000074cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001c0  00000000  00000000  00007f9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000020e  00000000  00000000  0000815a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003169  00000000  00000000  00008368  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000156c  00000000  00000000  0000b4d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014b5  00000000  00000000  0000ca3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  0000def4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000035b  00000000  00000000  0000e0d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002280  00000000  00000000  0000e42f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000106af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e4       	ldi	r30, 0x4E	; 78
      68:	f2 e5       	ldi	r31, 0x52	; 82
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 38       	cpi	r26, 0x80	; 128
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 93 22 	call	0x4526	; 0x4526 <main>
      7a:	0c 94 25 29 	jmp	0x524a	; 0x524a <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__muldi3>:
      82:	a0 e3       	ldi	r26, 0x30	; 48
      84:	b0 e0       	ldi	r27, 0x00	; 0
      86:	e7 e4       	ldi	r30, 0x47	; 71
      88:	f0 e0       	ldi	r31, 0x00	; 0
      8a:	0c 94 ee 28 	jmp	0x51dc	; 0x51dc <__prologue_saves__>
      8e:	a8 e0       	ldi	r26, 0x08	; 8
      90:	4e 01       	movw	r8, r28
      92:	08 94       	sec
      94:	81 1c       	adc	r8, r1
      96:	91 1c       	adc	r9, r1
      98:	f4 01       	movw	r30, r8
      9a:	ba 2f       	mov	r27, r26
      9c:	11 92       	st	Z+, r1
      9e:	ba 95       	dec	r27
      a0:	e9 f7       	brne	.-6      	; 0x9c <__muldi3+0x1a>
      a2:	29 83       	std	Y+1, r18	; 0x01
      a4:	3a 83       	std	Y+2, r19	; 0x02
      a6:	4b 83       	std	Y+3, r20	; 0x03
      a8:	5c 83       	std	Y+4, r21	; 0x04
      aa:	6d 83       	std	Y+5, r22	; 0x05
      ac:	7e 83       	std	Y+6, r23	; 0x06
      ae:	8f 83       	std	Y+7, r24	; 0x07
      b0:	98 87       	std	Y+8, r25	; 0x08
      b2:	ce 01       	movw	r24, r28
      b4:	09 96       	adiw	r24, 0x09	; 9
      b6:	fc 01       	movw	r30, r24
      b8:	11 92       	st	Z+, r1
      ba:	aa 95       	dec	r26
      bc:	e9 f7       	brne	.-6      	; 0xb8 <__muldi3+0x36>
      be:	a9 86       	std	Y+9, r10	; 0x09
      c0:	ba 86       	std	Y+10, r11	; 0x0a
      c2:	cb 86       	std	Y+11, r12	; 0x0b
      c4:	dc 86       	std	Y+12, r13	; 0x0c
      c6:	ed 86       	std	Y+13, r14	; 0x0d
      c8:	fe 86       	std	Y+14, r15	; 0x0e
      ca:	0f 87       	std	Y+15, r16	; 0x0f
      cc:	18 8b       	std	Y+16, r17	; 0x10
      ce:	29 81       	ldd	r18, Y+1	; 0x01
      d0:	3a 81       	ldd	r19, Y+2	; 0x02
      d2:	4b 81       	ldd	r20, Y+3	; 0x03
      d4:	5c 81       	ldd	r21, Y+4	; 0x04
      d6:	2d a7       	std	Y+45, r18	; 0x2d
      d8:	3e a7       	std	Y+46, r19	; 0x2e
      da:	4f a7       	std	Y+47, r20	; 0x2f
      dc:	58 ab       	std	Y+48, r21	; 0x30
      de:	79 01       	movw	r14, r18
      e0:	8a 01       	movw	r16, r20
      e2:	8f ef       	ldi	r24, 0xFF	; 255
      e4:	9f ef       	ldi	r25, 0xFF	; 255
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e8 22       	and	r14, r24
      ec:	f9 22       	and	r15, r25
      ee:	0a 23       	and	r16, r26
      f0:	1b 23       	and	r17, r27
      f2:	1a 01       	movw	r2, r20
      f4:	44 24       	eor	r4, r4
      f6:	55 24       	eor	r5, r5
      f8:	29 85       	ldd	r18, Y+9	; 0x09
      fa:	3a 85       	ldd	r19, Y+10	; 0x0a
      fc:	4b 85       	ldd	r20, Y+11	; 0x0b
      fe:	5c 85       	ldd	r21, Y+12	; 0x0c
     100:	29 a7       	std	Y+41, r18	; 0x29
     102:	3a a7       	std	Y+42, r19	; 0x2a
     104:	4b a7       	std	Y+43, r20	; 0x2b
     106:	5c a7       	std	Y+44, r21	; 0x2c
     108:	59 01       	movw	r10, r18
     10a:	6a 01       	movw	r12, r20
     10c:	a8 22       	and	r10, r24
     10e:	b9 22       	and	r11, r25
     110:	ca 22       	and	r12, r26
     112:	db 22       	and	r13, r27
     114:	3a 01       	movw	r6, r20
     116:	88 24       	eor	r8, r8
     118:	99 24       	eor	r9, r9
     11a:	c6 01       	movw	r24, r12
     11c:	b5 01       	movw	r22, r10
     11e:	a8 01       	movw	r20, r16
     120:	97 01       	movw	r18, r14
     122:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     126:	6d a3       	std	Y+37, r22	; 0x25
     128:	7e a3       	std	Y+38, r23	; 0x26
     12a:	8f a3       	std	Y+39, r24	; 0x27
     12c:	98 a7       	std	Y+40, r25	; 0x28
     12e:	c4 01       	movw	r24, r8
     130:	b3 01       	movw	r22, r6
     132:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     136:	69 a3       	std	Y+33, r22	; 0x21
     138:	7a a3       	std	Y+34, r23	; 0x22
     13a:	8b a3       	std	Y+35, r24	; 0x23
     13c:	9c a3       	std	Y+36, r25	; 0x24
     13e:	c6 01       	movw	r24, r12
     140:	b5 01       	movw	r22, r10
     142:	a2 01       	movw	r20, r4
     144:	91 01       	movw	r18, r2
     146:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     14a:	7b 01       	movw	r14, r22
     14c:	8c 01       	movw	r16, r24
     14e:	c4 01       	movw	r24, r8
     150:	b3 01       	movw	r22, r6
     152:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     156:	5b 01       	movw	r10, r22
     158:	6c 01       	movw	r12, r24
     15a:	89 a1       	ldd	r24, Y+33	; 0x21
     15c:	9a a1       	ldd	r25, Y+34	; 0x22
     15e:	ab a1       	ldd	r26, Y+35	; 0x23
     160:	bc a1       	ldd	r27, Y+36	; 0x24
     162:	8e 0d       	add	r24, r14
     164:	9f 1d       	adc	r25, r15
     166:	a0 1f       	adc	r26, r16
     168:	b1 1f       	adc	r27, r17
     16a:	89 a3       	std	Y+33, r24	; 0x21
     16c:	9a a3       	std	Y+34, r25	; 0x22
     16e:	ab a3       	std	Y+35, r26	; 0x23
     170:	bc a3       	std	Y+36, r27	; 0x24
     172:	2d a1       	ldd	r18, Y+37	; 0x25
     174:	3e a1       	ldd	r19, Y+38	; 0x26
     176:	4f a1       	ldd	r20, Y+39	; 0x27
     178:	58 a5       	ldd	r21, Y+40	; 0x28
     17a:	ca 01       	movw	r24, r20
     17c:	aa 27       	eor	r26, r26
     17e:	bb 27       	eor	r27, r27
     180:	29 a1       	ldd	r18, Y+33	; 0x21
     182:	3a a1       	ldd	r19, Y+34	; 0x22
     184:	4b a1       	ldd	r20, Y+35	; 0x23
     186:	5c a1       	ldd	r21, Y+36	; 0x24
     188:	28 0f       	add	r18, r24
     18a:	39 1f       	adc	r19, r25
     18c:	4a 1f       	adc	r20, r26
     18e:	5b 1f       	adc	r21, r27
     190:	29 a3       	std	Y+33, r18	; 0x21
     192:	3a a3       	std	Y+34, r19	; 0x22
     194:	4b a3       	std	Y+35, r20	; 0x23
     196:	5c a3       	std	Y+36, r21	; 0x24
     198:	2e 15       	cp	r18, r14
     19a:	3f 05       	cpc	r19, r15
     19c:	40 07       	cpc	r20, r16
     19e:	51 07       	cpc	r21, r17
     1a0:	40 f4       	brcc	.+16     	; 0x1b2 <__muldi3+0x130>
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	a1 e0       	ldi	r26, 0x01	; 1
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	a8 0e       	add	r10, r24
     1ac:	b9 1e       	adc	r11, r25
     1ae:	ca 1e       	adc	r12, r26
     1b0:	db 1e       	adc	r13, r27
     1b2:	89 a1       	ldd	r24, Y+33	; 0x21
     1b4:	9a a1       	ldd	r25, Y+34	; 0x22
     1b6:	ab a1       	ldd	r26, Y+35	; 0x23
     1b8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ba:	9d 01       	movw	r18, r26
     1bc:	44 27       	eor	r20, r20
     1be:	55 27       	eor	r21, r21
     1c0:	2a 0d       	add	r18, r10
     1c2:	3b 1d       	adc	r19, r11
     1c4:	4c 1d       	adc	r20, r12
     1c6:	5d 1d       	adc	r21, r13
     1c8:	2d 8f       	std	Y+29, r18	; 0x1d
     1ca:	3e 8f       	std	Y+30, r19	; 0x1e
     1cc:	4f 8f       	std	Y+31, r20	; 0x1f
     1ce:	58 a3       	std	Y+32, r21	; 0x20
     1d0:	6c 01       	movw	r12, r24
     1d2:	bb 24       	eor	r11, r11
     1d4:	aa 24       	eor	r10, r10
     1d6:	8d a1       	ldd	r24, Y+37	; 0x25
     1d8:	9e a1       	ldd	r25, Y+38	; 0x26
     1da:	af a1       	ldd	r26, Y+39	; 0x27
     1dc:	b8 a5       	ldd	r27, Y+40	; 0x28
     1de:	a0 70       	andi	r26, 0x00	; 0
     1e0:	b0 70       	andi	r27, 0x00	; 0
     1e2:	a8 0e       	add	r10, r24
     1e4:	b9 1e       	adc	r11, r25
     1e6:	ca 1e       	adc	r12, r26
     1e8:	db 1e       	adc	r13, r27
     1ea:	a9 8e       	std	Y+25, r10	; 0x19
     1ec:	ba 8e       	std	Y+26, r11	; 0x1a
     1ee:	cb 8e       	std	Y+27, r12	; 0x1b
     1f0:	dc 8e       	std	Y+28, r13	; 0x1c
     1f2:	9a 8c       	ldd	r9, Y+26	; 0x1a
     1f4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     1f6:	7c 8c       	ldd	r7, Y+28	; 0x1c
     1f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     1fa:	6f 8d       	ldd	r22, Y+31	; 0x1f
     1fc:	78 a1       	ldd	r23, Y+32	; 0x20
     1fe:	fe 01       	movw	r30, r28
     200:	71 96       	adiw	r30, 0x11	; 17
     202:	88 e0       	ldi	r24, 0x08	; 8
     204:	df 01       	movw	r26, r30
     206:	1d 92       	st	X+, r1
     208:	8a 95       	dec	r24
     20a:	e9 f7       	brne	.-6      	; 0x206 <__muldi3+0x184>
     20c:	2d 8b       	std	Y+21, r18	; 0x15
     20e:	9e 8b       	std	Y+22, r25	; 0x16
     210:	6f 8b       	std	Y+23, r22	; 0x17
     212:	78 8f       	std	Y+24, r23	; 0x18
     214:	2d 85       	ldd	r18, Y+13	; 0x0d
     216:	3e 85       	ldd	r19, Y+14	; 0x0e
     218:	4f 85       	ldd	r20, Y+15	; 0x0f
     21a:	58 89       	ldd	r21, Y+16	; 0x10
     21c:	6d a5       	ldd	r22, Y+45	; 0x2d
     21e:	7e a5       	ldd	r23, Y+46	; 0x2e
     220:	8f a5       	ldd	r24, Y+47	; 0x2f
     222:	98 a9       	ldd	r25, Y+48	; 0x30
     224:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     228:	7b 01       	movw	r14, r22
     22a:	8c 01       	movw	r16, r24
     22c:	2d 81       	ldd	r18, Y+5	; 0x05
     22e:	3e 81       	ldd	r19, Y+6	; 0x06
     230:	4f 81       	ldd	r20, Y+7	; 0x07
     232:	58 85       	ldd	r21, Y+8	; 0x08
     234:	69 a5       	ldd	r22, Y+41	; 0x29
     236:	7a a5       	ldd	r23, Y+42	; 0x2a
     238:	8b a5       	ldd	r24, Y+43	; 0x2b
     23a:	9c a5       	ldd	r25, Y+44	; 0x2c
     23c:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     240:	e6 0e       	add	r14, r22
     242:	f7 1e       	adc	r15, r23
     244:	08 1f       	adc	r16, r24
     246:	19 1f       	adc	r17, r25
     248:	6d 89       	ldd	r22, Y+21	; 0x15
     24a:	7e 89       	ldd	r23, Y+22	; 0x16
     24c:	8f 89       	ldd	r24, Y+23	; 0x17
     24e:	98 8d       	ldd	r25, Y+24	; 0x18
     250:	6e 0d       	add	r22, r14
     252:	7f 1d       	adc	r23, r15
     254:	80 1f       	adc	r24, r16
     256:	91 1f       	adc	r25, r17
     258:	6d 8b       	std	Y+21, r22	; 0x15
     25a:	7e 8b       	std	Y+22, r23	; 0x16
     25c:	8f 8b       	std	Y+23, r24	; 0x17
     25e:	98 8f       	std	Y+24, r25	; 0x18
     260:	ee 89       	ldd	r30, Y+22	; 0x16
     262:	2a 2d       	mov	r18, r10
     264:	39 2d       	mov	r19, r9
     266:	48 2d       	mov	r20, r8
     268:	57 2d       	mov	r21, r7
     26a:	7e 2f       	mov	r23, r30
     26c:	8f 89       	ldd	r24, Y+23	; 0x17
     26e:	98 8d       	ldd	r25, Y+24	; 0x18
     270:	e0 96       	adiw	r28, 0x30	; 48
     272:	e2 e1       	ldi	r30, 0x12	; 18
     274:	0c 94 0a 29 	jmp	0x5214	; 0x5214 <__epilogue_restores__>

00000278 <__fixunssfsi>:
     278:	ef 92       	push	r14
     27a:	ff 92       	push	r15
     27c:	0f 93       	push	r16
     27e:	1f 93       	push	r17
     280:	7b 01       	movw	r14, r22
     282:	8c 01       	movw	r16, r24
     284:	20 e0       	ldi	r18, 0x00	; 0
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	40 e0       	ldi	r20, 0x00	; 0
     28a:	5f e4       	ldi	r21, 0x4F	; 79
     28c:	0e 94 cd 11 	call	0x239a	; 0x239a <__gesf2>
     290:	88 23       	and	r24, r24
     292:	8c f0       	brlt	.+34     	; 0x2b6 <__fixunssfsi+0x3e>
     294:	c8 01       	movw	r24, r16
     296:	b7 01       	movw	r22, r14
     298:	20 e0       	ldi	r18, 0x00	; 0
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	40 e0       	ldi	r20, 0x00	; 0
     29e:	5f e4       	ldi	r21, 0x4F	; 79
     2a0:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__subsf3>
     2a4:	0e 94 2d 12 	call	0x245a	; 0x245a <__fixsfsi>
     2a8:	9b 01       	movw	r18, r22
     2aa:	ac 01       	movw	r20, r24
     2ac:	20 50       	subi	r18, 0x00	; 0
     2ae:	30 40       	sbci	r19, 0x00	; 0
     2b0:	40 40       	sbci	r20, 0x00	; 0
     2b2:	50 48       	sbci	r21, 0x80	; 128
     2b4:	06 c0       	rjmp	.+12     	; 0x2c2 <__fixunssfsi+0x4a>
     2b6:	c8 01       	movw	r24, r16
     2b8:	b7 01       	movw	r22, r14
     2ba:	0e 94 2d 12 	call	0x245a	; 0x245a <__fixsfsi>
     2be:	9b 01       	movw	r18, r22
     2c0:	ac 01       	movw	r20, r24
     2c2:	b9 01       	movw	r22, r18
     2c4:	ca 01       	movw	r24, r20
     2c6:	1f 91       	pop	r17
     2c8:	0f 91       	pop	r16
     2ca:	ff 90       	pop	r15
     2cc:	ef 90       	pop	r14
     2ce:	08 95       	ret

000002d0 <__udivdi3>:
     2d0:	ae e5       	ldi	r26, 0x5E	; 94
     2d2:	b0 e0       	ldi	r27, 0x00	; 0
     2d4:	ee e6       	ldi	r30, 0x6E	; 110
     2d6:	f1 e0       	ldi	r31, 0x01	; 1
     2d8:	0c 94 ee 28 	jmp	0x51dc	; 0x51dc <__prologue_saves__>
     2dc:	a8 e0       	ldi	r26, 0x08	; 8
     2de:	4e 01       	movw	r8, r28
     2e0:	08 94       	sec
     2e2:	81 1c       	adc	r8, r1
     2e4:	91 1c       	adc	r9, r1
     2e6:	f4 01       	movw	r30, r8
     2e8:	6a 2e       	mov	r6, r26
     2ea:	11 92       	st	Z+, r1
     2ec:	6a 94       	dec	r6
     2ee:	e9 f7       	brne	.-6      	; 0x2ea <__udivdi3+0x1a>
     2f0:	29 83       	std	Y+1, r18	; 0x01
     2f2:	3a 83       	std	Y+2, r19	; 0x02
     2f4:	4b 83       	std	Y+3, r20	; 0x03
     2f6:	5c 83       	std	Y+4, r21	; 0x04
     2f8:	6d 83       	std	Y+5, r22	; 0x05
     2fa:	7e 83       	std	Y+6, r23	; 0x06
     2fc:	8f 83       	std	Y+7, r24	; 0x07
     2fe:	98 87       	std	Y+8, r25	; 0x08
     300:	ce 01       	movw	r24, r28
     302:	09 96       	adiw	r24, 0x09	; 9
     304:	fc 01       	movw	r30, r24
     306:	11 92       	st	Z+, r1
     308:	aa 95       	dec	r26
     30a:	e9 f7       	brne	.-6      	; 0x306 <__udivdi3+0x36>
     30c:	a9 86       	std	Y+9, r10	; 0x09
     30e:	ba 86       	std	Y+10, r11	; 0x0a
     310:	cb 86       	std	Y+11, r12	; 0x0b
     312:	dc 86       	std	Y+12, r13	; 0x0c
     314:	ed 86       	std	Y+13, r14	; 0x0d
     316:	fe 86       	std	Y+14, r15	; 0x0e
     318:	0f 87       	std	Y+15, r16	; 0x0f
     31a:	18 8b       	std	Y+16, r17	; 0x10
     31c:	29 84       	ldd	r2, Y+9	; 0x09
     31e:	3a 84       	ldd	r3, Y+10	; 0x0a
     320:	4b 84       	ldd	r4, Y+11	; 0x0b
     322:	5c 84       	ldd	r5, Y+12	; 0x0c
     324:	ed 84       	ldd	r14, Y+13	; 0x0d
     326:	fe 84       	ldd	r15, Y+14	; 0x0e
     328:	0f 85       	ldd	r16, Y+15	; 0x0f
     32a:	18 89       	ldd	r17, Y+16	; 0x10
     32c:	69 80       	ldd	r6, Y+1	; 0x01
     32e:	7a 80       	ldd	r7, Y+2	; 0x02
     330:	8b 80       	ldd	r8, Y+3	; 0x03
     332:	9c 80       	ldd	r9, Y+4	; 0x04
     334:	6d a6       	std	Y+45, r6	; 0x2d
     336:	7e a6       	std	Y+46, r7	; 0x2e
     338:	8f a6       	std	Y+47, r8	; 0x2f
     33a:	98 aa       	std	Y+48, r9	; 0x30
     33c:	6d 80       	ldd	r6, Y+5	; 0x05
     33e:	7e 80       	ldd	r7, Y+6	; 0x06
     340:	8f 80       	ldd	r8, Y+7	; 0x07
     342:	98 84       	ldd	r9, Y+8	; 0x08
     344:	e1 14       	cp	r14, r1
     346:	f1 04       	cpc	r15, r1
     348:	01 05       	cpc	r16, r1
     34a:	11 05       	cpc	r17, r1
     34c:	09 f0       	breq	.+2      	; 0x350 <__udivdi3+0x80>
     34e:	b3 c3       	rjmp	.+1894   	; 0xab6 <__stack+0x257>
     350:	62 14       	cp	r6, r2
     352:	73 04       	cpc	r7, r3
     354:	84 04       	cpc	r8, r4
     356:	95 04       	cpc	r9, r5
     358:	08 f0       	brcs	.+2      	; 0x35c <__udivdi3+0x8c>
     35a:	3d c1       	rjmp	.+634    	; 0x5d6 <__udivdi3+0x306>
     35c:	00 e0       	ldi	r16, 0x00	; 0
     35e:	20 16       	cp	r2, r16
     360:	00 e0       	ldi	r16, 0x00	; 0
     362:	30 06       	cpc	r3, r16
     364:	01 e0       	ldi	r16, 0x01	; 1
     366:	40 06       	cpc	r4, r16
     368:	00 e0       	ldi	r16, 0x00	; 0
     36a:	50 06       	cpc	r5, r16
     36c:	88 f4       	brcc	.+34     	; 0x390 <__udivdi3+0xc0>
     36e:	1f ef       	ldi	r17, 0xFF	; 255
     370:	21 16       	cp	r2, r17
     372:	31 04       	cpc	r3, r1
     374:	41 04       	cpc	r4, r1
     376:	51 04       	cpc	r5, r1
     378:	39 f0       	breq	.+14     	; 0x388 <__udivdi3+0xb8>
     37a:	30 f0       	brcs	.+12     	; 0x388 <__udivdi3+0xb8>
     37c:	48 e0       	ldi	r20, 0x08	; 8
     37e:	e4 2e       	mov	r14, r20
     380:	f1 2c       	mov	r15, r1
     382:	01 2d       	mov	r16, r1
     384:	11 2d       	mov	r17, r1
     386:	18 c0       	rjmp	.+48     	; 0x3b8 <__udivdi3+0xe8>
     388:	ee 24       	eor	r14, r14
     38a:	ff 24       	eor	r15, r15
     38c:	87 01       	movw	r16, r14
     38e:	14 c0       	rjmp	.+40     	; 0x3b8 <__udivdi3+0xe8>
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	22 16       	cp	r2, r18
     394:	20 e0       	ldi	r18, 0x00	; 0
     396:	32 06       	cpc	r3, r18
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	42 06       	cpc	r4, r18
     39c:	21 e0       	ldi	r18, 0x01	; 1
     39e:	52 06       	cpc	r5, r18
     3a0:	30 f0       	brcs	.+12     	; 0x3ae <__udivdi3+0xde>
     3a2:	38 e1       	ldi	r19, 0x18	; 24
     3a4:	e3 2e       	mov	r14, r19
     3a6:	f1 2c       	mov	r15, r1
     3a8:	01 2d       	mov	r16, r1
     3aa:	11 2d       	mov	r17, r1
     3ac:	05 c0       	rjmp	.+10     	; 0x3b8 <__udivdi3+0xe8>
     3ae:	20 e1       	ldi	r18, 0x10	; 16
     3b0:	e2 2e       	mov	r14, r18
     3b2:	f1 2c       	mov	r15, r1
     3b4:	01 2d       	mov	r16, r1
     3b6:	11 2d       	mov	r17, r1
     3b8:	d2 01       	movw	r26, r4
     3ba:	c1 01       	movw	r24, r2
     3bc:	0e 2c       	mov	r0, r14
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <__udivdi3+0xf8>
     3c0:	b6 95       	lsr	r27
     3c2:	a7 95       	ror	r26
     3c4:	97 95       	ror	r25
     3c6:	87 95       	ror	r24
     3c8:	0a 94       	dec	r0
     3ca:	d2 f7       	brpl	.-12     	; 0x3c0 <__udivdi3+0xf0>
     3cc:	80 58       	subi	r24, 0x80	; 128
     3ce:	9f 4f       	sbci	r25, 0xFF	; 255
     3d0:	dc 01       	movw	r26, r24
     3d2:	2c 91       	ld	r18, X
     3d4:	80 e2       	ldi	r24, 0x20	; 32
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	a0 e0       	ldi	r26, 0x00	; 0
     3da:	b0 e0       	ldi	r27, 0x00	; 0
     3dc:	8e 19       	sub	r24, r14
     3de:	9f 09       	sbc	r25, r15
     3e0:	a0 0b       	sbc	r26, r16
     3e2:	b1 0b       	sbc	r27, r17
     3e4:	7c 01       	movw	r14, r24
     3e6:	8d 01       	movw	r16, r26
     3e8:	e2 1a       	sub	r14, r18
     3ea:	f1 08       	sbc	r15, r1
     3ec:	01 09       	sbc	r16, r1
     3ee:	11 09       	sbc	r17, r1
     3f0:	e1 14       	cp	r14, r1
     3f2:	f1 04       	cpc	r15, r1
     3f4:	01 05       	cpc	r16, r1
     3f6:	11 05       	cpc	r17, r1
     3f8:	a1 f1       	breq	.+104    	; 0x462 <__udivdi3+0x192>
     3fa:	0e 2c       	mov	r0, r14
     3fc:	04 c0       	rjmp	.+8      	; 0x406 <__udivdi3+0x136>
     3fe:	22 0c       	add	r2, r2
     400:	33 1c       	adc	r3, r3
     402:	44 1c       	adc	r4, r4
     404:	55 1c       	adc	r5, r5
     406:	0a 94       	dec	r0
     408:	d2 f7       	brpl	.-12     	; 0x3fe <__udivdi3+0x12e>
     40a:	a4 01       	movw	r20, r8
     40c:	93 01       	movw	r18, r6
     40e:	0e 2c       	mov	r0, r14
     410:	04 c0       	rjmp	.+8      	; 0x41a <__udivdi3+0x14a>
     412:	22 0f       	add	r18, r18
     414:	33 1f       	adc	r19, r19
     416:	44 1f       	adc	r20, r20
     418:	55 1f       	adc	r21, r21
     41a:	0a 94       	dec	r0
     41c:	d2 f7       	brpl	.-12     	; 0x412 <__udivdi3+0x142>
     41e:	80 e2       	ldi	r24, 0x20	; 32
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	8e 19       	sub	r24, r14
     424:	9f 09       	sbc	r25, r15
     426:	6d a4       	ldd	r6, Y+45	; 0x2d
     428:	7e a4       	ldd	r7, Y+46	; 0x2e
     42a:	8f a4       	ldd	r8, Y+47	; 0x2f
     42c:	98 a8       	ldd	r9, Y+48	; 0x30
     42e:	04 c0       	rjmp	.+8      	; 0x438 <__udivdi3+0x168>
     430:	96 94       	lsr	r9
     432:	87 94       	ror	r8
     434:	77 94       	ror	r7
     436:	67 94       	ror	r6
     438:	8a 95       	dec	r24
     43a:	d2 f7       	brpl	.-12     	; 0x430 <__udivdi3+0x160>
     43c:	62 2a       	or	r6, r18
     43e:	73 2a       	or	r7, r19
     440:	84 2a       	or	r8, r20
     442:	95 2a       	or	r9, r21
     444:	ad a4       	ldd	r10, Y+45	; 0x2d
     446:	be a4       	ldd	r11, Y+46	; 0x2e
     448:	cf a4       	ldd	r12, Y+47	; 0x2f
     44a:	d8 a8       	ldd	r13, Y+48	; 0x30
     44c:	04 c0       	rjmp	.+8      	; 0x456 <__udivdi3+0x186>
     44e:	aa 0c       	add	r10, r10
     450:	bb 1c       	adc	r11, r11
     452:	cc 1c       	adc	r12, r12
     454:	dd 1c       	adc	r13, r13
     456:	ea 94       	dec	r14
     458:	d2 f7       	brpl	.-12     	; 0x44e <__udivdi3+0x17e>
     45a:	ad a6       	std	Y+45, r10	; 0x2d
     45c:	be a6       	std	Y+46, r11	; 0x2e
     45e:	cf a6       	std	Y+47, r12	; 0x2f
     460:	d8 aa       	std	Y+48, r13	; 0x30
     462:	62 01       	movw	r12, r4
     464:	ee 24       	eor	r14, r14
     466:	ff 24       	eor	r15, r15
     468:	cd aa       	std	Y+53, r12	; 0x35
     46a:	de aa       	std	Y+54, r13	; 0x36
     46c:	ef aa       	std	Y+55, r14	; 0x37
     46e:	f8 ae       	std	Y+56, r15	; 0x38
     470:	92 01       	movw	r18, r4
     472:	81 01       	movw	r16, r2
     474:	20 70       	andi	r18, 0x00	; 0
     476:	30 70       	andi	r19, 0x00	; 0
     478:	09 af       	std	Y+57, r16	; 0x39
     47a:	1a af       	std	Y+58, r17	; 0x3a
     47c:	2b af       	std	Y+59, r18	; 0x3b
     47e:	3c af       	std	Y+60, r19	; 0x3c
     480:	c4 01       	movw	r24, r8
     482:	b3 01       	movw	r22, r6
     484:	a7 01       	movw	r20, r14
     486:	96 01       	movw	r18, r12
     488:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     48c:	7b 01       	movw	r14, r22
     48e:	8c 01       	movw	r16, r24
     490:	c4 01       	movw	r24, r8
     492:	b3 01       	movw	r22, r6
     494:	2d a9       	ldd	r18, Y+53	; 0x35
     496:	3e a9       	ldd	r19, Y+54	; 0x36
     498:	4f a9       	ldd	r20, Y+55	; 0x37
     49a:	58 ad       	ldd	r21, Y+56	; 0x38
     49c:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     4a0:	c9 01       	movw	r24, r18
     4a2:	da 01       	movw	r26, r20
     4a4:	3c 01       	movw	r6, r24
     4a6:	4d 01       	movw	r8, r26
     4a8:	c4 01       	movw	r24, r8
     4aa:	b3 01       	movw	r22, r6
     4ac:	29 ad       	ldd	r18, Y+57	; 0x39
     4ae:	3a ad       	ldd	r19, Y+58	; 0x3a
     4b0:	4b ad       	ldd	r20, Y+59	; 0x3b
     4b2:	5c ad       	ldd	r21, Y+60	; 0x3c
     4b4:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     4b8:	9b 01       	movw	r18, r22
     4ba:	ac 01       	movw	r20, r24
     4bc:	87 01       	movw	r16, r14
     4be:	ff 24       	eor	r15, r15
     4c0:	ee 24       	eor	r14, r14
     4c2:	ad a4       	ldd	r10, Y+45	; 0x2d
     4c4:	be a4       	ldd	r11, Y+46	; 0x2e
     4c6:	cf a4       	ldd	r12, Y+47	; 0x2f
     4c8:	d8 a8       	ldd	r13, Y+48	; 0x30
     4ca:	c6 01       	movw	r24, r12
     4cc:	aa 27       	eor	r26, r26
     4ce:	bb 27       	eor	r27, r27
     4d0:	57 01       	movw	r10, r14
     4d2:	68 01       	movw	r12, r16
     4d4:	a8 2a       	or	r10, r24
     4d6:	b9 2a       	or	r11, r25
     4d8:	ca 2a       	or	r12, r26
     4da:	db 2a       	or	r13, r27
     4dc:	a2 16       	cp	r10, r18
     4de:	b3 06       	cpc	r11, r19
     4e0:	c4 06       	cpc	r12, r20
     4e2:	d5 06       	cpc	r13, r21
     4e4:	e0 f4       	brcc	.+56     	; 0x51e <__udivdi3+0x24e>
     4e6:	08 94       	sec
     4e8:	61 08       	sbc	r6, r1
     4ea:	71 08       	sbc	r7, r1
     4ec:	81 08       	sbc	r8, r1
     4ee:	91 08       	sbc	r9, r1
     4f0:	a2 0c       	add	r10, r2
     4f2:	b3 1c       	adc	r11, r3
     4f4:	c4 1c       	adc	r12, r4
     4f6:	d5 1c       	adc	r13, r5
     4f8:	a2 14       	cp	r10, r2
     4fa:	b3 04       	cpc	r11, r3
     4fc:	c4 04       	cpc	r12, r4
     4fe:	d5 04       	cpc	r13, r5
     500:	70 f0       	brcs	.+28     	; 0x51e <__udivdi3+0x24e>
     502:	a2 16       	cp	r10, r18
     504:	b3 06       	cpc	r11, r19
     506:	c4 06       	cpc	r12, r20
     508:	d5 06       	cpc	r13, r21
     50a:	48 f4       	brcc	.+18     	; 0x51e <__udivdi3+0x24e>
     50c:	08 94       	sec
     50e:	61 08       	sbc	r6, r1
     510:	71 08       	sbc	r7, r1
     512:	81 08       	sbc	r8, r1
     514:	91 08       	sbc	r9, r1
     516:	a2 0c       	add	r10, r2
     518:	b3 1c       	adc	r11, r3
     51a:	c4 1c       	adc	r12, r4
     51c:	d5 1c       	adc	r13, r5
     51e:	a2 1a       	sub	r10, r18
     520:	b3 0a       	sbc	r11, r19
     522:	c4 0a       	sbc	r12, r20
     524:	d5 0a       	sbc	r13, r21
     526:	c6 01       	movw	r24, r12
     528:	b5 01       	movw	r22, r10
     52a:	2d a9       	ldd	r18, Y+53	; 0x35
     52c:	3e a9       	ldd	r19, Y+54	; 0x36
     52e:	4f a9       	ldd	r20, Y+55	; 0x37
     530:	58 ad       	ldd	r21, Y+56	; 0x38
     532:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     536:	7b 01       	movw	r14, r22
     538:	8c 01       	movw	r16, r24
     53a:	c6 01       	movw	r24, r12
     53c:	b5 01       	movw	r22, r10
     53e:	2d a9       	ldd	r18, Y+53	; 0x35
     540:	3e a9       	ldd	r19, Y+54	; 0x36
     542:	4f a9       	ldd	r20, Y+55	; 0x37
     544:	58 ad       	ldd	r21, Y+56	; 0x38
     546:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     54a:	c9 01       	movw	r24, r18
     54c:	da 01       	movw	r26, r20
     54e:	5c 01       	movw	r10, r24
     550:	6d 01       	movw	r12, r26
     552:	c6 01       	movw	r24, r12
     554:	b5 01       	movw	r22, r10
     556:	29 ad       	ldd	r18, Y+57	; 0x39
     558:	3a ad       	ldd	r19, Y+58	; 0x3a
     55a:	4b ad       	ldd	r20, Y+59	; 0x3b
     55c:	5c ad       	ldd	r21, Y+60	; 0x3c
     55e:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     562:	9b 01       	movw	r18, r22
     564:	ac 01       	movw	r20, r24
     566:	87 01       	movw	r16, r14
     568:	ff 24       	eor	r15, r15
     56a:	ee 24       	eor	r14, r14
     56c:	8d a5       	ldd	r24, Y+45	; 0x2d
     56e:	9e a5       	ldd	r25, Y+46	; 0x2e
     570:	af a5       	ldd	r26, Y+47	; 0x2f
     572:	b8 a9       	ldd	r27, Y+48	; 0x30
     574:	a0 70       	andi	r26, 0x00	; 0
     576:	b0 70       	andi	r27, 0x00	; 0
     578:	e8 2a       	or	r14, r24
     57a:	f9 2a       	or	r15, r25
     57c:	0a 2b       	or	r16, r26
     57e:	1b 2b       	or	r17, r27
     580:	e2 16       	cp	r14, r18
     582:	f3 06       	cpc	r15, r19
     584:	04 07       	cpc	r16, r20
     586:	15 07       	cpc	r17, r21
     588:	c0 f4       	brcc	.+48     	; 0x5ba <__udivdi3+0x2ea>
     58a:	08 94       	sec
     58c:	a1 08       	sbc	r10, r1
     58e:	b1 08       	sbc	r11, r1
     590:	c1 08       	sbc	r12, r1
     592:	d1 08       	sbc	r13, r1
     594:	e2 0c       	add	r14, r2
     596:	f3 1c       	adc	r15, r3
     598:	04 1d       	adc	r16, r4
     59a:	15 1d       	adc	r17, r5
     59c:	e2 14       	cp	r14, r2
     59e:	f3 04       	cpc	r15, r3
     5a0:	04 05       	cpc	r16, r4
     5a2:	15 05       	cpc	r17, r5
     5a4:	50 f0       	brcs	.+20     	; 0x5ba <__udivdi3+0x2ea>
     5a6:	e2 16       	cp	r14, r18
     5a8:	f3 06       	cpc	r15, r19
     5aa:	04 07       	cpc	r16, r20
     5ac:	15 07       	cpc	r17, r21
     5ae:	28 f4       	brcc	.+10     	; 0x5ba <__udivdi3+0x2ea>
     5b0:	08 94       	sec
     5b2:	a1 08       	sbc	r10, r1
     5b4:	b1 08       	sbc	r11, r1
     5b6:	c1 08       	sbc	r12, r1
     5b8:	d1 08       	sbc	r13, r1
     5ba:	d3 01       	movw	r26, r6
     5bc:	99 27       	eor	r25, r25
     5be:	88 27       	eor	r24, r24
     5c0:	86 01       	movw	r16, r12
     5c2:	75 01       	movw	r14, r10
     5c4:	e8 2a       	or	r14, r24
     5c6:	f9 2a       	or	r15, r25
     5c8:	0a 2b       	or	r16, r26
     5ca:	1b 2b       	or	r17, r27
     5cc:	e9 aa       	std	Y+49, r14	; 0x31
     5ce:	fa aa       	std	Y+50, r15	; 0x32
     5d0:	0b ab       	std	Y+51, r16	; 0x33
     5d2:	1c ab       	std	Y+52, r17	; 0x34
     5d4:	cf c4       	rjmp	.+2462   	; 0xf74 <__stack+0x715>
     5d6:	21 14       	cp	r2, r1
     5d8:	31 04       	cpc	r3, r1
     5da:	41 04       	cpc	r4, r1
     5dc:	51 04       	cpc	r5, r1
     5de:	71 f4       	brne	.+28     	; 0x5fc <__udivdi3+0x32c>
     5e0:	61 e0       	ldi	r22, 0x01	; 1
     5e2:	70 e0       	ldi	r23, 0x00	; 0
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	40 e0       	ldi	r20, 0x00	; 0
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     5f4:	c9 01       	movw	r24, r18
     5f6:	da 01       	movw	r26, r20
     5f8:	1c 01       	movw	r2, r24
     5fa:	2d 01       	movw	r4, r26
     5fc:	00 e0       	ldi	r16, 0x00	; 0
     5fe:	20 16       	cp	r2, r16
     600:	00 e0       	ldi	r16, 0x00	; 0
     602:	30 06       	cpc	r3, r16
     604:	01 e0       	ldi	r16, 0x01	; 1
     606:	40 06       	cpc	r4, r16
     608:	00 e0       	ldi	r16, 0x00	; 0
     60a:	50 06       	cpc	r5, r16
     60c:	88 f4       	brcc	.+34     	; 0x630 <__udivdi3+0x360>
     60e:	1f ef       	ldi	r17, 0xFF	; 255
     610:	21 16       	cp	r2, r17
     612:	31 04       	cpc	r3, r1
     614:	41 04       	cpc	r4, r1
     616:	51 04       	cpc	r5, r1
     618:	31 f0       	breq	.+12     	; 0x626 <__udivdi3+0x356>
     61a:	28 f0       	brcs	.+10     	; 0x626 <__udivdi3+0x356>
     61c:	48 e0       	ldi	r20, 0x08	; 8
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	60 e0       	ldi	r22, 0x00	; 0
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	17 c0       	rjmp	.+46     	; 0x654 <__udivdi3+0x384>
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	70 e0       	ldi	r23, 0x00	; 0
     62e:	12 c0       	rjmp	.+36     	; 0x654 <__udivdi3+0x384>
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	22 16       	cp	r2, r18
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	32 06       	cpc	r3, r18
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	42 06       	cpc	r4, r18
     63c:	21 e0       	ldi	r18, 0x01	; 1
     63e:	52 06       	cpc	r5, r18
     640:	28 f0       	brcs	.+10     	; 0x64c <__udivdi3+0x37c>
     642:	48 e1       	ldi	r20, 0x18	; 24
     644:	50 e0       	ldi	r21, 0x00	; 0
     646:	60 e0       	ldi	r22, 0x00	; 0
     648:	70 e0       	ldi	r23, 0x00	; 0
     64a:	04 c0       	rjmp	.+8      	; 0x654 <__udivdi3+0x384>
     64c:	40 e1       	ldi	r20, 0x10	; 16
     64e:	50 e0       	ldi	r21, 0x00	; 0
     650:	60 e0       	ldi	r22, 0x00	; 0
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	d2 01       	movw	r26, r4
     656:	c1 01       	movw	r24, r2
     658:	04 2e       	mov	r0, r20
     65a:	04 c0       	rjmp	.+8      	; 0x664 <__udivdi3+0x394>
     65c:	b6 95       	lsr	r27
     65e:	a7 95       	ror	r26
     660:	97 95       	ror	r25
     662:	87 95       	ror	r24
     664:	0a 94       	dec	r0
     666:	d2 f7       	brpl	.-12     	; 0x65c <__udivdi3+0x38c>
     668:	80 58       	subi	r24, 0x80	; 128
     66a:	9f 4f       	sbci	r25, 0xFF	; 255
     66c:	dc 01       	movw	r26, r24
     66e:	2c 91       	ld	r18, X
     670:	e0 e2       	ldi	r30, 0x20	; 32
     672:	ee 2e       	mov	r14, r30
     674:	f1 2c       	mov	r15, r1
     676:	01 2d       	mov	r16, r1
     678:	11 2d       	mov	r17, r1
     67a:	d8 01       	movw	r26, r16
     67c:	c7 01       	movw	r24, r14
     67e:	84 1b       	sub	r24, r20
     680:	95 0b       	sbc	r25, r21
     682:	a6 0b       	sbc	r26, r22
     684:	b7 0b       	sbc	r27, r23
     686:	82 1b       	sub	r24, r18
     688:	91 09       	sbc	r25, r1
     68a:	a1 09       	sbc	r26, r1
     68c:	b1 09       	sbc	r27, r1
     68e:	00 97       	sbiw	r24, 0x00	; 0
     690:	a1 05       	cpc	r26, r1
     692:	b1 05       	cpc	r27, r1
     694:	61 f4       	brne	.+24     	; 0x6ae <__udivdi3+0x3de>
     696:	64 01       	movw	r12, r8
     698:	53 01       	movw	r10, r6
     69a:	a2 18       	sub	r10, r2
     69c:	b3 08       	sbc	r11, r3
     69e:	c4 08       	sbc	r12, r4
     6a0:	d5 08       	sbc	r13, r5
     6a2:	31 e0       	ldi	r19, 0x01	; 1
     6a4:	63 2e       	mov	r6, r19
     6a6:	71 2c       	mov	r7, r1
     6a8:	81 2c       	mov	r8, r1
     6aa:	91 2c       	mov	r9, r1
     6ac:	1e c1       	rjmp	.+572    	; 0x8ea <__stack+0x8b>
     6ae:	6f 96       	adiw	r28, 0x1f	; 31
     6b0:	8f af       	std	Y+63, r24	; 0x3f
     6b2:	6f 97       	sbiw	r28, 0x1f	; 31
     6b4:	08 2e       	mov	r0, r24
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <__udivdi3+0x3f0>
     6b8:	22 0c       	add	r2, r2
     6ba:	33 1c       	adc	r3, r3
     6bc:	44 1c       	adc	r4, r4
     6be:	55 1c       	adc	r5, r5
     6c0:	0a 94       	dec	r0
     6c2:	d2 f7       	brpl	.-12     	; 0x6b8 <__udivdi3+0x3e8>
     6c4:	ee 2d       	mov	r30, r14
     6c6:	e8 1b       	sub	r30, r24
     6c8:	64 01       	movw	r12, r8
     6ca:	53 01       	movw	r10, r6
     6cc:	0e 2e       	mov	r0, r30
     6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <__udivdi3+0x408>
     6d0:	d6 94       	lsr	r13
     6d2:	c7 94       	ror	r12
     6d4:	b7 94       	ror	r11
     6d6:	a7 94       	ror	r10
     6d8:	0a 94       	dec	r0
     6da:	d2 f7       	brpl	.-12     	; 0x6d0 <__udivdi3+0x400>
     6dc:	a4 01       	movw	r20, r8
     6de:	93 01       	movw	r18, r6
     6e0:	6f 96       	adiw	r28, 0x1f	; 31
     6e2:	0f ac       	ldd	r0, Y+63	; 0x3f
     6e4:	6f 97       	sbiw	r28, 0x1f	; 31
     6e6:	04 c0       	rjmp	.+8      	; 0x6f0 <__udivdi3+0x420>
     6e8:	22 0f       	add	r18, r18
     6ea:	33 1f       	adc	r19, r19
     6ec:	44 1f       	adc	r20, r20
     6ee:	55 1f       	adc	r21, r21
     6f0:	0a 94       	dec	r0
     6f2:	d2 f7       	brpl	.-12     	; 0x6e8 <__udivdi3+0x418>
     6f4:	6d a4       	ldd	r6, Y+45	; 0x2d
     6f6:	7e a4       	ldd	r7, Y+46	; 0x2e
     6f8:	8f a4       	ldd	r8, Y+47	; 0x2f
     6fa:	98 a8       	ldd	r9, Y+48	; 0x30
     6fc:	0e 2e       	mov	r0, r30
     6fe:	04 c0       	rjmp	.+8      	; 0x708 <__udivdi3+0x438>
     700:	96 94       	lsr	r9
     702:	87 94       	ror	r8
     704:	77 94       	ror	r7
     706:	67 94       	ror	r6
     708:	0a 94       	dec	r0
     70a:	d2 f7       	brpl	.-12     	; 0x700 <__udivdi3+0x430>
     70c:	84 01       	movw	r16, r8
     70e:	73 01       	movw	r14, r6
     710:	e2 2a       	or	r14, r18
     712:	f3 2a       	or	r15, r19
     714:	04 2b       	or	r16, r20
     716:	15 2b       	or	r17, r21
     718:	e9 a6       	std	Y+41, r14	; 0x29
     71a:	fa a6       	std	Y+42, r15	; 0x2a
     71c:	0b a7       	std	Y+43, r16	; 0x2b
     71e:	1c a7       	std	Y+44, r17	; 0x2c
     720:	32 01       	movw	r6, r4
     722:	88 24       	eor	r8, r8
     724:	99 24       	eor	r9, r9
     726:	92 01       	movw	r18, r4
     728:	81 01       	movw	r16, r2
     72a:	20 70       	andi	r18, 0x00	; 0
     72c:	30 70       	andi	r19, 0x00	; 0
     72e:	21 96       	adiw	r28, 0x01	; 1
     730:	0c af       	std	Y+60, r16	; 0x3c
     732:	1d af       	std	Y+61, r17	; 0x3d
     734:	2e af       	std	Y+62, r18	; 0x3e
     736:	3f af       	std	Y+63, r19	; 0x3f
     738:	21 97       	sbiw	r28, 0x01	; 1
     73a:	c6 01       	movw	r24, r12
     73c:	b5 01       	movw	r22, r10
     73e:	a4 01       	movw	r20, r8
     740:	93 01       	movw	r18, r6
     742:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     746:	7b 01       	movw	r14, r22
     748:	8c 01       	movw	r16, r24
     74a:	c6 01       	movw	r24, r12
     74c:	b5 01       	movw	r22, r10
     74e:	a4 01       	movw	r20, r8
     750:	93 01       	movw	r18, r6
     752:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     756:	c9 01       	movw	r24, r18
     758:	da 01       	movw	r26, r20
     75a:	25 96       	adiw	r28, 0x05	; 5
     75c:	8c af       	std	Y+60, r24	; 0x3c
     75e:	9d af       	std	Y+61, r25	; 0x3d
     760:	ae af       	std	Y+62, r26	; 0x3e
     762:	bf af       	std	Y+63, r27	; 0x3f
     764:	25 97       	sbiw	r28, 0x05	; 5
     766:	bc 01       	movw	r22, r24
     768:	cd 01       	movw	r24, r26
     76a:	21 96       	adiw	r28, 0x01	; 1
     76c:	2c ad       	ldd	r18, Y+60	; 0x3c
     76e:	3d ad       	ldd	r19, Y+61	; 0x3d
     770:	4e ad       	ldd	r20, Y+62	; 0x3e
     772:	5f ad       	ldd	r21, Y+63	; 0x3f
     774:	21 97       	sbiw	r28, 0x01	; 1
     776:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     77a:	9b 01       	movw	r18, r22
     77c:	ac 01       	movw	r20, r24
     77e:	87 01       	movw	r16, r14
     780:	ff 24       	eor	r15, r15
     782:	ee 24       	eor	r14, r14
     784:	a9 a4       	ldd	r10, Y+41	; 0x29
     786:	ba a4       	ldd	r11, Y+42	; 0x2a
     788:	cb a4       	ldd	r12, Y+43	; 0x2b
     78a:	dc a4       	ldd	r13, Y+44	; 0x2c
     78c:	c6 01       	movw	r24, r12
     78e:	aa 27       	eor	r26, r26
     790:	bb 27       	eor	r27, r27
     792:	5c 01       	movw	r10, r24
     794:	6d 01       	movw	r12, r26
     796:	ae 28       	or	r10, r14
     798:	bf 28       	or	r11, r15
     79a:	c0 2a       	or	r12, r16
     79c:	d1 2a       	or	r13, r17
     79e:	a2 16       	cp	r10, r18
     7a0:	b3 06       	cpc	r11, r19
     7a2:	c4 06       	cpc	r12, r20
     7a4:	d5 06       	cpc	r13, r21
     7a6:	60 f5       	brcc	.+88     	; 0x800 <__udivdi3+0x530>
     7a8:	25 96       	adiw	r28, 0x05	; 5
     7aa:	6c ad       	ldd	r22, Y+60	; 0x3c
     7ac:	7d ad       	ldd	r23, Y+61	; 0x3d
     7ae:	8e ad       	ldd	r24, Y+62	; 0x3e
     7b0:	9f ad       	ldd	r25, Y+63	; 0x3f
     7b2:	25 97       	sbiw	r28, 0x05	; 5
     7b4:	61 50       	subi	r22, 0x01	; 1
     7b6:	70 40       	sbci	r23, 0x00	; 0
     7b8:	80 40       	sbci	r24, 0x00	; 0
     7ba:	90 40       	sbci	r25, 0x00	; 0
     7bc:	25 96       	adiw	r28, 0x05	; 5
     7be:	6c af       	std	Y+60, r22	; 0x3c
     7c0:	7d af       	std	Y+61, r23	; 0x3d
     7c2:	8e af       	std	Y+62, r24	; 0x3e
     7c4:	9f af       	std	Y+63, r25	; 0x3f
     7c6:	25 97       	sbiw	r28, 0x05	; 5
     7c8:	a2 0c       	add	r10, r2
     7ca:	b3 1c       	adc	r11, r3
     7cc:	c4 1c       	adc	r12, r4
     7ce:	d5 1c       	adc	r13, r5
     7d0:	a2 14       	cp	r10, r2
     7d2:	b3 04       	cpc	r11, r3
     7d4:	c4 04       	cpc	r12, r4
     7d6:	d5 04       	cpc	r13, r5
     7d8:	98 f0       	brcs	.+38     	; 0x800 <__udivdi3+0x530>
     7da:	a2 16       	cp	r10, r18
     7dc:	b3 06       	cpc	r11, r19
     7de:	c4 06       	cpc	r12, r20
     7e0:	d5 06       	cpc	r13, r21
     7e2:	70 f4       	brcc	.+28     	; 0x800 <__udivdi3+0x530>
     7e4:	61 50       	subi	r22, 0x01	; 1
     7e6:	70 40       	sbci	r23, 0x00	; 0
     7e8:	80 40       	sbci	r24, 0x00	; 0
     7ea:	90 40       	sbci	r25, 0x00	; 0
     7ec:	25 96       	adiw	r28, 0x05	; 5
     7ee:	6c af       	std	Y+60, r22	; 0x3c
     7f0:	7d af       	std	Y+61, r23	; 0x3d
     7f2:	8e af       	std	Y+62, r24	; 0x3e
     7f4:	9f af       	std	Y+63, r25	; 0x3f
     7f6:	25 97       	sbiw	r28, 0x05	; 5
     7f8:	a2 0c       	add	r10, r2
     7fa:	b3 1c       	adc	r11, r3
     7fc:	c4 1c       	adc	r12, r4
     7fe:	d5 1c       	adc	r13, r5
     800:	a2 1a       	sub	r10, r18
     802:	b3 0a       	sbc	r11, r19
     804:	c4 0a       	sbc	r12, r20
     806:	d5 0a       	sbc	r13, r21
     808:	c6 01       	movw	r24, r12
     80a:	b5 01       	movw	r22, r10
     80c:	a4 01       	movw	r20, r8
     80e:	93 01       	movw	r18, r6
     810:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     814:	7b 01       	movw	r14, r22
     816:	8c 01       	movw	r16, r24
     818:	c6 01       	movw	r24, r12
     81a:	b5 01       	movw	r22, r10
     81c:	a4 01       	movw	r20, r8
     81e:	93 01       	movw	r18, r6
     820:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     824:	c9 01       	movw	r24, r18
     826:	da 01       	movw	r26, r20
     828:	3c 01       	movw	r6, r24
     82a:	4d 01       	movw	r8, r26
     82c:	c4 01       	movw	r24, r8
     82e:	b3 01       	movw	r22, r6
     830:	21 96       	adiw	r28, 0x01	; 1
     832:	2c ad       	ldd	r18, Y+60	; 0x3c
     834:	3d ad       	ldd	r19, Y+61	; 0x3d
     836:	4e ad       	ldd	r20, Y+62	; 0x3e
     838:	5f ad       	ldd	r21, Y+63	; 0x3f
     83a:	21 97       	sbiw	r28, 0x01	; 1
     83c:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     840:	9b 01       	movw	r18, r22
     842:	ac 01       	movw	r20, r24
     844:	87 01       	movw	r16, r14
     846:	ff 24       	eor	r15, r15
     848:	ee 24       	eor	r14, r14
     84a:	89 a5       	ldd	r24, Y+41	; 0x29
     84c:	9a a5       	ldd	r25, Y+42	; 0x2a
     84e:	ab a5       	ldd	r26, Y+43	; 0x2b
     850:	bc a5       	ldd	r27, Y+44	; 0x2c
     852:	a0 70       	andi	r26, 0x00	; 0
     854:	b0 70       	andi	r27, 0x00	; 0
     856:	57 01       	movw	r10, r14
     858:	68 01       	movw	r12, r16
     85a:	a8 2a       	or	r10, r24
     85c:	b9 2a       	or	r11, r25
     85e:	ca 2a       	or	r12, r26
     860:	db 2a       	or	r13, r27
     862:	a2 16       	cp	r10, r18
     864:	b3 06       	cpc	r11, r19
     866:	c4 06       	cpc	r12, r20
     868:	d5 06       	cpc	r13, r21
     86a:	e0 f4       	brcc	.+56     	; 0x8a4 <__stack+0x45>
     86c:	08 94       	sec
     86e:	61 08       	sbc	r6, r1
     870:	71 08       	sbc	r7, r1
     872:	81 08       	sbc	r8, r1
     874:	91 08       	sbc	r9, r1
     876:	a2 0c       	add	r10, r2
     878:	b3 1c       	adc	r11, r3
     87a:	c4 1c       	adc	r12, r4
     87c:	d5 1c       	adc	r13, r5
     87e:	a2 14       	cp	r10, r2
     880:	b3 04       	cpc	r11, r3
     882:	c4 04       	cpc	r12, r4
     884:	d5 04       	cpc	r13, r5
     886:	70 f0       	brcs	.+28     	; 0x8a4 <__stack+0x45>
     888:	a2 16       	cp	r10, r18
     88a:	b3 06       	cpc	r11, r19
     88c:	c4 06       	cpc	r12, r20
     88e:	d5 06       	cpc	r13, r21
     890:	48 f4       	brcc	.+18     	; 0x8a4 <__stack+0x45>
     892:	08 94       	sec
     894:	61 08       	sbc	r6, r1
     896:	71 08       	sbc	r7, r1
     898:	81 08       	sbc	r8, r1
     89a:	91 08       	sbc	r9, r1
     89c:	a2 0c       	add	r10, r2
     89e:	b3 1c       	adc	r11, r3
     8a0:	c4 1c       	adc	r12, r4
     8a2:	d5 1c       	adc	r13, r5
     8a4:	8d a5       	ldd	r24, Y+45	; 0x2d
     8a6:	9e a5       	ldd	r25, Y+46	; 0x2e
     8a8:	af a5       	ldd	r26, Y+47	; 0x2f
     8aa:	b8 a9       	ldd	r27, Y+48	; 0x30
     8ac:	6f 96       	adiw	r28, 0x1f	; 31
     8ae:	0f ac       	ldd	r0, Y+63	; 0x3f
     8b0:	6f 97       	sbiw	r28, 0x1f	; 31
     8b2:	04 c0       	rjmp	.+8      	; 0x8bc <__stack+0x5d>
     8b4:	88 0f       	add	r24, r24
     8b6:	99 1f       	adc	r25, r25
     8b8:	aa 1f       	adc	r26, r26
     8ba:	bb 1f       	adc	r27, r27
     8bc:	0a 94       	dec	r0
     8be:	d2 f7       	brpl	.-12     	; 0x8b4 <__stack+0x55>
     8c0:	8d a7       	std	Y+45, r24	; 0x2d
     8c2:	9e a7       	std	Y+46, r25	; 0x2e
     8c4:	af a7       	std	Y+47, r26	; 0x2f
     8c6:	b8 ab       	std	Y+48, r27	; 0x30
     8c8:	a2 1a       	sub	r10, r18
     8ca:	b3 0a       	sbc	r11, r19
     8cc:	c4 0a       	sbc	r12, r20
     8ce:	d5 0a       	sbc	r13, r21
     8d0:	25 96       	adiw	r28, 0x05	; 5
     8d2:	ec ac       	ldd	r14, Y+60	; 0x3c
     8d4:	fd ac       	ldd	r15, Y+61	; 0x3d
     8d6:	0e ad       	ldd	r16, Y+62	; 0x3e
     8d8:	1f ad       	ldd	r17, Y+63	; 0x3f
     8da:	25 97       	sbiw	r28, 0x05	; 5
     8dc:	d7 01       	movw	r26, r14
     8de:	99 27       	eor	r25, r25
     8e0:	88 27       	eor	r24, r24
     8e2:	68 2a       	or	r6, r24
     8e4:	79 2a       	or	r7, r25
     8e6:	8a 2a       	or	r8, r26
     8e8:	9b 2a       	or	r9, r27
     8ea:	82 01       	movw	r16, r4
     8ec:	22 27       	eor	r18, r18
     8ee:	33 27       	eor	r19, r19
     8f0:	29 96       	adiw	r28, 0x09	; 9
     8f2:	0c af       	std	Y+60, r16	; 0x3c
     8f4:	1d af       	std	Y+61, r17	; 0x3d
     8f6:	2e af       	std	Y+62, r18	; 0x3e
     8f8:	3f af       	std	Y+63, r19	; 0x3f
     8fa:	29 97       	sbiw	r28, 0x09	; 9
     8fc:	a2 01       	movw	r20, r4
     8fe:	91 01       	movw	r18, r2
     900:	40 70       	andi	r20, 0x00	; 0
     902:	50 70       	andi	r21, 0x00	; 0
     904:	2d 96       	adiw	r28, 0x0d	; 13
     906:	2c af       	std	Y+60, r18	; 0x3c
     908:	3d af       	std	Y+61, r19	; 0x3d
     90a:	4e af       	std	Y+62, r20	; 0x3e
     90c:	5f af       	std	Y+63, r21	; 0x3f
     90e:	2d 97       	sbiw	r28, 0x0d	; 13
     910:	c6 01       	movw	r24, r12
     912:	b5 01       	movw	r22, r10
     914:	29 96       	adiw	r28, 0x09	; 9
     916:	2c ad       	ldd	r18, Y+60	; 0x3c
     918:	3d ad       	ldd	r19, Y+61	; 0x3d
     91a:	4e ad       	ldd	r20, Y+62	; 0x3e
     91c:	5f ad       	ldd	r21, Y+63	; 0x3f
     91e:	29 97       	sbiw	r28, 0x09	; 9
     920:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     924:	7b 01       	movw	r14, r22
     926:	8c 01       	movw	r16, r24
     928:	c6 01       	movw	r24, r12
     92a:	b5 01       	movw	r22, r10
     92c:	29 96       	adiw	r28, 0x09	; 9
     92e:	2c ad       	ldd	r18, Y+60	; 0x3c
     930:	3d ad       	ldd	r19, Y+61	; 0x3d
     932:	4e ad       	ldd	r20, Y+62	; 0x3e
     934:	5f ad       	ldd	r21, Y+63	; 0x3f
     936:	29 97       	sbiw	r28, 0x09	; 9
     938:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     93c:	c9 01       	movw	r24, r18
     93e:	da 01       	movw	r26, r20
     940:	61 96       	adiw	r28, 0x11	; 17
     942:	8c af       	std	Y+60, r24	; 0x3c
     944:	9d af       	std	Y+61, r25	; 0x3d
     946:	ae af       	std	Y+62, r26	; 0x3e
     948:	bf af       	std	Y+63, r27	; 0x3f
     94a:	61 97       	sbiw	r28, 0x11	; 17
     94c:	bc 01       	movw	r22, r24
     94e:	cd 01       	movw	r24, r26
     950:	2d 96       	adiw	r28, 0x0d	; 13
     952:	2c ad       	ldd	r18, Y+60	; 0x3c
     954:	3d ad       	ldd	r19, Y+61	; 0x3d
     956:	4e ad       	ldd	r20, Y+62	; 0x3e
     958:	5f ad       	ldd	r21, Y+63	; 0x3f
     95a:	2d 97       	sbiw	r28, 0x0d	; 13
     95c:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     960:	9b 01       	movw	r18, r22
     962:	ac 01       	movw	r20, r24
     964:	87 01       	movw	r16, r14
     966:	ff 24       	eor	r15, r15
     968:	ee 24       	eor	r14, r14
     96a:	ad a4       	ldd	r10, Y+45	; 0x2d
     96c:	be a4       	ldd	r11, Y+46	; 0x2e
     96e:	cf a4       	ldd	r12, Y+47	; 0x2f
     970:	d8 a8       	ldd	r13, Y+48	; 0x30
     972:	c6 01       	movw	r24, r12
     974:	aa 27       	eor	r26, r26
     976:	bb 27       	eor	r27, r27
     978:	57 01       	movw	r10, r14
     97a:	68 01       	movw	r12, r16
     97c:	a8 2a       	or	r10, r24
     97e:	b9 2a       	or	r11, r25
     980:	ca 2a       	or	r12, r26
     982:	db 2a       	or	r13, r27
     984:	a2 16       	cp	r10, r18
     986:	b3 06       	cpc	r11, r19
     988:	c4 06       	cpc	r12, r20
     98a:	d5 06       	cpc	r13, r21
     98c:	60 f5       	brcc	.+88     	; 0x9e6 <__stack+0x187>
     98e:	61 96       	adiw	r28, 0x11	; 17
     990:	6c ad       	ldd	r22, Y+60	; 0x3c
     992:	7d ad       	ldd	r23, Y+61	; 0x3d
     994:	8e ad       	ldd	r24, Y+62	; 0x3e
     996:	9f ad       	ldd	r25, Y+63	; 0x3f
     998:	61 97       	sbiw	r28, 0x11	; 17
     99a:	61 50       	subi	r22, 0x01	; 1
     99c:	70 40       	sbci	r23, 0x00	; 0
     99e:	80 40       	sbci	r24, 0x00	; 0
     9a0:	90 40       	sbci	r25, 0x00	; 0
     9a2:	61 96       	adiw	r28, 0x11	; 17
     9a4:	6c af       	std	Y+60, r22	; 0x3c
     9a6:	7d af       	std	Y+61, r23	; 0x3d
     9a8:	8e af       	std	Y+62, r24	; 0x3e
     9aa:	9f af       	std	Y+63, r25	; 0x3f
     9ac:	61 97       	sbiw	r28, 0x11	; 17
     9ae:	a2 0c       	add	r10, r2
     9b0:	b3 1c       	adc	r11, r3
     9b2:	c4 1c       	adc	r12, r4
     9b4:	d5 1c       	adc	r13, r5
     9b6:	a2 14       	cp	r10, r2
     9b8:	b3 04       	cpc	r11, r3
     9ba:	c4 04       	cpc	r12, r4
     9bc:	d5 04       	cpc	r13, r5
     9be:	98 f0       	brcs	.+38     	; 0x9e6 <__stack+0x187>
     9c0:	a2 16       	cp	r10, r18
     9c2:	b3 06       	cpc	r11, r19
     9c4:	c4 06       	cpc	r12, r20
     9c6:	d5 06       	cpc	r13, r21
     9c8:	70 f4       	brcc	.+28     	; 0x9e6 <__stack+0x187>
     9ca:	61 50       	subi	r22, 0x01	; 1
     9cc:	70 40       	sbci	r23, 0x00	; 0
     9ce:	80 40       	sbci	r24, 0x00	; 0
     9d0:	90 40       	sbci	r25, 0x00	; 0
     9d2:	61 96       	adiw	r28, 0x11	; 17
     9d4:	6c af       	std	Y+60, r22	; 0x3c
     9d6:	7d af       	std	Y+61, r23	; 0x3d
     9d8:	8e af       	std	Y+62, r24	; 0x3e
     9da:	9f af       	std	Y+63, r25	; 0x3f
     9dc:	61 97       	sbiw	r28, 0x11	; 17
     9de:	a2 0c       	add	r10, r2
     9e0:	b3 1c       	adc	r11, r3
     9e2:	c4 1c       	adc	r12, r4
     9e4:	d5 1c       	adc	r13, r5
     9e6:	a2 1a       	sub	r10, r18
     9e8:	b3 0a       	sbc	r11, r19
     9ea:	c4 0a       	sbc	r12, r20
     9ec:	d5 0a       	sbc	r13, r21
     9ee:	c6 01       	movw	r24, r12
     9f0:	b5 01       	movw	r22, r10
     9f2:	29 96       	adiw	r28, 0x09	; 9
     9f4:	2c ad       	ldd	r18, Y+60	; 0x3c
     9f6:	3d ad       	ldd	r19, Y+61	; 0x3d
     9f8:	4e ad       	ldd	r20, Y+62	; 0x3e
     9fa:	5f ad       	ldd	r21, Y+63	; 0x3f
     9fc:	29 97       	sbiw	r28, 0x09	; 9
     9fe:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     a02:	7b 01       	movw	r14, r22
     a04:	8c 01       	movw	r16, r24
     a06:	c6 01       	movw	r24, r12
     a08:	b5 01       	movw	r22, r10
     a0a:	29 96       	adiw	r28, 0x09	; 9
     a0c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a0e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a10:	4e ad       	ldd	r20, Y+62	; 0x3e
     a12:	5f ad       	ldd	r21, Y+63	; 0x3f
     a14:	29 97       	sbiw	r28, 0x09	; 9
     a16:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     a1a:	c9 01       	movw	r24, r18
     a1c:	da 01       	movw	r26, r20
     a1e:	5c 01       	movw	r10, r24
     a20:	6d 01       	movw	r12, r26
     a22:	c6 01       	movw	r24, r12
     a24:	b5 01       	movw	r22, r10
     a26:	2d 96       	adiw	r28, 0x0d	; 13
     a28:	2c ad       	ldd	r18, Y+60	; 0x3c
     a2a:	3d ad       	ldd	r19, Y+61	; 0x3d
     a2c:	4e ad       	ldd	r20, Y+62	; 0x3e
     a2e:	5f ad       	ldd	r21, Y+63	; 0x3f
     a30:	2d 97       	sbiw	r28, 0x0d	; 13
     a32:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     a36:	9b 01       	movw	r18, r22
     a38:	ac 01       	movw	r20, r24
     a3a:	87 01       	movw	r16, r14
     a3c:	ff 24       	eor	r15, r15
     a3e:	ee 24       	eor	r14, r14
     a40:	8d a5       	ldd	r24, Y+45	; 0x2d
     a42:	9e a5       	ldd	r25, Y+46	; 0x2e
     a44:	af a5       	ldd	r26, Y+47	; 0x2f
     a46:	b8 a9       	ldd	r27, Y+48	; 0x30
     a48:	a0 70       	andi	r26, 0x00	; 0
     a4a:	b0 70       	andi	r27, 0x00	; 0
     a4c:	e8 2a       	or	r14, r24
     a4e:	f9 2a       	or	r15, r25
     a50:	0a 2b       	or	r16, r26
     a52:	1b 2b       	or	r17, r27
     a54:	e2 16       	cp	r14, r18
     a56:	f3 06       	cpc	r15, r19
     a58:	04 07       	cpc	r16, r20
     a5a:	15 07       	cpc	r17, r21
     a5c:	c0 f4       	brcc	.+48     	; 0xa8e <__stack+0x22f>
     a5e:	08 94       	sec
     a60:	a1 08       	sbc	r10, r1
     a62:	b1 08       	sbc	r11, r1
     a64:	c1 08       	sbc	r12, r1
     a66:	d1 08       	sbc	r13, r1
     a68:	e2 0c       	add	r14, r2
     a6a:	f3 1c       	adc	r15, r3
     a6c:	04 1d       	adc	r16, r4
     a6e:	15 1d       	adc	r17, r5
     a70:	e2 14       	cp	r14, r2
     a72:	f3 04       	cpc	r15, r3
     a74:	04 05       	cpc	r16, r4
     a76:	15 05       	cpc	r17, r5
     a78:	50 f0       	brcs	.+20     	; 0xa8e <__stack+0x22f>
     a7a:	e2 16       	cp	r14, r18
     a7c:	f3 06       	cpc	r15, r19
     a7e:	04 07       	cpc	r16, r20
     a80:	15 07       	cpc	r17, r21
     a82:	28 f4       	brcc	.+10     	; 0xa8e <__stack+0x22f>
     a84:	08 94       	sec
     a86:	a1 08       	sbc	r10, r1
     a88:	b1 08       	sbc	r11, r1
     a8a:	c1 08       	sbc	r12, r1
     a8c:	d1 08       	sbc	r13, r1
     a8e:	61 96       	adiw	r28, 0x11	; 17
     a90:	ec ac       	ldd	r14, Y+60	; 0x3c
     a92:	fd ac       	ldd	r15, Y+61	; 0x3d
     a94:	0e ad       	ldd	r16, Y+62	; 0x3e
     a96:	1f ad       	ldd	r17, Y+63	; 0x3f
     a98:	61 97       	sbiw	r28, 0x11	; 17
     a9a:	d7 01       	movw	r26, r14
     a9c:	99 27       	eor	r25, r25
     a9e:	88 27       	eor	r24, r24
     aa0:	96 01       	movw	r18, r12
     aa2:	85 01       	movw	r16, r10
     aa4:	08 2b       	or	r16, r24
     aa6:	19 2b       	or	r17, r25
     aa8:	2a 2b       	or	r18, r26
     aaa:	3b 2b       	or	r19, r27
     aac:	09 ab       	std	Y+49, r16	; 0x31
     aae:	1a ab       	std	Y+50, r17	; 0x32
     ab0:	2b ab       	std	Y+51, r18	; 0x33
     ab2:	3c ab       	std	Y+52, r19	; 0x34
     ab4:	62 c2       	rjmp	.+1220   	; 0xf7a <__stack+0x71b>
     ab6:	6e 14       	cp	r6, r14
     ab8:	7f 04       	cpc	r7, r15
     aba:	80 06       	cpc	r8, r16
     abc:	91 06       	cpc	r9, r17
     abe:	08 f4       	brcc	.+2      	; 0xac2 <__stack+0x263>
     ac0:	51 c2       	rjmp	.+1186   	; 0xf64 <__stack+0x705>
     ac2:	20 e0       	ldi	r18, 0x00	; 0
     ac4:	e2 16       	cp	r14, r18
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	f2 06       	cpc	r15, r18
     aca:	21 e0       	ldi	r18, 0x01	; 1
     acc:	02 07       	cpc	r16, r18
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	12 07       	cpc	r17, r18
     ad2:	88 f4       	brcc	.+34     	; 0xaf6 <__stack+0x297>
     ad4:	3f ef       	ldi	r19, 0xFF	; 255
     ad6:	e3 16       	cp	r14, r19
     ad8:	f1 04       	cpc	r15, r1
     ada:	01 05       	cpc	r16, r1
     adc:	11 05       	cpc	r17, r1
     ade:	31 f0       	breq	.+12     	; 0xaec <__stack+0x28d>
     ae0:	28 f0       	brcs	.+10     	; 0xaec <__stack+0x28d>
     ae2:	48 e0       	ldi	r20, 0x08	; 8
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	17 c0       	rjmp	.+46     	; 0xb1a <__stack+0x2bb>
     aec:	40 e0       	ldi	r20, 0x00	; 0
     aee:	50 e0       	ldi	r21, 0x00	; 0
     af0:	60 e0       	ldi	r22, 0x00	; 0
     af2:	70 e0       	ldi	r23, 0x00	; 0
     af4:	12 c0       	rjmp	.+36     	; 0xb1a <__stack+0x2bb>
     af6:	40 e0       	ldi	r20, 0x00	; 0
     af8:	e4 16       	cp	r14, r20
     afa:	40 e0       	ldi	r20, 0x00	; 0
     afc:	f4 06       	cpc	r15, r20
     afe:	40 e0       	ldi	r20, 0x00	; 0
     b00:	04 07       	cpc	r16, r20
     b02:	41 e0       	ldi	r20, 0x01	; 1
     b04:	14 07       	cpc	r17, r20
     b06:	28 f0       	brcs	.+10     	; 0xb12 <__stack+0x2b3>
     b08:	48 e1       	ldi	r20, 0x18	; 24
     b0a:	50 e0       	ldi	r21, 0x00	; 0
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	04 c0       	rjmp	.+8      	; 0xb1a <__stack+0x2bb>
     b12:	40 e1       	ldi	r20, 0x10	; 16
     b14:	50 e0       	ldi	r21, 0x00	; 0
     b16:	60 e0       	ldi	r22, 0x00	; 0
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	d8 01       	movw	r26, r16
     b1c:	c7 01       	movw	r24, r14
     b1e:	04 2e       	mov	r0, r20
     b20:	04 c0       	rjmp	.+8      	; 0xb2a <__stack+0x2cb>
     b22:	b6 95       	lsr	r27
     b24:	a7 95       	ror	r26
     b26:	97 95       	ror	r25
     b28:	87 95       	ror	r24
     b2a:	0a 94       	dec	r0
     b2c:	d2 f7       	brpl	.-12     	; 0xb22 <__stack+0x2c3>
     b2e:	80 58       	subi	r24, 0x80	; 128
     b30:	9f 4f       	sbci	r25, 0xFF	; 255
     b32:	dc 01       	movw	r26, r24
     b34:	2c 91       	ld	r18, X
     b36:	30 e2       	ldi	r19, 0x20	; 32
     b38:	a3 2e       	mov	r10, r19
     b3a:	b1 2c       	mov	r11, r1
     b3c:	c1 2c       	mov	r12, r1
     b3e:	d1 2c       	mov	r13, r1
     b40:	d6 01       	movw	r26, r12
     b42:	c5 01       	movw	r24, r10
     b44:	84 1b       	sub	r24, r20
     b46:	95 0b       	sbc	r25, r21
     b48:	a6 0b       	sbc	r26, r22
     b4a:	b7 0b       	sbc	r27, r23
     b4c:	82 1b       	sub	r24, r18
     b4e:	91 09       	sbc	r25, r1
     b50:	a1 09       	sbc	r26, r1
     b52:	b1 09       	sbc	r27, r1
     b54:	00 97       	sbiw	r24, 0x00	; 0
     b56:	a1 05       	cpc	r26, r1
     b58:	b1 05       	cpc	r27, r1
     b5a:	89 f4       	brne	.+34     	; 0xb7e <__stack+0x31f>
     b5c:	e6 14       	cp	r14, r6
     b5e:	f7 04       	cpc	r15, r7
     b60:	08 05       	cpc	r16, r8
     b62:	19 05       	cpc	r17, r9
     b64:	08 f4       	brcc	.+2      	; 0xb68 <__stack+0x309>
     b66:	f2 c1       	rjmp	.+996    	; 0xf4c <__stack+0x6ed>
     b68:	6d a4       	ldd	r6, Y+45	; 0x2d
     b6a:	7e a4       	ldd	r7, Y+46	; 0x2e
     b6c:	8f a4       	ldd	r8, Y+47	; 0x2f
     b6e:	98 a8       	ldd	r9, Y+48	; 0x30
     b70:	62 14       	cp	r6, r2
     b72:	73 04       	cpc	r7, r3
     b74:	84 04       	cpc	r8, r4
     b76:	95 04       	cpc	r9, r5
     b78:	08 f0       	brcs	.+2      	; 0xb7c <__stack+0x31d>
     b7a:	e8 c1       	rjmp	.+976    	; 0xf4c <__stack+0x6ed>
     b7c:	f3 c1       	rjmp	.+998    	; 0xf64 <__stack+0x705>
     b7e:	6e 96       	adiw	r28, 0x1e	; 30
     b80:	8f af       	std	Y+63, r24	; 0x3f
     b82:	6e 97       	sbiw	r28, 0x1e	; 30
     b84:	08 2e       	mov	r0, r24
     b86:	04 c0       	rjmp	.+8      	; 0xb90 <__stack+0x331>
     b88:	ee 0c       	add	r14, r14
     b8a:	ff 1c       	adc	r15, r15
     b8c:	00 1f       	adc	r16, r16
     b8e:	11 1f       	adc	r17, r17
     b90:	0a 94       	dec	r0
     b92:	d2 f7       	brpl	.-12     	; 0xb88 <__stack+0x329>
     b94:	6a 2d       	mov	r22, r10
     b96:	68 1b       	sub	r22, r24
     b98:	d2 01       	movw	r26, r4
     b9a:	c1 01       	movw	r24, r2
     b9c:	06 2e       	mov	r0, r22
     b9e:	04 c0       	rjmp	.+8      	; 0xba8 <__stack+0x349>
     ba0:	b6 95       	lsr	r27
     ba2:	a7 95       	ror	r26
     ba4:	97 95       	ror	r25
     ba6:	87 95       	ror	r24
     ba8:	0a 94       	dec	r0
     baa:	d2 f7       	brpl	.-12     	; 0xba0 <__stack+0x341>
     bac:	5c 01       	movw	r10, r24
     bae:	6d 01       	movw	r12, r26
     bb0:	ae 28       	or	r10, r14
     bb2:	bf 28       	or	r11, r15
     bb4:	c0 2a       	or	r12, r16
     bb6:	d1 2a       	or	r13, r17
     bb8:	ad a2       	std	Y+37, r10	; 0x25
     bba:	be a2       	std	Y+38, r11	; 0x26
     bbc:	cf a2       	std	Y+39, r12	; 0x27
     bbe:	d8 a6       	std	Y+40, r13	; 0x28
     bc0:	72 01       	movw	r14, r4
     bc2:	61 01       	movw	r12, r2
     bc4:	6e 96       	adiw	r28, 0x1e	; 30
     bc6:	0f ac       	ldd	r0, Y+63	; 0x3f
     bc8:	6e 97       	sbiw	r28, 0x1e	; 30
     bca:	04 c0       	rjmp	.+8      	; 0xbd4 <__stack+0x375>
     bcc:	cc 0c       	add	r12, r12
     bce:	dd 1c       	adc	r13, r13
     bd0:	ee 1c       	adc	r14, r14
     bd2:	ff 1c       	adc	r15, r15
     bd4:	0a 94       	dec	r0
     bd6:	d2 f7       	brpl	.-12     	; 0xbcc <__stack+0x36d>
     bd8:	c9 a2       	std	Y+33, r12	; 0x21
     bda:	da a2       	std	Y+34, r13	; 0x22
     bdc:	eb a2       	std	Y+35, r14	; 0x23
     bde:	fc a2       	std	Y+36, r15	; 0x24
     be0:	64 01       	movw	r12, r8
     be2:	53 01       	movw	r10, r6
     be4:	06 2e       	mov	r0, r22
     be6:	04 c0       	rjmp	.+8      	; 0xbf0 <__stack+0x391>
     be8:	d6 94       	lsr	r13
     bea:	c7 94       	ror	r12
     bec:	b7 94       	ror	r11
     bee:	a7 94       	ror	r10
     bf0:	0a 94       	dec	r0
     bf2:	d2 f7       	brpl	.-12     	; 0xbe8 <__stack+0x389>
     bf4:	d4 01       	movw	r26, r8
     bf6:	c3 01       	movw	r24, r6
     bf8:	6e 96       	adiw	r28, 0x1e	; 30
     bfa:	0f ac       	ldd	r0, Y+63	; 0x3f
     bfc:	6e 97       	sbiw	r28, 0x1e	; 30
     bfe:	04 c0       	rjmp	.+8      	; 0xc08 <__stack+0x3a9>
     c00:	88 0f       	add	r24, r24
     c02:	99 1f       	adc	r25, r25
     c04:	aa 1f       	adc	r26, r26
     c06:	bb 1f       	adc	r27, r27
     c08:	0a 94       	dec	r0
     c0a:	d2 f7       	brpl	.-12     	; 0xc00 <__stack+0x3a1>
     c0c:	ed a4       	ldd	r14, Y+45	; 0x2d
     c0e:	fe a4       	ldd	r15, Y+46	; 0x2e
     c10:	0f a5       	ldd	r16, Y+47	; 0x2f
     c12:	18 a9       	ldd	r17, Y+48	; 0x30
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <__stack+0x3bf>
     c16:	16 95       	lsr	r17
     c18:	07 95       	ror	r16
     c1a:	f7 94       	ror	r15
     c1c:	e7 94       	ror	r14
     c1e:	6a 95       	dec	r22
     c20:	d2 f7       	brpl	.-12     	; 0xc16 <__stack+0x3b7>
     c22:	37 01       	movw	r6, r14
     c24:	48 01       	movw	r8, r16
     c26:	68 2a       	or	r6, r24
     c28:	79 2a       	or	r7, r25
     c2a:	8a 2a       	or	r8, r26
     c2c:	9b 2a       	or	r9, r27
     c2e:	6d 8e       	std	Y+29, r6	; 0x1d
     c30:	7e 8e       	std	Y+30, r7	; 0x1e
     c32:	8f 8e       	std	Y+31, r8	; 0x1f
     c34:	98 a2       	std	Y+32, r9	; 0x20
     c36:	ed a0       	ldd	r14, Y+37	; 0x25
     c38:	fe a0       	ldd	r15, Y+38	; 0x26
     c3a:	0f a1       	ldd	r16, Y+39	; 0x27
     c3c:	18 a5       	ldd	r17, Y+40	; 0x28
     c3e:	38 01       	movw	r6, r16
     c40:	88 24       	eor	r8, r8
     c42:	99 24       	eor	r9, r9
     c44:	98 01       	movw	r18, r16
     c46:	87 01       	movw	r16, r14
     c48:	20 70       	andi	r18, 0x00	; 0
     c4a:	30 70       	andi	r19, 0x00	; 0
     c4c:	65 96       	adiw	r28, 0x15	; 21
     c4e:	0c af       	std	Y+60, r16	; 0x3c
     c50:	1d af       	std	Y+61, r17	; 0x3d
     c52:	2e af       	std	Y+62, r18	; 0x3e
     c54:	3f af       	std	Y+63, r19	; 0x3f
     c56:	65 97       	sbiw	r28, 0x15	; 21
     c58:	c6 01       	movw	r24, r12
     c5a:	b5 01       	movw	r22, r10
     c5c:	a4 01       	movw	r20, r8
     c5e:	93 01       	movw	r18, r6
     c60:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     c64:	7b 01       	movw	r14, r22
     c66:	8c 01       	movw	r16, r24
     c68:	c6 01       	movw	r24, r12
     c6a:	b5 01       	movw	r22, r10
     c6c:	a4 01       	movw	r20, r8
     c6e:	93 01       	movw	r18, r6
     c70:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     c74:	c9 01       	movw	r24, r18
     c76:	da 01       	movw	r26, r20
     c78:	1c 01       	movw	r2, r24
     c7a:	2d 01       	movw	r4, r26
     c7c:	c2 01       	movw	r24, r4
     c7e:	b1 01       	movw	r22, r2
     c80:	65 96       	adiw	r28, 0x15	; 21
     c82:	2c ad       	ldd	r18, Y+60	; 0x3c
     c84:	3d ad       	ldd	r19, Y+61	; 0x3d
     c86:	4e ad       	ldd	r20, Y+62	; 0x3e
     c88:	5f ad       	ldd	r21, Y+63	; 0x3f
     c8a:	65 97       	sbiw	r28, 0x15	; 21
     c8c:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     c90:	9b 01       	movw	r18, r22
     c92:	ac 01       	movw	r20, r24
     c94:	87 01       	movw	r16, r14
     c96:	ff 24       	eor	r15, r15
     c98:	ee 24       	eor	r14, r14
     c9a:	ad 8c       	ldd	r10, Y+29	; 0x1d
     c9c:	be 8c       	ldd	r11, Y+30	; 0x1e
     c9e:	cf 8c       	ldd	r12, Y+31	; 0x1f
     ca0:	d8 a0       	ldd	r13, Y+32	; 0x20
     ca2:	c6 01       	movw	r24, r12
     ca4:	aa 27       	eor	r26, r26
     ca6:	bb 27       	eor	r27, r27
     ca8:	57 01       	movw	r10, r14
     caa:	68 01       	movw	r12, r16
     cac:	a8 2a       	or	r10, r24
     cae:	b9 2a       	or	r11, r25
     cb0:	ca 2a       	or	r12, r26
     cb2:	db 2a       	or	r13, r27
     cb4:	a2 16       	cp	r10, r18
     cb6:	b3 06       	cpc	r11, r19
     cb8:	c4 06       	cpc	r12, r20
     cba:	d5 06       	cpc	r13, r21
     cbc:	00 f5       	brcc	.+64     	; 0xcfe <__stack+0x49f>
     cbe:	08 94       	sec
     cc0:	21 08       	sbc	r2, r1
     cc2:	31 08       	sbc	r3, r1
     cc4:	41 08       	sbc	r4, r1
     cc6:	51 08       	sbc	r5, r1
     cc8:	ed a0       	ldd	r14, Y+37	; 0x25
     cca:	fe a0       	ldd	r15, Y+38	; 0x26
     ccc:	0f a1       	ldd	r16, Y+39	; 0x27
     cce:	18 a5       	ldd	r17, Y+40	; 0x28
     cd0:	ae 0c       	add	r10, r14
     cd2:	bf 1c       	adc	r11, r15
     cd4:	c0 1e       	adc	r12, r16
     cd6:	d1 1e       	adc	r13, r17
     cd8:	ae 14       	cp	r10, r14
     cda:	bf 04       	cpc	r11, r15
     cdc:	c0 06       	cpc	r12, r16
     cde:	d1 06       	cpc	r13, r17
     ce0:	70 f0       	brcs	.+28     	; 0xcfe <__stack+0x49f>
     ce2:	a2 16       	cp	r10, r18
     ce4:	b3 06       	cpc	r11, r19
     ce6:	c4 06       	cpc	r12, r20
     ce8:	d5 06       	cpc	r13, r21
     cea:	48 f4       	brcc	.+18     	; 0xcfe <__stack+0x49f>
     cec:	08 94       	sec
     cee:	21 08       	sbc	r2, r1
     cf0:	31 08       	sbc	r3, r1
     cf2:	41 08       	sbc	r4, r1
     cf4:	51 08       	sbc	r5, r1
     cf6:	ae 0c       	add	r10, r14
     cf8:	bf 1c       	adc	r11, r15
     cfa:	c0 1e       	adc	r12, r16
     cfc:	d1 1e       	adc	r13, r17
     cfe:	a2 1a       	sub	r10, r18
     d00:	b3 0a       	sbc	r11, r19
     d02:	c4 0a       	sbc	r12, r20
     d04:	d5 0a       	sbc	r13, r21
     d06:	c6 01       	movw	r24, r12
     d08:	b5 01       	movw	r22, r10
     d0a:	a4 01       	movw	r20, r8
     d0c:	93 01       	movw	r18, r6
     d0e:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     d12:	7b 01       	movw	r14, r22
     d14:	8c 01       	movw	r16, r24
     d16:	c6 01       	movw	r24, r12
     d18:	b5 01       	movw	r22, r10
     d1a:	a4 01       	movw	r20, r8
     d1c:	93 01       	movw	r18, r6
     d1e:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
     d22:	c9 01       	movw	r24, r18
     d24:	da 01       	movw	r26, r20
     d26:	3c 01       	movw	r6, r24
     d28:	4d 01       	movw	r8, r26
     d2a:	c4 01       	movw	r24, r8
     d2c:	b3 01       	movw	r22, r6
     d2e:	65 96       	adiw	r28, 0x15	; 21
     d30:	2c ad       	ldd	r18, Y+60	; 0x3c
     d32:	3d ad       	ldd	r19, Y+61	; 0x3d
     d34:	4e ad       	ldd	r20, Y+62	; 0x3e
     d36:	5f ad       	ldd	r21, Y+63	; 0x3f
     d38:	65 97       	sbiw	r28, 0x15	; 21
     d3a:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     d3e:	9b 01       	movw	r18, r22
     d40:	ac 01       	movw	r20, r24
     d42:	87 01       	movw	r16, r14
     d44:	ff 24       	eor	r15, r15
     d46:	ee 24       	eor	r14, r14
     d48:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d4a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     d4c:	af 8d       	ldd	r26, Y+31	; 0x1f
     d4e:	b8 a1       	ldd	r27, Y+32	; 0x20
     d50:	a0 70       	andi	r26, 0x00	; 0
     d52:	b0 70       	andi	r27, 0x00	; 0
     d54:	57 01       	movw	r10, r14
     d56:	68 01       	movw	r12, r16
     d58:	a8 2a       	or	r10, r24
     d5a:	b9 2a       	or	r11, r25
     d5c:	ca 2a       	or	r12, r26
     d5e:	db 2a       	or	r13, r27
     d60:	a2 16       	cp	r10, r18
     d62:	b3 06       	cpc	r11, r19
     d64:	c4 06       	cpc	r12, r20
     d66:	d5 06       	cpc	r13, r21
     d68:	00 f5       	brcc	.+64     	; 0xdaa <__stack+0x54b>
     d6a:	08 94       	sec
     d6c:	61 08       	sbc	r6, r1
     d6e:	71 08       	sbc	r7, r1
     d70:	81 08       	sbc	r8, r1
     d72:	91 08       	sbc	r9, r1
     d74:	6d a1       	ldd	r22, Y+37	; 0x25
     d76:	7e a1       	ldd	r23, Y+38	; 0x26
     d78:	8f a1       	ldd	r24, Y+39	; 0x27
     d7a:	98 a5       	ldd	r25, Y+40	; 0x28
     d7c:	a6 0e       	add	r10, r22
     d7e:	b7 1e       	adc	r11, r23
     d80:	c8 1e       	adc	r12, r24
     d82:	d9 1e       	adc	r13, r25
     d84:	a6 16       	cp	r10, r22
     d86:	b7 06       	cpc	r11, r23
     d88:	c8 06       	cpc	r12, r24
     d8a:	d9 06       	cpc	r13, r25
     d8c:	70 f0       	brcs	.+28     	; 0xdaa <__stack+0x54b>
     d8e:	a2 16       	cp	r10, r18
     d90:	b3 06       	cpc	r11, r19
     d92:	c4 06       	cpc	r12, r20
     d94:	d5 06       	cpc	r13, r21
     d96:	48 f4       	brcc	.+18     	; 0xdaa <__stack+0x54b>
     d98:	08 94       	sec
     d9a:	61 08       	sbc	r6, r1
     d9c:	71 08       	sbc	r7, r1
     d9e:	81 08       	sbc	r8, r1
     da0:	91 08       	sbc	r9, r1
     da2:	a6 0e       	add	r10, r22
     da4:	b7 1e       	adc	r11, r23
     da6:	c8 1e       	adc	r12, r24
     da8:	d9 1e       	adc	r13, r25
     daa:	d6 01       	movw	r26, r12
     dac:	c5 01       	movw	r24, r10
     dae:	82 1b       	sub	r24, r18
     db0:	93 0b       	sbc	r25, r19
     db2:	a4 0b       	sbc	r26, r20
     db4:	b5 0b       	sbc	r27, r21
     db6:	89 8f       	std	Y+25, r24	; 0x19
     db8:	9a 8f       	std	Y+26, r25	; 0x1a
     dba:	ab 8f       	std	Y+27, r26	; 0x1b
     dbc:	bc 8f       	std	Y+28, r27	; 0x1c
     dbe:	d1 01       	movw	r26, r2
     dc0:	99 27       	eor	r25, r25
     dc2:	88 27       	eor	r24, r24
     dc4:	64 01       	movw	r12, r8
     dc6:	53 01       	movw	r10, r6
     dc8:	a8 2a       	or	r10, r24
     dca:	b9 2a       	or	r11, r25
     dcc:	ca 2a       	or	r12, r26
     dce:	db 2a       	or	r13, r27
     dd0:	a9 aa       	std	Y+49, r10	; 0x31
     dd2:	ba aa       	std	Y+50, r11	; 0x32
     dd4:	cb aa       	std	Y+51, r12	; 0x33
     dd6:	dc aa       	std	Y+52, r13	; 0x34
     dd8:	86 01       	movw	r16, r12
     dda:	75 01       	movw	r14, r10
     ddc:	2f ef       	ldi	r18, 0xFF	; 255
     dde:	3f ef       	ldi	r19, 0xFF	; 255
     de0:	40 e0       	ldi	r20, 0x00	; 0
     de2:	50 e0       	ldi	r21, 0x00	; 0
     de4:	e2 22       	and	r14, r18
     de6:	f3 22       	and	r15, r19
     de8:	04 23       	and	r16, r20
     dea:	15 23       	and	r17, r21
     dec:	a6 01       	movw	r20, r12
     dee:	66 27       	eor	r22, r22
     df0:	77 27       	eor	r23, r23
     df2:	6d 96       	adiw	r28, 0x1d	; 29
     df4:	4c af       	std	Y+60, r20	; 0x3c
     df6:	5d af       	std	Y+61, r21	; 0x3d
     df8:	6e af       	std	Y+62, r22	; 0x3e
     dfa:	7f af       	std	Y+63, r23	; 0x3f
     dfc:	6d 97       	sbiw	r28, 0x1d	; 29
     dfe:	a9 a0       	ldd	r10, Y+33	; 0x21
     e00:	ba a0       	ldd	r11, Y+34	; 0x22
     e02:	cb a0       	ldd	r12, Y+35	; 0x23
     e04:	dc a0       	ldd	r13, Y+36	; 0x24
     e06:	6f ef       	ldi	r22, 0xFF	; 255
     e08:	7f ef       	ldi	r23, 0xFF	; 255
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	a6 22       	and	r10, r22
     e10:	b7 22       	and	r11, r23
     e12:	c8 22       	and	r12, r24
     e14:	d9 22       	and	r13, r25
     e16:	89 a1       	ldd	r24, Y+33	; 0x21
     e18:	9a a1       	ldd	r25, Y+34	; 0x22
     e1a:	ab a1       	ldd	r26, Y+35	; 0x23
     e1c:	bc a1       	ldd	r27, Y+36	; 0x24
     e1e:	1d 01       	movw	r2, r26
     e20:	44 24       	eor	r4, r4
     e22:	55 24       	eor	r5, r5
     e24:	c8 01       	movw	r24, r16
     e26:	b7 01       	movw	r22, r14
     e28:	a6 01       	movw	r20, r12
     e2a:	95 01       	movw	r18, r10
     e2c:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     e30:	69 96       	adiw	r28, 0x19	; 25
     e32:	6c af       	std	Y+60, r22	; 0x3c
     e34:	7d af       	std	Y+61, r23	; 0x3d
     e36:	8e af       	std	Y+62, r24	; 0x3e
     e38:	9f af       	std	Y+63, r25	; 0x3f
     e3a:	69 97       	sbiw	r28, 0x19	; 25
     e3c:	c8 01       	movw	r24, r16
     e3e:	b7 01       	movw	r22, r14
     e40:	a2 01       	movw	r20, r4
     e42:	91 01       	movw	r18, r2
     e44:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     e48:	3b 01       	movw	r6, r22
     e4a:	4c 01       	movw	r8, r24
     e4c:	6d 96       	adiw	r28, 0x1d	; 29
     e4e:	6c ad       	ldd	r22, Y+60	; 0x3c
     e50:	7d ad       	ldd	r23, Y+61	; 0x3d
     e52:	8e ad       	ldd	r24, Y+62	; 0x3e
     e54:	9f ad       	ldd	r25, Y+63	; 0x3f
     e56:	6d 97       	sbiw	r28, 0x1d	; 29
     e58:	a6 01       	movw	r20, r12
     e5a:	95 01       	movw	r18, r10
     e5c:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     e60:	7b 01       	movw	r14, r22
     e62:	8c 01       	movw	r16, r24
     e64:	6d 96       	adiw	r28, 0x1d	; 29
     e66:	6c ad       	ldd	r22, Y+60	; 0x3c
     e68:	7d ad       	ldd	r23, Y+61	; 0x3d
     e6a:	8e ad       	ldd	r24, Y+62	; 0x3e
     e6c:	9f ad       	ldd	r25, Y+63	; 0x3f
     e6e:	6d 97       	sbiw	r28, 0x1d	; 29
     e70:	a2 01       	movw	r20, r4
     e72:	91 01       	movw	r18, r2
     e74:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
     e78:	5b 01       	movw	r10, r22
     e7a:	6c 01       	movw	r12, r24
     e7c:	a8 01       	movw	r20, r16
     e7e:	97 01       	movw	r18, r14
     e80:	26 0d       	add	r18, r6
     e82:	37 1d       	adc	r19, r7
     e84:	48 1d       	adc	r20, r8
     e86:	59 1d       	adc	r21, r9
     e88:	69 96       	adiw	r28, 0x19	; 25
     e8a:	6c ac       	ldd	r6, Y+60	; 0x3c
     e8c:	7d ac       	ldd	r7, Y+61	; 0x3d
     e8e:	8e ac       	ldd	r8, Y+62	; 0x3e
     e90:	9f ac       	ldd	r9, Y+63	; 0x3f
     e92:	69 97       	sbiw	r28, 0x19	; 25
     e94:	c4 01       	movw	r24, r8
     e96:	aa 27       	eor	r26, r26
     e98:	bb 27       	eor	r27, r27
     e9a:	28 0f       	add	r18, r24
     e9c:	39 1f       	adc	r19, r25
     e9e:	4a 1f       	adc	r20, r26
     ea0:	5b 1f       	adc	r21, r27
     ea2:	2e 15       	cp	r18, r14
     ea4:	3f 05       	cpc	r19, r15
     ea6:	40 07       	cpc	r20, r16
     ea8:	51 07       	cpc	r21, r17
     eaa:	48 f4       	brcc	.+18     	; 0xebe <__stack+0x65f>
     eac:	e1 2c       	mov	r14, r1
     eae:	f1 2c       	mov	r15, r1
     eb0:	61 e0       	ldi	r22, 0x01	; 1
     eb2:	06 2f       	mov	r16, r22
     eb4:	11 2d       	mov	r17, r1
     eb6:	ae 0c       	add	r10, r14
     eb8:	bf 1c       	adc	r11, r15
     eba:	c0 1e       	adc	r12, r16
     ebc:	d1 1e       	adc	r13, r17
     ebe:	ca 01       	movw	r24, r20
     ec0:	aa 27       	eor	r26, r26
     ec2:	bb 27       	eor	r27, r27
     ec4:	bc 01       	movw	r22, r24
     ec6:	cd 01       	movw	r24, r26
     ec8:	6a 0d       	add	r22, r10
     eca:	7b 1d       	adc	r23, r11
     ecc:	8c 1d       	adc	r24, r12
     ece:	9d 1d       	adc	r25, r13
     ed0:	69 8c       	ldd	r6, Y+25	; 0x19
     ed2:	7a 8c       	ldd	r7, Y+26	; 0x1a
     ed4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     ed6:	9c 8c       	ldd	r9, Y+28	; 0x1c
     ed8:	66 16       	cp	r6, r22
     eda:	77 06       	cpc	r7, r23
     edc:	88 06       	cpc	r8, r24
     ede:	99 06       	cpc	r9, r25
     ee0:	40 f1       	brcs	.+80     	; 0xf32 <__stack+0x6d3>
     ee2:	66 15       	cp	r22, r6
     ee4:	77 05       	cpc	r23, r7
     ee6:	88 05       	cpc	r24, r8
     ee8:	99 05       	cpc	r25, r9
     eea:	09 f0       	breq	.+2      	; 0xeee <__stack+0x68f>
     eec:	43 c0       	rjmp	.+134    	; 0xf74 <__stack+0x715>
     eee:	d9 01       	movw	r26, r18
     ef0:	99 27       	eor	r25, r25
     ef2:	88 27       	eor	r24, r24
     ef4:	69 96       	adiw	r28, 0x19	; 25
     ef6:	2c ad       	ldd	r18, Y+60	; 0x3c
     ef8:	3d ad       	ldd	r19, Y+61	; 0x3d
     efa:	4e ad       	ldd	r20, Y+62	; 0x3e
     efc:	5f ad       	ldd	r21, Y+63	; 0x3f
     efe:	69 97       	sbiw	r28, 0x19	; 25
     f00:	40 70       	andi	r20, 0x00	; 0
     f02:	50 70       	andi	r21, 0x00	; 0
     f04:	82 0f       	add	r24, r18
     f06:	93 1f       	adc	r25, r19
     f08:	a4 1f       	adc	r26, r20
     f0a:	b5 1f       	adc	r27, r21
     f0c:	2d a5       	ldd	r18, Y+45	; 0x2d
     f0e:	3e a5       	ldd	r19, Y+46	; 0x2e
     f10:	4f a5       	ldd	r20, Y+47	; 0x2f
     f12:	58 a9       	ldd	r21, Y+48	; 0x30
     f14:	6e 96       	adiw	r28, 0x1e	; 30
     f16:	0f ac       	ldd	r0, Y+63	; 0x3f
     f18:	6e 97       	sbiw	r28, 0x1e	; 30
     f1a:	04 c0       	rjmp	.+8      	; 0xf24 <__stack+0x6c5>
     f1c:	22 0f       	add	r18, r18
     f1e:	33 1f       	adc	r19, r19
     f20:	44 1f       	adc	r20, r20
     f22:	55 1f       	adc	r21, r21
     f24:	0a 94       	dec	r0
     f26:	d2 f7       	brpl	.-12     	; 0xf1c <__stack+0x6bd>
     f28:	28 17       	cp	r18, r24
     f2a:	39 07       	cpc	r19, r25
     f2c:	4a 07       	cpc	r20, r26
     f2e:	5b 07       	cpc	r21, r27
     f30:	08 f5       	brcc	.+66     	; 0xf74 <__stack+0x715>
     f32:	09 a9       	ldd	r16, Y+49	; 0x31
     f34:	1a a9       	ldd	r17, Y+50	; 0x32
     f36:	2b a9       	ldd	r18, Y+51	; 0x33
     f38:	3c a9       	ldd	r19, Y+52	; 0x34
     f3a:	01 50       	subi	r16, 0x01	; 1
     f3c:	10 40       	sbci	r17, 0x00	; 0
     f3e:	20 40       	sbci	r18, 0x00	; 0
     f40:	30 40       	sbci	r19, 0x00	; 0
     f42:	09 ab       	std	Y+49, r16	; 0x31
     f44:	1a ab       	std	Y+50, r17	; 0x32
     f46:	2b ab       	std	Y+51, r18	; 0x33
     f48:	3c ab       	std	Y+52, r19	; 0x34
     f4a:	14 c0       	rjmp	.+40     	; 0xf74 <__stack+0x715>
     f4c:	66 24       	eor	r6, r6
     f4e:	77 24       	eor	r7, r7
     f50:	43 01       	movw	r8, r6
     f52:	21 e0       	ldi	r18, 0x01	; 1
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	40 e0       	ldi	r20, 0x00	; 0
     f58:	50 e0       	ldi	r21, 0x00	; 0
     f5a:	29 ab       	std	Y+49, r18	; 0x31
     f5c:	3a ab       	std	Y+50, r19	; 0x32
     f5e:	4b ab       	std	Y+51, r20	; 0x33
     f60:	5c ab       	std	Y+52, r21	; 0x34
     f62:	0b c0       	rjmp	.+22     	; 0xf7a <__stack+0x71b>
     f64:	66 24       	eor	r6, r6
     f66:	77 24       	eor	r7, r7
     f68:	43 01       	movw	r8, r6
     f6a:	19 aa       	std	Y+49, r1	; 0x31
     f6c:	1a aa       	std	Y+50, r1	; 0x32
     f6e:	1b aa       	std	Y+51, r1	; 0x33
     f70:	1c aa       	std	Y+52, r1	; 0x34
     f72:	03 c0       	rjmp	.+6      	; 0xf7a <__stack+0x71b>
     f74:	66 24       	eor	r6, r6
     f76:	77 24       	eor	r7, r7
     f78:	43 01       	movw	r8, r6
     f7a:	fe 01       	movw	r30, r28
     f7c:	71 96       	adiw	r30, 0x11	; 17
     f7e:	88 e0       	ldi	r24, 0x08	; 8
     f80:	df 01       	movw	r26, r30
     f82:	1d 92       	st	X+, r1
     f84:	8a 95       	dec	r24
     f86:	e9 f7       	brne	.-6      	; 0xf82 <__stack+0x723>
     f88:	a9 a8       	ldd	r10, Y+49	; 0x31
     f8a:	ba a8       	ldd	r11, Y+50	; 0x32
     f8c:	cb a8       	ldd	r12, Y+51	; 0x33
     f8e:	dc a8       	ldd	r13, Y+52	; 0x34
     f90:	a9 8a       	std	Y+17, r10	; 0x11
     f92:	ba 8a       	std	Y+18, r11	; 0x12
     f94:	cb 8a       	std	Y+19, r12	; 0x13
     f96:	dc 8a       	std	Y+20, r13	; 0x14
     f98:	6d 8a       	std	Y+21, r6	; 0x15
     f9a:	7e 8a       	std	Y+22, r7	; 0x16
     f9c:	8f 8a       	std	Y+23, r8	; 0x17
     f9e:	98 8e       	std	Y+24, r9	; 0x18
     fa0:	29 a9       	ldd	r18, Y+49	; 0x31
     fa2:	3a 89       	ldd	r19, Y+18	; 0x12
     fa4:	4b 89       	ldd	r20, Y+19	; 0x13
     fa6:	5c 89       	ldd	r21, Y+20	; 0x14
     fa8:	66 2d       	mov	r22, r6
     faa:	7e 89       	ldd	r23, Y+22	; 0x16
     fac:	8f 89       	ldd	r24, Y+23	; 0x17
     fae:	98 8d       	ldd	r25, Y+24	; 0x18
     fb0:	c2 5a       	subi	r28, 0xA2	; 162
     fb2:	df 4f       	sbci	r29, 0xFF	; 255
     fb4:	e2 e1       	ldi	r30, 0x12	; 18
     fb6:	0c 94 0a 29 	jmp	0x5214	; 0x5214 <__epilogue_restores__>

00000fba <__umoddi3>:
     fba:	ab e5       	ldi	r26, 0x5B	; 91
     fbc:	b0 e0       	ldi	r27, 0x00	; 0
     fbe:	e3 ee       	ldi	r30, 0xE3	; 227
     fc0:	f7 e0       	ldi	r31, 0x07	; 7
     fc2:	0c 94 ee 28 	jmp	0x51dc	; 0x51dc <__prologue_saves__>
     fc6:	a8 e0       	ldi	r26, 0x08	; 8
     fc8:	4e 01       	movw	r8, r28
     fca:	08 94       	sec
     fcc:	81 1c       	adc	r8, r1
     fce:	91 1c       	adc	r9, r1
     fd0:	f4 01       	movw	r30, r8
     fd2:	6a 2e       	mov	r6, r26
     fd4:	11 92       	st	Z+, r1
     fd6:	6a 94       	dec	r6
     fd8:	e9 f7       	brne	.-6      	; 0xfd4 <__umoddi3+0x1a>
     fda:	29 83       	std	Y+1, r18	; 0x01
     fdc:	3a 83       	std	Y+2, r19	; 0x02
     fde:	4b 83       	std	Y+3, r20	; 0x03
     fe0:	5c 83       	std	Y+4, r21	; 0x04
     fe2:	6d 83       	std	Y+5, r22	; 0x05
     fe4:	7e 83       	std	Y+6, r23	; 0x06
     fe6:	8f 83       	std	Y+7, r24	; 0x07
     fe8:	98 87       	std	Y+8, r25	; 0x08
     fea:	ce 01       	movw	r24, r28
     fec:	09 96       	adiw	r24, 0x09	; 9
     fee:	fc 01       	movw	r30, r24
     ff0:	11 92       	st	Z+, r1
     ff2:	aa 95       	dec	r26
     ff4:	e9 f7       	brne	.-6      	; 0xff0 <__umoddi3+0x36>
     ff6:	a9 86       	std	Y+9, r10	; 0x09
     ff8:	ba 86       	std	Y+10, r11	; 0x0a
     ffa:	cb 86       	std	Y+11, r12	; 0x0b
     ffc:	dc 86       	std	Y+12, r13	; 0x0c
     ffe:	ed 86       	std	Y+13, r14	; 0x0d
    1000:	fe 86       	std	Y+14, r15	; 0x0e
    1002:	0f 87       	std	Y+15, r16	; 0x0f
    1004:	18 8b       	std	Y+16, r17	; 0x10
    1006:	29 84       	ldd	r2, Y+9	; 0x09
    1008:	3a 84       	ldd	r3, Y+10	; 0x0a
    100a:	4b 84       	ldd	r4, Y+11	; 0x0b
    100c:	5c 84       	ldd	r5, Y+12	; 0x0c
    100e:	ad 84       	ldd	r10, Y+13	; 0x0d
    1010:	be 84       	ldd	r11, Y+14	; 0x0e
    1012:	cf 84       	ldd	r12, Y+15	; 0x0f
    1014:	d8 88       	ldd	r13, Y+16	; 0x10
    1016:	29 81       	ldd	r18, Y+1	; 0x01
    1018:	3a 81       	ldd	r19, Y+2	; 0x02
    101a:	4b 81       	ldd	r20, Y+3	; 0x03
    101c:	5c 81       	ldd	r21, Y+4	; 0x04
    101e:	69 96       	adiw	r28, 0x19	; 25
    1020:	2f af       	std	Y+63, r18	; 0x3f
    1022:	69 97       	sbiw	r28, 0x19	; 25
    1024:	6a 96       	adiw	r28, 0x1a	; 26
    1026:	3f af       	std	Y+63, r19	; 0x3f
    1028:	6a 97       	sbiw	r28, 0x1a	; 26
    102a:	6b 96       	adiw	r28, 0x1b	; 27
    102c:	4f af       	std	Y+63, r20	; 0x3f
    102e:	6b 97       	sbiw	r28, 0x1b	; 27
    1030:	6c 96       	adiw	r28, 0x1c	; 28
    1032:	5f af       	std	Y+63, r21	; 0x3f
    1034:	6c 97       	sbiw	r28, 0x1c	; 28
    1036:	6c 96       	adiw	r28, 0x1c	; 28
    1038:	6c ac       	ldd	r6, Y+60	; 0x3c
    103a:	7d ac       	ldd	r7, Y+61	; 0x3d
    103c:	8e ac       	ldd	r8, Y+62	; 0x3e
    103e:	9f ac       	ldd	r9, Y+63	; 0x3f
    1040:	6c 97       	sbiw	r28, 0x1c	; 28
    1042:	69 aa       	std	Y+49, r6	; 0x31
    1044:	7a aa       	std	Y+50, r7	; 0x32
    1046:	8b aa       	std	Y+51, r8	; 0x33
    1048:	9c aa       	std	Y+52, r9	; 0x34
    104a:	6d 81       	ldd	r22, Y+5	; 0x05
    104c:	7e 81       	ldd	r23, Y+6	; 0x06
    104e:	8f 81       	ldd	r24, Y+7	; 0x07
    1050:	98 85       	ldd	r25, Y+8	; 0x08
    1052:	3b 01       	movw	r6, r22
    1054:	4c 01       	movw	r8, r24
    1056:	6d aa       	std	Y+53, r6	; 0x35
    1058:	7e aa       	std	Y+54, r7	; 0x36
    105a:	8f aa       	std	Y+55, r8	; 0x37
    105c:	98 ae       	std	Y+56, r9	; 0x38
    105e:	a1 14       	cp	r10, r1
    1060:	b1 04       	cpc	r11, r1
    1062:	c1 04       	cpc	r12, r1
    1064:	d1 04       	cpc	r13, r1
    1066:	09 f0       	breq	.+2      	; 0x106a <__umoddi3+0xb0>
    1068:	04 c3       	rjmp	.+1544   	; 0x1672 <__umoddi3+0x6b8>
    106a:	62 14       	cp	r6, r2
    106c:	73 04       	cpc	r7, r3
    106e:	84 04       	cpc	r8, r4
    1070:	95 04       	cpc	r9, r5
    1072:	08 f0       	brcs	.+2      	; 0x1076 <__umoddi3+0xbc>
    1074:	00 c1       	rjmp	.+512    	; 0x1276 <__umoddi3+0x2bc>
    1076:	00 e0       	ldi	r16, 0x00	; 0
    1078:	20 16       	cp	r2, r16
    107a:	00 e0       	ldi	r16, 0x00	; 0
    107c:	30 06       	cpc	r3, r16
    107e:	01 e0       	ldi	r16, 0x01	; 1
    1080:	40 06       	cpc	r4, r16
    1082:	00 e0       	ldi	r16, 0x00	; 0
    1084:	50 06       	cpc	r5, r16
    1086:	88 f4       	brcc	.+34     	; 0x10aa <__umoddi3+0xf0>
    1088:	1f ef       	ldi	r17, 0xFF	; 255
    108a:	21 16       	cp	r2, r17
    108c:	31 04       	cpc	r3, r1
    108e:	41 04       	cpc	r4, r1
    1090:	51 04       	cpc	r5, r1
    1092:	39 f0       	breq	.+14     	; 0x10a2 <__umoddi3+0xe8>
    1094:	30 f0       	brcs	.+12     	; 0x10a2 <__umoddi3+0xe8>
    1096:	88 e0       	ldi	r24, 0x08	; 8
    1098:	e8 2e       	mov	r14, r24
    109a:	f1 2c       	mov	r15, r1
    109c:	01 2d       	mov	r16, r1
    109e:	11 2d       	mov	r17, r1
    10a0:	18 c0       	rjmp	.+48     	; 0x10d2 <__umoddi3+0x118>
    10a2:	ee 24       	eor	r14, r14
    10a4:	ff 24       	eor	r15, r15
    10a6:	87 01       	movw	r16, r14
    10a8:	14 c0       	rjmp	.+40     	; 0x10d2 <__umoddi3+0x118>
    10aa:	40 e0       	ldi	r20, 0x00	; 0
    10ac:	24 16       	cp	r2, r20
    10ae:	40 e0       	ldi	r20, 0x00	; 0
    10b0:	34 06       	cpc	r3, r20
    10b2:	40 e0       	ldi	r20, 0x00	; 0
    10b4:	44 06       	cpc	r4, r20
    10b6:	41 e0       	ldi	r20, 0x01	; 1
    10b8:	54 06       	cpc	r5, r20
    10ba:	30 f0       	brcs	.+12     	; 0x10c8 <__umoddi3+0x10e>
    10bc:	b8 e1       	ldi	r27, 0x18	; 24
    10be:	eb 2e       	mov	r14, r27
    10c0:	f1 2c       	mov	r15, r1
    10c2:	01 2d       	mov	r16, r1
    10c4:	11 2d       	mov	r17, r1
    10c6:	05 c0       	rjmp	.+10     	; 0x10d2 <__umoddi3+0x118>
    10c8:	a0 e1       	ldi	r26, 0x10	; 16
    10ca:	ea 2e       	mov	r14, r26
    10cc:	f1 2c       	mov	r15, r1
    10ce:	01 2d       	mov	r16, r1
    10d0:	11 2d       	mov	r17, r1
    10d2:	d2 01       	movw	r26, r4
    10d4:	c1 01       	movw	r24, r2
    10d6:	0e 2c       	mov	r0, r14
    10d8:	04 c0       	rjmp	.+8      	; 0x10e2 <__umoddi3+0x128>
    10da:	b6 95       	lsr	r27
    10dc:	a7 95       	ror	r26
    10de:	97 95       	ror	r25
    10e0:	87 95       	ror	r24
    10e2:	0a 94       	dec	r0
    10e4:	d2 f7       	brpl	.-12     	; 0x10da <__umoddi3+0x120>
    10e6:	80 58       	subi	r24, 0x80	; 128
    10e8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ea:	dc 01       	movw	r26, r24
    10ec:	2c 91       	ld	r18, X
    10ee:	80 e2       	ldi	r24, 0x20	; 32
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	a0 e0       	ldi	r26, 0x00	; 0
    10f4:	b0 e0       	ldi	r27, 0x00	; 0
    10f6:	8e 19       	sub	r24, r14
    10f8:	9f 09       	sbc	r25, r15
    10fa:	a0 0b       	sbc	r26, r16
    10fc:	b1 0b       	sbc	r27, r17
    10fe:	5c 01       	movw	r10, r24
    1100:	6d 01       	movw	r12, r26
    1102:	a2 1a       	sub	r10, r18
    1104:	b1 08       	sbc	r11, r1
    1106:	c1 08       	sbc	r12, r1
    1108:	d1 08       	sbc	r13, r1
    110a:	a9 ae       	std	Y+57, r10	; 0x39
    110c:	ba ae       	std	Y+58, r11	; 0x3a
    110e:	cb ae       	std	Y+59, r12	; 0x3b
    1110:	dc ae       	std	Y+60, r13	; 0x3c
    1112:	a1 14       	cp	r10, r1
    1114:	b1 04       	cpc	r11, r1
    1116:	c1 04       	cpc	r12, r1
    1118:	d1 04       	cpc	r13, r1
    111a:	09 f4       	brne	.+2      	; 0x111e <__umoddi3+0x164>
    111c:	3f c0       	rjmp	.+126    	; 0x119c <__umoddi3+0x1e2>
    111e:	69 ad       	ldd	r22, Y+57	; 0x39
    1120:	06 2e       	mov	r0, r22
    1122:	04 c0       	rjmp	.+8      	; 0x112c <__umoddi3+0x172>
    1124:	22 0c       	add	r2, r2
    1126:	33 1c       	adc	r3, r3
    1128:	44 1c       	adc	r4, r4
    112a:	55 1c       	adc	r5, r5
    112c:	0a 94       	dec	r0
    112e:	d2 f7       	brpl	.-12     	; 0x1124 <__umoddi3+0x16a>
    1130:	a4 01       	movw	r20, r8
    1132:	93 01       	movw	r18, r6
    1134:	06 2e       	mov	r0, r22
    1136:	04 c0       	rjmp	.+8      	; 0x1140 <__umoddi3+0x186>
    1138:	22 0f       	add	r18, r18
    113a:	33 1f       	adc	r19, r19
    113c:	44 1f       	adc	r20, r20
    113e:	55 1f       	adc	r21, r21
    1140:	0a 94       	dec	r0
    1142:	d2 f7       	brpl	.-12     	; 0x1138 <__umoddi3+0x17e>
    1144:	80 e2       	ldi	r24, 0x20	; 32
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	8a 19       	sub	r24, r10
    114a:	9b 09       	sbc	r25, r11
    114c:	6c 96       	adiw	r28, 0x1c	; 28
    114e:	cc ac       	ldd	r12, Y+60	; 0x3c
    1150:	dd ac       	ldd	r13, Y+61	; 0x3d
    1152:	ee ac       	ldd	r14, Y+62	; 0x3e
    1154:	ff ac       	ldd	r15, Y+63	; 0x3f
    1156:	6c 97       	sbiw	r28, 0x1c	; 28
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <__umoddi3+0x1a8>
    115a:	f6 94       	lsr	r15
    115c:	e7 94       	ror	r14
    115e:	d7 94       	ror	r13
    1160:	c7 94       	ror	r12
    1162:	8a 95       	dec	r24
    1164:	d2 f7       	brpl	.-12     	; 0x115a <__umoddi3+0x1a0>
    1166:	87 01       	movw	r16, r14
    1168:	76 01       	movw	r14, r12
    116a:	e2 2a       	or	r14, r18
    116c:	f3 2a       	or	r15, r19
    116e:	04 2b       	or	r16, r20
    1170:	15 2b       	or	r17, r21
    1172:	ed aa       	std	Y+53, r14	; 0x35
    1174:	fe aa       	std	Y+54, r15	; 0x36
    1176:	0f ab       	std	Y+55, r16	; 0x37
    1178:	18 af       	std	Y+56, r17	; 0x38
    117a:	6c 96       	adiw	r28, 0x1c	; 28
    117c:	8c ad       	ldd	r24, Y+60	; 0x3c
    117e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1180:	ae ad       	ldd	r26, Y+62	; 0x3e
    1182:	bf ad       	ldd	r27, Y+63	; 0x3f
    1184:	6c 97       	sbiw	r28, 0x1c	; 28
    1186:	04 c0       	rjmp	.+8      	; 0x1190 <__umoddi3+0x1d6>
    1188:	88 0f       	add	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	aa 1f       	adc	r26, r26
    118e:	bb 1f       	adc	r27, r27
    1190:	6a 95       	dec	r22
    1192:	d2 f7       	brpl	.-12     	; 0x1188 <__umoddi3+0x1ce>
    1194:	89 ab       	std	Y+49, r24	; 0x31
    1196:	9a ab       	std	Y+50, r25	; 0x32
    1198:	ab ab       	std	Y+51, r26	; 0x33
    119a:	bc ab       	std	Y+52, r27	; 0x34
    119c:	32 01       	movw	r6, r4
    119e:	88 24       	eor	r8, r8
    11a0:	99 24       	eor	r9, r9
    11a2:	b2 01       	movw	r22, r4
    11a4:	a1 01       	movw	r20, r2
    11a6:	60 70       	andi	r22, 0x00	; 0
    11a8:	70 70       	andi	r23, 0x00	; 0
    11aa:	21 96       	adiw	r28, 0x01	; 1
    11ac:	4c af       	std	Y+60, r20	; 0x3c
    11ae:	5d af       	std	Y+61, r21	; 0x3d
    11b0:	6e af       	std	Y+62, r22	; 0x3e
    11b2:	7f af       	std	Y+63, r23	; 0x3f
    11b4:	21 97       	sbiw	r28, 0x01	; 1
    11b6:	6d a9       	ldd	r22, Y+53	; 0x35
    11b8:	7e a9       	ldd	r23, Y+54	; 0x36
    11ba:	8f a9       	ldd	r24, Y+55	; 0x37
    11bc:	98 ad       	ldd	r25, Y+56	; 0x38
    11be:	a4 01       	movw	r20, r8
    11c0:	93 01       	movw	r18, r6
    11c2:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    11c6:	7b 01       	movw	r14, r22
    11c8:	8c 01       	movw	r16, r24
    11ca:	6d a9       	ldd	r22, Y+53	; 0x35
    11cc:	7e a9       	ldd	r23, Y+54	; 0x36
    11ce:	8f a9       	ldd	r24, Y+55	; 0x37
    11d0:	98 ad       	ldd	r25, Y+56	; 0x38
    11d2:	a4 01       	movw	r20, r8
    11d4:	93 01       	movw	r18, r6
    11d6:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    11da:	ca 01       	movw	r24, r20
    11dc:	b9 01       	movw	r22, r18
    11de:	21 96       	adiw	r28, 0x01	; 1
    11e0:	2c ad       	ldd	r18, Y+60	; 0x3c
    11e2:	3d ad       	ldd	r19, Y+61	; 0x3d
    11e4:	4e ad       	ldd	r20, Y+62	; 0x3e
    11e6:	5f ad       	ldd	r21, Y+63	; 0x3f
    11e8:	21 97       	sbiw	r28, 0x01	; 1
    11ea:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    11ee:	9b 01       	movw	r18, r22
    11f0:	ac 01       	movw	r20, r24
    11f2:	87 01       	movw	r16, r14
    11f4:	ff 24       	eor	r15, r15
    11f6:	ee 24       	eor	r14, r14
    11f8:	a9 a8       	ldd	r10, Y+49	; 0x31
    11fa:	ba a8       	ldd	r11, Y+50	; 0x32
    11fc:	cb a8       	ldd	r12, Y+51	; 0x33
    11fe:	dc a8       	ldd	r13, Y+52	; 0x34
    1200:	c6 01       	movw	r24, r12
    1202:	aa 27       	eor	r26, r26
    1204:	bb 27       	eor	r27, r27
    1206:	57 01       	movw	r10, r14
    1208:	68 01       	movw	r12, r16
    120a:	a8 2a       	or	r10, r24
    120c:	b9 2a       	or	r11, r25
    120e:	ca 2a       	or	r12, r26
    1210:	db 2a       	or	r13, r27
    1212:	a2 16       	cp	r10, r18
    1214:	b3 06       	cpc	r11, r19
    1216:	c4 06       	cpc	r12, r20
    1218:	d5 06       	cpc	r13, r21
    121a:	90 f4       	brcc	.+36     	; 0x1240 <__umoddi3+0x286>
    121c:	a2 0c       	add	r10, r2
    121e:	b3 1c       	adc	r11, r3
    1220:	c4 1c       	adc	r12, r4
    1222:	d5 1c       	adc	r13, r5
    1224:	a2 14       	cp	r10, r2
    1226:	b3 04       	cpc	r11, r3
    1228:	c4 04       	cpc	r12, r4
    122a:	d5 04       	cpc	r13, r5
    122c:	48 f0       	brcs	.+18     	; 0x1240 <__umoddi3+0x286>
    122e:	a2 16       	cp	r10, r18
    1230:	b3 06       	cpc	r11, r19
    1232:	c4 06       	cpc	r12, r20
    1234:	d5 06       	cpc	r13, r21
    1236:	20 f4       	brcc	.+8      	; 0x1240 <__umoddi3+0x286>
    1238:	a2 0c       	add	r10, r2
    123a:	b3 1c       	adc	r11, r3
    123c:	c4 1c       	adc	r12, r4
    123e:	d5 1c       	adc	r13, r5
    1240:	a2 1a       	sub	r10, r18
    1242:	b3 0a       	sbc	r11, r19
    1244:	c4 0a       	sbc	r12, r20
    1246:	d5 0a       	sbc	r13, r21
    1248:	c6 01       	movw	r24, r12
    124a:	b5 01       	movw	r22, r10
    124c:	a4 01       	movw	r20, r8
    124e:	93 01       	movw	r18, r6
    1250:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1254:	7b 01       	movw	r14, r22
    1256:	8c 01       	movw	r16, r24
    1258:	c6 01       	movw	r24, r12
    125a:	b5 01       	movw	r22, r10
    125c:	a4 01       	movw	r20, r8
    125e:	93 01       	movw	r18, r6
    1260:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1264:	ca 01       	movw	r24, r20
    1266:	b9 01       	movw	r22, r18
    1268:	21 96       	adiw	r28, 0x01	; 1
    126a:	2c ad       	ldd	r18, Y+60	; 0x3c
    126c:	3d ad       	ldd	r19, Y+61	; 0x3d
    126e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1270:	5f ad       	ldd	r21, Y+63	; 0x3f
    1272:	21 97       	sbiw	r28, 0x01	; 1
    1274:	ba c1       	rjmp	.+884    	; 0x15ea <__umoddi3+0x630>
    1276:	21 14       	cp	r2, r1
    1278:	31 04       	cpc	r3, r1
    127a:	41 04       	cpc	r4, r1
    127c:	51 04       	cpc	r5, r1
    127e:	71 f4       	brne	.+28     	; 0x129c <__umoddi3+0x2e2>
    1280:	61 e0       	ldi	r22, 0x01	; 1
    1282:	70 e0       	ldi	r23, 0x00	; 0
    1284:	80 e0       	ldi	r24, 0x00	; 0
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	40 e0       	ldi	r20, 0x00	; 0
    128e:	50 e0       	ldi	r21, 0x00	; 0
    1290:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1294:	c9 01       	movw	r24, r18
    1296:	da 01       	movw	r26, r20
    1298:	1c 01       	movw	r2, r24
    129a:	2d 01       	movw	r4, r26
    129c:	00 e0       	ldi	r16, 0x00	; 0
    129e:	20 16       	cp	r2, r16
    12a0:	00 e0       	ldi	r16, 0x00	; 0
    12a2:	30 06       	cpc	r3, r16
    12a4:	01 e0       	ldi	r16, 0x01	; 1
    12a6:	40 06       	cpc	r4, r16
    12a8:	00 e0       	ldi	r16, 0x00	; 0
    12aa:	50 06       	cpc	r5, r16
    12ac:	88 f4       	brcc	.+34     	; 0x12d0 <__umoddi3+0x316>
    12ae:	1f ef       	ldi	r17, 0xFF	; 255
    12b0:	21 16       	cp	r2, r17
    12b2:	31 04       	cpc	r3, r1
    12b4:	41 04       	cpc	r4, r1
    12b6:	51 04       	cpc	r5, r1
    12b8:	39 f0       	breq	.+14     	; 0x12c8 <__umoddi3+0x30e>
    12ba:	30 f0       	brcs	.+12     	; 0x12c8 <__umoddi3+0x30e>
    12bc:	68 e0       	ldi	r22, 0x08	; 8
    12be:	e6 2e       	mov	r14, r22
    12c0:	f1 2c       	mov	r15, r1
    12c2:	01 2d       	mov	r16, r1
    12c4:	11 2d       	mov	r17, r1
    12c6:	18 c0       	rjmp	.+48     	; 0x12f8 <__umoddi3+0x33e>
    12c8:	ee 24       	eor	r14, r14
    12ca:	ff 24       	eor	r15, r15
    12cc:	87 01       	movw	r16, r14
    12ce:	14 c0       	rjmp	.+40     	; 0x12f8 <__umoddi3+0x33e>
    12d0:	40 e0       	ldi	r20, 0x00	; 0
    12d2:	24 16       	cp	r2, r20
    12d4:	40 e0       	ldi	r20, 0x00	; 0
    12d6:	34 06       	cpc	r3, r20
    12d8:	40 e0       	ldi	r20, 0x00	; 0
    12da:	44 06       	cpc	r4, r20
    12dc:	41 e0       	ldi	r20, 0x01	; 1
    12de:	54 06       	cpc	r5, r20
    12e0:	30 f0       	brcs	.+12     	; 0x12ee <__umoddi3+0x334>
    12e2:	58 e1       	ldi	r21, 0x18	; 24
    12e4:	e5 2e       	mov	r14, r21
    12e6:	f1 2c       	mov	r15, r1
    12e8:	01 2d       	mov	r16, r1
    12ea:	11 2d       	mov	r17, r1
    12ec:	05 c0       	rjmp	.+10     	; 0x12f8 <__umoddi3+0x33e>
    12ee:	40 e1       	ldi	r20, 0x10	; 16
    12f0:	e4 2e       	mov	r14, r20
    12f2:	f1 2c       	mov	r15, r1
    12f4:	01 2d       	mov	r16, r1
    12f6:	11 2d       	mov	r17, r1
    12f8:	d2 01       	movw	r26, r4
    12fa:	c1 01       	movw	r24, r2
    12fc:	0e 2c       	mov	r0, r14
    12fe:	04 c0       	rjmp	.+8      	; 0x1308 <__umoddi3+0x34e>
    1300:	b6 95       	lsr	r27
    1302:	a7 95       	ror	r26
    1304:	97 95       	ror	r25
    1306:	87 95       	ror	r24
    1308:	0a 94       	dec	r0
    130a:	d2 f7       	brpl	.-12     	; 0x1300 <__umoddi3+0x346>
    130c:	80 58       	subi	r24, 0x80	; 128
    130e:	9f 4f       	sbci	r25, 0xFF	; 255
    1310:	dc 01       	movw	r26, r24
    1312:	2c 91       	ld	r18, X
    1314:	30 e2       	ldi	r19, 0x20	; 32
    1316:	a3 2e       	mov	r10, r19
    1318:	b1 2c       	mov	r11, r1
    131a:	c1 2c       	mov	r12, r1
    131c:	d1 2c       	mov	r13, r1
    131e:	d6 01       	movw	r26, r12
    1320:	c5 01       	movw	r24, r10
    1322:	8e 19       	sub	r24, r14
    1324:	9f 09       	sbc	r25, r15
    1326:	a0 0b       	sbc	r26, r16
    1328:	b1 0b       	sbc	r27, r17
    132a:	7c 01       	movw	r14, r24
    132c:	8d 01       	movw	r16, r26
    132e:	e2 1a       	sub	r14, r18
    1330:	f1 08       	sbc	r15, r1
    1332:	01 09       	sbc	r16, r1
    1334:	11 09       	sbc	r17, r1
    1336:	e9 ae       	std	Y+57, r14	; 0x39
    1338:	fa ae       	std	Y+58, r15	; 0x3a
    133a:	0b af       	std	Y+59, r16	; 0x3b
    133c:	1c af       	std	Y+60, r17	; 0x3c
    133e:	e1 14       	cp	r14, r1
    1340:	f1 04       	cpc	r15, r1
    1342:	01 05       	cpc	r16, r1
    1344:	11 05       	cpc	r17, r1
    1346:	39 f4       	brne	.+14     	; 0x1356 <__umoddi3+0x39c>
    1348:	64 01       	movw	r12, r8
    134a:	53 01       	movw	r10, r6
    134c:	a2 18       	sub	r10, r2
    134e:	b3 08       	sbc	r11, r3
    1350:	c4 08       	sbc	r12, r4
    1352:	d5 08       	sbc	r13, r5
    1354:	e2 c0       	rjmp	.+452    	; 0x151a <__umoddi3+0x560>
    1356:	f9 ac       	ldd	r15, Y+57	; 0x39
    1358:	68 96       	adiw	r28, 0x18	; 24
    135a:	ff ae       	std	Y+63, r15	; 0x3f
    135c:	68 97       	sbiw	r28, 0x18	; 24
    135e:	0f 2c       	mov	r0, r15
    1360:	04 c0       	rjmp	.+8      	; 0x136a <__umoddi3+0x3b0>
    1362:	22 0c       	add	r2, r2
    1364:	33 1c       	adc	r3, r3
    1366:	44 1c       	adc	r4, r4
    1368:	55 1c       	adc	r5, r5
    136a:	0a 94       	dec	r0
    136c:	d2 f7       	brpl	.-12     	; 0x1362 <__umoddi3+0x3a8>
    136e:	8a 2d       	mov	r24, r10
    1370:	8f 19       	sub	r24, r15
    1372:	64 01       	movw	r12, r8
    1374:	53 01       	movw	r10, r6
    1376:	08 2e       	mov	r0, r24
    1378:	04 c0       	rjmp	.+8      	; 0x1382 <__umoddi3+0x3c8>
    137a:	d6 94       	lsr	r13
    137c:	c7 94       	ror	r12
    137e:	b7 94       	ror	r11
    1380:	a7 94       	ror	r10
    1382:	0a 94       	dec	r0
    1384:	d2 f7       	brpl	.-12     	; 0x137a <__umoddi3+0x3c0>
    1386:	a4 01       	movw	r20, r8
    1388:	93 01       	movw	r18, r6
    138a:	04 c0       	rjmp	.+8      	; 0x1394 <__umoddi3+0x3da>
    138c:	22 0f       	add	r18, r18
    138e:	33 1f       	adc	r19, r19
    1390:	44 1f       	adc	r20, r20
    1392:	55 1f       	adc	r21, r21
    1394:	fa 94       	dec	r15
    1396:	d2 f7       	brpl	.-12     	; 0x138c <__umoddi3+0x3d2>
    1398:	6c 96       	adiw	r28, 0x1c	; 28
    139a:	6c ac       	ldd	r6, Y+60	; 0x3c
    139c:	7d ac       	ldd	r7, Y+61	; 0x3d
    139e:	8e ac       	ldd	r8, Y+62	; 0x3e
    13a0:	9f ac       	ldd	r9, Y+63	; 0x3f
    13a2:	6c 97       	sbiw	r28, 0x1c	; 28
    13a4:	04 c0       	rjmp	.+8      	; 0x13ae <__umoddi3+0x3f4>
    13a6:	96 94       	lsr	r9
    13a8:	87 94       	ror	r8
    13aa:	77 94       	ror	r7
    13ac:	67 94       	ror	r6
    13ae:	8a 95       	dec	r24
    13b0:	d2 f7       	brpl	.-12     	; 0x13a6 <__umoddi3+0x3ec>
    13b2:	84 01       	movw	r16, r8
    13b4:	73 01       	movw	r14, r6
    13b6:	e2 2a       	or	r14, r18
    13b8:	f3 2a       	or	r15, r19
    13ba:	04 2b       	or	r16, r20
    13bc:	15 2b       	or	r17, r21
    13be:	ed a6       	std	Y+45, r14	; 0x2d
    13c0:	fe a6       	std	Y+46, r15	; 0x2e
    13c2:	0f a7       	std	Y+47, r16	; 0x2f
    13c4:	18 ab       	std	Y+48, r17	; 0x30
    13c6:	32 01       	movw	r6, r4
    13c8:	88 24       	eor	r8, r8
    13ca:	99 24       	eor	r9, r9
    13cc:	b2 01       	movw	r22, r4
    13ce:	a1 01       	movw	r20, r2
    13d0:	60 70       	andi	r22, 0x00	; 0
    13d2:	70 70       	andi	r23, 0x00	; 0
    13d4:	25 96       	adiw	r28, 0x05	; 5
    13d6:	4c af       	std	Y+60, r20	; 0x3c
    13d8:	5d af       	std	Y+61, r21	; 0x3d
    13da:	6e af       	std	Y+62, r22	; 0x3e
    13dc:	7f af       	std	Y+63, r23	; 0x3f
    13de:	25 97       	sbiw	r28, 0x05	; 5
    13e0:	c6 01       	movw	r24, r12
    13e2:	b5 01       	movw	r22, r10
    13e4:	a4 01       	movw	r20, r8
    13e6:	93 01       	movw	r18, r6
    13e8:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    13ec:	7b 01       	movw	r14, r22
    13ee:	8c 01       	movw	r16, r24
    13f0:	c6 01       	movw	r24, r12
    13f2:	b5 01       	movw	r22, r10
    13f4:	a4 01       	movw	r20, r8
    13f6:	93 01       	movw	r18, r6
    13f8:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    13fc:	ca 01       	movw	r24, r20
    13fe:	b9 01       	movw	r22, r18
    1400:	25 96       	adiw	r28, 0x05	; 5
    1402:	2c ad       	ldd	r18, Y+60	; 0x3c
    1404:	3d ad       	ldd	r19, Y+61	; 0x3d
    1406:	4e ad       	ldd	r20, Y+62	; 0x3e
    1408:	5f ad       	ldd	r21, Y+63	; 0x3f
    140a:	25 97       	sbiw	r28, 0x05	; 5
    140c:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    1410:	9b 01       	movw	r18, r22
    1412:	ac 01       	movw	r20, r24
    1414:	87 01       	movw	r16, r14
    1416:	ff 24       	eor	r15, r15
    1418:	ee 24       	eor	r14, r14
    141a:	ad a4       	ldd	r10, Y+45	; 0x2d
    141c:	be a4       	ldd	r11, Y+46	; 0x2e
    141e:	cf a4       	ldd	r12, Y+47	; 0x2f
    1420:	d8 a8       	ldd	r13, Y+48	; 0x30
    1422:	c6 01       	movw	r24, r12
    1424:	aa 27       	eor	r26, r26
    1426:	bb 27       	eor	r27, r27
    1428:	5c 01       	movw	r10, r24
    142a:	6d 01       	movw	r12, r26
    142c:	ae 28       	or	r10, r14
    142e:	bf 28       	or	r11, r15
    1430:	c0 2a       	or	r12, r16
    1432:	d1 2a       	or	r13, r17
    1434:	a2 16       	cp	r10, r18
    1436:	b3 06       	cpc	r11, r19
    1438:	c4 06       	cpc	r12, r20
    143a:	d5 06       	cpc	r13, r21
    143c:	90 f4       	brcc	.+36     	; 0x1462 <__umoddi3+0x4a8>
    143e:	a2 0c       	add	r10, r2
    1440:	b3 1c       	adc	r11, r3
    1442:	c4 1c       	adc	r12, r4
    1444:	d5 1c       	adc	r13, r5
    1446:	a2 14       	cp	r10, r2
    1448:	b3 04       	cpc	r11, r3
    144a:	c4 04       	cpc	r12, r4
    144c:	d5 04       	cpc	r13, r5
    144e:	48 f0       	brcs	.+18     	; 0x1462 <__umoddi3+0x4a8>
    1450:	a2 16       	cp	r10, r18
    1452:	b3 06       	cpc	r11, r19
    1454:	c4 06       	cpc	r12, r20
    1456:	d5 06       	cpc	r13, r21
    1458:	20 f4       	brcc	.+8      	; 0x1462 <__umoddi3+0x4a8>
    145a:	a2 0c       	add	r10, r2
    145c:	b3 1c       	adc	r11, r3
    145e:	c4 1c       	adc	r12, r4
    1460:	d5 1c       	adc	r13, r5
    1462:	a2 1a       	sub	r10, r18
    1464:	b3 0a       	sbc	r11, r19
    1466:	c4 0a       	sbc	r12, r20
    1468:	d5 0a       	sbc	r13, r21
    146a:	c6 01       	movw	r24, r12
    146c:	b5 01       	movw	r22, r10
    146e:	a4 01       	movw	r20, r8
    1470:	93 01       	movw	r18, r6
    1472:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1476:	7b 01       	movw	r14, r22
    1478:	8c 01       	movw	r16, r24
    147a:	c6 01       	movw	r24, r12
    147c:	b5 01       	movw	r22, r10
    147e:	a4 01       	movw	r20, r8
    1480:	93 01       	movw	r18, r6
    1482:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1486:	ca 01       	movw	r24, r20
    1488:	b9 01       	movw	r22, r18
    148a:	25 96       	adiw	r28, 0x05	; 5
    148c:	2c ad       	ldd	r18, Y+60	; 0x3c
    148e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1490:	4e ad       	ldd	r20, Y+62	; 0x3e
    1492:	5f ad       	ldd	r21, Y+63	; 0x3f
    1494:	25 97       	sbiw	r28, 0x05	; 5
    1496:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    149a:	9b 01       	movw	r18, r22
    149c:	ac 01       	movw	r20, r24
    149e:	87 01       	movw	r16, r14
    14a0:	ff 24       	eor	r15, r15
    14a2:	ee 24       	eor	r14, r14
    14a4:	8d a5       	ldd	r24, Y+45	; 0x2d
    14a6:	9e a5       	ldd	r25, Y+46	; 0x2e
    14a8:	af a5       	ldd	r26, Y+47	; 0x2f
    14aa:	b8 a9       	ldd	r27, Y+48	; 0x30
    14ac:	a0 70       	andi	r26, 0x00	; 0
    14ae:	b0 70       	andi	r27, 0x00	; 0
    14b0:	57 01       	movw	r10, r14
    14b2:	68 01       	movw	r12, r16
    14b4:	a8 2a       	or	r10, r24
    14b6:	b9 2a       	or	r11, r25
    14b8:	ca 2a       	or	r12, r26
    14ba:	db 2a       	or	r13, r27
    14bc:	a2 16       	cp	r10, r18
    14be:	b3 06       	cpc	r11, r19
    14c0:	c4 06       	cpc	r12, r20
    14c2:	d5 06       	cpc	r13, r21
    14c4:	90 f4       	brcc	.+36     	; 0x14ea <__umoddi3+0x530>
    14c6:	a2 0c       	add	r10, r2
    14c8:	b3 1c       	adc	r11, r3
    14ca:	c4 1c       	adc	r12, r4
    14cc:	d5 1c       	adc	r13, r5
    14ce:	a2 14       	cp	r10, r2
    14d0:	b3 04       	cpc	r11, r3
    14d2:	c4 04       	cpc	r12, r4
    14d4:	d5 04       	cpc	r13, r5
    14d6:	48 f0       	brcs	.+18     	; 0x14ea <__umoddi3+0x530>
    14d8:	a2 16       	cp	r10, r18
    14da:	b3 06       	cpc	r11, r19
    14dc:	c4 06       	cpc	r12, r20
    14de:	d5 06       	cpc	r13, r21
    14e0:	20 f4       	brcc	.+8      	; 0x14ea <__umoddi3+0x530>
    14e2:	a2 0c       	add	r10, r2
    14e4:	b3 1c       	adc	r11, r3
    14e6:	c4 1c       	adc	r12, r4
    14e8:	d5 1c       	adc	r13, r5
    14ea:	6c 96       	adiw	r28, 0x1c	; 28
    14ec:	ec ac       	ldd	r14, Y+60	; 0x3c
    14ee:	fd ac       	ldd	r15, Y+61	; 0x3d
    14f0:	0e ad       	ldd	r16, Y+62	; 0x3e
    14f2:	1f ad       	ldd	r17, Y+63	; 0x3f
    14f4:	6c 97       	sbiw	r28, 0x1c	; 28
    14f6:	68 96       	adiw	r28, 0x18	; 24
    14f8:	0f ac       	ldd	r0, Y+63	; 0x3f
    14fa:	68 97       	sbiw	r28, 0x18	; 24
    14fc:	04 c0       	rjmp	.+8      	; 0x1506 <__umoddi3+0x54c>
    14fe:	ee 0c       	add	r14, r14
    1500:	ff 1c       	adc	r15, r15
    1502:	00 1f       	adc	r16, r16
    1504:	11 1f       	adc	r17, r17
    1506:	0a 94       	dec	r0
    1508:	d2 f7       	brpl	.-12     	; 0x14fe <__umoddi3+0x544>
    150a:	e9 aa       	std	Y+49, r14	; 0x31
    150c:	fa aa       	std	Y+50, r15	; 0x32
    150e:	0b ab       	std	Y+51, r16	; 0x33
    1510:	1c ab       	std	Y+52, r17	; 0x34
    1512:	a2 1a       	sub	r10, r18
    1514:	b3 0a       	sbc	r11, r19
    1516:	c4 0a       	sbc	r12, r20
    1518:	d5 0a       	sbc	r13, r21
    151a:	32 01       	movw	r6, r4
    151c:	88 24       	eor	r8, r8
    151e:	99 24       	eor	r9, r9
    1520:	b2 01       	movw	r22, r4
    1522:	a1 01       	movw	r20, r2
    1524:	60 70       	andi	r22, 0x00	; 0
    1526:	70 70       	andi	r23, 0x00	; 0
    1528:	29 96       	adiw	r28, 0x09	; 9
    152a:	4c af       	std	Y+60, r20	; 0x3c
    152c:	5d af       	std	Y+61, r21	; 0x3d
    152e:	6e af       	std	Y+62, r22	; 0x3e
    1530:	7f af       	std	Y+63, r23	; 0x3f
    1532:	29 97       	sbiw	r28, 0x09	; 9
    1534:	c6 01       	movw	r24, r12
    1536:	b5 01       	movw	r22, r10
    1538:	a4 01       	movw	r20, r8
    153a:	93 01       	movw	r18, r6
    153c:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1540:	7b 01       	movw	r14, r22
    1542:	8c 01       	movw	r16, r24
    1544:	c6 01       	movw	r24, r12
    1546:	b5 01       	movw	r22, r10
    1548:	a4 01       	movw	r20, r8
    154a:	93 01       	movw	r18, r6
    154c:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1550:	ca 01       	movw	r24, r20
    1552:	b9 01       	movw	r22, r18
    1554:	29 96       	adiw	r28, 0x09	; 9
    1556:	2c ad       	ldd	r18, Y+60	; 0x3c
    1558:	3d ad       	ldd	r19, Y+61	; 0x3d
    155a:	4e ad       	ldd	r20, Y+62	; 0x3e
    155c:	5f ad       	ldd	r21, Y+63	; 0x3f
    155e:	29 97       	sbiw	r28, 0x09	; 9
    1560:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    1564:	9b 01       	movw	r18, r22
    1566:	ac 01       	movw	r20, r24
    1568:	87 01       	movw	r16, r14
    156a:	ff 24       	eor	r15, r15
    156c:	ee 24       	eor	r14, r14
    156e:	a9 a8       	ldd	r10, Y+49	; 0x31
    1570:	ba a8       	ldd	r11, Y+50	; 0x32
    1572:	cb a8       	ldd	r12, Y+51	; 0x33
    1574:	dc a8       	ldd	r13, Y+52	; 0x34
    1576:	c6 01       	movw	r24, r12
    1578:	aa 27       	eor	r26, r26
    157a:	bb 27       	eor	r27, r27
    157c:	57 01       	movw	r10, r14
    157e:	68 01       	movw	r12, r16
    1580:	a8 2a       	or	r10, r24
    1582:	b9 2a       	or	r11, r25
    1584:	ca 2a       	or	r12, r26
    1586:	db 2a       	or	r13, r27
    1588:	a2 16       	cp	r10, r18
    158a:	b3 06       	cpc	r11, r19
    158c:	c4 06       	cpc	r12, r20
    158e:	d5 06       	cpc	r13, r21
    1590:	90 f4       	brcc	.+36     	; 0x15b6 <__umoddi3+0x5fc>
    1592:	a2 0c       	add	r10, r2
    1594:	b3 1c       	adc	r11, r3
    1596:	c4 1c       	adc	r12, r4
    1598:	d5 1c       	adc	r13, r5
    159a:	a2 14       	cp	r10, r2
    159c:	b3 04       	cpc	r11, r3
    159e:	c4 04       	cpc	r12, r4
    15a0:	d5 04       	cpc	r13, r5
    15a2:	48 f0       	brcs	.+18     	; 0x15b6 <__umoddi3+0x5fc>
    15a4:	a2 16       	cp	r10, r18
    15a6:	b3 06       	cpc	r11, r19
    15a8:	c4 06       	cpc	r12, r20
    15aa:	d5 06       	cpc	r13, r21
    15ac:	20 f4       	brcc	.+8      	; 0x15b6 <__umoddi3+0x5fc>
    15ae:	a2 0c       	add	r10, r2
    15b0:	b3 1c       	adc	r11, r3
    15b2:	c4 1c       	adc	r12, r4
    15b4:	d5 1c       	adc	r13, r5
    15b6:	a2 1a       	sub	r10, r18
    15b8:	b3 0a       	sbc	r11, r19
    15ba:	c4 0a       	sbc	r12, r20
    15bc:	d5 0a       	sbc	r13, r21
    15be:	c6 01       	movw	r24, r12
    15c0:	b5 01       	movw	r22, r10
    15c2:	a4 01       	movw	r20, r8
    15c4:	93 01       	movw	r18, r6
    15c6:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    15ca:	7b 01       	movw	r14, r22
    15cc:	8c 01       	movw	r16, r24
    15ce:	c6 01       	movw	r24, r12
    15d0:	b5 01       	movw	r22, r10
    15d2:	a4 01       	movw	r20, r8
    15d4:	93 01       	movw	r18, r6
    15d6:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    15da:	ca 01       	movw	r24, r20
    15dc:	b9 01       	movw	r22, r18
    15de:	29 96       	adiw	r28, 0x09	; 9
    15e0:	2c ad       	ldd	r18, Y+60	; 0x3c
    15e2:	3d ad       	ldd	r19, Y+61	; 0x3d
    15e4:	4e ad       	ldd	r20, Y+62	; 0x3e
    15e6:	5f ad       	ldd	r21, Y+63	; 0x3f
    15e8:	29 97       	sbiw	r28, 0x09	; 9
    15ea:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    15ee:	9b 01       	movw	r18, r22
    15f0:	ac 01       	movw	r20, r24
    15f2:	87 01       	movw	r16, r14
    15f4:	ff 24       	eor	r15, r15
    15f6:	ee 24       	eor	r14, r14
    15f8:	89 a9       	ldd	r24, Y+49	; 0x31
    15fa:	9a a9       	ldd	r25, Y+50	; 0x32
    15fc:	ab a9       	ldd	r26, Y+51	; 0x33
    15fe:	bc a9       	ldd	r27, Y+52	; 0x34
    1600:	a0 70       	andi	r26, 0x00	; 0
    1602:	b0 70       	andi	r27, 0x00	; 0
    1604:	e8 2a       	or	r14, r24
    1606:	f9 2a       	or	r15, r25
    1608:	0a 2b       	or	r16, r26
    160a:	1b 2b       	or	r17, r27
    160c:	e2 16       	cp	r14, r18
    160e:	f3 06       	cpc	r15, r19
    1610:	04 07       	cpc	r16, r20
    1612:	15 07       	cpc	r17, r21
    1614:	90 f4       	brcc	.+36     	; 0x163a <__umoddi3+0x680>
    1616:	e2 0c       	add	r14, r2
    1618:	f3 1c       	adc	r15, r3
    161a:	04 1d       	adc	r16, r4
    161c:	15 1d       	adc	r17, r5
    161e:	e2 14       	cp	r14, r2
    1620:	f3 04       	cpc	r15, r3
    1622:	04 05       	cpc	r16, r4
    1624:	15 05       	cpc	r17, r5
    1626:	48 f0       	brcs	.+18     	; 0x163a <__umoddi3+0x680>
    1628:	e2 16       	cp	r14, r18
    162a:	f3 06       	cpc	r15, r19
    162c:	04 07       	cpc	r16, r20
    162e:	15 07       	cpc	r17, r21
    1630:	20 f4       	brcc	.+8      	; 0x163a <__umoddi3+0x680>
    1632:	e2 0c       	add	r14, r2
    1634:	f3 1c       	adc	r15, r3
    1636:	04 1d       	adc	r16, r4
    1638:	15 1d       	adc	r17, r5
    163a:	e2 1a       	sub	r14, r18
    163c:	f3 0a       	sbc	r15, r19
    163e:	04 0b       	sbc	r16, r20
    1640:	15 0b       	sbc	r17, r21
    1642:	d8 01       	movw	r26, r16
    1644:	c7 01       	movw	r24, r14
    1646:	09 ac       	ldd	r0, Y+57	; 0x39
    1648:	04 c0       	rjmp	.+8      	; 0x1652 <__umoddi3+0x698>
    164a:	b6 95       	lsr	r27
    164c:	a7 95       	ror	r26
    164e:	97 95       	ror	r25
    1650:	87 95       	ror	r24
    1652:	0a 94       	dec	r0
    1654:	d2 f7       	brpl	.-12     	; 0x164a <__umoddi3+0x690>
    1656:	89 8b       	std	Y+17, r24	; 0x11
    1658:	9a 8b       	std	Y+18, r25	; 0x12
    165a:	ab 8b       	std	Y+19, r26	; 0x13
    165c:	bc 8b       	std	Y+20, r27	; 0x14
    165e:	1d 8a       	std	Y+21, r1	; 0x15
    1660:	1e 8a       	std	Y+22, r1	; 0x16
    1662:	1f 8a       	std	Y+23, r1	; 0x17
    1664:	18 8e       	std	Y+24, r1	; 0x18
    1666:	28 2f       	mov	r18, r24
    1668:	3a 89       	ldd	r19, Y+18	; 0x12
    166a:	4b 89       	ldd	r20, Y+19	; 0x13
    166c:	5c 89       	ldd	r21, Y+20	; 0x14
    166e:	6d 89       	ldd	r22, Y+21	; 0x15
    1670:	0c c3       	rjmp	.+1560   	; 0x1c8a <__umoddi3+0xcd0>
    1672:	6a 14       	cp	r6, r10
    1674:	7b 04       	cpc	r7, r11
    1676:	8c 04       	cpc	r8, r12
    1678:	9d 04       	cpc	r9, r13
    167a:	08 f4       	brcc	.+2      	; 0x167e <__umoddi3+0x6c4>
    167c:	09 c3       	rjmp	.+1554   	; 0x1c90 <__umoddi3+0xcd6>
    167e:	00 e0       	ldi	r16, 0x00	; 0
    1680:	a0 16       	cp	r10, r16
    1682:	00 e0       	ldi	r16, 0x00	; 0
    1684:	b0 06       	cpc	r11, r16
    1686:	01 e0       	ldi	r16, 0x01	; 1
    1688:	c0 06       	cpc	r12, r16
    168a:	00 e0       	ldi	r16, 0x00	; 0
    168c:	d0 06       	cpc	r13, r16
    168e:	88 f4       	brcc	.+34     	; 0x16b2 <__umoddi3+0x6f8>
    1690:	1f ef       	ldi	r17, 0xFF	; 255
    1692:	a1 16       	cp	r10, r17
    1694:	b1 04       	cpc	r11, r1
    1696:	c1 04       	cpc	r12, r1
    1698:	d1 04       	cpc	r13, r1
    169a:	39 f0       	breq	.+14     	; 0x16aa <__umoddi3+0x6f0>
    169c:	30 f0       	brcs	.+12     	; 0x16aa <__umoddi3+0x6f0>
    169e:	28 e0       	ldi	r18, 0x08	; 8
    16a0:	e2 2e       	mov	r14, r18
    16a2:	f1 2c       	mov	r15, r1
    16a4:	01 2d       	mov	r16, r1
    16a6:	11 2d       	mov	r17, r1
    16a8:	18 c0       	rjmp	.+48     	; 0x16da <__umoddi3+0x720>
    16aa:	ee 24       	eor	r14, r14
    16ac:	ff 24       	eor	r15, r15
    16ae:	87 01       	movw	r16, r14
    16b0:	14 c0       	rjmp	.+40     	; 0x16da <__umoddi3+0x720>
    16b2:	40 e0       	ldi	r20, 0x00	; 0
    16b4:	a4 16       	cp	r10, r20
    16b6:	40 e0       	ldi	r20, 0x00	; 0
    16b8:	b4 06       	cpc	r11, r20
    16ba:	40 e0       	ldi	r20, 0x00	; 0
    16bc:	c4 06       	cpc	r12, r20
    16be:	41 e0       	ldi	r20, 0x01	; 1
    16c0:	d4 06       	cpc	r13, r20
    16c2:	30 f0       	brcs	.+12     	; 0x16d0 <__umoddi3+0x716>
    16c4:	98 e1       	ldi	r25, 0x18	; 24
    16c6:	e9 2e       	mov	r14, r25
    16c8:	f1 2c       	mov	r15, r1
    16ca:	01 2d       	mov	r16, r1
    16cc:	11 2d       	mov	r17, r1
    16ce:	05 c0       	rjmp	.+10     	; 0x16da <__umoddi3+0x720>
    16d0:	80 e1       	ldi	r24, 0x10	; 16
    16d2:	e8 2e       	mov	r14, r24
    16d4:	f1 2c       	mov	r15, r1
    16d6:	01 2d       	mov	r16, r1
    16d8:	11 2d       	mov	r17, r1
    16da:	d6 01       	movw	r26, r12
    16dc:	c5 01       	movw	r24, r10
    16de:	0e 2c       	mov	r0, r14
    16e0:	04 c0       	rjmp	.+8      	; 0x16ea <__umoddi3+0x730>
    16e2:	b6 95       	lsr	r27
    16e4:	a7 95       	ror	r26
    16e6:	97 95       	ror	r25
    16e8:	87 95       	ror	r24
    16ea:	0a 94       	dec	r0
    16ec:	d2 f7       	brpl	.-12     	; 0x16e2 <__umoddi3+0x728>
    16ee:	80 58       	subi	r24, 0x80	; 128
    16f0:	9f 4f       	sbci	r25, 0xFF	; 255
    16f2:	dc 01       	movw	r26, r24
    16f4:	2c 91       	ld	r18, X
    16f6:	80 e2       	ldi	r24, 0x20	; 32
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	a0 e0       	ldi	r26, 0x00	; 0
    16fc:	b0 e0       	ldi	r27, 0x00	; 0
    16fe:	8e 19       	sub	r24, r14
    1700:	9f 09       	sbc	r25, r15
    1702:	a0 0b       	sbc	r26, r16
    1704:	b1 0b       	sbc	r27, r17
    1706:	82 1b       	sub	r24, r18
    1708:	91 09       	sbc	r25, r1
    170a:	a1 09       	sbc	r26, r1
    170c:	b1 09       	sbc	r27, r1
    170e:	00 97       	sbiw	r24, 0x00	; 0
    1710:	a1 05       	cpc	r26, r1
    1712:	b1 05       	cpc	r27, r1
    1714:	09 f0       	breq	.+2      	; 0x1718 <__umoddi3+0x75e>
    1716:	4f c0       	rjmp	.+158    	; 0x17b6 <__umoddi3+0x7fc>
    1718:	a6 14       	cp	r10, r6
    171a:	b7 04       	cpc	r11, r7
    171c:	c8 04       	cpc	r12, r8
    171e:	d9 04       	cpc	r13, r9
    1720:	58 f0       	brcs	.+22     	; 0x1738 <__umoddi3+0x77e>
    1722:	6c 96       	adiw	r28, 0x1c	; 28
    1724:	ec ac       	ldd	r14, Y+60	; 0x3c
    1726:	fd ac       	ldd	r15, Y+61	; 0x3d
    1728:	0e ad       	ldd	r16, Y+62	; 0x3e
    172a:	1f ad       	ldd	r17, Y+63	; 0x3f
    172c:	6c 97       	sbiw	r28, 0x1c	; 28
    172e:	e2 14       	cp	r14, r2
    1730:	f3 04       	cpc	r15, r3
    1732:	04 05       	cpc	r16, r4
    1734:	15 05       	cpc	r17, r5
    1736:	68 f1       	brcs	.+90     	; 0x1792 <__umoddi3+0x7d8>
    1738:	6c 96       	adiw	r28, 0x1c	; 28
    173a:	ec ac       	ldd	r14, Y+60	; 0x3c
    173c:	fd ac       	ldd	r15, Y+61	; 0x3d
    173e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1740:	1f ad       	ldd	r17, Y+63	; 0x3f
    1742:	6c 97       	sbiw	r28, 0x1c	; 28
    1744:	e2 18       	sub	r14, r2
    1746:	f3 08       	sbc	r15, r3
    1748:	04 09       	sbc	r16, r4
    174a:	15 09       	sbc	r17, r5
    174c:	a4 01       	movw	r20, r8
    174e:	93 01       	movw	r18, r6
    1750:	2a 19       	sub	r18, r10
    1752:	3b 09       	sbc	r19, r11
    1754:	4c 09       	sbc	r20, r12
    1756:	5d 09       	sbc	r21, r13
    1758:	aa 24       	eor	r10, r10
    175a:	bb 24       	eor	r11, r11
    175c:	65 01       	movw	r12, r10
    175e:	6c 96       	adiw	r28, 0x1c	; 28
    1760:	6c ad       	ldd	r22, Y+60	; 0x3c
    1762:	7d ad       	ldd	r23, Y+61	; 0x3d
    1764:	8e ad       	ldd	r24, Y+62	; 0x3e
    1766:	9f ad       	ldd	r25, Y+63	; 0x3f
    1768:	6c 97       	sbiw	r28, 0x1c	; 28
    176a:	6e 15       	cp	r22, r14
    176c:	7f 05       	cpc	r23, r15
    176e:	80 07       	cpc	r24, r16
    1770:	91 07       	cpc	r25, r17
    1772:	28 f4       	brcc	.+10     	; 0x177e <__umoddi3+0x7c4>
    1774:	b1 e0       	ldi	r27, 0x01	; 1
    1776:	ab 2e       	mov	r10, r27
    1778:	b1 2c       	mov	r11, r1
    177a:	c1 2c       	mov	r12, r1
    177c:	d1 2c       	mov	r13, r1
    177e:	da 01       	movw	r26, r20
    1780:	c9 01       	movw	r24, r18
    1782:	8a 19       	sub	r24, r10
    1784:	9b 09       	sbc	r25, r11
    1786:	ac 09       	sbc	r26, r12
    1788:	bd 09       	sbc	r27, r13
    178a:	8d ab       	std	Y+53, r24	; 0x35
    178c:	9e ab       	std	Y+54, r25	; 0x36
    178e:	af ab       	std	Y+55, r26	; 0x37
    1790:	b8 af       	std	Y+56, r27	; 0x38
    1792:	e9 8a       	std	Y+17, r14	; 0x11
    1794:	fa 8a       	std	Y+18, r15	; 0x12
    1796:	0b 8b       	std	Y+19, r16	; 0x13
    1798:	1c 8b       	std	Y+20, r17	; 0x14
    179a:	6d a8       	ldd	r6, Y+53	; 0x35
    179c:	7e a8       	ldd	r7, Y+54	; 0x36
    179e:	8f a8       	ldd	r8, Y+55	; 0x37
    17a0:	98 ac       	ldd	r9, Y+56	; 0x38
    17a2:	6d 8a       	std	Y+21, r6	; 0x15
    17a4:	7e 8a       	std	Y+22, r7	; 0x16
    17a6:	8f 8a       	std	Y+23, r8	; 0x17
    17a8:	98 8e       	std	Y+24, r9	; 0x18
    17aa:	2e 2d       	mov	r18, r14
    17ac:	3a 89       	ldd	r19, Y+18	; 0x12
    17ae:	4b 89       	ldd	r20, Y+19	; 0x13
    17b0:	5c 89       	ldd	r21, Y+20	; 0x14
    17b2:	6d a9       	ldd	r22, Y+53	; 0x35
    17b4:	6a c2       	rjmp	.+1236   	; 0x1c8a <__umoddi3+0xcd0>
    17b6:	67 96       	adiw	r28, 0x17	; 23
    17b8:	8f af       	std	Y+63, r24	; 0x3f
    17ba:	67 97       	sbiw	r28, 0x17	; 23
    17bc:	a6 01       	movw	r20, r12
    17be:	95 01       	movw	r18, r10
    17c0:	08 2e       	mov	r0, r24
    17c2:	04 c0       	rjmp	.+8      	; 0x17cc <__umoddi3+0x812>
    17c4:	22 0f       	add	r18, r18
    17c6:	33 1f       	adc	r19, r19
    17c8:	44 1f       	adc	r20, r20
    17ca:	55 1f       	adc	r21, r21
    17cc:	0a 94       	dec	r0
    17ce:	d2 f7       	brpl	.-12     	; 0x17c4 <__umoddi3+0x80a>
    17d0:	a0 e2       	ldi	r26, 0x20	; 32
    17d2:	aa 2e       	mov	r10, r26
    17d4:	a8 1a       	sub	r10, r24
    17d6:	66 96       	adiw	r28, 0x16	; 22
    17d8:	af ae       	std	Y+63, r10	; 0x3f
    17da:	66 97       	sbiw	r28, 0x16	; 22
    17dc:	d2 01       	movw	r26, r4
    17de:	c1 01       	movw	r24, r2
    17e0:	04 c0       	rjmp	.+8      	; 0x17ea <__umoddi3+0x830>
    17e2:	b6 95       	lsr	r27
    17e4:	a7 95       	ror	r26
    17e6:	97 95       	ror	r25
    17e8:	87 95       	ror	r24
    17ea:	aa 94       	dec	r10
    17ec:	d2 f7       	brpl	.-12     	; 0x17e2 <__umoddi3+0x828>
    17ee:	6c 01       	movw	r12, r24
    17f0:	7d 01       	movw	r14, r26
    17f2:	c2 2a       	or	r12, r18
    17f4:	d3 2a       	or	r13, r19
    17f6:	e4 2a       	or	r14, r20
    17f8:	f5 2a       	or	r15, r21
    17fa:	c9 a6       	std	Y+41, r12	; 0x29
    17fc:	da a6       	std	Y+42, r13	; 0x2a
    17fe:	eb a6       	std	Y+43, r14	; 0x2b
    1800:	fc a6       	std	Y+44, r15	; 0x2c
    1802:	82 01       	movw	r16, r4
    1804:	71 01       	movw	r14, r2
    1806:	67 96       	adiw	r28, 0x17	; 23
    1808:	0f ac       	ldd	r0, Y+63	; 0x3f
    180a:	67 97       	sbiw	r28, 0x17	; 23
    180c:	04 c0       	rjmp	.+8      	; 0x1816 <__umoddi3+0x85c>
    180e:	ee 0c       	add	r14, r14
    1810:	ff 1c       	adc	r15, r15
    1812:	00 1f       	adc	r16, r16
    1814:	11 1f       	adc	r17, r17
    1816:	0a 94       	dec	r0
    1818:	d2 f7       	brpl	.-12     	; 0x180e <__umoddi3+0x854>
    181a:	ed a2       	std	Y+37, r14	; 0x25
    181c:	fe a2       	std	Y+38, r15	; 0x26
    181e:	0f a3       	std	Y+39, r16	; 0x27
    1820:	18 a7       	std	Y+40, r17	; 0x28
    1822:	64 01       	movw	r12, r8
    1824:	53 01       	movw	r10, r6
    1826:	66 96       	adiw	r28, 0x16	; 22
    1828:	0f ac       	ldd	r0, Y+63	; 0x3f
    182a:	66 97       	sbiw	r28, 0x16	; 22
    182c:	04 c0       	rjmp	.+8      	; 0x1836 <__umoddi3+0x87c>
    182e:	d6 94       	lsr	r13
    1830:	c7 94       	ror	r12
    1832:	b7 94       	ror	r11
    1834:	a7 94       	ror	r10
    1836:	0a 94       	dec	r0
    1838:	d2 f7       	brpl	.-12     	; 0x182e <__umoddi3+0x874>
    183a:	a4 01       	movw	r20, r8
    183c:	93 01       	movw	r18, r6
    183e:	67 96       	adiw	r28, 0x17	; 23
    1840:	0f ac       	ldd	r0, Y+63	; 0x3f
    1842:	67 97       	sbiw	r28, 0x17	; 23
    1844:	04 c0       	rjmp	.+8      	; 0x184e <__umoddi3+0x894>
    1846:	22 0f       	add	r18, r18
    1848:	33 1f       	adc	r19, r19
    184a:	44 1f       	adc	r20, r20
    184c:	55 1f       	adc	r21, r21
    184e:	0a 94       	dec	r0
    1850:	d2 f7       	brpl	.-12     	; 0x1846 <__umoddi3+0x88c>
    1852:	6c 96       	adiw	r28, 0x1c	; 28
    1854:	8c ad       	ldd	r24, Y+60	; 0x3c
    1856:	9d ad       	ldd	r25, Y+61	; 0x3d
    1858:	ae ad       	ldd	r26, Y+62	; 0x3e
    185a:	bf ad       	ldd	r27, Y+63	; 0x3f
    185c:	6c 97       	sbiw	r28, 0x1c	; 28
    185e:	66 96       	adiw	r28, 0x16	; 22
    1860:	0f ac       	ldd	r0, Y+63	; 0x3f
    1862:	66 97       	sbiw	r28, 0x16	; 22
    1864:	04 c0       	rjmp	.+8      	; 0x186e <__umoddi3+0x8b4>
    1866:	b6 95       	lsr	r27
    1868:	a7 95       	ror	r26
    186a:	97 95       	ror	r25
    186c:	87 95       	ror	r24
    186e:	0a 94       	dec	r0
    1870:	d2 f7       	brpl	.-12     	; 0x1866 <__umoddi3+0x8ac>
    1872:	3c 01       	movw	r6, r24
    1874:	4d 01       	movw	r8, r26
    1876:	62 2a       	or	r6, r18
    1878:	73 2a       	or	r7, r19
    187a:	84 2a       	or	r8, r20
    187c:	95 2a       	or	r9, r21
    187e:	69 a2       	std	Y+33, r6	; 0x21
    1880:	7a a2       	std	Y+34, r7	; 0x22
    1882:	8b a2       	std	Y+35, r8	; 0x23
    1884:	9c a2       	std	Y+36, r9	; 0x24
    1886:	6c 96       	adiw	r28, 0x1c	; 28
    1888:	ec ac       	ldd	r14, Y+60	; 0x3c
    188a:	fd ac       	ldd	r15, Y+61	; 0x3d
    188c:	0e ad       	ldd	r16, Y+62	; 0x3e
    188e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1890:	6c 97       	sbiw	r28, 0x1c	; 28
    1892:	67 96       	adiw	r28, 0x17	; 23
    1894:	0f ac       	ldd	r0, Y+63	; 0x3f
    1896:	67 97       	sbiw	r28, 0x17	; 23
    1898:	04 c0       	rjmp	.+8      	; 0x18a2 <__umoddi3+0x8e8>
    189a:	ee 0c       	add	r14, r14
    189c:	ff 1c       	adc	r15, r15
    189e:	00 1f       	adc	r16, r16
    18a0:	11 1f       	adc	r17, r17
    18a2:	0a 94       	dec	r0
    18a4:	d2 f7       	brpl	.-12     	; 0x189a <__umoddi3+0x8e0>
    18a6:	ed 8e       	std	Y+29, r14	; 0x1d
    18a8:	fe 8e       	std	Y+30, r15	; 0x1e
    18aa:	0f 8f       	std	Y+31, r16	; 0x1f
    18ac:	18 a3       	std	Y+32, r17	; 0x20
    18ae:	49 a5       	ldd	r20, Y+41	; 0x29
    18b0:	5a a5       	ldd	r21, Y+42	; 0x2a
    18b2:	6b a5       	ldd	r22, Y+43	; 0x2b
    18b4:	7c a5       	ldd	r23, Y+44	; 0x2c
    18b6:	3b 01       	movw	r6, r22
    18b8:	88 24       	eor	r8, r8
    18ba:	99 24       	eor	r9, r9
    18bc:	60 70       	andi	r22, 0x00	; 0
    18be:	70 70       	andi	r23, 0x00	; 0
    18c0:	2d 96       	adiw	r28, 0x0d	; 13
    18c2:	4c af       	std	Y+60, r20	; 0x3c
    18c4:	5d af       	std	Y+61, r21	; 0x3d
    18c6:	6e af       	std	Y+62, r22	; 0x3e
    18c8:	7f af       	std	Y+63, r23	; 0x3f
    18ca:	2d 97       	sbiw	r28, 0x0d	; 13
    18cc:	c6 01       	movw	r24, r12
    18ce:	b5 01       	movw	r22, r10
    18d0:	a4 01       	movw	r20, r8
    18d2:	93 01       	movw	r18, r6
    18d4:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    18d8:	7b 01       	movw	r14, r22
    18da:	8c 01       	movw	r16, r24
    18dc:	c6 01       	movw	r24, r12
    18de:	b5 01       	movw	r22, r10
    18e0:	a4 01       	movw	r20, r8
    18e2:	93 01       	movw	r18, r6
    18e4:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    18e8:	c9 01       	movw	r24, r18
    18ea:	da 01       	movw	r26, r20
    18ec:	1c 01       	movw	r2, r24
    18ee:	2d 01       	movw	r4, r26
    18f0:	c2 01       	movw	r24, r4
    18f2:	b1 01       	movw	r22, r2
    18f4:	2d 96       	adiw	r28, 0x0d	; 13
    18f6:	2c ad       	ldd	r18, Y+60	; 0x3c
    18f8:	3d ad       	ldd	r19, Y+61	; 0x3d
    18fa:	4e ad       	ldd	r20, Y+62	; 0x3e
    18fc:	5f ad       	ldd	r21, Y+63	; 0x3f
    18fe:	2d 97       	sbiw	r28, 0x0d	; 13
    1900:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    1904:	9b 01       	movw	r18, r22
    1906:	ac 01       	movw	r20, r24
    1908:	87 01       	movw	r16, r14
    190a:	ff 24       	eor	r15, r15
    190c:	ee 24       	eor	r14, r14
    190e:	a9 a0       	ldd	r10, Y+33	; 0x21
    1910:	ba a0       	ldd	r11, Y+34	; 0x22
    1912:	cb a0       	ldd	r12, Y+35	; 0x23
    1914:	dc a0       	ldd	r13, Y+36	; 0x24
    1916:	c6 01       	movw	r24, r12
    1918:	aa 27       	eor	r26, r26
    191a:	bb 27       	eor	r27, r27
    191c:	57 01       	movw	r10, r14
    191e:	68 01       	movw	r12, r16
    1920:	a8 2a       	or	r10, r24
    1922:	b9 2a       	or	r11, r25
    1924:	ca 2a       	or	r12, r26
    1926:	db 2a       	or	r13, r27
    1928:	a2 16       	cp	r10, r18
    192a:	b3 06       	cpc	r11, r19
    192c:	c4 06       	cpc	r12, r20
    192e:	d5 06       	cpc	r13, r21
    1930:	00 f5       	brcc	.+64     	; 0x1972 <__umoddi3+0x9b8>
    1932:	08 94       	sec
    1934:	21 08       	sbc	r2, r1
    1936:	31 08       	sbc	r3, r1
    1938:	41 08       	sbc	r4, r1
    193a:	51 08       	sbc	r5, r1
    193c:	e9 a4       	ldd	r14, Y+41	; 0x29
    193e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1940:	0b a5       	ldd	r16, Y+43	; 0x2b
    1942:	1c a5       	ldd	r17, Y+44	; 0x2c
    1944:	ae 0c       	add	r10, r14
    1946:	bf 1c       	adc	r11, r15
    1948:	c0 1e       	adc	r12, r16
    194a:	d1 1e       	adc	r13, r17
    194c:	ae 14       	cp	r10, r14
    194e:	bf 04       	cpc	r11, r15
    1950:	c0 06       	cpc	r12, r16
    1952:	d1 06       	cpc	r13, r17
    1954:	70 f0       	brcs	.+28     	; 0x1972 <__umoddi3+0x9b8>
    1956:	a2 16       	cp	r10, r18
    1958:	b3 06       	cpc	r11, r19
    195a:	c4 06       	cpc	r12, r20
    195c:	d5 06       	cpc	r13, r21
    195e:	48 f4       	brcc	.+18     	; 0x1972 <__umoddi3+0x9b8>
    1960:	08 94       	sec
    1962:	21 08       	sbc	r2, r1
    1964:	31 08       	sbc	r3, r1
    1966:	41 08       	sbc	r4, r1
    1968:	51 08       	sbc	r5, r1
    196a:	ae 0c       	add	r10, r14
    196c:	bf 1c       	adc	r11, r15
    196e:	c0 1e       	adc	r12, r16
    1970:	d1 1e       	adc	r13, r17
    1972:	a2 1a       	sub	r10, r18
    1974:	b3 0a       	sbc	r11, r19
    1976:	c4 0a       	sbc	r12, r20
    1978:	d5 0a       	sbc	r13, r21
    197a:	c6 01       	movw	r24, r12
    197c:	b5 01       	movw	r22, r10
    197e:	a4 01       	movw	r20, r8
    1980:	93 01       	movw	r18, r6
    1982:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1986:	7b 01       	movw	r14, r22
    1988:	8c 01       	movw	r16, r24
    198a:	c6 01       	movw	r24, r12
    198c:	b5 01       	movw	r22, r10
    198e:	a4 01       	movw	r20, r8
    1990:	93 01       	movw	r18, r6
    1992:	0e 94 cc 28 	call	0x5198	; 0x5198 <__udivmodsi4>
    1996:	c9 01       	movw	r24, r18
    1998:	da 01       	movw	r26, r20
    199a:	3c 01       	movw	r6, r24
    199c:	4d 01       	movw	r8, r26
    199e:	c4 01       	movw	r24, r8
    19a0:	b3 01       	movw	r22, r6
    19a2:	2d 96       	adiw	r28, 0x0d	; 13
    19a4:	2c ad       	ldd	r18, Y+60	; 0x3c
    19a6:	3d ad       	ldd	r19, Y+61	; 0x3d
    19a8:	4e ad       	ldd	r20, Y+62	; 0x3e
    19aa:	5f ad       	ldd	r21, Y+63	; 0x3f
    19ac:	2d 97       	sbiw	r28, 0x0d	; 13
    19ae:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    19b2:	9b 01       	movw	r18, r22
    19b4:	ac 01       	movw	r20, r24
    19b6:	87 01       	movw	r16, r14
    19b8:	ff 24       	eor	r15, r15
    19ba:	ee 24       	eor	r14, r14
    19bc:	89 a1       	ldd	r24, Y+33	; 0x21
    19be:	9a a1       	ldd	r25, Y+34	; 0x22
    19c0:	ab a1       	ldd	r26, Y+35	; 0x23
    19c2:	bc a1       	ldd	r27, Y+36	; 0x24
    19c4:	a0 70       	andi	r26, 0x00	; 0
    19c6:	b0 70       	andi	r27, 0x00	; 0
    19c8:	57 01       	movw	r10, r14
    19ca:	68 01       	movw	r12, r16
    19cc:	a8 2a       	or	r10, r24
    19ce:	b9 2a       	or	r11, r25
    19d0:	ca 2a       	or	r12, r26
    19d2:	db 2a       	or	r13, r27
    19d4:	a2 16       	cp	r10, r18
    19d6:	b3 06       	cpc	r11, r19
    19d8:	c4 06       	cpc	r12, r20
    19da:	d5 06       	cpc	r13, r21
    19dc:	00 f5       	brcc	.+64     	; 0x1a1e <__umoddi3+0xa64>
    19de:	08 94       	sec
    19e0:	61 08       	sbc	r6, r1
    19e2:	71 08       	sbc	r7, r1
    19e4:	81 08       	sbc	r8, r1
    19e6:	91 08       	sbc	r9, r1
    19e8:	69 a5       	ldd	r22, Y+41	; 0x29
    19ea:	7a a5       	ldd	r23, Y+42	; 0x2a
    19ec:	8b a5       	ldd	r24, Y+43	; 0x2b
    19ee:	9c a5       	ldd	r25, Y+44	; 0x2c
    19f0:	a6 0e       	add	r10, r22
    19f2:	b7 1e       	adc	r11, r23
    19f4:	c8 1e       	adc	r12, r24
    19f6:	d9 1e       	adc	r13, r25
    19f8:	a6 16       	cp	r10, r22
    19fa:	b7 06       	cpc	r11, r23
    19fc:	c8 06       	cpc	r12, r24
    19fe:	d9 06       	cpc	r13, r25
    1a00:	70 f0       	brcs	.+28     	; 0x1a1e <__umoddi3+0xa64>
    1a02:	a2 16       	cp	r10, r18
    1a04:	b3 06       	cpc	r11, r19
    1a06:	c4 06       	cpc	r12, r20
    1a08:	d5 06       	cpc	r13, r21
    1a0a:	48 f4       	brcc	.+18     	; 0x1a1e <__umoddi3+0xa64>
    1a0c:	08 94       	sec
    1a0e:	61 08       	sbc	r6, r1
    1a10:	71 08       	sbc	r7, r1
    1a12:	81 08       	sbc	r8, r1
    1a14:	91 08       	sbc	r9, r1
    1a16:	a6 0e       	add	r10, r22
    1a18:	b7 1e       	adc	r11, r23
    1a1a:	c8 1e       	adc	r12, r24
    1a1c:	d9 1e       	adc	r13, r25
    1a1e:	d6 01       	movw	r26, r12
    1a20:	c5 01       	movw	r24, r10
    1a22:	82 1b       	sub	r24, r18
    1a24:	93 0b       	sbc	r25, r19
    1a26:	a4 0b       	sbc	r26, r20
    1a28:	b5 0b       	sbc	r27, r21
    1a2a:	89 8f       	std	Y+25, r24	; 0x19
    1a2c:	9a 8f       	std	Y+26, r25	; 0x1a
    1a2e:	ab 8f       	std	Y+27, r26	; 0x1b
    1a30:	bc 8f       	std	Y+28, r27	; 0x1c
    1a32:	d1 01       	movw	r26, r2
    1a34:	99 27       	eor	r25, r25
    1a36:	88 27       	eor	r24, r24
    1a38:	84 01       	movw	r16, r8
    1a3a:	73 01       	movw	r14, r6
    1a3c:	e8 2a       	or	r14, r24
    1a3e:	f9 2a       	or	r15, r25
    1a40:	0a 2b       	or	r16, r26
    1a42:	1b 2b       	or	r17, r27
    1a44:	4f ef       	ldi	r20, 0xFF	; 255
    1a46:	a4 2e       	mov	r10, r20
    1a48:	4f ef       	ldi	r20, 0xFF	; 255
    1a4a:	b4 2e       	mov	r11, r20
    1a4c:	c1 2c       	mov	r12, r1
    1a4e:	d1 2c       	mov	r13, r1
    1a50:	ae 20       	and	r10, r14
    1a52:	bf 20       	and	r11, r15
    1a54:	c0 22       	and	r12, r16
    1a56:	d1 22       	and	r13, r17
    1a58:	78 01       	movw	r14, r16
    1a5a:	00 27       	eor	r16, r16
    1a5c:	11 27       	eor	r17, r17
    1a5e:	6d a0       	ldd	r6, Y+37	; 0x25
    1a60:	7e a0       	ldd	r7, Y+38	; 0x26
    1a62:	8f a0       	ldd	r8, Y+39	; 0x27
    1a64:	98 a4       	ldd	r9, Y+40	; 0x28
    1a66:	4f ef       	ldi	r20, 0xFF	; 255
    1a68:	5f ef       	ldi	r21, 0xFF	; 255
    1a6a:	60 e0       	ldi	r22, 0x00	; 0
    1a6c:	70 e0       	ldi	r23, 0x00	; 0
    1a6e:	64 22       	and	r6, r20
    1a70:	75 22       	and	r7, r21
    1a72:	86 22       	and	r8, r22
    1a74:	97 22       	and	r9, r23
    1a76:	8d a1       	ldd	r24, Y+37	; 0x25
    1a78:	9e a1       	ldd	r25, Y+38	; 0x26
    1a7a:	af a1       	ldd	r26, Y+39	; 0x27
    1a7c:	b8 a5       	ldd	r27, Y+40	; 0x28
    1a7e:	bd 01       	movw	r22, r26
    1a80:	88 27       	eor	r24, r24
    1a82:	99 27       	eor	r25, r25
    1a84:	65 96       	adiw	r28, 0x15	; 21
    1a86:	6c af       	std	Y+60, r22	; 0x3c
    1a88:	7d af       	std	Y+61, r23	; 0x3d
    1a8a:	8e af       	std	Y+62, r24	; 0x3e
    1a8c:	9f af       	std	Y+63, r25	; 0x3f
    1a8e:	65 97       	sbiw	r28, 0x15	; 21
    1a90:	c6 01       	movw	r24, r12
    1a92:	b5 01       	movw	r22, r10
    1a94:	a4 01       	movw	r20, r8
    1a96:	93 01       	movw	r18, r6
    1a98:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    1a9c:	61 96       	adiw	r28, 0x11	; 17
    1a9e:	6c af       	std	Y+60, r22	; 0x3c
    1aa0:	7d af       	std	Y+61, r23	; 0x3d
    1aa2:	8e af       	std	Y+62, r24	; 0x3e
    1aa4:	9f af       	std	Y+63, r25	; 0x3f
    1aa6:	61 97       	sbiw	r28, 0x11	; 17
    1aa8:	c6 01       	movw	r24, r12
    1aaa:	b5 01       	movw	r22, r10
    1aac:	65 96       	adiw	r28, 0x15	; 21
    1aae:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ab0:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ab2:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ab4:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ab6:	65 97       	sbiw	r28, 0x15	; 21
    1ab8:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    1abc:	1b 01       	movw	r2, r22
    1abe:	2c 01       	movw	r4, r24
    1ac0:	c8 01       	movw	r24, r16
    1ac2:	b7 01       	movw	r22, r14
    1ac4:	a4 01       	movw	r20, r8
    1ac6:	93 01       	movw	r18, r6
    1ac8:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    1acc:	5b 01       	movw	r10, r22
    1ace:	6c 01       	movw	r12, r24
    1ad0:	c8 01       	movw	r24, r16
    1ad2:	b7 01       	movw	r22, r14
    1ad4:	65 96       	adiw	r28, 0x15	; 21
    1ad6:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ad8:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ada:	4e ad       	ldd	r20, Y+62	; 0x3e
    1adc:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ade:	65 97       	sbiw	r28, 0x15	; 21
    1ae0:	0e 94 ad 28 	call	0x515a	; 0x515a <__mulsi3>
    1ae4:	7b 01       	movw	r14, r22
    1ae6:	8c 01       	movw	r16, r24
    1ae8:	a6 01       	movw	r20, r12
    1aea:	95 01       	movw	r18, r10
    1aec:	22 0d       	add	r18, r2
    1aee:	33 1d       	adc	r19, r3
    1af0:	44 1d       	adc	r20, r4
    1af2:	55 1d       	adc	r21, r5
    1af4:	61 96       	adiw	r28, 0x11	; 17
    1af6:	6c ac       	ldd	r6, Y+60	; 0x3c
    1af8:	7d ac       	ldd	r7, Y+61	; 0x3d
    1afa:	8e ac       	ldd	r8, Y+62	; 0x3e
    1afc:	9f ac       	ldd	r9, Y+63	; 0x3f
    1afe:	61 97       	sbiw	r28, 0x11	; 17
    1b00:	c4 01       	movw	r24, r8
    1b02:	aa 27       	eor	r26, r26
    1b04:	bb 27       	eor	r27, r27
    1b06:	28 0f       	add	r18, r24
    1b08:	39 1f       	adc	r19, r25
    1b0a:	4a 1f       	adc	r20, r26
    1b0c:	5b 1f       	adc	r21, r27
    1b0e:	2a 15       	cp	r18, r10
    1b10:	3b 05       	cpc	r19, r11
    1b12:	4c 05       	cpc	r20, r12
    1b14:	5d 05       	cpc	r21, r13
    1b16:	48 f4       	brcc	.+18     	; 0x1b2a <__umoddi3+0xb70>
    1b18:	81 2c       	mov	r8, r1
    1b1a:	91 2c       	mov	r9, r1
    1b1c:	e1 e0       	ldi	r30, 0x01	; 1
    1b1e:	ae 2e       	mov	r10, r30
    1b20:	b1 2c       	mov	r11, r1
    1b22:	e8 0c       	add	r14, r8
    1b24:	f9 1c       	adc	r15, r9
    1b26:	0a 1d       	adc	r16, r10
    1b28:	1b 1d       	adc	r17, r11
    1b2a:	ca 01       	movw	r24, r20
    1b2c:	aa 27       	eor	r26, r26
    1b2e:	bb 27       	eor	r27, r27
    1b30:	57 01       	movw	r10, r14
    1b32:	68 01       	movw	r12, r16
    1b34:	a8 0e       	add	r10, r24
    1b36:	b9 1e       	adc	r11, r25
    1b38:	ca 1e       	adc	r12, r26
    1b3a:	db 1e       	adc	r13, r27
    1b3c:	a9 01       	movw	r20, r18
    1b3e:	33 27       	eor	r19, r19
    1b40:	22 27       	eor	r18, r18
    1b42:	61 96       	adiw	r28, 0x11	; 17
    1b44:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b46:	9d ad       	ldd	r25, Y+61	; 0x3d
    1b48:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b4a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b4c:	61 97       	sbiw	r28, 0x11	; 17
    1b4e:	a0 70       	andi	r26, 0x00	; 0
    1b50:	b0 70       	andi	r27, 0x00	; 0
    1b52:	28 0f       	add	r18, r24
    1b54:	39 1f       	adc	r19, r25
    1b56:	4a 1f       	adc	r20, r26
    1b58:	5b 1f       	adc	r21, r27
    1b5a:	e9 8c       	ldd	r14, Y+25	; 0x19
    1b5c:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1b5e:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1b60:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1b62:	ea 14       	cp	r14, r10
    1b64:	fb 04       	cpc	r15, r11
    1b66:	0c 05       	cpc	r16, r12
    1b68:	1d 05       	cpc	r17, r13
    1b6a:	70 f0       	brcs	.+28     	; 0x1b88 <__umoddi3+0xbce>
    1b6c:	ae 14       	cp	r10, r14
    1b6e:	bf 04       	cpc	r11, r15
    1b70:	c0 06       	cpc	r12, r16
    1b72:	d1 06       	cpc	r13, r17
    1b74:	69 f5       	brne	.+90     	; 0x1bd0 <__umoddi3+0xc16>
    1b76:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b78:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b7a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b7c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b7e:	62 17       	cp	r22, r18
    1b80:	73 07       	cpc	r23, r19
    1b82:	84 07       	cpc	r24, r20
    1b84:	95 07       	cpc	r25, r21
    1b86:	20 f5       	brcc	.+72     	; 0x1bd0 <__umoddi3+0xc16>
    1b88:	da 01       	movw	r26, r20
    1b8a:	c9 01       	movw	r24, r18
    1b8c:	6d a0       	ldd	r6, Y+37	; 0x25
    1b8e:	7e a0       	ldd	r7, Y+38	; 0x26
    1b90:	8f a0       	ldd	r8, Y+39	; 0x27
    1b92:	98 a4       	ldd	r9, Y+40	; 0x28
    1b94:	86 19       	sub	r24, r6
    1b96:	97 09       	sbc	r25, r7
    1b98:	a8 09       	sbc	r26, r8
    1b9a:	b9 09       	sbc	r27, r9
    1b9c:	e9 a4       	ldd	r14, Y+41	; 0x29
    1b9e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1ba0:	0b a5       	ldd	r16, Y+43	; 0x2b
    1ba2:	1c a5       	ldd	r17, Y+44	; 0x2c
    1ba4:	ae 18       	sub	r10, r14
    1ba6:	bf 08       	sbc	r11, r15
    1ba8:	c0 0a       	sbc	r12, r16
    1baa:	d1 0a       	sbc	r13, r17
    1bac:	ee 24       	eor	r14, r14
    1bae:	ff 24       	eor	r15, r15
    1bb0:	87 01       	movw	r16, r14
    1bb2:	28 17       	cp	r18, r24
    1bb4:	39 07       	cpc	r19, r25
    1bb6:	4a 07       	cpc	r20, r26
    1bb8:	5b 07       	cpc	r21, r27
    1bba:	28 f4       	brcc	.+10     	; 0x1bc6 <__umoddi3+0xc0c>
    1bbc:	21 e0       	ldi	r18, 0x01	; 1
    1bbe:	e2 2e       	mov	r14, r18
    1bc0:	f1 2c       	mov	r15, r1
    1bc2:	01 2d       	mov	r16, r1
    1bc4:	11 2d       	mov	r17, r1
    1bc6:	ae 18       	sub	r10, r14
    1bc8:	bf 08       	sbc	r11, r15
    1bca:	c0 0a       	sbc	r12, r16
    1bcc:	d1 0a       	sbc	r13, r17
    1bce:	02 c0       	rjmp	.+4      	; 0x1bd4 <__umoddi3+0xc1a>
    1bd0:	da 01       	movw	r26, r20
    1bd2:	c9 01       	movw	r24, r18
    1bd4:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1bd6:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1bd8:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1bda:	98 a0       	ldd	r9, Y+32	; 0x20
    1bdc:	68 1a       	sub	r6, r24
    1bde:	79 0a       	sbc	r7, r25
    1be0:	8a 0a       	sbc	r8, r26
    1be2:	9b 0a       	sbc	r9, r27
    1be4:	49 8d       	ldd	r20, Y+25	; 0x19
    1be6:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1be8:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1bea:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1bec:	4a 19       	sub	r20, r10
    1bee:	5b 09       	sbc	r21, r11
    1bf0:	6c 09       	sbc	r22, r12
    1bf2:	7d 09       	sbc	r23, r13
    1bf4:	5a 01       	movw	r10, r20
    1bf6:	6b 01       	movw	r12, r22
    1bf8:	22 24       	eor	r2, r2
    1bfa:	33 24       	eor	r3, r3
    1bfc:	21 01       	movw	r4, r2
    1bfe:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c00:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c02:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c04:	98 a1       	ldd	r25, Y+32	; 0x20
    1c06:	66 15       	cp	r22, r6
    1c08:	77 05       	cpc	r23, r7
    1c0a:	88 05       	cpc	r24, r8
    1c0c:	99 05       	cpc	r25, r9
    1c0e:	28 f4       	brcc	.+10     	; 0x1c1a <__umoddi3+0xc60>
    1c10:	81 e0       	ldi	r24, 0x01	; 1
    1c12:	28 2e       	mov	r2, r24
    1c14:	31 2c       	mov	r3, r1
    1c16:	41 2c       	mov	r4, r1
    1c18:	51 2c       	mov	r5, r1
    1c1a:	86 01       	movw	r16, r12
    1c1c:	75 01       	movw	r14, r10
    1c1e:	e2 18       	sub	r14, r2
    1c20:	f3 08       	sbc	r15, r3
    1c22:	04 09       	sbc	r16, r4
    1c24:	15 09       	sbc	r17, r5
    1c26:	a8 01       	movw	r20, r16
    1c28:	97 01       	movw	r18, r14
    1c2a:	66 96       	adiw	r28, 0x16	; 22
    1c2c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c2e:	66 97       	sbiw	r28, 0x16	; 22
    1c30:	04 c0       	rjmp	.+8      	; 0x1c3a <__umoddi3+0xc80>
    1c32:	22 0f       	add	r18, r18
    1c34:	33 1f       	adc	r19, r19
    1c36:	44 1f       	adc	r20, r20
    1c38:	55 1f       	adc	r21, r21
    1c3a:	0a 94       	dec	r0
    1c3c:	d2 f7       	brpl	.-12     	; 0x1c32 <__umoddi3+0xc78>
    1c3e:	d4 01       	movw	r26, r8
    1c40:	c3 01       	movw	r24, r6
    1c42:	67 96       	adiw	r28, 0x17	; 23
    1c44:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c46:	67 97       	sbiw	r28, 0x17	; 23
    1c48:	04 c0       	rjmp	.+8      	; 0x1c52 <__umoddi3+0xc98>
    1c4a:	b6 95       	lsr	r27
    1c4c:	a7 95       	ror	r26
    1c4e:	97 95       	ror	r25
    1c50:	87 95       	ror	r24
    1c52:	0a 94       	dec	r0
    1c54:	d2 f7       	brpl	.-12     	; 0x1c4a <__umoddi3+0xc90>
    1c56:	28 2b       	or	r18, r24
    1c58:	39 2b       	or	r19, r25
    1c5a:	4a 2b       	or	r20, r26
    1c5c:	5b 2b       	or	r21, r27
    1c5e:	29 8b       	std	Y+17, r18	; 0x11
    1c60:	3a 8b       	std	Y+18, r19	; 0x12
    1c62:	4b 8b       	std	Y+19, r20	; 0x13
    1c64:	5c 8b       	std	Y+20, r21	; 0x14
    1c66:	67 96       	adiw	r28, 0x17	; 23
    1c68:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c6a:	67 97       	sbiw	r28, 0x17	; 23
    1c6c:	04 c0       	rjmp	.+8      	; 0x1c76 <__umoddi3+0xcbc>
    1c6e:	16 95       	lsr	r17
    1c70:	07 95       	ror	r16
    1c72:	f7 94       	ror	r15
    1c74:	e7 94       	ror	r14
    1c76:	0a 94       	dec	r0
    1c78:	d2 f7       	brpl	.-12     	; 0x1c6e <__umoddi3+0xcb4>
    1c7a:	ed 8a       	std	Y+21, r14	; 0x15
    1c7c:	fe 8a       	std	Y+22, r15	; 0x16
    1c7e:	0f 8b       	std	Y+23, r16	; 0x17
    1c80:	18 8f       	std	Y+24, r17	; 0x18
    1c82:	3a 89       	ldd	r19, Y+18	; 0x12
    1c84:	4b 89       	ldd	r20, Y+19	; 0x13
    1c86:	5c 89       	ldd	r21, Y+20	; 0x14
    1c88:	6e 2d       	mov	r22, r14
    1c8a:	7e 89       	ldd	r23, Y+22	; 0x16
    1c8c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c8e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c90:	c5 5a       	subi	r28, 0xA5	; 165
    1c92:	df 4f       	sbci	r29, 0xFF	; 255
    1c94:	e2 e1       	ldi	r30, 0x12	; 18
    1c96:	0c 94 0a 29 	jmp	0x5214	; 0x5214 <__epilogue_restores__>

00001c9a <_fpadd_parts>:
    1c9a:	a0 e0       	ldi	r26, 0x00	; 0
    1c9c:	b0 e0       	ldi	r27, 0x00	; 0
    1c9e:	e3 e5       	ldi	r30, 0x53	; 83
    1ca0:	fe e0       	ldi	r31, 0x0E	; 14
    1ca2:	0c 94 ee 28 	jmp	0x51dc	; 0x51dc <__prologue_saves__>
    1ca6:	dc 01       	movw	r26, r24
    1ca8:	2b 01       	movw	r4, r22
    1caa:	fa 01       	movw	r30, r20
    1cac:	9c 91       	ld	r25, X
    1cae:	92 30       	cpi	r25, 0x02	; 2
    1cb0:	08 f4       	brcc	.+2      	; 0x1cb4 <_fpadd_parts+0x1a>
    1cb2:	39 c1       	rjmp	.+626    	; 0x1f26 <_fpadd_parts+0x28c>
    1cb4:	eb 01       	movw	r28, r22
    1cb6:	88 81       	ld	r24, Y
    1cb8:	82 30       	cpi	r24, 0x02	; 2
    1cba:	08 f4       	brcc	.+2      	; 0x1cbe <_fpadd_parts+0x24>
    1cbc:	33 c1       	rjmp	.+614    	; 0x1f24 <_fpadd_parts+0x28a>
    1cbe:	94 30       	cpi	r25, 0x04	; 4
    1cc0:	69 f4       	brne	.+26     	; 0x1cdc <_fpadd_parts+0x42>
    1cc2:	84 30       	cpi	r24, 0x04	; 4
    1cc4:	09 f0       	breq	.+2      	; 0x1cc8 <_fpadd_parts+0x2e>
    1cc6:	2f c1       	rjmp	.+606    	; 0x1f26 <_fpadd_parts+0x28c>
    1cc8:	11 96       	adiw	r26, 0x01	; 1
    1cca:	9c 91       	ld	r25, X
    1ccc:	11 97       	sbiw	r26, 0x01	; 1
    1cce:	89 81       	ldd	r24, Y+1	; 0x01
    1cd0:	98 17       	cp	r25, r24
    1cd2:	09 f4       	brne	.+2      	; 0x1cd6 <_fpadd_parts+0x3c>
    1cd4:	28 c1       	rjmp	.+592    	; 0x1f26 <_fpadd_parts+0x28c>
    1cd6:	a8 e7       	ldi	r26, 0x78	; 120
    1cd8:	b0 e0       	ldi	r27, 0x00	; 0
    1cda:	25 c1       	rjmp	.+586    	; 0x1f26 <_fpadd_parts+0x28c>
    1cdc:	84 30       	cpi	r24, 0x04	; 4
    1cde:	09 f4       	brne	.+2      	; 0x1ce2 <_fpadd_parts+0x48>
    1ce0:	21 c1       	rjmp	.+578    	; 0x1f24 <_fpadd_parts+0x28a>
    1ce2:	82 30       	cpi	r24, 0x02	; 2
    1ce4:	a9 f4       	brne	.+42     	; 0x1d10 <_fpadd_parts+0x76>
    1ce6:	92 30       	cpi	r25, 0x02	; 2
    1ce8:	09 f0       	breq	.+2      	; 0x1cec <_fpadd_parts+0x52>
    1cea:	1d c1       	rjmp	.+570    	; 0x1f26 <_fpadd_parts+0x28c>
    1cec:	9a 01       	movw	r18, r20
    1cee:	ad 01       	movw	r20, r26
    1cf0:	88 e0       	ldi	r24, 0x08	; 8
    1cf2:	ea 01       	movw	r28, r20
    1cf4:	09 90       	ld	r0, Y+
    1cf6:	ae 01       	movw	r20, r28
    1cf8:	e9 01       	movw	r28, r18
    1cfa:	09 92       	st	Y+, r0
    1cfc:	9e 01       	movw	r18, r28
    1cfe:	81 50       	subi	r24, 0x01	; 1
    1d00:	c1 f7       	brne	.-16     	; 0x1cf2 <_fpadd_parts+0x58>
    1d02:	e2 01       	movw	r28, r4
    1d04:	89 81       	ldd	r24, Y+1	; 0x01
    1d06:	11 96       	adiw	r26, 0x01	; 1
    1d08:	9c 91       	ld	r25, X
    1d0a:	89 23       	and	r24, r25
    1d0c:	81 83       	std	Z+1, r24	; 0x01
    1d0e:	08 c1       	rjmp	.+528    	; 0x1f20 <_fpadd_parts+0x286>
    1d10:	92 30       	cpi	r25, 0x02	; 2
    1d12:	09 f4       	brne	.+2      	; 0x1d16 <_fpadd_parts+0x7c>
    1d14:	07 c1       	rjmp	.+526    	; 0x1f24 <_fpadd_parts+0x28a>
    1d16:	12 96       	adiw	r26, 0x02	; 2
    1d18:	2d 90       	ld	r2, X+
    1d1a:	3c 90       	ld	r3, X
    1d1c:	13 97       	sbiw	r26, 0x03	; 3
    1d1e:	eb 01       	movw	r28, r22
    1d20:	8a 81       	ldd	r24, Y+2	; 0x02
    1d22:	9b 81       	ldd	r25, Y+3	; 0x03
    1d24:	14 96       	adiw	r26, 0x04	; 4
    1d26:	ad 90       	ld	r10, X+
    1d28:	bd 90       	ld	r11, X+
    1d2a:	cd 90       	ld	r12, X+
    1d2c:	dc 90       	ld	r13, X
    1d2e:	17 97       	sbiw	r26, 0x07	; 7
    1d30:	ec 80       	ldd	r14, Y+4	; 0x04
    1d32:	fd 80       	ldd	r15, Y+5	; 0x05
    1d34:	0e 81       	ldd	r16, Y+6	; 0x06
    1d36:	1f 81       	ldd	r17, Y+7	; 0x07
    1d38:	91 01       	movw	r18, r2
    1d3a:	28 1b       	sub	r18, r24
    1d3c:	39 0b       	sbc	r19, r25
    1d3e:	b9 01       	movw	r22, r18
    1d40:	37 ff       	sbrs	r19, 7
    1d42:	04 c0       	rjmp	.+8      	; 0x1d4c <_fpadd_parts+0xb2>
    1d44:	66 27       	eor	r22, r22
    1d46:	77 27       	eor	r23, r23
    1d48:	62 1b       	sub	r22, r18
    1d4a:	73 0b       	sbc	r23, r19
    1d4c:	60 32       	cpi	r22, 0x20	; 32
    1d4e:	71 05       	cpc	r23, r1
    1d50:	0c f0       	brlt	.+2      	; 0x1d54 <_fpadd_parts+0xba>
    1d52:	61 c0       	rjmp	.+194    	; 0x1e16 <_fpadd_parts+0x17c>
    1d54:	12 16       	cp	r1, r18
    1d56:	13 06       	cpc	r1, r19
    1d58:	6c f5       	brge	.+90     	; 0x1db4 <_fpadd_parts+0x11a>
    1d5a:	37 01       	movw	r6, r14
    1d5c:	48 01       	movw	r8, r16
    1d5e:	06 2e       	mov	r0, r22
    1d60:	04 c0       	rjmp	.+8      	; 0x1d6a <_fpadd_parts+0xd0>
    1d62:	96 94       	lsr	r9
    1d64:	87 94       	ror	r8
    1d66:	77 94       	ror	r7
    1d68:	67 94       	ror	r6
    1d6a:	0a 94       	dec	r0
    1d6c:	d2 f7       	brpl	.-12     	; 0x1d62 <_fpadd_parts+0xc8>
    1d6e:	21 e0       	ldi	r18, 0x01	; 1
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	40 e0       	ldi	r20, 0x00	; 0
    1d74:	50 e0       	ldi	r21, 0x00	; 0
    1d76:	04 c0       	rjmp	.+8      	; 0x1d80 <_fpadd_parts+0xe6>
    1d78:	22 0f       	add	r18, r18
    1d7a:	33 1f       	adc	r19, r19
    1d7c:	44 1f       	adc	r20, r20
    1d7e:	55 1f       	adc	r21, r21
    1d80:	6a 95       	dec	r22
    1d82:	d2 f7       	brpl	.-12     	; 0x1d78 <_fpadd_parts+0xde>
    1d84:	21 50       	subi	r18, 0x01	; 1
    1d86:	30 40       	sbci	r19, 0x00	; 0
    1d88:	40 40       	sbci	r20, 0x00	; 0
    1d8a:	50 40       	sbci	r21, 0x00	; 0
    1d8c:	2e 21       	and	r18, r14
    1d8e:	3f 21       	and	r19, r15
    1d90:	40 23       	and	r20, r16
    1d92:	51 23       	and	r21, r17
    1d94:	21 15       	cp	r18, r1
    1d96:	31 05       	cpc	r19, r1
    1d98:	41 05       	cpc	r20, r1
    1d9a:	51 05       	cpc	r21, r1
    1d9c:	21 f0       	breq	.+8      	; 0x1da6 <_fpadd_parts+0x10c>
    1d9e:	21 e0       	ldi	r18, 0x01	; 1
    1da0:	30 e0       	ldi	r19, 0x00	; 0
    1da2:	40 e0       	ldi	r20, 0x00	; 0
    1da4:	50 e0       	ldi	r21, 0x00	; 0
    1da6:	79 01       	movw	r14, r18
    1da8:	8a 01       	movw	r16, r20
    1daa:	e6 28       	or	r14, r6
    1dac:	f7 28       	or	r15, r7
    1dae:	08 29       	or	r16, r8
    1db0:	19 29       	or	r17, r9
    1db2:	3c c0       	rjmp	.+120    	; 0x1e2c <_fpadd_parts+0x192>
    1db4:	23 2b       	or	r18, r19
    1db6:	d1 f1       	breq	.+116    	; 0x1e2c <_fpadd_parts+0x192>
    1db8:	26 0e       	add	r2, r22
    1dba:	37 1e       	adc	r3, r23
    1dbc:	35 01       	movw	r6, r10
    1dbe:	46 01       	movw	r8, r12
    1dc0:	06 2e       	mov	r0, r22
    1dc2:	04 c0       	rjmp	.+8      	; 0x1dcc <_fpadd_parts+0x132>
    1dc4:	96 94       	lsr	r9
    1dc6:	87 94       	ror	r8
    1dc8:	77 94       	ror	r7
    1dca:	67 94       	ror	r6
    1dcc:	0a 94       	dec	r0
    1dce:	d2 f7       	brpl	.-12     	; 0x1dc4 <_fpadd_parts+0x12a>
    1dd0:	21 e0       	ldi	r18, 0x01	; 1
    1dd2:	30 e0       	ldi	r19, 0x00	; 0
    1dd4:	40 e0       	ldi	r20, 0x00	; 0
    1dd6:	50 e0       	ldi	r21, 0x00	; 0
    1dd8:	04 c0       	rjmp	.+8      	; 0x1de2 <_fpadd_parts+0x148>
    1dda:	22 0f       	add	r18, r18
    1ddc:	33 1f       	adc	r19, r19
    1dde:	44 1f       	adc	r20, r20
    1de0:	55 1f       	adc	r21, r21
    1de2:	6a 95       	dec	r22
    1de4:	d2 f7       	brpl	.-12     	; 0x1dda <_fpadd_parts+0x140>
    1de6:	21 50       	subi	r18, 0x01	; 1
    1de8:	30 40       	sbci	r19, 0x00	; 0
    1dea:	40 40       	sbci	r20, 0x00	; 0
    1dec:	50 40       	sbci	r21, 0x00	; 0
    1dee:	2a 21       	and	r18, r10
    1df0:	3b 21       	and	r19, r11
    1df2:	4c 21       	and	r20, r12
    1df4:	5d 21       	and	r21, r13
    1df6:	21 15       	cp	r18, r1
    1df8:	31 05       	cpc	r19, r1
    1dfa:	41 05       	cpc	r20, r1
    1dfc:	51 05       	cpc	r21, r1
    1dfe:	21 f0       	breq	.+8      	; 0x1e08 <_fpadd_parts+0x16e>
    1e00:	21 e0       	ldi	r18, 0x01	; 1
    1e02:	30 e0       	ldi	r19, 0x00	; 0
    1e04:	40 e0       	ldi	r20, 0x00	; 0
    1e06:	50 e0       	ldi	r21, 0x00	; 0
    1e08:	59 01       	movw	r10, r18
    1e0a:	6a 01       	movw	r12, r20
    1e0c:	a6 28       	or	r10, r6
    1e0e:	b7 28       	or	r11, r7
    1e10:	c8 28       	or	r12, r8
    1e12:	d9 28       	or	r13, r9
    1e14:	0b c0       	rjmp	.+22     	; 0x1e2c <_fpadd_parts+0x192>
    1e16:	82 15       	cp	r24, r2
    1e18:	93 05       	cpc	r25, r3
    1e1a:	2c f0       	brlt	.+10     	; 0x1e26 <_fpadd_parts+0x18c>
    1e1c:	1c 01       	movw	r2, r24
    1e1e:	aa 24       	eor	r10, r10
    1e20:	bb 24       	eor	r11, r11
    1e22:	65 01       	movw	r12, r10
    1e24:	03 c0       	rjmp	.+6      	; 0x1e2c <_fpadd_parts+0x192>
    1e26:	ee 24       	eor	r14, r14
    1e28:	ff 24       	eor	r15, r15
    1e2a:	87 01       	movw	r16, r14
    1e2c:	11 96       	adiw	r26, 0x01	; 1
    1e2e:	9c 91       	ld	r25, X
    1e30:	d2 01       	movw	r26, r4
    1e32:	11 96       	adiw	r26, 0x01	; 1
    1e34:	8c 91       	ld	r24, X
    1e36:	98 17       	cp	r25, r24
    1e38:	09 f4       	brne	.+2      	; 0x1e3c <_fpadd_parts+0x1a2>
    1e3a:	45 c0       	rjmp	.+138    	; 0x1ec6 <_fpadd_parts+0x22c>
    1e3c:	99 23       	and	r25, r25
    1e3e:	39 f0       	breq	.+14     	; 0x1e4e <_fpadd_parts+0x1b4>
    1e40:	a8 01       	movw	r20, r16
    1e42:	97 01       	movw	r18, r14
    1e44:	2a 19       	sub	r18, r10
    1e46:	3b 09       	sbc	r19, r11
    1e48:	4c 09       	sbc	r20, r12
    1e4a:	5d 09       	sbc	r21, r13
    1e4c:	06 c0       	rjmp	.+12     	; 0x1e5a <_fpadd_parts+0x1c0>
    1e4e:	a6 01       	movw	r20, r12
    1e50:	95 01       	movw	r18, r10
    1e52:	2e 19       	sub	r18, r14
    1e54:	3f 09       	sbc	r19, r15
    1e56:	40 0b       	sbc	r20, r16
    1e58:	51 0b       	sbc	r21, r17
    1e5a:	57 fd       	sbrc	r21, 7
    1e5c:	08 c0       	rjmp	.+16     	; 0x1e6e <_fpadd_parts+0x1d4>
    1e5e:	11 82       	std	Z+1, r1	; 0x01
    1e60:	33 82       	std	Z+3, r3	; 0x03
    1e62:	22 82       	std	Z+2, r2	; 0x02
    1e64:	24 83       	std	Z+4, r18	; 0x04
    1e66:	35 83       	std	Z+5, r19	; 0x05
    1e68:	46 83       	std	Z+6, r20	; 0x06
    1e6a:	57 83       	std	Z+7, r21	; 0x07
    1e6c:	1d c0       	rjmp	.+58     	; 0x1ea8 <_fpadd_parts+0x20e>
    1e6e:	81 e0       	ldi	r24, 0x01	; 1
    1e70:	81 83       	std	Z+1, r24	; 0x01
    1e72:	33 82       	std	Z+3, r3	; 0x03
    1e74:	22 82       	std	Z+2, r2	; 0x02
    1e76:	88 27       	eor	r24, r24
    1e78:	99 27       	eor	r25, r25
    1e7a:	dc 01       	movw	r26, r24
    1e7c:	82 1b       	sub	r24, r18
    1e7e:	93 0b       	sbc	r25, r19
    1e80:	a4 0b       	sbc	r26, r20
    1e82:	b5 0b       	sbc	r27, r21
    1e84:	84 83       	std	Z+4, r24	; 0x04
    1e86:	95 83       	std	Z+5, r25	; 0x05
    1e88:	a6 83       	std	Z+6, r26	; 0x06
    1e8a:	b7 83       	std	Z+7, r27	; 0x07
    1e8c:	0d c0       	rjmp	.+26     	; 0x1ea8 <_fpadd_parts+0x20e>
    1e8e:	22 0f       	add	r18, r18
    1e90:	33 1f       	adc	r19, r19
    1e92:	44 1f       	adc	r20, r20
    1e94:	55 1f       	adc	r21, r21
    1e96:	24 83       	std	Z+4, r18	; 0x04
    1e98:	35 83       	std	Z+5, r19	; 0x05
    1e9a:	46 83       	std	Z+6, r20	; 0x06
    1e9c:	57 83       	std	Z+7, r21	; 0x07
    1e9e:	82 81       	ldd	r24, Z+2	; 0x02
    1ea0:	93 81       	ldd	r25, Z+3	; 0x03
    1ea2:	01 97       	sbiw	r24, 0x01	; 1
    1ea4:	93 83       	std	Z+3, r25	; 0x03
    1ea6:	82 83       	std	Z+2, r24	; 0x02
    1ea8:	24 81       	ldd	r18, Z+4	; 0x04
    1eaa:	35 81       	ldd	r19, Z+5	; 0x05
    1eac:	46 81       	ldd	r20, Z+6	; 0x06
    1eae:	57 81       	ldd	r21, Z+7	; 0x07
    1eb0:	da 01       	movw	r26, r20
    1eb2:	c9 01       	movw	r24, r18
    1eb4:	01 97       	sbiw	r24, 0x01	; 1
    1eb6:	a1 09       	sbc	r26, r1
    1eb8:	b1 09       	sbc	r27, r1
    1eba:	8f 5f       	subi	r24, 0xFF	; 255
    1ebc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ebe:	af 4f       	sbci	r26, 0xFF	; 255
    1ec0:	bf 43       	sbci	r27, 0x3F	; 63
    1ec2:	28 f3       	brcs	.-54     	; 0x1e8e <_fpadd_parts+0x1f4>
    1ec4:	0b c0       	rjmp	.+22     	; 0x1edc <_fpadd_parts+0x242>
    1ec6:	91 83       	std	Z+1, r25	; 0x01
    1ec8:	33 82       	std	Z+3, r3	; 0x03
    1eca:	22 82       	std	Z+2, r2	; 0x02
    1ecc:	ea 0c       	add	r14, r10
    1ece:	fb 1c       	adc	r15, r11
    1ed0:	0c 1d       	adc	r16, r12
    1ed2:	1d 1d       	adc	r17, r13
    1ed4:	e4 82       	std	Z+4, r14	; 0x04
    1ed6:	f5 82       	std	Z+5, r15	; 0x05
    1ed8:	06 83       	std	Z+6, r16	; 0x06
    1eda:	17 83       	std	Z+7, r17	; 0x07
    1edc:	83 e0       	ldi	r24, 0x03	; 3
    1ede:	80 83       	st	Z, r24
    1ee0:	24 81       	ldd	r18, Z+4	; 0x04
    1ee2:	35 81       	ldd	r19, Z+5	; 0x05
    1ee4:	46 81       	ldd	r20, Z+6	; 0x06
    1ee6:	57 81       	ldd	r21, Z+7	; 0x07
    1ee8:	57 ff       	sbrs	r21, 7
    1eea:	1a c0       	rjmp	.+52     	; 0x1f20 <_fpadd_parts+0x286>
    1eec:	c9 01       	movw	r24, r18
    1eee:	aa 27       	eor	r26, r26
    1ef0:	97 fd       	sbrc	r25, 7
    1ef2:	a0 95       	com	r26
    1ef4:	ba 2f       	mov	r27, r26
    1ef6:	81 70       	andi	r24, 0x01	; 1
    1ef8:	90 70       	andi	r25, 0x00	; 0
    1efa:	a0 70       	andi	r26, 0x00	; 0
    1efc:	b0 70       	andi	r27, 0x00	; 0
    1efe:	56 95       	lsr	r21
    1f00:	47 95       	ror	r20
    1f02:	37 95       	ror	r19
    1f04:	27 95       	ror	r18
    1f06:	82 2b       	or	r24, r18
    1f08:	93 2b       	or	r25, r19
    1f0a:	a4 2b       	or	r26, r20
    1f0c:	b5 2b       	or	r27, r21
    1f0e:	84 83       	std	Z+4, r24	; 0x04
    1f10:	95 83       	std	Z+5, r25	; 0x05
    1f12:	a6 83       	std	Z+6, r26	; 0x06
    1f14:	b7 83       	std	Z+7, r27	; 0x07
    1f16:	82 81       	ldd	r24, Z+2	; 0x02
    1f18:	93 81       	ldd	r25, Z+3	; 0x03
    1f1a:	01 96       	adiw	r24, 0x01	; 1
    1f1c:	93 83       	std	Z+3, r25	; 0x03
    1f1e:	82 83       	std	Z+2, r24	; 0x02
    1f20:	df 01       	movw	r26, r30
    1f22:	01 c0       	rjmp	.+2      	; 0x1f26 <_fpadd_parts+0x28c>
    1f24:	d2 01       	movw	r26, r4
    1f26:	cd 01       	movw	r24, r26
    1f28:	cd b7       	in	r28, 0x3d	; 61
    1f2a:	de b7       	in	r29, 0x3e	; 62
    1f2c:	e2 e1       	ldi	r30, 0x12	; 18
    1f2e:	0c 94 0a 29 	jmp	0x5214	; 0x5214 <__epilogue_restores__>

00001f32 <__subsf3>:
    1f32:	a0 e2       	ldi	r26, 0x20	; 32
    1f34:	b0 e0       	ldi	r27, 0x00	; 0
    1f36:	ef e9       	ldi	r30, 0x9F	; 159
    1f38:	ff e0       	ldi	r31, 0x0F	; 15
    1f3a:	0c 94 fa 28 	jmp	0x51f4	; 0x51f4 <__prologue_saves__+0x18>
    1f3e:	69 83       	std	Y+1, r22	; 0x01
    1f40:	7a 83       	std	Y+2, r23	; 0x02
    1f42:	8b 83       	std	Y+3, r24	; 0x03
    1f44:	9c 83       	std	Y+4, r25	; 0x04
    1f46:	2d 83       	std	Y+5, r18	; 0x05
    1f48:	3e 83       	std	Y+6, r19	; 0x06
    1f4a:	4f 83       	std	Y+7, r20	; 0x07
    1f4c:	58 87       	std	Y+8, r21	; 0x08
    1f4e:	e9 e0       	ldi	r30, 0x09	; 9
    1f50:	ee 2e       	mov	r14, r30
    1f52:	f1 2c       	mov	r15, r1
    1f54:	ec 0e       	add	r14, r28
    1f56:	fd 1e       	adc	r15, r29
    1f58:	ce 01       	movw	r24, r28
    1f5a:	01 96       	adiw	r24, 0x01	; 1
    1f5c:	b7 01       	movw	r22, r14
    1f5e:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    1f62:	8e 01       	movw	r16, r28
    1f64:	0f 5e       	subi	r16, 0xEF	; 239
    1f66:	1f 4f       	sbci	r17, 0xFF	; 255
    1f68:	ce 01       	movw	r24, r28
    1f6a:	05 96       	adiw	r24, 0x05	; 5
    1f6c:	b8 01       	movw	r22, r16
    1f6e:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    1f72:	8a 89       	ldd	r24, Y+18	; 0x12
    1f74:	91 e0       	ldi	r25, 0x01	; 1
    1f76:	89 27       	eor	r24, r25
    1f78:	8a 8b       	std	Y+18, r24	; 0x12
    1f7a:	c7 01       	movw	r24, r14
    1f7c:	b8 01       	movw	r22, r16
    1f7e:	ae 01       	movw	r20, r28
    1f80:	47 5e       	subi	r20, 0xE7	; 231
    1f82:	5f 4f       	sbci	r21, 0xFF	; 255
    1f84:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <_fpadd_parts>
    1f88:	0e 94 81 12 	call	0x2502	; 0x2502 <__pack_f>
    1f8c:	a0 96       	adiw	r28, 0x20	; 32
    1f8e:	e6 e0       	ldi	r30, 0x06	; 6
    1f90:	0c 94 16 29 	jmp	0x522c	; 0x522c <__epilogue_restores__+0x18>

00001f94 <__addsf3>:
    1f94:	a0 e2       	ldi	r26, 0x20	; 32
    1f96:	b0 e0       	ldi	r27, 0x00	; 0
    1f98:	e0 ed       	ldi	r30, 0xD0	; 208
    1f9a:	ff e0       	ldi	r31, 0x0F	; 15
    1f9c:	0c 94 fa 28 	jmp	0x51f4	; 0x51f4 <__prologue_saves__+0x18>
    1fa0:	69 83       	std	Y+1, r22	; 0x01
    1fa2:	7a 83       	std	Y+2, r23	; 0x02
    1fa4:	8b 83       	std	Y+3, r24	; 0x03
    1fa6:	9c 83       	std	Y+4, r25	; 0x04
    1fa8:	2d 83       	std	Y+5, r18	; 0x05
    1faa:	3e 83       	std	Y+6, r19	; 0x06
    1fac:	4f 83       	std	Y+7, r20	; 0x07
    1fae:	58 87       	std	Y+8, r21	; 0x08
    1fb0:	f9 e0       	ldi	r31, 0x09	; 9
    1fb2:	ef 2e       	mov	r14, r31
    1fb4:	f1 2c       	mov	r15, r1
    1fb6:	ec 0e       	add	r14, r28
    1fb8:	fd 1e       	adc	r15, r29
    1fba:	ce 01       	movw	r24, r28
    1fbc:	01 96       	adiw	r24, 0x01	; 1
    1fbe:	b7 01       	movw	r22, r14
    1fc0:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    1fc4:	8e 01       	movw	r16, r28
    1fc6:	0f 5e       	subi	r16, 0xEF	; 239
    1fc8:	1f 4f       	sbci	r17, 0xFF	; 255
    1fca:	ce 01       	movw	r24, r28
    1fcc:	05 96       	adiw	r24, 0x05	; 5
    1fce:	b8 01       	movw	r22, r16
    1fd0:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    1fd4:	c7 01       	movw	r24, r14
    1fd6:	b8 01       	movw	r22, r16
    1fd8:	ae 01       	movw	r20, r28
    1fda:	47 5e       	subi	r20, 0xE7	; 231
    1fdc:	5f 4f       	sbci	r21, 0xFF	; 255
    1fde:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <_fpadd_parts>
    1fe2:	0e 94 81 12 	call	0x2502	; 0x2502 <__pack_f>
    1fe6:	a0 96       	adiw	r28, 0x20	; 32
    1fe8:	e6 e0       	ldi	r30, 0x06	; 6
    1fea:	0c 94 16 29 	jmp	0x522c	; 0x522c <__epilogue_restores__+0x18>

00001fee <__mulsf3>:
    1fee:	a0 e2       	ldi	r26, 0x20	; 32
    1ff0:	b0 e0       	ldi	r27, 0x00	; 0
    1ff2:	ed ef       	ldi	r30, 0xFD	; 253
    1ff4:	ff e0       	ldi	r31, 0x0F	; 15
    1ff6:	0c 94 ee 28 	jmp	0x51dc	; 0x51dc <__prologue_saves__>
    1ffa:	69 83       	std	Y+1, r22	; 0x01
    1ffc:	7a 83       	std	Y+2, r23	; 0x02
    1ffe:	8b 83       	std	Y+3, r24	; 0x03
    2000:	9c 83       	std	Y+4, r25	; 0x04
    2002:	2d 83       	std	Y+5, r18	; 0x05
    2004:	3e 83       	std	Y+6, r19	; 0x06
    2006:	4f 83       	std	Y+7, r20	; 0x07
    2008:	58 87       	std	Y+8, r21	; 0x08
    200a:	ce 01       	movw	r24, r28
    200c:	01 96       	adiw	r24, 0x01	; 1
    200e:	be 01       	movw	r22, r28
    2010:	67 5f       	subi	r22, 0xF7	; 247
    2012:	7f 4f       	sbci	r23, 0xFF	; 255
    2014:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    2018:	ce 01       	movw	r24, r28
    201a:	05 96       	adiw	r24, 0x05	; 5
    201c:	be 01       	movw	r22, r28
    201e:	6f 5e       	subi	r22, 0xEF	; 239
    2020:	7f 4f       	sbci	r23, 0xFF	; 255
    2022:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    2026:	99 85       	ldd	r25, Y+9	; 0x09
    2028:	92 30       	cpi	r25, 0x02	; 2
    202a:	88 f0       	brcs	.+34     	; 0x204e <__mulsf3+0x60>
    202c:	89 89       	ldd	r24, Y+17	; 0x11
    202e:	82 30       	cpi	r24, 0x02	; 2
    2030:	c8 f0       	brcs	.+50     	; 0x2064 <__mulsf3+0x76>
    2032:	94 30       	cpi	r25, 0x04	; 4
    2034:	19 f4       	brne	.+6      	; 0x203c <__mulsf3+0x4e>
    2036:	82 30       	cpi	r24, 0x02	; 2
    2038:	51 f4       	brne	.+20     	; 0x204e <__mulsf3+0x60>
    203a:	04 c0       	rjmp	.+8      	; 0x2044 <__mulsf3+0x56>
    203c:	84 30       	cpi	r24, 0x04	; 4
    203e:	29 f4       	brne	.+10     	; 0x204a <__mulsf3+0x5c>
    2040:	92 30       	cpi	r25, 0x02	; 2
    2042:	81 f4       	brne	.+32     	; 0x2064 <__mulsf3+0x76>
    2044:	88 e7       	ldi	r24, 0x78	; 120
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	c6 c0       	rjmp	.+396    	; 0x21d6 <__mulsf3+0x1e8>
    204a:	92 30       	cpi	r25, 0x02	; 2
    204c:	49 f4       	brne	.+18     	; 0x2060 <__mulsf3+0x72>
    204e:	20 e0       	ldi	r18, 0x00	; 0
    2050:	9a 85       	ldd	r25, Y+10	; 0x0a
    2052:	8a 89       	ldd	r24, Y+18	; 0x12
    2054:	98 13       	cpse	r25, r24
    2056:	21 e0       	ldi	r18, 0x01	; 1
    2058:	2a 87       	std	Y+10, r18	; 0x0a
    205a:	ce 01       	movw	r24, r28
    205c:	09 96       	adiw	r24, 0x09	; 9
    205e:	bb c0       	rjmp	.+374    	; 0x21d6 <__mulsf3+0x1e8>
    2060:	82 30       	cpi	r24, 0x02	; 2
    2062:	49 f4       	brne	.+18     	; 0x2076 <__mulsf3+0x88>
    2064:	20 e0       	ldi	r18, 0x00	; 0
    2066:	9a 85       	ldd	r25, Y+10	; 0x0a
    2068:	8a 89       	ldd	r24, Y+18	; 0x12
    206a:	98 13       	cpse	r25, r24
    206c:	21 e0       	ldi	r18, 0x01	; 1
    206e:	2a 8b       	std	Y+18, r18	; 0x12
    2070:	ce 01       	movw	r24, r28
    2072:	41 96       	adiw	r24, 0x11	; 17
    2074:	b0 c0       	rjmp	.+352    	; 0x21d6 <__mulsf3+0x1e8>
    2076:	2d 84       	ldd	r2, Y+13	; 0x0d
    2078:	3e 84       	ldd	r3, Y+14	; 0x0e
    207a:	4f 84       	ldd	r4, Y+15	; 0x0f
    207c:	58 88       	ldd	r5, Y+16	; 0x10
    207e:	6d 88       	ldd	r6, Y+21	; 0x15
    2080:	7e 88       	ldd	r7, Y+22	; 0x16
    2082:	8f 88       	ldd	r8, Y+23	; 0x17
    2084:	98 8c       	ldd	r9, Y+24	; 0x18
    2086:	ee 24       	eor	r14, r14
    2088:	ff 24       	eor	r15, r15
    208a:	87 01       	movw	r16, r14
    208c:	aa 24       	eor	r10, r10
    208e:	bb 24       	eor	r11, r11
    2090:	65 01       	movw	r12, r10
    2092:	40 e0       	ldi	r20, 0x00	; 0
    2094:	50 e0       	ldi	r21, 0x00	; 0
    2096:	60 e0       	ldi	r22, 0x00	; 0
    2098:	70 e0       	ldi	r23, 0x00	; 0
    209a:	e0 e0       	ldi	r30, 0x00	; 0
    209c:	f0 e0       	ldi	r31, 0x00	; 0
    209e:	c1 01       	movw	r24, r2
    20a0:	81 70       	andi	r24, 0x01	; 1
    20a2:	90 70       	andi	r25, 0x00	; 0
    20a4:	89 2b       	or	r24, r25
    20a6:	e9 f0       	breq	.+58     	; 0x20e2 <__mulsf3+0xf4>
    20a8:	e6 0c       	add	r14, r6
    20aa:	f7 1c       	adc	r15, r7
    20ac:	08 1d       	adc	r16, r8
    20ae:	19 1d       	adc	r17, r9
    20b0:	9a 01       	movw	r18, r20
    20b2:	ab 01       	movw	r20, r22
    20b4:	2a 0d       	add	r18, r10
    20b6:	3b 1d       	adc	r19, r11
    20b8:	4c 1d       	adc	r20, r12
    20ba:	5d 1d       	adc	r21, r13
    20bc:	80 e0       	ldi	r24, 0x00	; 0
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	a0 e0       	ldi	r26, 0x00	; 0
    20c2:	b0 e0       	ldi	r27, 0x00	; 0
    20c4:	e6 14       	cp	r14, r6
    20c6:	f7 04       	cpc	r15, r7
    20c8:	08 05       	cpc	r16, r8
    20ca:	19 05       	cpc	r17, r9
    20cc:	20 f4       	brcc	.+8      	; 0x20d6 <__mulsf3+0xe8>
    20ce:	81 e0       	ldi	r24, 0x01	; 1
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	a0 e0       	ldi	r26, 0x00	; 0
    20d4:	b0 e0       	ldi	r27, 0x00	; 0
    20d6:	ba 01       	movw	r22, r20
    20d8:	a9 01       	movw	r20, r18
    20da:	48 0f       	add	r20, r24
    20dc:	59 1f       	adc	r21, r25
    20de:	6a 1f       	adc	r22, r26
    20e0:	7b 1f       	adc	r23, r27
    20e2:	aa 0c       	add	r10, r10
    20e4:	bb 1c       	adc	r11, r11
    20e6:	cc 1c       	adc	r12, r12
    20e8:	dd 1c       	adc	r13, r13
    20ea:	97 fe       	sbrs	r9, 7
    20ec:	08 c0       	rjmp	.+16     	; 0x20fe <__mulsf3+0x110>
    20ee:	81 e0       	ldi	r24, 0x01	; 1
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	a0 e0       	ldi	r26, 0x00	; 0
    20f4:	b0 e0       	ldi	r27, 0x00	; 0
    20f6:	a8 2a       	or	r10, r24
    20f8:	b9 2a       	or	r11, r25
    20fa:	ca 2a       	or	r12, r26
    20fc:	db 2a       	or	r13, r27
    20fe:	31 96       	adiw	r30, 0x01	; 1
    2100:	e0 32       	cpi	r30, 0x20	; 32
    2102:	f1 05       	cpc	r31, r1
    2104:	49 f0       	breq	.+18     	; 0x2118 <__mulsf3+0x12a>
    2106:	66 0c       	add	r6, r6
    2108:	77 1c       	adc	r7, r7
    210a:	88 1c       	adc	r8, r8
    210c:	99 1c       	adc	r9, r9
    210e:	56 94       	lsr	r5
    2110:	47 94       	ror	r4
    2112:	37 94       	ror	r3
    2114:	27 94       	ror	r2
    2116:	c3 cf       	rjmp	.-122    	; 0x209e <__mulsf3+0xb0>
    2118:	fa 85       	ldd	r31, Y+10	; 0x0a
    211a:	ea 89       	ldd	r30, Y+18	; 0x12
    211c:	2b 89       	ldd	r18, Y+19	; 0x13
    211e:	3c 89       	ldd	r19, Y+20	; 0x14
    2120:	8b 85       	ldd	r24, Y+11	; 0x0b
    2122:	9c 85       	ldd	r25, Y+12	; 0x0c
    2124:	28 0f       	add	r18, r24
    2126:	39 1f       	adc	r19, r25
    2128:	2e 5f       	subi	r18, 0xFE	; 254
    212a:	3f 4f       	sbci	r19, 0xFF	; 255
    212c:	17 c0       	rjmp	.+46     	; 0x215c <__mulsf3+0x16e>
    212e:	ca 01       	movw	r24, r20
    2130:	81 70       	andi	r24, 0x01	; 1
    2132:	90 70       	andi	r25, 0x00	; 0
    2134:	89 2b       	or	r24, r25
    2136:	61 f0       	breq	.+24     	; 0x2150 <__mulsf3+0x162>
    2138:	16 95       	lsr	r17
    213a:	07 95       	ror	r16
    213c:	f7 94       	ror	r15
    213e:	e7 94       	ror	r14
    2140:	80 e0       	ldi	r24, 0x00	; 0
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	a0 e0       	ldi	r26, 0x00	; 0
    2146:	b0 e8       	ldi	r27, 0x80	; 128
    2148:	e8 2a       	or	r14, r24
    214a:	f9 2a       	or	r15, r25
    214c:	0a 2b       	or	r16, r26
    214e:	1b 2b       	or	r17, r27
    2150:	76 95       	lsr	r23
    2152:	67 95       	ror	r22
    2154:	57 95       	ror	r21
    2156:	47 95       	ror	r20
    2158:	2f 5f       	subi	r18, 0xFF	; 255
    215a:	3f 4f       	sbci	r19, 0xFF	; 255
    215c:	77 fd       	sbrc	r23, 7
    215e:	e7 cf       	rjmp	.-50     	; 0x212e <__mulsf3+0x140>
    2160:	0c c0       	rjmp	.+24     	; 0x217a <__mulsf3+0x18c>
    2162:	44 0f       	add	r20, r20
    2164:	55 1f       	adc	r21, r21
    2166:	66 1f       	adc	r22, r22
    2168:	77 1f       	adc	r23, r23
    216a:	17 fd       	sbrc	r17, 7
    216c:	41 60       	ori	r20, 0x01	; 1
    216e:	ee 0c       	add	r14, r14
    2170:	ff 1c       	adc	r15, r15
    2172:	00 1f       	adc	r16, r16
    2174:	11 1f       	adc	r17, r17
    2176:	21 50       	subi	r18, 0x01	; 1
    2178:	30 40       	sbci	r19, 0x00	; 0
    217a:	40 30       	cpi	r20, 0x00	; 0
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	59 07       	cpc	r21, r25
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	69 07       	cpc	r22, r25
    2184:	90 e4       	ldi	r25, 0x40	; 64
    2186:	79 07       	cpc	r23, r25
    2188:	60 f3       	brcs	.-40     	; 0x2162 <__mulsf3+0x174>
    218a:	2b 8f       	std	Y+27, r18	; 0x1b
    218c:	3c 8f       	std	Y+28, r19	; 0x1c
    218e:	db 01       	movw	r26, r22
    2190:	ca 01       	movw	r24, r20
    2192:	8f 77       	andi	r24, 0x7F	; 127
    2194:	90 70       	andi	r25, 0x00	; 0
    2196:	a0 70       	andi	r26, 0x00	; 0
    2198:	b0 70       	andi	r27, 0x00	; 0
    219a:	80 34       	cpi	r24, 0x40	; 64
    219c:	91 05       	cpc	r25, r1
    219e:	a1 05       	cpc	r26, r1
    21a0:	b1 05       	cpc	r27, r1
    21a2:	61 f4       	brne	.+24     	; 0x21bc <__mulsf3+0x1ce>
    21a4:	47 fd       	sbrc	r20, 7
    21a6:	0a c0       	rjmp	.+20     	; 0x21bc <__mulsf3+0x1ce>
    21a8:	e1 14       	cp	r14, r1
    21aa:	f1 04       	cpc	r15, r1
    21ac:	01 05       	cpc	r16, r1
    21ae:	11 05       	cpc	r17, r1
    21b0:	29 f0       	breq	.+10     	; 0x21bc <__mulsf3+0x1ce>
    21b2:	40 5c       	subi	r20, 0xC0	; 192
    21b4:	5f 4f       	sbci	r21, 0xFF	; 255
    21b6:	6f 4f       	sbci	r22, 0xFF	; 255
    21b8:	7f 4f       	sbci	r23, 0xFF	; 255
    21ba:	40 78       	andi	r20, 0x80	; 128
    21bc:	1a 8e       	std	Y+26, r1	; 0x1a
    21be:	fe 17       	cp	r31, r30
    21c0:	11 f0       	breq	.+4      	; 0x21c6 <__mulsf3+0x1d8>
    21c2:	81 e0       	ldi	r24, 0x01	; 1
    21c4:	8a 8f       	std	Y+26, r24	; 0x1a
    21c6:	4d 8f       	std	Y+29, r20	; 0x1d
    21c8:	5e 8f       	std	Y+30, r21	; 0x1e
    21ca:	6f 8f       	std	Y+31, r22	; 0x1f
    21cc:	78 a3       	std	Y+32, r23	; 0x20
    21ce:	83 e0       	ldi	r24, 0x03	; 3
    21d0:	89 8f       	std	Y+25, r24	; 0x19
    21d2:	ce 01       	movw	r24, r28
    21d4:	49 96       	adiw	r24, 0x19	; 25
    21d6:	0e 94 81 12 	call	0x2502	; 0x2502 <__pack_f>
    21da:	a0 96       	adiw	r28, 0x20	; 32
    21dc:	e2 e1       	ldi	r30, 0x12	; 18
    21de:	0c 94 0a 29 	jmp	0x5214	; 0x5214 <__epilogue_restores__>

000021e2 <__divsf3>:
    21e2:	a8 e1       	ldi	r26, 0x18	; 24
    21e4:	b0 e0       	ldi	r27, 0x00	; 0
    21e6:	e7 ef       	ldi	r30, 0xF7	; 247
    21e8:	f0 e1       	ldi	r31, 0x10	; 16
    21ea:	0c 94 f6 28 	jmp	0x51ec	; 0x51ec <__prologue_saves__+0x10>
    21ee:	69 83       	std	Y+1, r22	; 0x01
    21f0:	7a 83       	std	Y+2, r23	; 0x02
    21f2:	8b 83       	std	Y+3, r24	; 0x03
    21f4:	9c 83       	std	Y+4, r25	; 0x04
    21f6:	2d 83       	std	Y+5, r18	; 0x05
    21f8:	3e 83       	std	Y+6, r19	; 0x06
    21fa:	4f 83       	std	Y+7, r20	; 0x07
    21fc:	58 87       	std	Y+8, r21	; 0x08
    21fe:	b9 e0       	ldi	r27, 0x09	; 9
    2200:	eb 2e       	mov	r14, r27
    2202:	f1 2c       	mov	r15, r1
    2204:	ec 0e       	add	r14, r28
    2206:	fd 1e       	adc	r15, r29
    2208:	ce 01       	movw	r24, r28
    220a:	01 96       	adiw	r24, 0x01	; 1
    220c:	b7 01       	movw	r22, r14
    220e:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    2212:	8e 01       	movw	r16, r28
    2214:	0f 5e       	subi	r16, 0xEF	; 239
    2216:	1f 4f       	sbci	r17, 0xFF	; 255
    2218:	ce 01       	movw	r24, r28
    221a:	05 96       	adiw	r24, 0x05	; 5
    221c:	b8 01       	movw	r22, r16
    221e:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    2222:	29 85       	ldd	r18, Y+9	; 0x09
    2224:	22 30       	cpi	r18, 0x02	; 2
    2226:	08 f4       	brcc	.+2      	; 0x222a <__divsf3+0x48>
    2228:	7e c0       	rjmp	.+252    	; 0x2326 <__divsf3+0x144>
    222a:	39 89       	ldd	r19, Y+17	; 0x11
    222c:	32 30       	cpi	r19, 0x02	; 2
    222e:	10 f4       	brcc	.+4      	; 0x2234 <__divsf3+0x52>
    2230:	b8 01       	movw	r22, r16
    2232:	7c c0       	rjmp	.+248    	; 0x232c <__divsf3+0x14a>
    2234:	8a 85       	ldd	r24, Y+10	; 0x0a
    2236:	9a 89       	ldd	r25, Y+18	; 0x12
    2238:	89 27       	eor	r24, r25
    223a:	8a 87       	std	Y+10, r24	; 0x0a
    223c:	24 30       	cpi	r18, 0x04	; 4
    223e:	11 f0       	breq	.+4      	; 0x2244 <__divsf3+0x62>
    2240:	22 30       	cpi	r18, 0x02	; 2
    2242:	31 f4       	brne	.+12     	; 0x2250 <__divsf3+0x6e>
    2244:	23 17       	cp	r18, r19
    2246:	09 f0       	breq	.+2      	; 0x224a <__divsf3+0x68>
    2248:	6e c0       	rjmp	.+220    	; 0x2326 <__divsf3+0x144>
    224a:	68 e7       	ldi	r22, 0x78	; 120
    224c:	70 e0       	ldi	r23, 0x00	; 0
    224e:	6e c0       	rjmp	.+220    	; 0x232c <__divsf3+0x14a>
    2250:	34 30       	cpi	r19, 0x04	; 4
    2252:	39 f4       	brne	.+14     	; 0x2262 <__divsf3+0x80>
    2254:	1d 86       	std	Y+13, r1	; 0x0d
    2256:	1e 86       	std	Y+14, r1	; 0x0e
    2258:	1f 86       	std	Y+15, r1	; 0x0f
    225a:	18 8a       	std	Y+16, r1	; 0x10
    225c:	1c 86       	std	Y+12, r1	; 0x0c
    225e:	1b 86       	std	Y+11, r1	; 0x0b
    2260:	04 c0       	rjmp	.+8      	; 0x226a <__divsf3+0x88>
    2262:	32 30       	cpi	r19, 0x02	; 2
    2264:	21 f4       	brne	.+8      	; 0x226e <__divsf3+0x8c>
    2266:	84 e0       	ldi	r24, 0x04	; 4
    2268:	89 87       	std	Y+9, r24	; 0x09
    226a:	b7 01       	movw	r22, r14
    226c:	5f c0       	rjmp	.+190    	; 0x232c <__divsf3+0x14a>
    226e:	2b 85       	ldd	r18, Y+11	; 0x0b
    2270:	3c 85       	ldd	r19, Y+12	; 0x0c
    2272:	8b 89       	ldd	r24, Y+19	; 0x13
    2274:	9c 89       	ldd	r25, Y+20	; 0x14
    2276:	28 1b       	sub	r18, r24
    2278:	39 0b       	sbc	r19, r25
    227a:	3c 87       	std	Y+12, r19	; 0x0c
    227c:	2b 87       	std	Y+11, r18	; 0x0b
    227e:	ed 84       	ldd	r14, Y+13	; 0x0d
    2280:	fe 84       	ldd	r15, Y+14	; 0x0e
    2282:	0f 85       	ldd	r16, Y+15	; 0x0f
    2284:	18 89       	ldd	r17, Y+16	; 0x10
    2286:	ad 88       	ldd	r10, Y+21	; 0x15
    2288:	be 88       	ldd	r11, Y+22	; 0x16
    228a:	cf 88       	ldd	r12, Y+23	; 0x17
    228c:	d8 8c       	ldd	r13, Y+24	; 0x18
    228e:	ea 14       	cp	r14, r10
    2290:	fb 04       	cpc	r15, r11
    2292:	0c 05       	cpc	r16, r12
    2294:	1d 05       	cpc	r17, r13
    2296:	40 f4       	brcc	.+16     	; 0x22a8 <__divsf3+0xc6>
    2298:	ee 0c       	add	r14, r14
    229a:	ff 1c       	adc	r15, r15
    229c:	00 1f       	adc	r16, r16
    229e:	11 1f       	adc	r17, r17
    22a0:	21 50       	subi	r18, 0x01	; 1
    22a2:	30 40       	sbci	r19, 0x00	; 0
    22a4:	3c 87       	std	Y+12, r19	; 0x0c
    22a6:	2b 87       	std	Y+11, r18	; 0x0b
    22a8:	20 e0       	ldi	r18, 0x00	; 0
    22aa:	30 e0       	ldi	r19, 0x00	; 0
    22ac:	40 e0       	ldi	r20, 0x00	; 0
    22ae:	50 e0       	ldi	r21, 0x00	; 0
    22b0:	80 e0       	ldi	r24, 0x00	; 0
    22b2:	90 e0       	ldi	r25, 0x00	; 0
    22b4:	a0 e0       	ldi	r26, 0x00	; 0
    22b6:	b0 e4       	ldi	r27, 0x40	; 64
    22b8:	60 e0       	ldi	r22, 0x00	; 0
    22ba:	70 e0       	ldi	r23, 0x00	; 0
    22bc:	ea 14       	cp	r14, r10
    22be:	fb 04       	cpc	r15, r11
    22c0:	0c 05       	cpc	r16, r12
    22c2:	1d 05       	cpc	r17, r13
    22c4:	40 f0       	brcs	.+16     	; 0x22d6 <__divsf3+0xf4>
    22c6:	28 2b       	or	r18, r24
    22c8:	39 2b       	or	r19, r25
    22ca:	4a 2b       	or	r20, r26
    22cc:	5b 2b       	or	r21, r27
    22ce:	ea 18       	sub	r14, r10
    22d0:	fb 08       	sbc	r15, r11
    22d2:	0c 09       	sbc	r16, r12
    22d4:	1d 09       	sbc	r17, r13
    22d6:	b6 95       	lsr	r27
    22d8:	a7 95       	ror	r26
    22da:	97 95       	ror	r25
    22dc:	87 95       	ror	r24
    22de:	ee 0c       	add	r14, r14
    22e0:	ff 1c       	adc	r15, r15
    22e2:	00 1f       	adc	r16, r16
    22e4:	11 1f       	adc	r17, r17
    22e6:	6f 5f       	subi	r22, 0xFF	; 255
    22e8:	7f 4f       	sbci	r23, 0xFF	; 255
    22ea:	6f 31       	cpi	r22, 0x1F	; 31
    22ec:	71 05       	cpc	r23, r1
    22ee:	31 f7       	brne	.-52     	; 0x22bc <__divsf3+0xda>
    22f0:	da 01       	movw	r26, r20
    22f2:	c9 01       	movw	r24, r18
    22f4:	8f 77       	andi	r24, 0x7F	; 127
    22f6:	90 70       	andi	r25, 0x00	; 0
    22f8:	a0 70       	andi	r26, 0x00	; 0
    22fa:	b0 70       	andi	r27, 0x00	; 0
    22fc:	80 34       	cpi	r24, 0x40	; 64
    22fe:	91 05       	cpc	r25, r1
    2300:	a1 05       	cpc	r26, r1
    2302:	b1 05       	cpc	r27, r1
    2304:	61 f4       	brne	.+24     	; 0x231e <__divsf3+0x13c>
    2306:	27 fd       	sbrc	r18, 7
    2308:	0a c0       	rjmp	.+20     	; 0x231e <__divsf3+0x13c>
    230a:	e1 14       	cp	r14, r1
    230c:	f1 04       	cpc	r15, r1
    230e:	01 05       	cpc	r16, r1
    2310:	11 05       	cpc	r17, r1
    2312:	29 f0       	breq	.+10     	; 0x231e <__divsf3+0x13c>
    2314:	20 5c       	subi	r18, 0xC0	; 192
    2316:	3f 4f       	sbci	r19, 0xFF	; 255
    2318:	4f 4f       	sbci	r20, 0xFF	; 255
    231a:	5f 4f       	sbci	r21, 0xFF	; 255
    231c:	20 78       	andi	r18, 0x80	; 128
    231e:	2d 87       	std	Y+13, r18	; 0x0d
    2320:	3e 87       	std	Y+14, r19	; 0x0e
    2322:	4f 87       	std	Y+15, r20	; 0x0f
    2324:	58 8b       	std	Y+16, r21	; 0x10
    2326:	be 01       	movw	r22, r28
    2328:	67 5f       	subi	r22, 0xF7	; 247
    232a:	7f 4f       	sbci	r23, 0xFF	; 255
    232c:	cb 01       	movw	r24, r22
    232e:	0e 94 81 12 	call	0x2502	; 0x2502 <__pack_f>
    2332:	68 96       	adiw	r28, 0x18	; 24
    2334:	ea e0       	ldi	r30, 0x0A	; 10
    2336:	0c 94 12 29 	jmp	0x5224	; 0x5224 <__epilogue_restores__+0x10>

0000233a <__gtsf2>:
    233a:	a8 e1       	ldi	r26, 0x18	; 24
    233c:	b0 e0       	ldi	r27, 0x00	; 0
    233e:	e3 ea       	ldi	r30, 0xA3	; 163
    2340:	f1 e1       	ldi	r31, 0x11	; 17
    2342:	0c 94 fa 28 	jmp	0x51f4	; 0x51f4 <__prologue_saves__+0x18>
    2346:	69 83       	std	Y+1, r22	; 0x01
    2348:	7a 83       	std	Y+2, r23	; 0x02
    234a:	8b 83       	std	Y+3, r24	; 0x03
    234c:	9c 83       	std	Y+4, r25	; 0x04
    234e:	2d 83       	std	Y+5, r18	; 0x05
    2350:	3e 83       	std	Y+6, r19	; 0x06
    2352:	4f 83       	std	Y+7, r20	; 0x07
    2354:	58 87       	std	Y+8, r21	; 0x08
    2356:	89 e0       	ldi	r24, 0x09	; 9
    2358:	e8 2e       	mov	r14, r24
    235a:	f1 2c       	mov	r15, r1
    235c:	ec 0e       	add	r14, r28
    235e:	fd 1e       	adc	r15, r29
    2360:	ce 01       	movw	r24, r28
    2362:	01 96       	adiw	r24, 0x01	; 1
    2364:	b7 01       	movw	r22, r14
    2366:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    236a:	8e 01       	movw	r16, r28
    236c:	0f 5e       	subi	r16, 0xEF	; 239
    236e:	1f 4f       	sbci	r17, 0xFF	; 255
    2370:	ce 01       	movw	r24, r28
    2372:	05 96       	adiw	r24, 0x05	; 5
    2374:	b8 01       	movw	r22, r16
    2376:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    237a:	89 85       	ldd	r24, Y+9	; 0x09
    237c:	82 30       	cpi	r24, 0x02	; 2
    237e:	40 f0       	brcs	.+16     	; 0x2390 <__gtsf2+0x56>
    2380:	89 89       	ldd	r24, Y+17	; 0x11
    2382:	82 30       	cpi	r24, 0x02	; 2
    2384:	28 f0       	brcs	.+10     	; 0x2390 <__gtsf2+0x56>
    2386:	c7 01       	movw	r24, r14
    2388:	b8 01       	movw	r22, r16
    238a:	0e 94 ce 13 	call	0x279c	; 0x279c <__fpcmp_parts_f>
    238e:	01 c0       	rjmp	.+2      	; 0x2392 <__gtsf2+0x58>
    2390:	8f ef       	ldi	r24, 0xFF	; 255
    2392:	68 96       	adiw	r28, 0x18	; 24
    2394:	e6 e0       	ldi	r30, 0x06	; 6
    2396:	0c 94 16 29 	jmp	0x522c	; 0x522c <__epilogue_restores__+0x18>

0000239a <__gesf2>:
    239a:	a8 e1       	ldi	r26, 0x18	; 24
    239c:	b0 e0       	ldi	r27, 0x00	; 0
    239e:	e3 ed       	ldi	r30, 0xD3	; 211
    23a0:	f1 e1       	ldi	r31, 0x11	; 17
    23a2:	0c 94 fa 28 	jmp	0x51f4	; 0x51f4 <__prologue_saves__+0x18>
    23a6:	69 83       	std	Y+1, r22	; 0x01
    23a8:	7a 83       	std	Y+2, r23	; 0x02
    23aa:	8b 83       	std	Y+3, r24	; 0x03
    23ac:	9c 83       	std	Y+4, r25	; 0x04
    23ae:	2d 83       	std	Y+5, r18	; 0x05
    23b0:	3e 83       	std	Y+6, r19	; 0x06
    23b2:	4f 83       	std	Y+7, r20	; 0x07
    23b4:	58 87       	std	Y+8, r21	; 0x08
    23b6:	89 e0       	ldi	r24, 0x09	; 9
    23b8:	e8 2e       	mov	r14, r24
    23ba:	f1 2c       	mov	r15, r1
    23bc:	ec 0e       	add	r14, r28
    23be:	fd 1e       	adc	r15, r29
    23c0:	ce 01       	movw	r24, r28
    23c2:	01 96       	adiw	r24, 0x01	; 1
    23c4:	b7 01       	movw	r22, r14
    23c6:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    23ca:	8e 01       	movw	r16, r28
    23cc:	0f 5e       	subi	r16, 0xEF	; 239
    23ce:	1f 4f       	sbci	r17, 0xFF	; 255
    23d0:	ce 01       	movw	r24, r28
    23d2:	05 96       	adiw	r24, 0x05	; 5
    23d4:	b8 01       	movw	r22, r16
    23d6:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    23da:	89 85       	ldd	r24, Y+9	; 0x09
    23dc:	82 30       	cpi	r24, 0x02	; 2
    23de:	40 f0       	brcs	.+16     	; 0x23f0 <__gesf2+0x56>
    23e0:	89 89       	ldd	r24, Y+17	; 0x11
    23e2:	82 30       	cpi	r24, 0x02	; 2
    23e4:	28 f0       	brcs	.+10     	; 0x23f0 <__gesf2+0x56>
    23e6:	c7 01       	movw	r24, r14
    23e8:	b8 01       	movw	r22, r16
    23ea:	0e 94 ce 13 	call	0x279c	; 0x279c <__fpcmp_parts_f>
    23ee:	01 c0       	rjmp	.+2      	; 0x23f2 <__gesf2+0x58>
    23f0:	8f ef       	ldi	r24, 0xFF	; 255
    23f2:	68 96       	adiw	r28, 0x18	; 24
    23f4:	e6 e0       	ldi	r30, 0x06	; 6
    23f6:	0c 94 16 29 	jmp	0x522c	; 0x522c <__epilogue_restores__+0x18>

000023fa <__ltsf2>:
    23fa:	a8 e1       	ldi	r26, 0x18	; 24
    23fc:	b0 e0       	ldi	r27, 0x00	; 0
    23fe:	e3 e0       	ldi	r30, 0x03	; 3
    2400:	f2 e1       	ldi	r31, 0x12	; 18
    2402:	0c 94 fa 28 	jmp	0x51f4	; 0x51f4 <__prologue_saves__+0x18>
    2406:	69 83       	std	Y+1, r22	; 0x01
    2408:	7a 83       	std	Y+2, r23	; 0x02
    240a:	8b 83       	std	Y+3, r24	; 0x03
    240c:	9c 83       	std	Y+4, r25	; 0x04
    240e:	2d 83       	std	Y+5, r18	; 0x05
    2410:	3e 83       	std	Y+6, r19	; 0x06
    2412:	4f 83       	std	Y+7, r20	; 0x07
    2414:	58 87       	std	Y+8, r21	; 0x08
    2416:	89 e0       	ldi	r24, 0x09	; 9
    2418:	e8 2e       	mov	r14, r24
    241a:	f1 2c       	mov	r15, r1
    241c:	ec 0e       	add	r14, r28
    241e:	fd 1e       	adc	r15, r29
    2420:	ce 01       	movw	r24, r28
    2422:	01 96       	adiw	r24, 0x01	; 1
    2424:	b7 01       	movw	r22, r14
    2426:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    242a:	8e 01       	movw	r16, r28
    242c:	0f 5e       	subi	r16, 0xEF	; 239
    242e:	1f 4f       	sbci	r17, 0xFF	; 255
    2430:	ce 01       	movw	r24, r28
    2432:	05 96       	adiw	r24, 0x05	; 5
    2434:	b8 01       	movw	r22, r16
    2436:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    243a:	89 85       	ldd	r24, Y+9	; 0x09
    243c:	82 30       	cpi	r24, 0x02	; 2
    243e:	40 f0       	brcs	.+16     	; 0x2450 <__ltsf2+0x56>
    2440:	89 89       	ldd	r24, Y+17	; 0x11
    2442:	82 30       	cpi	r24, 0x02	; 2
    2444:	28 f0       	brcs	.+10     	; 0x2450 <__ltsf2+0x56>
    2446:	c7 01       	movw	r24, r14
    2448:	b8 01       	movw	r22, r16
    244a:	0e 94 ce 13 	call	0x279c	; 0x279c <__fpcmp_parts_f>
    244e:	01 c0       	rjmp	.+2      	; 0x2452 <__ltsf2+0x58>
    2450:	81 e0       	ldi	r24, 0x01	; 1
    2452:	68 96       	adiw	r28, 0x18	; 24
    2454:	e6 e0       	ldi	r30, 0x06	; 6
    2456:	0c 94 16 29 	jmp	0x522c	; 0x522c <__epilogue_restores__+0x18>

0000245a <__fixsfsi>:
    245a:	ac e0       	ldi	r26, 0x0C	; 12
    245c:	b0 e0       	ldi	r27, 0x00	; 0
    245e:	e3 e3       	ldi	r30, 0x33	; 51
    2460:	f2 e1       	ldi	r31, 0x12	; 18
    2462:	0c 94 fe 28 	jmp	0x51fc	; 0x51fc <__prologue_saves__+0x20>
    2466:	69 83       	std	Y+1, r22	; 0x01
    2468:	7a 83       	std	Y+2, r23	; 0x02
    246a:	8b 83       	std	Y+3, r24	; 0x03
    246c:	9c 83       	std	Y+4, r25	; 0x04
    246e:	ce 01       	movw	r24, r28
    2470:	01 96       	adiw	r24, 0x01	; 1
    2472:	be 01       	movw	r22, r28
    2474:	6b 5f       	subi	r22, 0xFB	; 251
    2476:	7f 4f       	sbci	r23, 0xFF	; 255
    2478:	0e 94 56 13 	call	0x26ac	; 0x26ac <__unpack_f>
    247c:	8d 81       	ldd	r24, Y+5	; 0x05
    247e:	82 30       	cpi	r24, 0x02	; 2
    2480:	61 f1       	breq	.+88     	; 0x24da <__fixsfsi+0x80>
    2482:	82 30       	cpi	r24, 0x02	; 2
    2484:	50 f1       	brcs	.+84     	; 0x24da <__fixsfsi+0x80>
    2486:	84 30       	cpi	r24, 0x04	; 4
    2488:	21 f4       	brne	.+8      	; 0x2492 <__fixsfsi+0x38>
    248a:	8e 81       	ldd	r24, Y+6	; 0x06
    248c:	88 23       	and	r24, r24
    248e:	51 f1       	breq	.+84     	; 0x24e4 <__fixsfsi+0x8a>
    2490:	2e c0       	rjmp	.+92     	; 0x24ee <__fixsfsi+0x94>
    2492:	2f 81       	ldd	r18, Y+7	; 0x07
    2494:	38 85       	ldd	r19, Y+8	; 0x08
    2496:	37 fd       	sbrc	r19, 7
    2498:	20 c0       	rjmp	.+64     	; 0x24da <__fixsfsi+0x80>
    249a:	6e 81       	ldd	r22, Y+6	; 0x06
    249c:	2f 31       	cpi	r18, 0x1F	; 31
    249e:	31 05       	cpc	r19, r1
    24a0:	1c f0       	brlt	.+6      	; 0x24a8 <__fixsfsi+0x4e>
    24a2:	66 23       	and	r22, r22
    24a4:	f9 f0       	breq	.+62     	; 0x24e4 <__fixsfsi+0x8a>
    24a6:	23 c0       	rjmp	.+70     	; 0x24ee <__fixsfsi+0x94>
    24a8:	8e e1       	ldi	r24, 0x1E	; 30
    24aa:	90 e0       	ldi	r25, 0x00	; 0
    24ac:	82 1b       	sub	r24, r18
    24ae:	93 0b       	sbc	r25, r19
    24b0:	29 85       	ldd	r18, Y+9	; 0x09
    24b2:	3a 85       	ldd	r19, Y+10	; 0x0a
    24b4:	4b 85       	ldd	r20, Y+11	; 0x0b
    24b6:	5c 85       	ldd	r21, Y+12	; 0x0c
    24b8:	04 c0       	rjmp	.+8      	; 0x24c2 <__fixsfsi+0x68>
    24ba:	56 95       	lsr	r21
    24bc:	47 95       	ror	r20
    24be:	37 95       	ror	r19
    24c0:	27 95       	ror	r18
    24c2:	8a 95       	dec	r24
    24c4:	d2 f7       	brpl	.-12     	; 0x24ba <__fixsfsi+0x60>
    24c6:	66 23       	and	r22, r22
    24c8:	b1 f0       	breq	.+44     	; 0x24f6 <__fixsfsi+0x9c>
    24ca:	50 95       	com	r21
    24cc:	40 95       	com	r20
    24ce:	30 95       	com	r19
    24d0:	21 95       	neg	r18
    24d2:	3f 4f       	sbci	r19, 0xFF	; 255
    24d4:	4f 4f       	sbci	r20, 0xFF	; 255
    24d6:	5f 4f       	sbci	r21, 0xFF	; 255
    24d8:	0e c0       	rjmp	.+28     	; 0x24f6 <__fixsfsi+0x9c>
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	30 e0       	ldi	r19, 0x00	; 0
    24de:	40 e0       	ldi	r20, 0x00	; 0
    24e0:	50 e0       	ldi	r21, 0x00	; 0
    24e2:	09 c0       	rjmp	.+18     	; 0x24f6 <__fixsfsi+0x9c>
    24e4:	2f ef       	ldi	r18, 0xFF	; 255
    24e6:	3f ef       	ldi	r19, 0xFF	; 255
    24e8:	4f ef       	ldi	r20, 0xFF	; 255
    24ea:	5f e7       	ldi	r21, 0x7F	; 127
    24ec:	04 c0       	rjmp	.+8      	; 0x24f6 <__fixsfsi+0x9c>
    24ee:	20 e0       	ldi	r18, 0x00	; 0
    24f0:	30 e0       	ldi	r19, 0x00	; 0
    24f2:	40 e0       	ldi	r20, 0x00	; 0
    24f4:	50 e8       	ldi	r21, 0x80	; 128
    24f6:	b9 01       	movw	r22, r18
    24f8:	ca 01       	movw	r24, r20
    24fa:	2c 96       	adiw	r28, 0x0c	; 12
    24fc:	e2 e0       	ldi	r30, 0x02	; 2
    24fe:	0c 94 1a 29 	jmp	0x5234	; 0x5234 <__epilogue_restores__+0x20>

00002502 <__pack_f>:
    2502:	df 92       	push	r13
    2504:	ef 92       	push	r14
    2506:	ff 92       	push	r15
    2508:	0f 93       	push	r16
    250a:	1f 93       	push	r17
    250c:	fc 01       	movw	r30, r24
    250e:	e4 80       	ldd	r14, Z+4	; 0x04
    2510:	f5 80       	ldd	r15, Z+5	; 0x05
    2512:	06 81       	ldd	r16, Z+6	; 0x06
    2514:	17 81       	ldd	r17, Z+7	; 0x07
    2516:	d1 80       	ldd	r13, Z+1	; 0x01
    2518:	80 81       	ld	r24, Z
    251a:	82 30       	cpi	r24, 0x02	; 2
    251c:	48 f4       	brcc	.+18     	; 0x2530 <__pack_f+0x2e>
    251e:	80 e0       	ldi	r24, 0x00	; 0
    2520:	90 e0       	ldi	r25, 0x00	; 0
    2522:	a0 e1       	ldi	r26, 0x10	; 16
    2524:	b0 e0       	ldi	r27, 0x00	; 0
    2526:	e8 2a       	or	r14, r24
    2528:	f9 2a       	or	r15, r25
    252a:	0a 2b       	or	r16, r26
    252c:	1b 2b       	or	r17, r27
    252e:	a5 c0       	rjmp	.+330    	; 0x267a <__pack_f+0x178>
    2530:	84 30       	cpi	r24, 0x04	; 4
    2532:	09 f4       	brne	.+2      	; 0x2536 <__pack_f+0x34>
    2534:	9f c0       	rjmp	.+318    	; 0x2674 <__pack_f+0x172>
    2536:	82 30       	cpi	r24, 0x02	; 2
    2538:	21 f4       	brne	.+8      	; 0x2542 <__pack_f+0x40>
    253a:	ee 24       	eor	r14, r14
    253c:	ff 24       	eor	r15, r15
    253e:	87 01       	movw	r16, r14
    2540:	05 c0       	rjmp	.+10     	; 0x254c <__pack_f+0x4a>
    2542:	e1 14       	cp	r14, r1
    2544:	f1 04       	cpc	r15, r1
    2546:	01 05       	cpc	r16, r1
    2548:	11 05       	cpc	r17, r1
    254a:	19 f4       	brne	.+6      	; 0x2552 <__pack_f+0x50>
    254c:	e0 e0       	ldi	r30, 0x00	; 0
    254e:	f0 e0       	ldi	r31, 0x00	; 0
    2550:	96 c0       	rjmp	.+300    	; 0x267e <__pack_f+0x17c>
    2552:	62 81       	ldd	r22, Z+2	; 0x02
    2554:	73 81       	ldd	r23, Z+3	; 0x03
    2556:	9f ef       	ldi	r25, 0xFF	; 255
    2558:	62 38       	cpi	r22, 0x82	; 130
    255a:	79 07       	cpc	r23, r25
    255c:	0c f0       	brlt	.+2      	; 0x2560 <__pack_f+0x5e>
    255e:	5b c0       	rjmp	.+182    	; 0x2616 <__pack_f+0x114>
    2560:	22 e8       	ldi	r18, 0x82	; 130
    2562:	3f ef       	ldi	r19, 0xFF	; 255
    2564:	26 1b       	sub	r18, r22
    2566:	37 0b       	sbc	r19, r23
    2568:	2a 31       	cpi	r18, 0x1A	; 26
    256a:	31 05       	cpc	r19, r1
    256c:	2c f0       	brlt	.+10     	; 0x2578 <__pack_f+0x76>
    256e:	20 e0       	ldi	r18, 0x00	; 0
    2570:	30 e0       	ldi	r19, 0x00	; 0
    2572:	40 e0       	ldi	r20, 0x00	; 0
    2574:	50 e0       	ldi	r21, 0x00	; 0
    2576:	2a c0       	rjmp	.+84     	; 0x25cc <__pack_f+0xca>
    2578:	b8 01       	movw	r22, r16
    257a:	a7 01       	movw	r20, r14
    257c:	02 2e       	mov	r0, r18
    257e:	04 c0       	rjmp	.+8      	; 0x2588 <__pack_f+0x86>
    2580:	76 95       	lsr	r23
    2582:	67 95       	ror	r22
    2584:	57 95       	ror	r21
    2586:	47 95       	ror	r20
    2588:	0a 94       	dec	r0
    258a:	d2 f7       	brpl	.-12     	; 0x2580 <__pack_f+0x7e>
    258c:	81 e0       	ldi	r24, 0x01	; 1
    258e:	90 e0       	ldi	r25, 0x00	; 0
    2590:	a0 e0       	ldi	r26, 0x00	; 0
    2592:	b0 e0       	ldi	r27, 0x00	; 0
    2594:	04 c0       	rjmp	.+8      	; 0x259e <__pack_f+0x9c>
    2596:	88 0f       	add	r24, r24
    2598:	99 1f       	adc	r25, r25
    259a:	aa 1f       	adc	r26, r26
    259c:	bb 1f       	adc	r27, r27
    259e:	2a 95       	dec	r18
    25a0:	d2 f7       	brpl	.-12     	; 0x2596 <__pack_f+0x94>
    25a2:	01 97       	sbiw	r24, 0x01	; 1
    25a4:	a1 09       	sbc	r26, r1
    25a6:	b1 09       	sbc	r27, r1
    25a8:	8e 21       	and	r24, r14
    25aa:	9f 21       	and	r25, r15
    25ac:	a0 23       	and	r26, r16
    25ae:	b1 23       	and	r27, r17
    25b0:	00 97       	sbiw	r24, 0x00	; 0
    25b2:	a1 05       	cpc	r26, r1
    25b4:	b1 05       	cpc	r27, r1
    25b6:	21 f0       	breq	.+8      	; 0x25c0 <__pack_f+0xbe>
    25b8:	81 e0       	ldi	r24, 0x01	; 1
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	a0 e0       	ldi	r26, 0x00	; 0
    25be:	b0 e0       	ldi	r27, 0x00	; 0
    25c0:	9a 01       	movw	r18, r20
    25c2:	ab 01       	movw	r20, r22
    25c4:	28 2b       	or	r18, r24
    25c6:	39 2b       	or	r19, r25
    25c8:	4a 2b       	or	r20, r26
    25ca:	5b 2b       	or	r21, r27
    25cc:	da 01       	movw	r26, r20
    25ce:	c9 01       	movw	r24, r18
    25d0:	8f 77       	andi	r24, 0x7F	; 127
    25d2:	90 70       	andi	r25, 0x00	; 0
    25d4:	a0 70       	andi	r26, 0x00	; 0
    25d6:	b0 70       	andi	r27, 0x00	; 0
    25d8:	80 34       	cpi	r24, 0x40	; 64
    25da:	91 05       	cpc	r25, r1
    25dc:	a1 05       	cpc	r26, r1
    25de:	b1 05       	cpc	r27, r1
    25e0:	39 f4       	brne	.+14     	; 0x25f0 <__pack_f+0xee>
    25e2:	27 ff       	sbrs	r18, 7
    25e4:	09 c0       	rjmp	.+18     	; 0x25f8 <__pack_f+0xf6>
    25e6:	20 5c       	subi	r18, 0xC0	; 192
    25e8:	3f 4f       	sbci	r19, 0xFF	; 255
    25ea:	4f 4f       	sbci	r20, 0xFF	; 255
    25ec:	5f 4f       	sbci	r21, 0xFF	; 255
    25ee:	04 c0       	rjmp	.+8      	; 0x25f8 <__pack_f+0xf6>
    25f0:	21 5c       	subi	r18, 0xC1	; 193
    25f2:	3f 4f       	sbci	r19, 0xFF	; 255
    25f4:	4f 4f       	sbci	r20, 0xFF	; 255
    25f6:	5f 4f       	sbci	r21, 0xFF	; 255
    25f8:	e0 e0       	ldi	r30, 0x00	; 0
    25fa:	f0 e0       	ldi	r31, 0x00	; 0
    25fc:	20 30       	cpi	r18, 0x00	; 0
    25fe:	a0 e0       	ldi	r26, 0x00	; 0
    2600:	3a 07       	cpc	r19, r26
    2602:	a0 e0       	ldi	r26, 0x00	; 0
    2604:	4a 07       	cpc	r20, r26
    2606:	a0 e4       	ldi	r26, 0x40	; 64
    2608:	5a 07       	cpc	r21, r26
    260a:	10 f0       	brcs	.+4      	; 0x2610 <__pack_f+0x10e>
    260c:	e1 e0       	ldi	r30, 0x01	; 1
    260e:	f0 e0       	ldi	r31, 0x00	; 0
    2610:	79 01       	movw	r14, r18
    2612:	8a 01       	movw	r16, r20
    2614:	27 c0       	rjmp	.+78     	; 0x2664 <__pack_f+0x162>
    2616:	60 38       	cpi	r22, 0x80	; 128
    2618:	71 05       	cpc	r23, r1
    261a:	64 f5       	brge	.+88     	; 0x2674 <__pack_f+0x172>
    261c:	fb 01       	movw	r30, r22
    261e:	e1 58       	subi	r30, 0x81	; 129
    2620:	ff 4f       	sbci	r31, 0xFF	; 255
    2622:	d8 01       	movw	r26, r16
    2624:	c7 01       	movw	r24, r14
    2626:	8f 77       	andi	r24, 0x7F	; 127
    2628:	90 70       	andi	r25, 0x00	; 0
    262a:	a0 70       	andi	r26, 0x00	; 0
    262c:	b0 70       	andi	r27, 0x00	; 0
    262e:	80 34       	cpi	r24, 0x40	; 64
    2630:	91 05       	cpc	r25, r1
    2632:	a1 05       	cpc	r26, r1
    2634:	b1 05       	cpc	r27, r1
    2636:	39 f4       	brne	.+14     	; 0x2646 <__pack_f+0x144>
    2638:	e7 fe       	sbrs	r14, 7
    263a:	0d c0       	rjmp	.+26     	; 0x2656 <__pack_f+0x154>
    263c:	80 e4       	ldi	r24, 0x40	; 64
    263e:	90 e0       	ldi	r25, 0x00	; 0
    2640:	a0 e0       	ldi	r26, 0x00	; 0
    2642:	b0 e0       	ldi	r27, 0x00	; 0
    2644:	04 c0       	rjmp	.+8      	; 0x264e <__pack_f+0x14c>
    2646:	8f e3       	ldi	r24, 0x3F	; 63
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	a0 e0       	ldi	r26, 0x00	; 0
    264c:	b0 e0       	ldi	r27, 0x00	; 0
    264e:	e8 0e       	add	r14, r24
    2650:	f9 1e       	adc	r15, r25
    2652:	0a 1f       	adc	r16, r26
    2654:	1b 1f       	adc	r17, r27
    2656:	17 ff       	sbrs	r17, 7
    2658:	05 c0       	rjmp	.+10     	; 0x2664 <__pack_f+0x162>
    265a:	16 95       	lsr	r17
    265c:	07 95       	ror	r16
    265e:	f7 94       	ror	r15
    2660:	e7 94       	ror	r14
    2662:	31 96       	adiw	r30, 0x01	; 1
    2664:	87 e0       	ldi	r24, 0x07	; 7
    2666:	16 95       	lsr	r17
    2668:	07 95       	ror	r16
    266a:	f7 94       	ror	r15
    266c:	e7 94       	ror	r14
    266e:	8a 95       	dec	r24
    2670:	d1 f7       	brne	.-12     	; 0x2666 <__pack_f+0x164>
    2672:	05 c0       	rjmp	.+10     	; 0x267e <__pack_f+0x17c>
    2674:	ee 24       	eor	r14, r14
    2676:	ff 24       	eor	r15, r15
    2678:	87 01       	movw	r16, r14
    267a:	ef ef       	ldi	r30, 0xFF	; 255
    267c:	f0 e0       	ldi	r31, 0x00	; 0
    267e:	6e 2f       	mov	r22, r30
    2680:	67 95       	ror	r22
    2682:	66 27       	eor	r22, r22
    2684:	67 95       	ror	r22
    2686:	90 2f       	mov	r25, r16
    2688:	9f 77       	andi	r25, 0x7F	; 127
    268a:	d7 94       	ror	r13
    268c:	dd 24       	eor	r13, r13
    268e:	d7 94       	ror	r13
    2690:	8e 2f       	mov	r24, r30
    2692:	86 95       	lsr	r24
    2694:	49 2f       	mov	r20, r25
    2696:	46 2b       	or	r20, r22
    2698:	58 2f       	mov	r21, r24
    269a:	5d 29       	or	r21, r13
    269c:	b7 01       	movw	r22, r14
    269e:	ca 01       	movw	r24, r20
    26a0:	1f 91       	pop	r17
    26a2:	0f 91       	pop	r16
    26a4:	ff 90       	pop	r15
    26a6:	ef 90       	pop	r14
    26a8:	df 90       	pop	r13
    26aa:	08 95       	ret

000026ac <__unpack_f>:
    26ac:	fc 01       	movw	r30, r24
    26ae:	db 01       	movw	r26, r22
    26b0:	40 81       	ld	r20, Z
    26b2:	51 81       	ldd	r21, Z+1	; 0x01
    26b4:	22 81       	ldd	r18, Z+2	; 0x02
    26b6:	62 2f       	mov	r22, r18
    26b8:	6f 77       	andi	r22, 0x7F	; 127
    26ba:	70 e0       	ldi	r23, 0x00	; 0
    26bc:	22 1f       	adc	r18, r18
    26be:	22 27       	eor	r18, r18
    26c0:	22 1f       	adc	r18, r18
    26c2:	93 81       	ldd	r25, Z+3	; 0x03
    26c4:	89 2f       	mov	r24, r25
    26c6:	88 0f       	add	r24, r24
    26c8:	82 2b       	or	r24, r18
    26ca:	28 2f       	mov	r18, r24
    26cc:	30 e0       	ldi	r19, 0x00	; 0
    26ce:	99 1f       	adc	r25, r25
    26d0:	99 27       	eor	r25, r25
    26d2:	99 1f       	adc	r25, r25
    26d4:	11 96       	adiw	r26, 0x01	; 1
    26d6:	9c 93       	st	X, r25
    26d8:	11 97       	sbiw	r26, 0x01	; 1
    26da:	21 15       	cp	r18, r1
    26dc:	31 05       	cpc	r19, r1
    26de:	a9 f5       	brne	.+106    	; 0x274a <__unpack_f+0x9e>
    26e0:	41 15       	cp	r20, r1
    26e2:	51 05       	cpc	r21, r1
    26e4:	61 05       	cpc	r22, r1
    26e6:	71 05       	cpc	r23, r1
    26e8:	11 f4       	brne	.+4      	; 0x26ee <__unpack_f+0x42>
    26ea:	82 e0       	ldi	r24, 0x02	; 2
    26ec:	37 c0       	rjmp	.+110    	; 0x275c <__unpack_f+0xb0>
    26ee:	82 e8       	ldi	r24, 0x82	; 130
    26f0:	9f ef       	ldi	r25, 0xFF	; 255
    26f2:	13 96       	adiw	r26, 0x03	; 3
    26f4:	9c 93       	st	X, r25
    26f6:	8e 93       	st	-X, r24
    26f8:	12 97       	sbiw	r26, 0x02	; 2
    26fa:	9a 01       	movw	r18, r20
    26fc:	ab 01       	movw	r20, r22
    26fe:	67 e0       	ldi	r22, 0x07	; 7
    2700:	22 0f       	add	r18, r18
    2702:	33 1f       	adc	r19, r19
    2704:	44 1f       	adc	r20, r20
    2706:	55 1f       	adc	r21, r21
    2708:	6a 95       	dec	r22
    270a:	d1 f7       	brne	.-12     	; 0x2700 <__unpack_f+0x54>
    270c:	83 e0       	ldi	r24, 0x03	; 3
    270e:	8c 93       	st	X, r24
    2710:	0d c0       	rjmp	.+26     	; 0x272c <__unpack_f+0x80>
    2712:	22 0f       	add	r18, r18
    2714:	33 1f       	adc	r19, r19
    2716:	44 1f       	adc	r20, r20
    2718:	55 1f       	adc	r21, r21
    271a:	12 96       	adiw	r26, 0x02	; 2
    271c:	8d 91       	ld	r24, X+
    271e:	9c 91       	ld	r25, X
    2720:	13 97       	sbiw	r26, 0x03	; 3
    2722:	01 97       	sbiw	r24, 0x01	; 1
    2724:	13 96       	adiw	r26, 0x03	; 3
    2726:	9c 93       	st	X, r25
    2728:	8e 93       	st	-X, r24
    272a:	12 97       	sbiw	r26, 0x02	; 2
    272c:	20 30       	cpi	r18, 0x00	; 0
    272e:	80 e0       	ldi	r24, 0x00	; 0
    2730:	38 07       	cpc	r19, r24
    2732:	80 e0       	ldi	r24, 0x00	; 0
    2734:	48 07       	cpc	r20, r24
    2736:	80 e4       	ldi	r24, 0x40	; 64
    2738:	58 07       	cpc	r21, r24
    273a:	58 f3       	brcs	.-42     	; 0x2712 <__unpack_f+0x66>
    273c:	14 96       	adiw	r26, 0x04	; 4
    273e:	2d 93       	st	X+, r18
    2740:	3d 93       	st	X+, r19
    2742:	4d 93       	st	X+, r20
    2744:	5c 93       	st	X, r21
    2746:	17 97       	sbiw	r26, 0x07	; 7
    2748:	08 95       	ret
    274a:	2f 3f       	cpi	r18, 0xFF	; 255
    274c:	31 05       	cpc	r19, r1
    274e:	79 f4       	brne	.+30     	; 0x276e <__unpack_f+0xc2>
    2750:	41 15       	cp	r20, r1
    2752:	51 05       	cpc	r21, r1
    2754:	61 05       	cpc	r22, r1
    2756:	71 05       	cpc	r23, r1
    2758:	19 f4       	brne	.+6      	; 0x2760 <__unpack_f+0xb4>
    275a:	84 e0       	ldi	r24, 0x04	; 4
    275c:	8c 93       	st	X, r24
    275e:	08 95       	ret
    2760:	64 ff       	sbrs	r22, 4
    2762:	03 c0       	rjmp	.+6      	; 0x276a <__unpack_f+0xbe>
    2764:	81 e0       	ldi	r24, 0x01	; 1
    2766:	8c 93       	st	X, r24
    2768:	12 c0       	rjmp	.+36     	; 0x278e <__unpack_f+0xe2>
    276a:	1c 92       	st	X, r1
    276c:	10 c0       	rjmp	.+32     	; 0x278e <__unpack_f+0xe2>
    276e:	2f 57       	subi	r18, 0x7F	; 127
    2770:	30 40       	sbci	r19, 0x00	; 0
    2772:	13 96       	adiw	r26, 0x03	; 3
    2774:	3c 93       	st	X, r19
    2776:	2e 93       	st	-X, r18
    2778:	12 97       	sbiw	r26, 0x02	; 2
    277a:	83 e0       	ldi	r24, 0x03	; 3
    277c:	8c 93       	st	X, r24
    277e:	87 e0       	ldi	r24, 0x07	; 7
    2780:	44 0f       	add	r20, r20
    2782:	55 1f       	adc	r21, r21
    2784:	66 1f       	adc	r22, r22
    2786:	77 1f       	adc	r23, r23
    2788:	8a 95       	dec	r24
    278a:	d1 f7       	brne	.-12     	; 0x2780 <__unpack_f+0xd4>
    278c:	70 64       	ori	r23, 0x40	; 64
    278e:	14 96       	adiw	r26, 0x04	; 4
    2790:	4d 93       	st	X+, r20
    2792:	5d 93       	st	X+, r21
    2794:	6d 93       	st	X+, r22
    2796:	7c 93       	st	X, r23
    2798:	17 97       	sbiw	r26, 0x07	; 7
    279a:	08 95       	ret

0000279c <__fpcmp_parts_f>:
    279c:	1f 93       	push	r17
    279e:	dc 01       	movw	r26, r24
    27a0:	fb 01       	movw	r30, r22
    27a2:	9c 91       	ld	r25, X
    27a4:	92 30       	cpi	r25, 0x02	; 2
    27a6:	08 f4       	brcc	.+2      	; 0x27aa <__fpcmp_parts_f+0xe>
    27a8:	47 c0       	rjmp	.+142    	; 0x2838 <__fpcmp_parts_f+0x9c>
    27aa:	80 81       	ld	r24, Z
    27ac:	82 30       	cpi	r24, 0x02	; 2
    27ae:	08 f4       	brcc	.+2      	; 0x27b2 <__fpcmp_parts_f+0x16>
    27b0:	43 c0       	rjmp	.+134    	; 0x2838 <__fpcmp_parts_f+0x9c>
    27b2:	94 30       	cpi	r25, 0x04	; 4
    27b4:	51 f4       	brne	.+20     	; 0x27ca <__fpcmp_parts_f+0x2e>
    27b6:	11 96       	adiw	r26, 0x01	; 1
    27b8:	1c 91       	ld	r17, X
    27ba:	84 30       	cpi	r24, 0x04	; 4
    27bc:	99 f5       	brne	.+102    	; 0x2824 <__fpcmp_parts_f+0x88>
    27be:	81 81       	ldd	r24, Z+1	; 0x01
    27c0:	68 2f       	mov	r22, r24
    27c2:	70 e0       	ldi	r23, 0x00	; 0
    27c4:	61 1b       	sub	r22, r17
    27c6:	71 09       	sbc	r23, r1
    27c8:	3f c0       	rjmp	.+126    	; 0x2848 <__fpcmp_parts_f+0xac>
    27ca:	84 30       	cpi	r24, 0x04	; 4
    27cc:	21 f0       	breq	.+8      	; 0x27d6 <__fpcmp_parts_f+0x3a>
    27ce:	92 30       	cpi	r25, 0x02	; 2
    27d0:	31 f4       	brne	.+12     	; 0x27de <__fpcmp_parts_f+0x42>
    27d2:	82 30       	cpi	r24, 0x02	; 2
    27d4:	b9 f1       	breq	.+110    	; 0x2844 <__fpcmp_parts_f+0xa8>
    27d6:	81 81       	ldd	r24, Z+1	; 0x01
    27d8:	88 23       	and	r24, r24
    27da:	89 f1       	breq	.+98     	; 0x283e <__fpcmp_parts_f+0xa2>
    27dc:	2d c0       	rjmp	.+90     	; 0x2838 <__fpcmp_parts_f+0x9c>
    27de:	11 96       	adiw	r26, 0x01	; 1
    27e0:	1c 91       	ld	r17, X
    27e2:	11 97       	sbiw	r26, 0x01	; 1
    27e4:	82 30       	cpi	r24, 0x02	; 2
    27e6:	f1 f0       	breq	.+60     	; 0x2824 <__fpcmp_parts_f+0x88>
    27e8:	81 81       	ldd	r24, Z+1	; 0x01
    27ea:	18 17       	cp	r17, r24
    27ec:	d9 f4       	brne	.+54     	; 0x2824 <__fpcmp_parts_f+0x88>
    27ee:	12 96       	adiw	r26, 0x02	; 2
    27f0:	2d 91       	ld	r18, X+
    27f2:	3c 91       	ld	r19, X
    27f4:	13 97       	sbiw	r26, 0x03	; 3
    27f6:	82 81       	ldd	r24, Z+2	; 0x02
    27f8:	93 81       	ldd	r25, Z+3	; 0x03
    27fa:	82 17       	cp	r24, r18
    27fc:	93 07       	cpc	r25, r19
    27fe:	94 f0       	brlt	.+36     	; 0x2824 <__fpcmp_parts_f+0x88>
    2800:	28 17       	cp	r18, r24
    2802:	39 07       	cpc	r19, r25
    2804:	bc f0       	brlt	.+46     	; 0x2834 <__fpcmp_parts_f+0x98>
    2806:	14 96       	adiw	r26, 0x04	; 4
    2808:	8d 91       	ld	r24, X+
    280a:	9d 91       	ld	r25, X+
    280c:	0d 90       	ld	r0, X+
    280e:	bc 91       	ld	r27, X
    2810:	a0 2d       	mov	r26, r0
    2812:	24 81       	ldd	r18, Z+4	; 0x04
    2814:	35 81       	ldd	r19, Z+5	; 0x05
    2816:	46 81       	ldd	r20, Z+6	; 0x06
    2818:	57 81       	ldd	r21, Z+7	; 0x07
    281a:	28 17       	cp	r18, r24
    281c:	39 07       	cpc	r19, r25
    281e:	4a 07       	cpc	r20, r26
    2820:	5b 07       	cpc	r21, r27
    2822:	18 f4       	brcc	.+6      	; 0x282a <__fpcmp_parts_f+0x8e>
    2824:	11 23       	and	r17, r17
    2826:	41 f0       	breq	.+16     	; 0x2838 <__fpcmp_parts_f+0x9c>
    2828:	0a c0       	rjmp	.+20     	; 0x283e <__fpcmp_parts_f+0xa2>
    282a:	82 17       	cp	r24, r18
    282c:	93 07       	cpc	r25, r19
    282e:	a4 07       	cpc	r26, r20
    2830:	b5 07       	cpc	r27, r21
    2832:	40 f4       	brcc	.+16     	; 0x2844 <__fpcmp_parts_f+0xa8>
    2834:	11 23       	and	r17, r17
    2836:	19 f0       	breq	.+6      	; 0x283e <__fpcmp_parts_f+0xa2>
    2838:	61 e0       	ldi	r22, 0x01	; 1
    283a:	70 e0       	ldi	r23, 0x00	; 0
    283c:	05 c0       	rjmp	.+10     	; 0x2848 <__fpcmp_parts_f+0xac>
    283e:	6f ef       	ldi	r22, 0xFF	; 255
    2840:	7f ef       	ldi	r23, 0xFF	; 255
    2842:	02 c0       	rjmp	.+4      	; 0x2848 <__fpcmp_parts_f+0xac>
    2844:	60 e0       	ldi	r22, 0x00	; 0
    2846:	70 e0       	ldi	r23, 0x00	; 0
    2848:	cb 01       	movw	r24, r22
    284a:	1f 91       	pop	r17
    284c:	08 95       	ret

0000284e <ADC_VidInit>:
#include "INTERRUPT_Interface.h"
#include "ADC_interface.h"
#include "ADC_private.h"
#include "ADC_cfg.h"

void ADC_VidInit (void){
    284e:	df 93       	push	r29
    2850:	cf 93       	push	r28
    2852:	cd b7       	in	r28, 0x3d	; 61
    2854:	de b7       	in	r29, 0x3e	; 62
/* to choose which Voltage reference we need */
#if VREF_USED == AVCC_5V
	ADMUX = 0x40 ;
    2856:	e7 e2       	ldi	r30, 0x27	; 39
    2858:	f0 e0       	ldi	r31, 0x00	; 0
    285a:	80 e4       	ldi	r24, 0x40	; 64
    285c:	80 83       	st	Z, r24
#elif PRE_SCALAR ==   PRE_SCALAR_32
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS0) ;
#elif PRE_SCALAR ==  PRE_SCALAR_64
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) ;
#elif PRE_SCALAR == PRE_SCALAR_128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0) ;
    285e:	e6 e2       	ldi	r30, 0x26	; 38
    2860:	f0 e0       	ldi	r31, 0x00	; 0
    2862:	87 e8       	ldi	r24, 0x87	; 135
    2864:	80 83       	st	Z, r24
#endif

/*  to choose which adjusted we need to read from ADC DATA REGISTER   */
#if ADJUSTED_USED == RIGHT_ADJEUSTED
	CLR_BIT(ADMUX,ADLAR);                             //CLEAR ADLAR , RIGHT_ADJEUSTED
    2866:	a7 e2       	ldi	r26, 0x27	; 39
    2868:	b0 e0       	ldi	r27, 0x00	; 0
    286a:	e7 e2       	ldi	r30, 0x27	; 39
    286c:	f0 e0       	ldi	r31, 0x00	; 0
    286e:	80 81       	ld	r24, Z
    2870:	8f 7d       	andi	r24, 0xDF	; 223
    2872:	8c 93       	st	X, r24
#elif ADJUSTED_USED == LEFT_ADJUSTED
	SET_BIT(ADMUX,ADLAR);                             //SET ADLAR , LEFT_ADJUSTED
#endif

}
    2874:	cf 91       	pop	r28
    2876:	df 91       	pop	r29
    2878:	08 95       	ret

0000287a <ADC_VidReadChannel>:

u16 ADC_VidReadChannel (u8 Copy_U8Channel){
    287a:	2f 92       	push	r2
    287c:	3f 92       	push	r3
    287e:	4f 92       	push	r4
    2880:	5f 92       	push	r5
    2882:	6f 92       	push	r6
    2884:	7f 92       	push	r7
    2886:	8f 92       	push	r8
    2888:	9f 92       	push	r9
    288a:	af 92       	push	r10
    288c:	bf 92       	push	r11
    288e:	cf 92       	push	r12
    2890:	df 92       	push	r13
    2892:	ef 92       	push	r14
    2894:	ff 92       	push	r15
    2896:	0f 93       	push	r16
    2898:	1f 93       	push	r17
    289a:	df 93       	push	r29
    289c:	cf 93       	push	r28
    289e:	0f 92       	push	r0
    28a0:	cd b7       	in	r28, 0x3d	; 61
    28a2:	de b7       	in	r29, 0x3e	; 62
    28a4:	89 83       	std	Y+1, r24	; 0x01
	ADMUX &= 0xE0 ;                                   //to clear ADMUX
    28a6:	a7 e2       	ldi	r26, 0x27	; 39
    28a8:	b0 e0       	ldi	r27, 0x00	; 0
    28aa:	e7 e2       	ldi	r30, 0x27	; 39
    28ac:	f0 e0       	ldi	r31, 0x00	; 0
    28ae:	80 81       	ld	r24, Z
    28b0:	80 7e       	andi	r24, 0xE0	; 224
    28b2:	8c 93       	st	X, r24
	ADMUX |= ( 0x1F & Copy_U8Channel ) ;              //to check that the channel out of 8 pins
    28b4:	a7 e2       	ldi	r26, 0x27	; 39
    28b6:	b0 e0       	ldi	r27, 0x00	; 0
    28b8:	e7 e2       	ldi	r30, 0x27	; 39
    28ba:	f0 e0       	ldi	r31, 0x00	; 0
    28bc:	80 81       	ld	r24, Z
    28be:	98 2f       	mov	r25, r24
    28c0:	89 81       	ldd	r24, Y+1	; 0x01
    28c2:	8f 71       	andi	r24, 0x1F	; 31
    28c4:	89 2b       	or	r24, r25
    28c6:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,ADSC) ;                            //to start conversion
    28c8:	a6 e2       	ldi	r26, 0x26	; 38
    28ca:	b0 e0       	ldi	r27, 0x00	; 0
    28cc:	e6 e2       	ldi	r30, 0x26	; 38
    28ce:	f0 e0       	ldi	r31, 0x00	; 0
    28d0:	80 81       	ld	r24, Z
    28d2:	80 64       	ori	r24, 0x40	; 64
    28d4:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,ADATE) ;                           //to disable  Auto Trigger
    28d6:	a6 e2       	ldi	r26, 0x26	; 38
    28d8:	b0 e0       	ldi	r27, 0x00	; 0
    28da:	e6 e2       	ldi	r30, 0x26	; 38
    28dc:	f0 e0       	ldi	r31, 0x00	; 0
    28de:	80 81       	ld	r24, Z
    28e0:	8f 7d       	andi	r24, 0xDF	; 223
    28e2:	8c 93       	st	X, r24
	while ( GET_BIT(ADCSRA,ADIF) == 0 ) ;             //to stac while conversion
    28e4:	e6 e2       	ldi	r30, 0x26	; 38
    28e6:	f0 e0       	ldi	r31, 0x00	; 0
    28e8:	80 81       	ld	r24, Z
    28ea:	82 95       	swap	r24
    28ec:	8f 70       	andi	r24, 0x0F	; 15
    28ee:	88 2f       	mov	r24, r24
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	81 70       	andi	r24, 0x01	; 1
    28f4:	90 70       	andi	r25, 0x00	; 0
    28f6:	00 97       	sbiw	r24, 0x00	; 0
    28f8:	a9 f3       	breq	.-22     	; 0x28e4 <ADC_VidReadChannel+0x6a>
    SET_BIT(ADCSRA,ADIF);                             //to clear flag
    28fa:	a6 e2       	ldi	r26, 0x26	; 38
    28fc:	b0 e0       	ldi	r27, 0x00	; 0
    28fe:	e6 e2       	ldi	r30, 0x26	; 38
    2900:	f0 e0       	ldi	r31, 0x00	; 0
    2902:	80 81       	ld	r24, Z
    2904:	80 61       	ori	r24, 0x10	; 16
    2906:	8c 93       	st	X, r24

#if ADJUSTED_USED == RIGHT_ADJEUSTED
    return ( (u64)ADC_REG*VREF*1000)/MAX_DIGITAL ;        //to return Analog value in mv value
    2908:	e4 e2       	ldi	r30, 0x24	; 36
    290a:	f0 e0       	ldi	r31, 0x00	; 0
    290c:	80 81       	ld	r24, Z
    290e:	91 81       	ldd	r25, Z+1	; 0x01
    2910:	5c 01       	movw	r10, r24
    2912:	cc 24       	eor	r12, r12
    2914:	dd 24       	eor	r13, r13
    2916:	ee 24       	eor	r14, r14
    2918:	ff 24       	eor	r15, r15
    291a:	87 01       	movw	r16, r14
    291c:	2a 2d       	mov	r18, r10
    291e:	3b 2d       	mov	r19, r11
    2920:	4c 2d       	mov	r20, r12
    2922:	5d 2d       	mov	r21, r13
    2924:	6e 2d       	mov	r22, r14
    2926:	7f 2d       	mov	r23, r15
    2928:	80 2f       	mov	r24, r16
    292a:	91 2f       	mov	r25, r17
    292c:	0f 2e       	mov	r0, r31
    292e:	f8 e8       	ldi	r31, 0x88	; 136
    2930:	af 2e       	mov	r10, r31
    2932:	f0 2d       	mov	r31, r0
    2934:	0f 2e       	mov	r0, r31
    2936:	f3 e1       	ldi	r31, 0x13	; 19
    2938:	bf 2e       	mov	r11, r31
    293a:	f0 2d       	mov	r31, r0
    293c:	cc 24       	eor	r12, r12
    293e:	dd 24       	eor	r13, r13
    2940:	ee 24       	eor	r14, r14
    2942:	ff 24       	eor	r15, r15
    2944:	00 e0       	ldi	r16, 0x00	; 0
    2946:	10 e0       	ldi	r17, 0x00	; 0
    2948:	0e 94 41 00 	call	0x82	; 0x82 <__muldi3>
    294c:	22 2e       	mov	r2, r18
    294e:	33 2e       	mov	r3, r19
    2950:	44 2e       	mov	r4, r20
    2952:	55 2e       	mov	r5, r21
    2954:	66 2e       	mov	r6, r22
    2956:	77 2e       	mov	r7, r23
    2958:	88 2e       	mov	r8, r24
    295a:	99 2e       	mov	r9, r25
    295c:	a2 2c       	mov	r10, r2
    295e:	b3 2c       	mov	r11, r3
    2960:	c4 2c       	mov	r12, r4
    2962:	d5 2c       	mov	r13, r5
    2964:	e6 2c       	mov	r14, r6
    2966:	f7 2c       	mov	r15, r7
    2968:	08 2d       	mov	r16, r8
    296a:	19 2d       	mov	r17, r9
    296c:	2a 2d       	mov	r18, r10
    296e:	3b 2d       	mov	r19, r11
    2970:	4c 2d       	mov	r20, r12
    2972:	5d 2d       	mov	r21, r13
    2974:	6e 2d       	mov	r22, r14
    2976:	7f 2d       	mov	r23, r15
    2978:	80 2f       	mov	r24, r16
    297a:	91 2f       	mov	r25, r17
    297c:	aa 24       	eor	r10, r10
    297e:	aa 94       	dec	r10
    2980:	0f 2e       	mov	r0, r31
    2982:	f3 e0       	ldi	r31, 0x03	; 3
    2984:	bf 2e       	mov	r11, r31
    2986:	f0 2d       	mov	r31, r0
    2988:	cc 24       	eor	r12, r12
    298a:	dd 24       	eor	r13, r13
    298c:	ee 24       	eor	r14, r14
    298e:	ff 24       	eor	r15, r15
    2990:	00 e0       	ldi	r16, 0x00	; 0
    2992:	10 e0       	ldi	r17, 0x00	; 0
    2994:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__udivdi3>
    2998:	a2 2e       	mov	r10, r18
    299a:	b3 2e       	mov	r11, r19
    299c:	c4 2e       	mov	r12, r20
    299e:	d5 2e       	mov	r13, r21
    29a0:	e6 2e       	mov	r14, r22
    29a2:	f7 2e       	mov	r15, r23
    29a4:	08 2f       	mov	r16, r24
    29a6:	19 2f       	mov	r17, r25
    29a8:	2a 2d       	mov	r18, r10
    29aa:	3b 2d       	mov	r19, r11
    29ac:	4c 2d       	mov	r20, r12
    29ae:	5d 2d       	mov	r21, r13
    29b0:	6e 2d       	mov	r22, r14
    29b2:	7f 2d       	mov	r23, r15
    29b4:	80 2f       	mov	r24, r16
    29b6:	91 2f       	mov	r25, r17
    29b8:	c9 01       	movw	r24, r18
#elif ADJUSTED_USED == LEFT_ADJUSTED
    ADCH = (ADCH<<2) ;
    return ( (u64)ADCH*VREF*1000)/MAX_DIGITAL ;        //to return Analog value in mv value
#endif
}
    29ba:	0f 90       	pop	r0
    29bc:	cf 91       	pop	r28
    29be:	df 91       	pop	r29
    29c0:	1f 91       	pop	r17
    29c2:	0f 91       	pop	r16
    29c4:	ff 90       	pop	r15
    29c6:	ef 90       	pop	r14
    29c8:	df 90       	pop	r13
    29ca:	cf 90       	pop	r12
    29cc:	bf 90       	pop	r11
    29ce:	af 90       	pop	r10
    29d0:	9f 90       	pop	r9
    29d2:	8f 90       	pop	r8
    29d4:	7f 90       	pop	r7
    29d6:	6f 90       	pop	r6
    29d8:	5f 90       	pop	r5
    29da:	4f 90       	pop	r4
    29dc:	3f 90       	pop	r3
    29de:	2f 90       	pop	r2
    29e0:	08 95       	ret

000029e2 <ADC_VidDeinit>:

void ADC_VidDeinit (void){
    29e2:	df 93       	push	r29
    29e4:	cf 93       	push	r28
    29e6:	cd b7       	in	r28, 0x3d	; 61
    29e8:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ADCSRA,ADEN);                             //to disable ADC perpherial
    29ea:	a6 e2       	ldi	r26, 0x26	; 38
    29ec:	b0 e0       	ldi	r27, 0x00	; 0
    29ee:	e6 e2       	ldi	r30, 0x26	; 38
    29f0:	f0 e0       	ldi	r31, 0x00	; 0
    29f2:	80 81       	ld	r24, Z
    29f4:	8f 77       	andi	r24, 0x7F	; 127
    29f6:	8c 93       	st	X, r24
    ADMUX = 0x00 ;                                    //to clear ADMUX
    29f8:	e7 e2       	ldi	r30, 0x27	; 39
    29fa:	f0 e0       	ldi	r31, 0x00	; 0
    29fc:	10 82       	st	Z, r1
}
    29fe:	cf 91       	pop	r28
    2a00:	df 91       	pop	r29
    2a02:	08 95       	ret

00002a04 <DIO_VidSetPinDirection>:
#include"../LIB/STD_TYPES.h"
#include"../LIB/BIT_MATH.h"
#include"DIO_private.h"
#include"DIO_interface.h"

void DIO_VidSetPinDirection (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Dir ) {
    2a04:	df 93       	push	r29
    2a06:	cf 93       	push	r28
    2a08:	cd b7       	in	r28, 0x3d	; 61
    2a0a:	de b7       	in	r29, 0x3e	; 62
    2a0c:	27 97       	sbiw	r28, 0x07	; 7
    2a0e:	0f b6       	in	r0, 0x3f	; 63
    2a10:	f8 94       	cli
    2a12:	de bf       	out	0x3e, r29	; 62
    2a14:	0f be       	out	0x3f, r0	; 63
    2a16:	cd bf       	out	0x3d, r28	; 61
    2a18:	89 83       	std	Y+1, r24	; 0x01
    2a1a:	6a 83       	std	Y+2, r22	; 0x02
    2a1c:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Dir ){
    2a1e:	8b 81       	ldd	r24, Y+3	; 0x03
    2a20:	81 30       	cpi	r24, 0x01	; 1
    2a22:	09 f0       	breq	.+2      	; 0x2a26 <DIO_VidSetPinDirection+0x22>
    2a24:	6f c0       	rjmp	.+222    	; 0x2b04 <DIO_VidSetPinDirection+0x100>
		switch (Copy_U8Port){
    2a26:	89 81       	ldd	r24, Y+1	; 0x01
    2a28:	28 2f       	mov	r18, r24
    2a2a:	30 e0       	ldi	r19, 0x00	; 0
    2a2c:	3f 83       	std	Y+7, r19	; 0x07
    2a2e:	2e 83       	std	Y+6, r18	; 0x06
    2a30:	8e 81       	ldd	r24, Y+6	; 0x06
    2a32:	9f 81       	ldd	r25, Y+7	; 0x07
    2a34:	81 30       	cpi	r24, 0x01	; 1
    2a36:	91 05       	cpc	r25, r1
    2a38:	49 f1       	breq	.+82     	; 0x2a8c <DIO_VidSetPinDirection+0x88>
    2a3a:	2e 81       	ldd	r18, Y+6	; 0x06
    2a3c:	3f 81       	ldd	r19, Y+7	; 0x07
    2a3e:	22 30       	cpi	r18, 0x02	; 2
    2a40:	31 05       	cpc	r19, r1
    2a42:	2c f4       	brge	.+10     	; 0x2a4e <DIO_VidSetPinDirection+0x4a>
    2a44:	8e 81       	ldd	r24, Y+6	; 0x06
    2a46:	9f 81       	ldd	r25, Y+7	; 0x07
    2a48:	00 97       	sbiw	r24, 0x00	; 0
    2a4a:	61 f0       	breq	.+24     	; 0x2a64 <DIO_VidSetPinDirection+0x60>
    2a4c:	d2 c0       	rjmp	.+420    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
    2a4e:	2e 81       	ldd	r18, Y+6	; 0x06
    2a50:	3f 81       	ldd	r19, Y+7	; 0x07
    2a52:	22 30       	cpi	r18, 0x02	; 2
    2a54:	31 05       	cpc	r19, r1
    2a56:	71 f1       	breq	.+92     	; 0x2ab4 <DIO_VidSetPinDirection+0xb0>
    2a58:	8e 81       	ldd	r24, Y+6	; 0x06
    2a5a:	9f 81       	ldd	r25, Y+7	; 0x07
    2a5c:	83 30       	cpi	r24, 0x03	; 3
    2a5e:	91 05       	cpc	r25, r1
    2a60:	e9 f1       	breq	.+122    	; 0x2adc <DIO_VidSetPinDirection+0xd8>
    2a62:	c7 c0       	rjmp	.+398    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    SET_BIT(DDRA,Copy_U8Pin);
    2a64:	aa e3       	ldi	r26, 0x3A	; 58
    2a66:	b0 e0       	ldi	r27, 0x00	; 0
    2a68:	ea e3       	ldi	r30, 0x3A	; 58
    2a6a:	f0 e0       	ldi	r31, 0x00	; 0
    2a6c:	80 81       	ld	r24, Z
    2a6e:	48 2f       	mov	r20, r24
    2a70:	8a 81       	ldd	r24, Y+2	; 0x02
    2a72:	28 2f       	mov	r18, r24
    2a74:	30 e0       	ldi	r19, 0x00	; 0
    2a76:	81 e0       	ldi	r24, 0x01	; 1
    2a78:	90 e0       	ldi	r25, 0x00	; 0
    2a7a:	02 2e       	mov	r0, r18
    2a7c:	02 c0       	rjmp	.+4      	; 0x2a82 <DIO_VidSetPinDirection+0x7e>
    2a7e:	88 0f       	add	r24, r24
    2a80:	99 1f       	adc	r25, r25
    2a82:	0a 94       	dec	r0
    2a84:	e2 f7       	brpl	.-8      	; 0x2a7e <DIO_VidSetPinDirection+0x7a>
    2a86:	84 2b       	or	r24, r20
    2a88:	8c 93       	st	X, r24
    2a8a:	b3 c0       	rjmp	.+358    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(DDRB,Copy_U8Pin);
    2a8c:	a7 e3       	ldi	r26, 0x37	; 55
    2a8e:	b0 e0       	ldi	r27, 0x00	; 0
    2a90:	e7 e3       	ldi	r30, 0x37	; 55
    2a92:	f0 e0       	ldi	r31, 0x00	; 0
    2a94:	80 81       	ld	r24, Z
    2a96:	48 2f       	mov	r20, r24
    2a98:	8a 81       	ldd	r24, Y+2	; 0x02
    2a9a:	28 2f       	mov	r18, r24
    2a9c:	30 e0       	ldi	r19, 0x00	; 0
    2a9e:	81 e0       	ldi	r24, 0x01	; 1
    2aa0:	90 e0       	ldi	r25, 0x00	; 0
    2aa2:	02 2e       	mov	r0, r18
    2aa4:	02 c0       	rjmp	.+4      	; 0x2aaa <DIO_VidSetPinDirection+0xa6>
    2aa6:	88 0f       	add	r24, r24
    2aa8:	99 1f       	adc	r25, r25
    2aaa:	0a 94       	dec	r0
    2aac:	e2 f7       	brpl	.-8      	; 0x2aa6 <DIO_VidSetPinDirection+0xa2>
    2aae:	84 2b       	or	r24, r20
    2ab0:	8c 93       	st	X, r24
    2ab2:	9f c0       	rjmp	.+318    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(DDRC,Copy_U8Pin);
    2ab4:	a4 e3       	ldi	r26, 0x34	; 52
    2ab6:	b0 e0       	ldi	r27, 0x00	; 0
    2ab8:	e4 e3       	ldi	r30, 0x34	; 52
    2aba:	f0 e0       	ldi	r31, 0x00	; 0
    2abc:	80 81       	ld	r24, Z
    2abe:	48 2f       	mov	r20, r24
    2ac0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ac2:	28 2f       	mov	r18, r24
    2ac4:	30 e0       	ldi	r19, 0x00	; 0
    2ac6:	81 e0       	ldi	r24, 0x01	; 1
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	02 2e       	mov	r0, r18
    2acc:	02 c0       	rjmp	.+4      	; 0x2ad2 <DIO_VidSetPinDirection+0xce>
    2ace:	88 0f       	add	r24, r24
    2ad0:	99 1f       	adc	r25, r25
    2ad2:	0a 94       	dec	r0
    2ad4:	e2 f7       	brpl	.-8      	; 0x2ace <DIO_VidSetPinDirection+0xca>
    2ad6:	84 2b       	or	r24, r20
    2ad8:	8c 93       	st	X, r24
    2ada:	8b c0       	rjmp	.+278    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(DDRD,Copy_U8Pin);
    2adc:	a1 e3       	ldi	r26, 0x31	; 49
    2ade:	b0 e0       	ldi	r27, 0x00	; 0
    2ae0:	e1 e3       	ldi	r30, 0x31	; 49
    2ae2:	f0 e0       	ldi	r31, 0x00	; 0
    2ae4:	80 81       	ld	r24, Z
    2ae6:	48 2f       	mov	r20, r24
    2ae8:	8a 81       	ldd	r24, Y+2	; 0x02
    2aea:	28 2f       	mov	r18, r24
    2aec:	30 e0       	ldi	r19, 0x00	; 0
    2aee:	81 e0       	ldi	r24, 0x01	; 1
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	02 2e       	mov	r0, r18
    2af4:	02 c0       	rjmp	.+4      	; 0x2afa <DIO_VidSetPinDirection+0xf6>
    2af6:	88 0f       	add	r24, r24
    2af8:	99 1f       	adc	r25, r25
    2afa:	0a 94       	dec	r0
    2afc:	e2 f7       	brpl	.-8      	; 0x2af6 <DIO_VidSetPinDirection+0xf2>
    2afe:	84 2b       	or	r24, r20
    2b00:	8c 93       	st	X, r24
    2b02:	77 c0       	rjmp	.+238    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Dir ) {
    2b04:	8b 81       	ldd	r24, Y+3	; 0x03
    2b06:	88 23       	and	r24, r24
    2b08:	09 f0       	breq	.+2      	; 0x2b0c <DIO_VidSetPinDirection+0x108>
    2b0a:	73 c0       	rjmp	.+230    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
		switch (Copy_U8Port){
    2b0c:	89 81       	ldd	r24, Y+1	; 0x01
    2b0e:	28 2f       	mov	r18, r24
    2b10:	30 e0       	ldi	r19, 0x00	; 0
    2b12:	3d 83       	std	Y+5, r19	; 0x05
    2b14:	2c 83       	std	Y+4, r18	; 0x04
    2b16:	8c 81       	ldd	r24, Y+4	; 0x04
    2b18:	9d 81       	ldd	r25, Y+5	; 0x05
    2b1a:	81 30       	cpi	r24, 0x01	; 1
    2b1c:	91 05       	cpc	r25, r1
    2b1e:	59 f1       	breq	.+86     	; 0x2b76 <DIO_VidSetPinDirection+0x172>
    2b20:	2c 81       	ldd	r18, Y+4	; 0x04
    2b22:	3d 81       	ldd	r19, Y+5	; 0x05
    2b24:	22 30       	cpi	r18, 0x02	; 2
    2b26:	31 05       	cpc	r19, r1
    2b28:	2c f4       	brge	.+10     	; 0x2b34 <DIO_VidSetPinDirection+0x130>
    2b2a:	8c 81       	ldd	r24, Y+4	; 0x04
    2b2c:	9d 81       	ldd	r25, Y+5	; 0x05
    2b2e:	00 97       	sbiw	r24, 0x00	; 0
    2b30:	69 f0       	breq	.+26     	; 0x2b4c <DIO_VidSetPinDirection+0x148>
    2b32:	5f c0       	rjmp	.+190    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
    2b34:	2c 81       	ldd	r18, Y+4	; 0x04
    2b36:	3d 81       	ldd	r19, Y+5	; 0x05
    2b38:	22 30       	cpi	r18, 0x02	; 2
    2b3a:	31 05       	cpc	r19, r1
    2b3c:	89 f1       	breq	.+98     	; 0x2ba0 <DIO_VidSetPinDirection+0x19c>
    2b3e:	8c 81       	ldd	r24, Y+4	; 0x04
    2b40:	9d 81       	ldd	r25, Y+5	; 0x05
    2b42:	83 30       	cpi	r24, 0x03	; 3
    2b44:	91 05       	cpc	r25, r1
    2b46:	09 f4       	brne	.+2      	; 0x2b4a <DIO_VidSetPinDirection+0x146>
    2b48:	40 c0       	rjmp	.+128    	; 0x2bca <DIO_VidSetPinDirection+0x1c6>
    2b4a:	53 c0       	rjmp	.+166    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    CLR_BIT(DDRA,Copy_U8Pin);
    2b4c:	aa e3       	ldi	r26, 0x3A	; 58
    2b4e:	b0 e0       	ldi	r27, 0x00	; 0
    2b50:	ea e3       	ldi	r30, 0x3A	; 58
    2b52:	f0 e0       	ldi	r31, 0x00	; 0
    2b54:	80 81       	ld	r24, Z
    2b56:	48 2f       	mov	r20, r24
    2b58:	8a 81       	ldd	r24, Y+2	; 0x02
    2b5a:	28 2f       	mov	r18, r24
    2b5c:	30 e0       	ldi	r19, 0x00	; 0
    2b5e:	81 e0       	ldi	r24, 0x01	; 1
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	02 2e       	mov	r0, r18
    2b64:	02 c0       	rjmp	.+4      	; 0x2b6a <DIO_VidSetPinDirection+0x166>
    2b66:	88 0f       	add	r24, r24
    2b68:	99 1f       	adc	r25, r25
    2b6a:	0a 94       	dec	r0
    2b6c:	e2 f7       	brpl	.-8      	; 0x2b66 <DIO_VidSetPinDirection+0x162>
    2b6e:	80 95       	com	r24
    2b70:	84 23       	and	r24, r20
    2b72:	8c 93       	st	X, r24
    2b74:	3e c0       	rjmp	.+124    	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(DDRB,Copy_U8Pin);
    2b76:	a7 e3       	ldi	r26, 0x37	; 55
    2b78:	b0 e0       	ldi	r27, 0x00	; 0
    2b7a:	e7 e3       	ldi	r30, 0x37	; 55
    2b7c:	f0 e0       	ldi	r31, 0x00	; 0
    2b7e:	80 81       	ld	r24, Z
    2b80:	48 2f       	mov	r20, r24
    2b82:	8a 81       	ldd	r24, Y+2	; 0x02
    2b84:	28 2f       	mov	r18, r24
    2b86:	30 e0       	ldi	r19, 0x00	; 0
    2b88:	81 e0       	ldi	r24, 0x01	; 1
    2b8a:	90 e0       	ldi	r25, 0x00	; 0
    2b8c:	02 2e       	mov	r0, r18
    2b8e:	02 c0       	rjmp	.+4      	; 0x2b94 <DIO_VidSetPinDirection+0x190>
    2b90:	88 0f       	add	r24, r24
    2b92:	99 1f       	adc	r25, r25
    2b94:	0a 94       	dec	r0
    2b96:	e2 f7       	brpl	.-8      	; 0x2b90 <DIO_VidSetPinDirection+0x18c>
    2b98:	80 95       	com	r24
    2b9a:	84 23       	and	r24, r20
    2b9c:	8c 93       	st	X, r24
    2b9e:	29 c0       	rjmp	.+82     	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(DDRC,Copy_U8Pin);
    2ba0:	a4 e3       	ldi	r26, 0x34	; 52
    2ba2:	b0 e0       	ldi	r27, 0x00	; 0
    2ba4:	e4 e3       	ldi	r30, 0x34	; 52
    2ba6:	f0 e0       	ldi	r31, 0x00	; 0
    2ba8:	80 81       	ld	r24, Z
    2baa:	48 2f       	mov	r20, r24
    2bac:	8a 81       	ldd	r24, Y+2	; 0x02
    2bae:	28 2f       	mov	r18, r24
    2bb0:	30 e0       	ldi	r19, 0x00	; 0
    2bb2:	81 e0       	ldi	r24, 0x01	; 1
    2bb4:	90 e0       	ldi	r25, 0x00	; 0
    2bb6:	02 2e       	mov	r0, r18
    2bb8:	02 c0       	rjmp	.+4      	; 0x2bbe <DIO_VidSetPinDirection+0x1ba>
    2bba:	88 0f       	add	r24, r24
    2bbc:	99 1f       	adc	r25, r25
    2bbe:	0a 94       	dec	r0
    2bc0:	e2 f7       	brpl	.-8      	; 0x2bba <DIO_VidSetPinDirection+0x1b6>
    2bc2:	80 95       	com	r24
    2bc4:	84 23       	and	r24, r20
    2bc6:	8c 93       	st	X, r24
    2bc8:	14 c0       	rjmp	.+40     	; 0x2bf2 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(DDRD,Copy_U8Pin);
    2bca:	a1 e3       	ldi	r26, 0x31	; 49
    2bcc:	b0 e0       	ldi	r27, 0x00	; 0
    2bce:	e1 e3       	ldi	r30, 0x31	; 49
    2bd0:	f0 e0       	ldi	r31, 0x00	; 0
    2bd2:	80 81       	ld	r24, Z
    2bd4:	48 2f       	mov	r20, r24
    2bd6:	8a 81       	ldd	r24, Y+2	; 0x02
    2bd8:	28 2f       	mov	r18, r24
    2bda:	30 e0       	ldi	r19, 0x00	; 0
    2bdc:	81 e0       	ldi	r24, 0x01	; 1
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	02 2e       	mov	r0, r18
    2be2:	02 c0       	rjmp	.+4      	; 0x2be8 <DIO_VidSetPinDirection+0x1e4>
    2be4:	88 0f       	add	r24, r24
    2be6:	99 1f       	adc	r25, r25
    2be8:	0a 94       	dec	r0
    2bea:	e2 f7       	brpl	.-8      	; 0x2be4 <DIO_VidSetPinDirection+0x1e0>
    2bec:	80 95       	com	r24
    2bee:	84 23       	and	r24, r20
    2bf0:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if 
}//end FUNC DIO_VidSetPinDirection
    2bf2:	27 96       	adiw	r28, 0x07	; 7
    2bf4:	0f b6       	in	r0, 0x3f	; 63
    2bf6:	f8 94       	cli
    2bf8:	de bf       	out	0x3e, r29	; 62
    2bfa:	0f be       	out	0x3f, r0	; 63
    2bfc:	cd bf       	out	0x3d, r28	; 61
    2bfe:	cf 91       	pop	r28
    2c00:	df 91       	pop	r29
    2c02:	08 95       	ret

00002c04 <DIO_VidSetPortDirection>:
void DIO_VidSetPortDirection (u8 Copy_U8Port , u8 Copy_U8Dir ) {
    2c04:	df 93       	push	r29
    2c06:	cf 93       	push	r28
    2c08:	00 d0       	rcall	.+0      	; 0x2c0a <DIO_VidSetPortDirection+0x6>
    2c0a:	00 d0       	rcall	.+0      	; 0x2c0c <DIO_VidSetPortDirection+0x8>
    2c0c:	cd b7       	in	r28, 0x3d	; 61
    2c0e:	de b7       	in	r29, 0x3e	; 62
    2c10:	89 83       	std	Y+1, r24	; 0x01
    2c12:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2c14:	89 81       	ldd	r24, Y+1	; 0x01
    2c16:	28 2f       	mov	r18, r24
    2c18:	30 e0       	ldi	r19, 0x00	; 0
    2c1a:	3c 83       	std	Y+4, r19	; 0x04
    2c1c:	2b 83       	std	Y+3, r18	; 0x03
    2c1e:	8b 81       	ldd	r24, Y+3	; 0x03
    2c20:	9c 81       	ldd	r25, Y+4	; 0x04
    2c22:	81 30       	cpi	r24, 0x01	; 1
    2c24:	91 05       	cpc	r25, r1
    2c26:	d1 f0       	breq	.+52     	; 0x2c5c <DIO_VidSetPortDirection+0x58>
    2c28:	2b 81       	ldd	r18, Y+3	; 0x03
    2c2a:	3c 81       	ldd	r19, Y+4	; 0x04
    2c2c:	22 30       	cpi	r18, 0x02	; 2
    2c2e:	31 05       	cpc	r19, r1
    2c30:	2c f4       	brge	.+10     	; 0x2c3c <DIO_VidSetPortDirection+0x38>
    2c32:	8b 81       	ldd	r24, Y+3	; 0x03
    2c34:	9c 81       	ldd	r25, Y+4	; 0x04
    2c36:	00 97       	sbiw	r24, 0x00	; 0
    2c38:	61 f0       	breq	.+24     	; 0x2c52 <DIO_VidSetPortDirection+0x4e>
    2c3a:	1e c0       	rjmp	.+60     	; 0x2c78 <DIO_VidSetPortDirection+0x74>
    2c3c:	2b 81       	ldd	r18, Y+3	; 0x03
    2c3e:	3c 81       	ldd	r19, Y+4	; 0x04
    2c40:	22 30       	cpi	r18, 0x02	; 2
    2c42:	31 05       	cpc	r19, r1
    2c44:	81 f0       	breq	.+32     	; 0x2c66 <DIO_VidSetPortDirection+0x62>
    2c46:	8b 81       	ldd	r24, Y+3	; 0x03
    2c48:	9c 81       	ldd	r25, Y+4	; 0x04
    2c4a:	83 30       	cpi	r24, 0x03	; 3
    2c4c:	91 05       	cpc	r25, r1
    2c4e:	81 f0       	breq	.+32     	; 0x2c70 <DIO_VidSetPortDirection+0x6c>
    2c50:	13 c0       	rjmp	.+38     	; 0x2c78 <DIO_VidSetPortDirection+0x74>
		case 0 : 
			DDRA = Copy_U8Dir ;
    2c52:	ea e3       	ldi	r30, 0x3A	; 58
    2c54:	f0 e0       	ldi	r31, 0x00	; 0
    2c56:	8a 81       	ldd	r24, Y+2	; 0x02
    2c58:	80 83       	st	Z, r24
    2c5a:	0e c0       	rjmp	.+28     	; 0x2c78 <DIO_VidSetPortDirection+0x74>
			break ;  
		case 1 : 
			DDRB = Copy_U8Dir ;
    2c5c:	e7 e3       	ldi	r30, 0x37	; 55
    2c5e:	f0 e0       	ldi	r31, 0x00	; 0
    2c60:	8a 81       	ldd	r24, Y+2	; 0x02
    2c62:	80 83       	st	Z, r24
    2c64:	09 c0       	rjmp	.+18     	; 0x2c78 <DIO_VidSetPortDirection+0x74>
			break ;			
		case 2 : 
			DDRC = Copy_U8Dir ;
    2c66:	e4 e3       	ldi	r30, 0x34	; 52
    2c68:	f0 e0       	ldi	r31, 0x00	; 0
    2c6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c6c:	80 83       	st	Z, r24
    2c6e:	04 c0       	rjmp	.+8      	; 0x2c78 <DIO_VidSetPortDirection+0x74>
			break ;  
		case 3 : 
			DDRD = Copy_U8Dir ;
    2c70:	e1 e3       	ldi	r30, 0x31	; 49
    2c72:	f0 e0       	ldi	r31, 0x00	; 0
    2c74:	8a 81       	ldd	r24, Y+2	; 0x02
    2c76:	80 83       	st	Z, r24
			break ; 
		}//end switch
}// end FUNC DIO_VidSetPortDirection
    2c78:	0f 90       	pop	r0
    2c7a:	0f 90       	pop	r0
    2c7c:	0f 90       	pop	r0
    2c7e:	0f 90       	pop	r0
    2c80:	cf 91       	pop	r28
    2c82:	df 91       	pop	r29
    2c84:	08 95       	ret

00002c86 <DIO_VidSetPinValue>:
void DIO_VidSetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Val ) {
    2c86:	df 93       	push	r29
    2c88:	cf 93       	push	r28
    2c8a:	cd b7       	in	r28, 0x3d	; 61
    2c8c:	de b7       	in	r29, 0x3e	; 62
    2c8e:	27 97       	sbiw	r28, 0x07	; 7
    2c90:	0f b6       	in	r0, 0x3f	; 63
    2c92:	f8 94       	cli
    2c94:	de bf       	out	0x3e, r29	; 62
    2c96:	0f be       	out	0x3f, r0	; 63
    2c98:	cd bf       	out	0x3d, r28	; 61
    2c9a:	89 83       	std	Y+1, r24	; 0x01
    2c9c:	6a 83       	std	Y+2, r22	; 0x02
    2c9e:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Val ){
    2ca0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ca2:	81 30       	cpi	r24, 0x01	; 1
    2ca4:	09 f0       	breq	.+2      	; 0x2ca8 <DIO_VidSetPinValue+0x22>
    2ca6:	6f c0       	rjmp	.+222    	; 0x2d86 <DIO_VidSetPinValue+0x100>
		switch (Copy_U8Port){
    2ca8:	89 81       	ldd	r24, Y+1	; 0x01
    2caa:	28 2f       	mov	r18, r24
    2cac:	30 e0       	ldi	r19, 0x00	; 0
    2cae:	3f 83       	std	Y+7, r19	; 0x07
    2cb0:	2e 83       	std	Y+6, r18	; 0x06
    2cb2:	8e 81       	ldd	r24, Y+6	; 0x06
    2cb4:	9f 81       	ldd	r25, Y+7	; 0x07
    2cb6:	81 30       	cpi	r24, 0x01	; 1
    2cb8:	91 05       	cpc	r25, r1
    2cba:	49 f1       	breq	.+82     	; 0x2d0e <DIO_VidSetPinValue+0x88>
    2cbc:	2e 81       	ldd	r18, Y+6	; 0x06
    2cbe:	3f 81       	ldd	r19, Y+7	; 0x07
    2cc0:	22 30       	cpi	r18, 0x02	; 2
    2cc2:	31 05       	cpc	r19, r1
    2cc4:	2c f4       	brge	.+10     	; 0x2cd0 <DIO_VidSetPinValue+0x4a>
    2cc6:	8e 81       	ldd	r24, Y+6	; 0x06
    2cc8:	9f 81       	ldd	r25, Y+7	; 0x07
    2cca:	00 97       	sbiw	r24, 0x00	; 0
    2ccc:	61 f0       	breq	.+24     	; 0x2ce6 <DIO_VidSetPinValue+0x60>
    2cce:	d2 c0       	rjmp	.+420    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
    2cd0:	2e 81       	ldd	r18, Y+6	; 0x06
    2cd2:	3f 81       	ldd	r19, Y+7	; 0x07
    2cd4:	22 30       	cpi	r18, 0x02	; 2
    2cd6:	31 05       	cpc	r19, r1
    2cd8:	71 f1       	breq	.+92     	; 0x2d36 <DIO_VidSetPinValue+0xb0>
    2cda:	8e 81       	ldd	r24, Y+6	; 0x06
    2cdc:	9f 81       	ldd	r25, Y+7	; 0x07
    2cde:	83 30       	cpi	r24, 0x03	; 3
    2ce0:	91 05       	cpc	r25, r1
    2ce2:	e9 f1       	breq	.+122    	; 0x2d5e <DIO_VidSetPinValue+0xd8>
    2ce4:	c7 c0       	rjmp	.+398    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    SET_BIT(PORTA,Copy_U8Pin);
    2ce6:	ab e3       	ldi	r26, 0x3B	; 59
    2ce8:	b0 e0       	ldi	r27, 0x00	; 0
    2cea:	eb e3       	ldi	r30, 0x3B	; 59
    2cec:	f0 e0       	ldi	r31, 0x00	; 0
    2cee:	80 81       	ld	r24, Z
    2cf0:	48 2f       	mov	r20, r24
    2cf2:	8a 81       	ldd	r24, Y+2	; 0x02
    2cf4:	28 2f       	mov	r18, r24
    2cf6:	30 e0       	ldi	r19, 0x00	; 0
    2cf8:	81 e0       	ldi	r24, 0x01	; 1
    2cfa:	90 e0       	ldi	r25, 0x00	; 0
    2cfc:	02 2e       	mov	r0, r18
    2cfe:	02 c0       	rjmp	.+4      	; 0x2d04 <DIO_VidSetPinValue+0x7e>
    2d00:	88 0f       	add	r24, r24
    2d02:	99 1f       	adc	r25, r25
    2d04:	0a 94       	dec	r0
    2d06:	e2 f7       	brpl	.-8      	; 0x2d00 <DIO_VidSetPinValue+0x7a>
    2d08:	84 2b       	or	r24, r20
    2d0a:	8c 93       	st	X, r24
    2d0c:	b3 c0       	rjmp	.+358    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(PORTB,Copy_U8Pin);
    2d0e:	a8 e3       	ldi	r26, 0x38	; 56
    2d10:	b0 e0       	ldi	r27, 0x00	; 0
    2d12:	e8 e3       	ldi	r30, 0x38	; 56
    2d14:	f0 e0       	ldi	r31, 0x00	; 0
    2d16:	80 81       	ld	r24, Z
    2d18:	48 2f       	mov	r20, r24
    2d1a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d1c:	28 2f       	mov	r18, r24
    2d1e:	30 e0       	ldi	r19, 0x00	; 0
    2d20:	81 e0       	ldi	r24, 0x01	; 1
    2d22:	90 e0       	ldi	r25, 0x00	; 0
    2d24:	02 2e       	mov	r0, r18
    2d26:	02 c0       	rjmp	.+4      	; 0x2d2c <DIO_VidSetPinValue+0xa6>
    2d28:	88 0f       	add	r24, r24
    2d2a:	99 1f       	adc	r25, r25
    2d2c:	0a 94       	dec	r0
    2d2e:	e2 f7       	brpl	.-8      	; 0x2d28 <DIO_VidSetPinValue+0xa2>
    2d30:	84 2b       	or	r24, r20
    2d32:	8c 93       	st	X, r24
    2d34:	9f c0       	rjmp	.+318    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(PORTC,Copy_U8Pin);
    2d36:	a5 e3       	ldi	r26, 0x35	; 53
    2d38:	b0 e0       	ldi	r27, 0x00	; 0
    2d3a:	e5 e3       	ldi	r30, 0x35	; 53
    2d3c:	f0 e0       	ldi	r31, 0x00	; 0
    2d3e:	80 81       	ld	r24, Z
    2d40:	48 2f       	mov	r20, r24
    2d42:	8a 81       	ldd	r24, Y+2	; 0x02
    2d44:	28 2f       	mov	r18, r24
    2d46:	30 e0       	ldi	r19, 0x00	; 0
    2d48:	81 e0       	ldi	r24, 0x01	; 1
    2d4a:	90 e0       	ldi	r25, 0x00	; 0
    2d4c:	02 2e       	mov	r0, r18
    2d4e:	02 c0       	rjmp	.+4      	; 0x2d54 <DIO_VidSetPinValue+0xce>
    2d50:	88 0f       	add	r24, r24
    2d52:	99 1f       	adc	r25, r25
    2d54:	0a 94       	dec	r0
    2d56:	e2 f7       	brpl	.-8      	; 0x2d50 <DIO_VidSetPinValue+0xca>
    2d58:	84 2b       	or	r24, r20
    2d5a:	8c 93       	st	X, r24
    2d5c:	8b c0       	rjmp	.+278    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(PORTD,Copy_U8Pin);
    2d5e:	a2 e3       	ldi	r26, 0x32	; 50
    2d60:	b0 e0       	ldi	r27, 0x00	; 0
    2d62:	e2 e3       	ldi	r30, 0x32	; 50
    2d64:	f0 e0       	ldi	r31, 0x00	; 0
    2d66:	80 81       	ld	r24, Z
    2d68:	48 2f       	mov	r20, r24
    2d6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d6c:	28 2f       	mov	r18, r24
    2d6e:	30 e0       	ldi	r19, 0x00	; 0
    2d70:	81 e0       	ldi	r24, 0x01	; 1
    2d72:	90 e0       	ldi	r25, 0x00	; 0
    2d74:	02 2e       	mov	r0, r18
    2d76:	02 c0       	rjmp	.+4      	; 0x2d7c <DIO_VidSetPinValue+0xf6>
    2d78:	88 0f       	add	r24, r24
    2d7a:	99 1f       	adc	r25, r25
    2d7c:	0a 94       	dec	r0
    2d7e:	e2 f7       	brpl	.-8      	; 0x2d78 <DIO_VidSetPinValue+0xf2>
    2d80:	84 2b       	or	r24, r20
    2d82:	8c 93       	st	X, r24
    2d84:	77 c0       	rjmp	.+238    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Val){
    2d86:	8b 81       	ldd	r24, Y+3	; 0x03
    2d88:	88 23       	and	r24, r24
    2d8a:	09 f0       	breq	.+2      	; 0x2d8e <DIO_VidSetPinValue+0x108>
    2d8c:	73 c0       	rjmp	.+230    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
		switch (Copy_U8Port){
    2d8e:	89 81       	ldd	r24, Y+1	; 0x01
    2d90:	28 2f       	mov	r18, r24
    2d92:	30 e0       	ldi	r19, 0x00	; 0
    2d94:	3d 83       	std	Y+5, r19	; 0x05
    2d96:	2c 83       	std	Y+4, r18	; 0x04
    2d98:	8c 81       	ldd	r24, Y+4	; 0x04
    2d9a:	9d 81       	ldd	r25, Y+5	; 0x05
    2d9c:	81 30       	cpi	r24, 0x01	; 1
    2d9e:	91 05       	cpc	r25, r1
    2da0:	59 f1       	breq	.+86     	; 0x2df8 <DIO_VidSetPinValue+0x172>
    2da2:	2c 81       	ldd	r18, Y+4	; 0x04
    2da4:	3d 81       	ldd	r19, Y+5	; 0x05
    2da6:	22 30       	cpi	r18, 0x02	; 2
    2da8:	31 05       	cpc	r19, r1
    2daa:	2c f4       	brge	.+10     	; 0x2db6 <DIO_VidSetPinValue+0x130>
    2dac:	8c 81       	ldd	r24, Y+4	; 0x04
    2dae:	9d 81       	ldd	r25, Y+5	; 0x05
    2db0:	00 97       	sbiw	r24, 0x00	; 0
    2db2:	69 f0       	breq	.+26     	; 0x2dce <DIO_VidSetPinValue+0x148>
    2db4:	5f c0       	rjmp	.+190    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
    2db6:	2c 81       	ldd	r18, Y+4	; 0x04
    2db8:	3d 81       	ldd	r19, Y+5	; 0x05
    2dba:	22 30       	cpi	r18, 0x02	; 2
    2dbc:	31 05       	cpc	r19, r1
    2dbe:	89 f1       	breq	.+98     	; 0x2e22 <DIO_VidSetPinValue+0x19c>
    2dc0:	8c 81       	ldd	r24, Y+4	; 0x04
    2dc2:	9d 81       	ldd	r25, Y+5	; 0x05
    2dc4:	83 30       	cpi	r24, 0x03	; 3
    2dc6:	91 05       	cpc	r25, r1
    2dc8:	09 f4       	brne	.+2      	; 0x2dcc <DIO_VidSetPinValue+0x146>
    2dca:	40 c0       	rjmp	.+128    	; 0x2e4c <DIO_VidSetPinValue+0x1c6>
    2dcc:	53 c0       	rjmp	.+166    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    CLR_BIT(PORTA,Copy_U8Pin);
    2dce:	ab e3       	ldi	r26, 0x3B	; 59
    2dd0:	b0 e0       	ldi	r27, 0x00	; 0
    2dd2:	eb e3       	ldi	r30, 0x3B	; 59
    2dd4:	f0 e0       	ldi	r31, 0x00	; 0
    2dd6:	80 81       	ld	r24, Z
    2dd8:	48 2f       	mov	r20, r24
    2dda:	8a 81       	ldd	r24, Y+2	; 0x02
    2ddc:	28 2f       	mov	r18, r24
    2dde:	30 e0       	ldi	r19, 0x00	; 0
    2de0:	81 e0       	ldi	r24, 0x01	; 1
    2de2:	90 e0       	ldi	r25, 0x00	; 0
    2de4:	02 2e       	mov	r0, r18
    2de6:	02 c0       	rjmp	.+4      	; 0x2dec <DIO_VidSetPinValue+0x166>
    2de8:	88 0f       	add	r24, r24
    2dea:	99 1f       	adc	r25, r25
    2dec:	0a 94       	dec	r0
    2dee:	e2 f7       	brpl	.-8      	; 0x2de8 <DIO_VidSetPinValue+0x162>
    2df0:	80 95       	com	r24
    2df2:	84 23       	and	r24, r20
    2df4:	8c 93       	st	X, r24
    2df6:	3e c0       	rjmp	.+124    	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(PORTB,Copy_U8Pin);
    2df8:	a8 e3       	ldi	r26, 0x38	; 56
    2dfa:	b0 e0       	ldi	r27, 0x00	; 0
    2dfc:	e8 e3       	ldi	r30, 0x38	; 56
    2dfe:	f0 e0       	ldi	r31, 0x00	; 0
    2e00:	80 81       	ld	r24, Z
    2e02:	48 2f       	mov	r20, r24
    2e04:	8a 81       	ldd	r24, Y+2	; 0x02
    2e06:	28 2f       	mov	r18, r24
    2e08:	30 e0       	ldi	r19, 0x00	; 0
    2e0a:	81 e0       	ldi	r24, 0x01	; 1
    2e0c:	90 e0       	ldi	r25, 0x00	; 0
    2e0e:	02 2e       	mov	r0, r18
    2e10:	02 c0       	rjmp	.+4      	; 0x2e16 <DIO_VidSetPinValue+0x190>
    2e12:	88 0f       	add	r24, r24
    2e14:	99 1f       	adc	r25, r25
    2e16:	0a 94       	dec	r0
    2e18:	e2 f7       	brpl	.-8      	; 0x2e12 <DIO_VidSetPinValue+0x18c>
    2e1a:	80 95       	com	r24
    2e1c:	84 23       	and	r24, r20
    2e1e:	8c 93       	st	X, r24
    2e20:	29 c0       	rjmp	.+82     	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(PORTC,Copy_U8Pin);
    2e22:	a5 e3       	ldi	r26, 0x35	; 53
    2e24:	b0 e0       	ldi	r27, 0x00	; 0
    2e26:	e5 e3       	ldi	r30, 0x35	; 53
    2e28:	f0 e0       	ldi	r31, 0x00	; 0
    2e2a:	80 81       	ld	r24, Z
    2e2c:	48 2f       	mov	r20, r24
    2e2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2e30:	28 2f       	mov	r18, r24
    2e32:	30 e0       	ldi	r19, 0x00	; 0
    2e34:	81 e0       	ldi	r24, 0x01	; 1
    2e36:	90 e0       	ldi	r25, 0x00	; 0
    2e38:	02 2e       	mov	r0, r18
    2e3a:	02 c0       	rjmp	.+4      	; 0x2e40 <DIO_VidSetPinValue+0x1ba>
    2e3c:	88 0f       	add	r24, r24
    2e3e:	99 1f       	adc	r25, r25
    2e40:	0a 94       	dec	r0
    2e42:	e2 f7       	brpl	.-8      	; 0x2e3c <DIO_VidSetPinValue+0x1b6>
    2e44:	80 95       	com	r24
    2e46:	84 23       	and	r24, r20
    2e48:	8c 93       	st	X, r24
    2e4a:	14 c0       	rjmp	.+40     	; 0x2e74 <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(PORTD,Copy_U8Pin);
    2e4c:	a2 e3       	ldi	r26, 0x32	; 50
    2e4e:	b0 e0       	ldi	r27, 0x00	; 0
    2e50:	e2 e3       	ldi	r30, 0x32	; 50
    2e52:	f0 e0       	ldi	r31, 0x00	; 0
    2e54:	80 81       	ld	r24, Z
    2e56:	48 2f       	mov	r20, r24
    2e58:	8a 81       	ldd	r24, Y+2	; 0x02
    2e5a:	28 2f       	mov	r18, r24
    2e5c:	30 e0       	ldi	r19, 0x00	; 0
    2e5e:	81 e0       	ldi	r24, 0x01	; 1
    2e60:	90 e0       	ldi	r25, 0x00	; 0
    2e62:	02 2e       	mov	r0, r18
    2e64:	02 c0       	rjmp	.+4      	; 0x2e6a <DIO_VidSetPinValue+0x1e4>
    2e66:	88 0f       	add	r24, r24
    2e68:	99 1f       	adc	r25, r25
    2e6a:	0a 94       	dec	r0
    2e6c:	e2 f7       	brpl	.-8      	; 0x2e66 <DIO_VidSetPinValue+0x1e0>
    2e6e:	80 95       	com	r24
    2e70:	84 23       	and	r24, r20
    2e72:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if
}// end FUNC DIO_VidSetPinValue
    2e74:	27 96       	adiw	r28, 0x07	; 7
    2e76:	0f b6       	in	r0, 0x3f	; 63
    2e78:	f8 94       	cli
    2e7a:	de bf       	out	0x3e, r29	; 62
    2e7c:	0f be       	out	0x3f, r0	; 63
    2e7e:	cd bf       	out	0x3d, r28	; 61
    2e80:	cf 91       	pop	r28
    2e82:	df 91       	pop	r29
    2e84:	08 95       	ret

00002e86 <DIO_VidSetPortValue>:
void DIO_VidSetPortValue (u8 Copy_U8Port , u8 Copy_U8Val ) {
    2e86:	df 93       	push	r29
    2e88:	cf 93       	push	r28
    2e8a:	00 d0       	rcall	.+0      	; 0x2e8c <DIO_VidSetPortValue+0x6>
    2e8c:	00 d0       	rcall	.+0      	; 0x2e8e <DIO_VidSetPortValue+0x8>
    2e8e:	cd b7       	in	r28, 0x3d	; 61
    2e90:	de b7       	in	r29, 0x3e	; 62
    2e92:	89 83       	std	Y+1, r24	; 0x01
    2e94:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2e96:	89 81       	ldd	r24, Y+1	; 0x01
    2e98:	28 2f       	mov	r18, r24
    2e9a:	30 e0       	ldi	r19, 0x00	; 0
    2e9c:	3c 83       	std	Y+4, r19	; 0x04
    2e9e:	2b 83       	std	Y+3, r18	; 0x03
    2ea0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ea2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ea4:	81 30       	cpi	r24, 0x01	; 1
    2ea6:	91 05       	cpc	r25, r1
    2ea8:	d1 f0       	breq	.+52     	; 0x2ede <DIO_VidSetPortValue+0x58>
    2eaa:	2b 81       	ldd	r18, Y+3	; 0x03
    2eac:	3c 81       	ldd	r19, Y+4	; 0x04
    2eae:	22 30       	cpi	r18, 0x02	; 2
    2eb0:	31 05       	cpc	r19, r1
    2eb2:	2c f4       	brge	.+10     	; 0x2ebe <DIO_VidSetPortValue+0x38>
    2eb4:	8b 81       	ldd	r24, Y+3	; 0x03
    2eb6:	9c 81       	ldd	r25, Y+4	; 0x04
    2eb8:	00 97       	sbiw	r24, 0x00	; 0
    2eba:	61 f0       	breq	.+24     	; 0x2ed4 <DIO_VidSetPortValue+0x4e>
    2ebc:	1e c0       	rjmp	.+60     	; 0x2efa <DIO_VidSetPortValue+0x74>
    2ebe:	2b 81       	ldd	r18, Y+3	; 0x03
    2ec0:	3c 81       	ldd	r19, Y+4	; 0x04
    2ec2:	22 30       	cpi	r18, 0x02	; 2
    2ec4:	31 05       	cpc	r19, r1
    2ec6:	81 f0       	breq	.+32     	; 0x2ee8 <DIO_VidSetPortValue+0x62>
    2ec8:	8b 81       	ldd	r24, Y+3	; 0x03
    2eca:	9c 81       	ldd	r25, Y+4	; 0x04
    2ecc:	83 30       	cpi	r24, 0x03	; 3
    2ece:	91 05       	cpc	r25, r1
    2ed0:	81 f0       	breq	.+32     	; 0x2ef2 <DIO_VidSetPortValue+0x6c>
    2ed2:	13 c0       	rjmp	.+38     	; 0x2efa <DIO_VidSetPortValue+0x74>
		case 0 : 
			PORTA = Copy_U8Val ;
    2ed4:	eb e3       	ldi	r30, 0x3B	; 59
    2ed6:	f0 e0       	ldi	r31, 0x00	; 0
    2ed8:	8a 81       	ldd	r24, Y+2	; 0x02
    2eda:	80 83       	st	Z, r24
    2edc:	0e c0       	rjmp	.+28     	; 0x2efa <DIO_VidSetPortValue+0x74>
			break ;  
		case 1 : 
			PORTB = Copy_U8Val ;
    2ede:	e8 e3       	ldi	r30, 0x38	; 56
    2ee0:	f0 e0       	ldi	r31, 0x00	; 0
    2ee2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ee4:	80 83       	st	Z, r24
    2ee6:	09 c0       	rjmp	.+18     	; 0x2efa <DIO_VidSetPortValue+0x74>
			break ;			
		case 2 : 
			PORTC = Copy_U8Val ;
    2ee8:	e5 e3       	ldi	r30, 0x35	; 53
    2eea:	f0 e0       	ldi	r31, 0x00	; 0
    2eec:	8a 81       	ldd	r24, Y+2	; 0x02
    2eee:	80 83       	st	Z, r24
    2ef0:	04 c0       	rjmp	.+8      	; 0x2efa <DIO_VidSetPortValue+0x74>
			break ;  
		case 3 : 
			PORTD = Copy_U8Val ;
    2ef2:	e2 e3       	ldi	r30, 0x32	; 50
    2ef4:	f0 e0       	ldi	r31, 0x00	; 0
    2ef6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ef8:	80 83       	st	Z, r24
			break ; 
		}//end switch
}//end FUNC DIO_VidSetPortValue
    2efa:	0f 90       	pop	r0
    2efc:	0f 90       	pop	r0
    2efe:	0f 90       	pop	r0
    2f00:	0f 90       	pop	r0
    2f02:	cf 91       	pop	r28
    2f04:	df 91       	pop	r29
    2f06:	08 95       	ret

00002f08 <DIO_VidTogglePinValue>:
void DIO_VidTogglePinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    2f08:	df 93       	push	r29
    2f0a:	cf 93       	push	r28
    2f0c:	00 d0       	rcall	.+0      	; 0x2f0e <DIO_VidTogglePinValue+0x6>
    2f0e:	00 d0       	rcall	.+0      	; 0x2f10 <DIO_VidTogglePinValue+0x8>
    2f10:	cd b7       	in	r28, 0x3d	; 61
    2f12:	de b7       	in	r29, 0x3e	; 62
    2f14:	89 83       	std	Y+1, r24	; 0x01
    2f16:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    2f18:	89 81       	ldd	r24, Y+1	; 0x01
    2f1a:	28 2f       	mov	r18, r24
    2f1c:	30 e0       	ldi	r19, 0x00	; 0
    2f1e:	3c 83       	std	Y+4, r19	; 0x04
    2f20:	2b 83       	std	Y+3, r18	; 0x03
    2f22:	8b 81       	ldd	r24, Y+3	; 0x03
    2f24:	9c 81       	ldd	r25, Y+4	; 0x04
    2f26:	81 30       	cpi	r24, 0x01	; 1
    2f28:	91 05       	cpc	r25, r1
    2f2a:	49 f1       	breq	.+82     	; 0x2f7e <DIO_VidTogglePinValue+0x76>
    2f2c:	2b 81       	ldd	r18, Y+3	; 0x03
    2f2e:	3c 81       	ldd	r19, Y+4	; 0x04
    2f30:	22 30       	cpi	r18, 0x02	; 2
    2f32:	31 05       	cpc	r19, r1
    2f34:	2c f4       	brge	.+10     	; 0x2f40 <DIO_VidTogglePinValue+0x38>
    2f36:	8b 81       	ldd	r24, Y+3	; 0x03
    2f38:	9c 81       	ldd	r25, Y+4	; 0x04
    2f3a:	00 97       	sbiw	r24, 0x00	; 0
    2f3c:	61 f0       	breq	.+24     	; 0x2f56 <DIO_VidTogglePinValue+0x4e>
    2f3e:	5a c0       	rjmp	.+180    	; 0x2ff4 <DIO_VidTogglePinValue+0xec>
    2f40:	2b 81       	ldd	r18, Y+3	; 0x03
    2f42:	3c 81       	ldd	r19, Y+4	; 0x04
    2f44:	22 30       	cpi	r18, 0x02	; 2
    2f46:	31 05       	cpc	r19, r1
    2f48:	71 f1       	breq	.+92     	; 0x2fa6 <DIO_VidTogglePinValue+0x9e>
    2f4a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f4c:	9c 81       	ldd	r25, Y+4	; 0x04
    2f4e:	83 30       	cpi	r24, 0x03	; 3
    2f50:	91 05       	cpc	r25, r1
    2f52:	e9 f1       	breq	.+122    	; 0x2fce <DIO_VidTogglePinValue+0xc6>
    2f54:	4f c0       	rjmp	.+158    	; 0x2ff4 <DIO_VidTogglePinValue+0xec>
		case 0 : 
		    TOGGLE_BIT( PORTA , Copy_U8Pin ) ;
    2f56:	ab e3       	ldi	r26, 0x3B	; 59
    2f58:	b0 e0       	ldi	r27, 0x00	; 0
    2f5a:	eb e3       	ldi	r30, 0x3B	; 59
    2f5c:	f0 e0       	ldi	r31, 0x00	; 0
    2f5e:	80 81       	ld	r24, Z
    2f60:	48 2f       	mov	r20, r24
    2f62:	8a 81       	ldd	r24, Y+2	; 0x02
    2f64:	28 2f       	mov	r18, r24
    2f66:	30 e0       	ldi	r19, 0x00	; 0
    2f68:	81 e0       	ldi	r24, 0x01	; 1
    2f6a:	90 e0       	ldi	r25, 0x00	; 0
    2f6c:	02 2e       	mov	r0, r18
    2f6e:	02 c0       	rjmp	.+4      	; 0x2f74 <DIO_VidTogglePinValue+0x6c>
    2f70:	88 0f       	add	r24, r24
    2f72:	99 1f       	adc	r25, r25
    2f74:	0a 94       	dec	r0
    2f76:	e2 f7       	brpl	.-8      	; 0x2f70 <DIO_VidTogglePinValue+0x68>
    2f78:	84 27       	eor	r24, r20
    2f7a:	8c 93       	st	X, r24
    2f7c:	3b c0       	rjmp	.+118    	; 0x2ff4 <DIO_VidTogglePinValue+0xec>
			break ;  
		case 1 : 
			TOGGLE_BIT( PORTB , Copy_U8Pin ) ;
    2f7e:	a8 e3       	ldi	r26, 0x38	; 56
    2f80:	b0 e0       	ldi	r27, 0x00	; 0
    2f82:	e8 e3       	ldi	r30, 0x38	; 56
    2f84:	f0 e0       	ldi	r31, 0x00	; 0
    2f86:	80 81       	ld	r24, Z
    2f88:	48 2f       	mov	r20, r24
    2f8a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f8c:	28 2f       	mov	r18, r24
    2f8e:	30 e0       	ldi	r19, 0x00	; 0
    2f90:	81 e0       	ldi	r24, 0x01	; 1
    2f92:	90 e0       	ldi	r25, 0x00	; 0
    2f94:	02 2e       	mov	r0, r18
    2f96:	02 c0       	rjmp	.+4      	; 0x2f9c <DIO_VidTogglePinValue+0x94>
    2f98:	88 0f       	add	r24, r24
    2f9a:	99 1f       	adc	r25, r25
    2f9c:	0a 94       	dec	r0
    2f9e:	e2 f7       	brpl	.-8      	; 0x2f98 <DIO_VidTogglePinValue+0x90>
    2fa0:	84 27       	eor	r24, r20
    2fa2:	8c 93       	st	X, r24
    2fa4:	27 c0       	rjmp	.+78     	; 0x2ff4 <DIO_VidTogglePinValue+0xec>
			break ;			
		case 2 : 
			TOGGLE_BIT( PORTC , Copy_U8Pin ) ;
    2fa6:	a5 e3       	ldi	r26, 0x35	; 53
    2fa8:	b0 e0       	ldi	r27, 0x00	; 0
    2faa:	e5 e3       	ldi	r30, 0x35	; 53
    2fac:	f0 e0       	ldi	r31, 0x00	; 0
    2fae:	80 81       	ld	r24, Z
    2fb0:	48 2f       	mov	r20, r24
    2fb2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb4:	28 2f       	mov	r18, r24
    2fb6:	30 e0       	ldi	r19, 0x00	; 0
    2fb8:	81 e0       	ldi	r24, 0x01	; 1
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	02 2e       	mov	r0, r18
    2fbe:	02 c0       	rjmp	.+4      	; 0x2fc4 <DIO_VidTogglePinValue+0xbc>
    2fc0:	88 0f       	add	r24, r24
    2fc2:	99 1f       	adc	r25, r25
    2fc4:	0a 94       	dec	r0
    2fc6:	e2 f7       	brpl	.-8      	; 0x2fc0 <DIO_VidTogglePinValue+0xb8>
    2fc8:	84 27       	eor	r24, r20
    2fca:	8c 93       	st	X, r24
    2fcc:	13 c0       	rjmp	.+38     	; 0x2ff4 <DIO_VidTogglePinValue+0xec>
			break ;  
		case 3 : 
			TOGGLE_BIT( PORTD , Copy_U8Pin ) ;
    2fce:	a2 e3       	ldi	r26, 0x32	; 50
    2fd0:	b0 e0       	ldi	r27, 0x00	; 0
    2fd2:	e2 e3       	ldi	r30, 0x32	; 50
    2fd4:	f0 e0       	ldi	r31, 0x00	; 0
    2fd6:	80 81       	ld	r24, Z
    2fd8:	48 2f       	mov	r20, r24
    2fda:	8a 81       	ldd	r24, Y+2	; 0x02
    2fdc:	28 2f       	mov	r18, r24
    2fde:	30 e0       	ldi	r19, 0x00	; 0
    2fe0:	81 e0       	ldi	r24, 0x01	; 1
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	02 2e       	mov	r0, r18
    2fe6:	02 c0       	rjmp	.+4      	; 0x2fec <DIO_VidTogglePinValue+0xe4>
    2fe8:	88 0f       	add	r24, r24
    2fea:	99 1f       	adc	r25, r25
    2fec:	0a 94       	dec	r0
    2fee:	e2 f7       	brpl	.-8      	; 0x2fe8 <DIO_VidTogglePinValue+0xe0>
    2ff0:	84 27       	eor	r24, r20
    2ff2:	8c 93       	st	X, r24
			break ; 
	}//end switch
}//end FUNC DIO_VidTogglePinValue
    2ff4:	0f 90       	pop	r0
    2ff6:	0f 90       	pop	r0
    2ff8:	0f 90       	pop	r0
    2ffa:	0f 90       	pop	r0
    2ffc:	cf 91       	pop	r28
    2ffe:	df 91       	pop	r29
    3000:	08 95       	ret

00003002 <DIO_U8GetPinValue>:
u8 DIO_U8GetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    3002:	df 93       	push	r29
    3004:	cf 93       	push	r28
    3006:	00 d0       	rcall	.+0      	; 0x3008 <DIO_U8GetPinValue+0x6>
    3008:	00 d0       	rcall	.+0      	; 0x300a <DIO_U8GetPinValue+0x8>
    300a:	00 d0       	rcall	.+0      	; 0x300c <DIO_U8GetPinValue+0xa>
    300c:	cd b7       	in	r28, 0x3d	; 61
    300e:	de b7       	in	r29, 0x3e	; 62
    3010:	89 83       	std	Y+1, r24	; 0x01
    3012:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    3014:	89 81       	ldd	r24, Y+1	; 0x01
    3016:	28 2f       	mov	r18, r24
    3018:	30 e0       	ldi	r19, 0x00	; 0
    301a:	3d 83       	std	Y+5, r19	; 0x05
    301c:	2c 83       	std	Y+4, r18	; 0x04
    301e:	4c 81       	ldd	r20, Y+4	; 0x04
    3020:	5d 81       	ldd	r21, Y+5	; 0x05
    3022:	41 30       	cpi	r20, 0x01	; 1
    3024:	51 05       	cpc	r21, r1
    3026:	49 f1       	breq	.+82     	; 0x307a <DIO_U8GetPinValue+0x78>
    3028:	8c 81       	ldd	r24, Y+4	; 0x04
    302a:	9d 81       	ldd	r25, Y+5	; 0x05
    302c:	82 30       	cpi	r24, 0x02	; 2
    302e:	91 05       	cpc	r25, r1
    3030:	34 f4       	brge	.+12     	; 0x303e <DIO_U8GetPinValue+0x3c>
    3032:	2c 81       	ldd	r18, Y+4	; 0x04
    3034:	3d 81       	ldd	r19, Y+5	; 0x05
    3036:	21 15       	cp	r18, r1
    3038:	31 05       	cpc	r19, r1
    303a:	61 f0       	breq	.+24     	; 0x3054 <DIO_U8GetPinValue+0x52>
    303c:	57 c0       	rjmp	.+174    	; 0x30ec <DIO_U8GetPinValue+0xea>
    303e:	4c 81       	ldd	r20, Y+4	; 0x04
    3040:	5d 81       	ldd	r21, Y+5	; 0x05
    3042:	42 30       	cpi	r20, 0x02	; 2
    3044:	51 05       	cpc	r21, r1
    3046:	61 f1       	breq	.+88     	; 0x30a0 <DIO_U8GetPinValue+0x9e>
    3048:	8c 81       	ldd	r24, Y+4	; 0x04
    304a:	9d 81       	ldd	r25, Y+5	; 0x05
    304c:	83 30       	cpi	r24, 0x03	; 3
    304e:	91 05       	cpc	r25, r1
    3050:	d1 f1       	breq	.+116    	; 0x30c6 <DIO_U8GetPinValue+0xc4>
    3052:	4c c0       	rjmp	.+152    	; 0x30ec <DIO_U8GetPinValue+0xea>
		case 0 : 
		   return GET_BIT( PINA , Copy_U8Pin ) ;
    3054:	e9 e3       	ldi	r30, 0x39	; 57
    3056:	f0 e0       	ldi	r31, 0x00	; 0
    3058:	80 81       	ld	r24, Z
    305a:	28 2f       	mov	r18, r24
    305c:	30 e0       	ldi	r19, 0x00	; 0
    305e:	8a 81       	ldd	r24, Y+2	; 0x02
    3060:	88 2f       	mov	r24, r24
    3062:	90 e0       	ldi	r25, 0x00	; 0
    3064:	a9 01       	movw	r20, r18
    3066:	02 c0       	rjmp	.+4      	; 0x306c <DIO_U8GetPinValue+0x6a>
    3068:	55 95       	asr	r21
    306a:	47 95       	ror	r20
    306c:	8a 95       	dec	r24
    306e:	e2 f7       	brpl	.-8      	; 0x3068 <DIO_U8GetPinValue+0x66>
    3070:	ca 01       	movw	r24, r20
    3072:	58 2f       	mov	r21, r24
    3074:	51 70       	andi	r21, 0x01	; 1
    3076:	5b 83       	std	Y+3, r21	; 0x03
    3078:	3a c0       	rjmp	.+116    	; 0x30ee <DIO_U8GetPinValue+0xec>
		case 1 : 
			return GET_BIT( PINB , Copy_U8Pin ) ;
    307a:	e6 e3       	ldi	r30, 0x36	; 54
    307c:	f0 e0       	ldi	r31, 0x00	; 0
    307e:	80 81       	ld	r24, Z
    3080:	28 2f       	mov	r18, r24
    3082:	30 e0       	ldi	r19, 0x00	; 0
    3084:	8a 81       	ldd	r24, Y+2	; 0x02
    3086:	88 2f       	mov	r24, r24
    3088:	90 e0       	ldi	r25, 0x00	; 0
    308a:	a9 01       	movw	r20, r18
    308c:	02 c0       	rjmp	.+4      	; 0x3092 <DIO_U8GetPinValue+0x90>
    308e:	55 95       	asr	r21
    3090:	47 95       	ror	r20
    3092:	8a 95       	dec	r24
    3094:	e2 f7       	brpl	.-8      	; 0x308e <DIO_U8GetPinValue+0x8c>
    3096:	ca 01       	movw	r24, r20
    3098:	58 2f       	mov	r21, r24
    309a:	51 70       	andi	r21, 0x01	; 1
    309c:	5b 83       	std	Y+3, r21	; 0x03
    309e:	27 c0       	rjmp	.+78     	; 0x30ee <DIO_U8GetPinValue+0xec>
		case 2 : 
			return GET_BIT( PINC , Copy_U8Pin ) ;
    30a0:	e3 e3       	ldi	r30, 0x33	; 51
    30a2:	f0 e0       	ldi	r31, 0x00	; 0
    30a4:	80 81       	ld	r24, Z
    30a6:	28 2f       	mov	r18, r24
    30a8:	30 e0       	ldi	r19, 0x00	; 0
    30aa:	8a 81       	ldd	r24, Y+2	; 0x02
    30ac:	88 2f       	mov	r24, r24
    30ae:	90 e0       	ldi	r25, 0x00	; 0
    30b0:	a9 01       	movw	r20, r18
    30b2:	02 c0       	rjmp	.+4      	; 0x30b8 <DIO_U8GetPinValue+0xb6>
    30b4:	55 95       	asr	r21
    30b6:	47 95       	ror	r20
    30b8:	8a 95       	dec	r24
    30ba:	e2 f7       	brpl	.-8      	; 0x30b4 <DIO_U8GetPinValue+0xb2>
    30bc:	ca 01       	movw	r24, r20
    30be:	58 2f       	mov	r21, r24
    30c0:	51 70       	andi	r21, 0x01	; 1
    30c2:	5b 83       	std	Y+3, r21	; 0x03
    30c4:	14 c0       	rjmp	.+40     	; 0x30ee <DIO_U8GetPinValue+0xec>
		case 3 : 
			return GET_BIT( PIND , Copy_U8Pin ) ;
    30c6:	e0 e3       	ldi	r30, 0x30	; 48
    30c8:	f0 e0       	ldi	r31, 0x00	; 0
    30ca:	80 81       	ld	r24, Z
    30cc:	28 2f       	mov	r18, r24
    30ce:	30 e0       	ldi	r19, 0x00	; 0
    30d0:	8a 81       	ldd	r24, Y+2	; 0x02
    30d2:	88 2f       	mov	r24, r24
    30d4:	90 e0       	ldi	r25, 0x00	; 0
    30d6:	a9 01       	movw	r20, r18
    30d8:	02 c0       	rjmp	.+4      	; 0x30de <DIO_U8GetPinValue+0xdc>
    30da:	55 95       	asr	r21
    30dc:	47 95       	ror	r20
    30de:	8a 95       	dec	r24
    30e0:	e2 f7       	brpl	.-8      	; 0x30da <DIO_U8GetPinValue+0xd8>
    30e2:	ca 01       	movw	r24, r20
    30e4:	58 2f       	mov	r21, r24
    30e6:	51 70       	andi	r21, 0x01	; 1
    30e8:	5b 83       	std	Y+3, r21	; 0x03
    30ea:	01 c0       	rjmp	.+2      	; 0x30ee <DIO_U8GetPinValue+0xec>
    30ec:	02 c0       	rjmp	.+4      	; 0x30f2 <DIO_U8GetPinValue+0xf0>
	}//end switch	
}//end FUNC DIO_VidU8PinValue 
    30ee:	8b 81       	ldd	r24, Y+3	; 0x03
    30f0:	8e 83       	std	Y+6, r24	; 0x06
    30f2:	8e 81       	ldd	r24, Y+6	; 0x06
    30f4:	26 96       	adiw	r28, 0x06	; 6
    30f6:	0f b6       	in	r0, 0x3f	; 63
    30f8:	f8 94       	cli
    30fa:	de bf       	out	0x3e, r29	; 62
    30fc:	0f be       	out	0x3f, r0	; 63
    30fe:	cd bf       	out	0x3d, r28	; 61
    3100:	cf 91       	pop	r28
    3102:	df 91       	pop	r29
    3104:	08 95       	ret

00003106 <GIE_VidEnable>:
#include"../LIB/BIT_MATH.h"
#include "DIO_interface.h"
#include "INTERRUPT_Interface.h"
#include "INTERRUPT_private.h"

void GIE_VidEnable (void){
    3106:	df 93       	push	r29
    3108:	cf 93       	push	r28
    310a:	cd b7       	in	r28, 0x3d	; 61
    310c:	de b7       	in	r29, 0x3e	; 62
	//to enable general interrupt
	SET_BIT(SREG,I_BIT);
    310e:	af e5       	ldi	r26, 0x5F	; 95
    3110:	b0 e0       	ldi	r27, 0x00	; 0
    3112:	ef e5       	ldi	r30, 0x5F	; 95
    3114:	f0 e0       	ldi	r31, 0x00	; 0
    3116:	80 81       	ld	r24, Z
    3118:	80 68       	ori	r24, 0x80	; 128
    311a:	8c 93       	st	X, r24
}
    311c:	cf 91       	pop	r28
    311e:	df 91       	pop	r29
    3120:	08 95       	ret

00003122 <GIE_VidDisable>:

void GIE_VidDisable (void){
    3122:	df 93       	push	r29
    3124:	cf 93       	push	r28
    3126:	cd b7       	in	r28, 0x3d	; 61
    3128:	de b7       	in	r29, 0x3e	; 62
	//to disable general interrupt
	CLR_BIT(SREG,I_BIT);
    312a:	af e5       	ldi	r26, 0x5F	; 95
    312c:	b0 e0       	ldi	r27, 0x00	; 0
    312e:	ef e5       	ldi	r30, 0x5F	; 95
    3130:	f0 e0       	ldi	r31, 0x00	; 0
    3132:	80 81       	ld	r24, Z
    3134:	8f 77       	andi	r24, 0x7F	; 127
    3136:	8c 93       	st	X, r24
}
    3138:	cf 91       	pop	r28
    313a:	df 91       	pop	r29
    313c:	08 95       	ret

0000313e <LCD_VidSendCommend>:
#include"LCD_cfg.h"
#include"LCD_private.h" 
#include<avr/delay.h>


void LCD_VidSendCommend(u8 Copy_U8Commend){
    313e:	df 93       	push	r29
    3140:	cf 93       	push	r28
    3142:	cd b7       	in	r28, 0x3d	; 61
    3144:	de b7       	in	r29, 0x3e	; 62
    3146:	6d 97       	sbiw	r28, 0x1d	; 29
    3148:	0f b6       	in	r0, 0x3f	; 63
    314a:	f8 94       	cli
    314c:	de bf       	out	0x3e, r29	; 62
    314e:	0f be       	out	0x3f, r0	; 63
    3150:	cd bf       	out	0x3d, r28	; 61
    3152:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT

/**************to disable RS *** *********************/
	DIO_VidSetPinValue(CONTROL_PORT,RS,LOW);
    3154:	83 e0       	ldi	r24, 0x03	; 3
    3156:	60 e0       	ldi	r22, 0x00	; 0
    3158:	40 e0       	ldi	r20, 0x00	; 0
    315a:	0e 94 43 16 	call	0x2c86	; 0x2c86 <DIO_VidSetPinValue>
/******to out the value of commend on data port *****/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Commend);
    315e:	82 e0       	ldi	r24, 0x02	; 2
    3160:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3162:	0e 94 43 17 	call	0x2e86	; 0x2e86 <DIO_VidSetPortValue>
/*************to make pulse for enable **************/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    3166:	83 e0       	ldi	r24, 0x03	; 3
    3168:	61 e0       	ldi	r22, 0x01	; 1
    316a:	41 e0       	ldi	r20, 0x01	; 1
    316c:	0e 94 43 16 	call	0x2c86	; 0x2c86 <DIO_VidSetPinValue>
    3170:	80 e0       	ldi	r24, 0x00	; 0
    3172:	90 e0       	ldi	r25, 0x00	; 0
    3174:	a0 e8       	ldi	r26, 0x80	; 128
    3176:	bf e3       	ldi	r27, 0x3F	; 63
    3178:	89 8f       	std	Y+25, r24	; 0x19
    317a:	9a 8f       	std	Y+26, r25	; 0x1a
    317c:	ab 8f       	std	Y+27, r26	; 0x1b
    317e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3180:	69 8d       	ldd	r22, Y+25	; 0x19
    3182:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3184:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3186:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3188:	20 e0       	ldi	r18, 0x00	; 0
    318a:	30 e0       	ldi	r19, 0x00	; 0
    318c:	4a ef       	ldi	r20, 0xFA	; 250
    318e:	54 e4       	ldi	r21, 0x44	; 68
    3190:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3194:	dc 01       	movw	r26, r24
    3196:	cb 01       	movw	r24, r22
    3198:	8d 8b       	std	Y+21, r24	; 0x15
    319a:	9e 8b       	std	Y+22, r25	; 0x16
    319c:	af 8b       	std	Y+23, r26	; 0x17
    319e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    31a0:	6d 89       	ldd	r22, Y+21	; 0x15
    31a2:	7e 89       	ldd	r23, Y+22	; 0x16
    31a4:	8f 89       	ldd	r24, Y+23	; 0x17
    31a6:	98 8d       	ldd	r25, Y+24	; 0x18
    31a8:	20 e0       	ldi	r18, 0x00	; 0
    31aa:	30 e0       	ldi	r19, 0x00	; 0
    31ac:	40 e8       	ldi	r20, 0x80	; 128
    31ae:	5f e3       	ldi	r21, 0x3F	; 63
    31b0:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    31b4:	88 23       	and	r24, r24
    31b6:	2c f4       	brge	.+10     	; 0x31c2 <LCD_VidSendCommend+0x84>
		__ticks = 1;
    31b8:	81 e0       	ldi	r24, 0x01	; 1
    31ba:	90 e0       	ldi	r25, 0x00	; 0
    31bc:	9c 8b       	std	Y+20, r25	; 0x14
    31be:	8b 8b       	std	Y+19, r24	; 0x13
    31c0:	3f c0       	rjmp	.+126    	; 0x3240 <LCD_VidSendCommend+0x102>
	else if (__tmp > 65535)
    31c2:	6d 89       	ldd	r22, Y+21	; 0x15
    31c4:	7e 89       	ldd	r23, Y+22	; 0x16
    31c6:	8f 89       	ldd	r24, Y+23	; 0x17
    31c8:	98 8d       	ldd	r25, Y+24	; 0x18
    31ca:	20 e0       	ldi	r18, 0x00	; 0
    31cc:	3f ef       	ldi	r19, 0xFF	; 255
    31ce:	4f e7       	ldi	r20, 0x7F	; 127
    31d0:	57 e4       	ldi	r21, 0x47	; 71
    31d2:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    31d6:	18 16       	cp	r1, r24
    31d8:	4c f5       	brge	.+82     	; 0x322c <LCD_VidSendCommend+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31da:	69 8d       	ldd	r22, Y+25	; 0x19
    31dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    31de:	8b 8d       	ldd	r24, Y+27	; 0x1b
    31e0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    31e2:	20 e0       	ldi	r18, 0x00	; 0
    31e4:	30 e0       	ldi	r19, 0x00	; 0
    31e6:	40 e2       	ldi	r20, 0x20	; 32
    31e8:	51 e4       	ldi	r21, 0x41	; 65
    31ea:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    31ee:	dc 01       	movw	r26, r24
    31f0:	cb 01       	movw	r24, r22
    31f2:	bc 01       	movw	r22, r24
    31f4:	cd 01       	movw	r24, r26
    31f6:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    31fa:	dc 01       	movw	r26, r24
    31fc:	cb 01       	movw	r24, r22
    31fe:	9c 8b       	std	Y+20, r25	; 0x14
    3200:	8b 8b       	std	Y+19, r24	; 0x13
    3202:	0f c0       	rjmp	.+30     	; 0x3222 <LCD_VidSendCommend+0xe4>
    3204:	88 ec       	ldi	r24, 0xC8	; 200
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	9a 8b       	std	Y+18, r25	; 0x12
    320a:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    320c:	89 89       	ldd	r24, Y+17	; 0x11
    320e:	9a 89       	ldd	r25, Y+18	; 0x12
    3210:	01 97       	sbiw	r24, 0x01	; 1
    3212:	f1 f7       	brne	.-4      	; 0x3210 <LCD_VidSendCommend+0xd2>
    3214:	9a 8b       	std	Y+18, r25	; 0x12
    3216:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3218:	8b 89       	ldd	r24, Y+19	; 0x13
    321a:	9c 89       	ldd	r25, Y+20	; 0x14
    321c:	01 97       	sbiw	r24, 0x01	; 1
    321e:	9c 8b       	std	Y+20, r25	; 0x14
    3220:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3222:	8b 89       	ldd	r24, Y+19	; 0x13
    3224:	9c 89       	ldd	r25, Y+20	; 0x14
    3226:	00 97       	sbiw	r24, 0x00	; 0
    3228:	69 f7       	brne	.-38     	; 0x3204 <LCD_VidSendCommend+0xc6>
    322a:	14 c0       	rjmp	.+40     	; 0x3254 <LCD_VidSendCommend+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    322c:	6d 89       	ldd	r22, Y+21	; 0x15
    322e:	7e 89       	ldd	r23, Y+22	; 0x16
    3230:	8f 89       	ldd	r24, Y+23	; 0x17
    3232:	98 8d       	ldd	r25, Y+24	; 0x18
    3234:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3238:	dc 01       	movw	r26, r24
    323a:	cb 01       	movw	r24, r22
    323c:	9c 8b       	std	Y+20, r25	; 0x14
    323e:	8b 8b       	std	Y+19, r24	; 0x13
    3240:	8b 89       	ldd	r24, Y+19	; 0x13
    3242:	9c 89       	ldd	r25, Y+20	; 0x14
    3244:	98 8b       	std	Y+16, r25	; 0x10
    3246:	8f 87       	std	Y+15, r24	; 0x0f
    3248:	8f 85       	ldd	r24, Y+15	; 0x0f
    324a:	98 89       	ldd	r25, Y+16	; 0x10
    324c:	01 97       	sbiw	r24, 0x01	; 1
    324e:	f1 f7       	brne	.-4      	; 0x324c <LCD_VidSendCommend+0x10e>
    3250:	98 8b       	std	Y+16, r25	; 0x10
    3252:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    3254:	83 e0       	ldi	r24, 0x03	; 3
    3256:	61 e0       	ldi	r22, 0x01	; 1
    3258:	40 e0       	ldi	r20, 0x00	; 0
    325a:	0e 94 43 16 	call	0x2c86	; 0x2c86 <DIO_VidSetPinValue>
    325e:	80 e0       	ldi	r24, 0x00	; 0
    3260:	90 e0       	ldi	r25, 0x00	; 0
    3262:	a0 e0       	ldi	r26, 0x00	; 0
    3264:	b0 e4       	ldi	r27, 0x40	; 64
    3266:	8b 87       	std	Y+11, r24	; 0x0b
    3268:	9c 87       	std	Y+12, r25	; 0x0c
    326a:	ad 87       	std	Y+13, r26	; 0x0d
    326c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    326e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3270:	7c 85       	ldd	r23, Y+12	; 0x0c
    3272:	8d 85       	ldd	r24, Y+13	; 0x0d
    3274:	9e 85       	ldd	r25, Y+14	; 0x0e
    3276:	20 e0       	ldi	r18, 0x00	; 0
    3278:	30 e0       	ldi	r19, 0x00	; 0
    327a:	4a ef       	ldi	r20, 0xFA	; 250
    327c:	54 e4       	ldi	r21, 0x44	; 68
    327e:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3282:	dc 01       	movw	r26, r24
    3284:	cb 01       	movw	r24, r22
    3286:	8f 83       	std	Y+7, r24	; 0x07
    3288:	98 87       	std	Y+8, r25	; 0x08
    328a:	a9 87       	std	Y+9, r26	; 0x09
    328c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    328e:	6f 81       	ldd	r22, Y+7	; 0x07
    3290:	78 85       	ldd	r23, Y+8	; 0x08
    3292:	89 85       	ldd	r24, Y+9	; 0x09
    3294:	9a 85       	ldd	r25, Y+10	; 0x0a
    3296:	20 e0       	ldi	r18, 0x00	; 0
    3298:	30 e0       	ldi	r19, 0x00	; 0
    329a:	40 e8       	ldi	r20, 0x80	; 128
    329c:	5f e3       	ldi	r21, 0x3F	; 63
    329e:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    32a2:	88 23       	and	r24, r24
    32a4:	2c f4       	brge	.+10     	; 0x32b0 <LCD_VidSendCommend+0x172>
		__ticks = 1;
    32a6:	81 e0       	ldi	r24, 0x01	; 1
    32a8:	90 e0       	ldi	r25, 0x00	; 0
    32aa:	9e 83       	std	Y+6, r25	; 0x06
    32ac:	8d 83       	std	Y+5, r24	; 0x05
    32ae:	3f c0       	rjmp	.+126    	; 0x332e <LCD_VidSendCommend+0x1f0>
	else if (__tmp > 65535)
    32b0:	6f 81       	ldd	r22, Y+7	; 0x07
    32b2:	78 85       	ldd	r23, Y+8	; 0x08
    32b4:	89 85       	ldd	r24, Y+9	; 0x09
    32b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    32b8:	20 e0       	ldi	r18, 0x00	; 0
    32ba:	3f ef       	ldi	r19, 0xFF	; 255
    32bc:	4f e7       	ldi	r20, 0x7F	; 127
    32be:	57 e4       	ldi	r21, 0x47	; 71
    32c0:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    32c4:	18 16       	cp	r1, r24
    32c6:	4c f5       	brge	.+82     	; 0x331a <LCD_VidSendCommend+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32c8:	6b 85       	ldd	r22, Y+11	; 0x0b
    32ca:	7c 85       	ldd	r23, Y+12	; 0x0c
    32cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    32ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    32d0:	20 e0       	ldi	r18, 0x00	; 0
    32d2:	30 e0       	ldi	r19, 0x00	; 0
    32d4:	40 e2       	ldi	r20, 0x20	; 32
    32d6:	51 e4       	ldi	r21, 0x41	; 65
    32d8:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    32dc:	dc 01       	movw	r26, r24
    32de:	cb 01       	movw	r24, r22
    32e0:	bc 01       	movw	r22, r24
    32e2:	cd 01       	movw	r24, r26
    32e4:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    32e8:	dc 01       	movw	r26, r24
    32ea:	cb 01       	movw	r24, r22
    32ec:	9e 83       	std	Y+6, r25	; 0x06
    32ee:	8d 83       	std	Y+5, r24	; 0x05
    32f0:	0f c0       	rjmp	.+30     	; 0x3310 <LCD_VidSendCommend+0x1d2>
    32f2:	88 ec       	ldi	r24, 0xC8	; 200
    32f4:	90 e0       	ldi	r25, 0x00	; 0
    32f6:	9c 83       	std	Y+4, r25	; 0x04
    32f8:	8b 83       	std	Y+3, r24	; 0x03
    32fa:	8b 81       	ldd	r24, Y+3	; 0x03
    32fc:	9c 81       	ldd	r25, Y+4	; 0x04
    32fe:	01 97       	sbiw	r24, 0x01	; 1
    3300:	f1 f7       	brne	.-4      	; 0x32fe <LCD_VidSendCommend+0x1c0>
    3302:	9c 83       	std	Y+4, r25	; 0x04
    3304:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3306:	8d 81       	ldd	r24, Y+5	; 0x05
    3308:	9e 81       	ldd	r25, Y+6	; 0x06
    330a:	01 97       	sbiw	r24, 0x01	; 1
    330c:	9e 83       	std	Y+6, r25	; 0x06
    330e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3310:	8d 81       	ldd	r24, Y+5	; 0x05
    3312:	9e 81       	ldd	r25, Y+6	; 0x06
    3314:	00 97       	sbiw	r24, 0x00	; 0
    3316:	69 f7       	brne	.-38     	; 0x32f2 <LCD_VidSendCommend+0x1b4>
    3318:	14 c0       	rjmp	.+40     	; 0x3342 <LCD_VidSendCommend+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    331a:	6f 81       	ldd	r22, Y+7	; 0x07
    331c:	78 85       	ldd	r23, Y+8	; 0x08
    331e:	89 85       	ldd	r24, Y+9	; 0x09
    3320:	9a 85       	ldd	r25, Y+10	; 0x0a
    3322:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3326:	dc 01       	movw	r26, r24
    3328:	cb 01       	movw	r24, r22
    332a:	9e 83       	std	Y+6, r25	; 0x06
    332c:	8d 83       	std	Y+5, r24	; 0x05
    332e:	8d 81       	ldd	r24, Y+5	; 0x05
    3330:	9e 81       	ldd	r25, Y+6	; 0x06
    3332:	9a 83       	std	Y+2, r25	; 0x02
    3334:	89 83       	std	Y+1, r24	; 0x01
    3336:	89 81       	ldd	r24, Y+1	; 0x01
    3338:	9a 81       	ldd	r25, Y+2	; 0x02
    333a:	01 97       	sbiw	r24, 0x01	; 1
    333c:	f1 f7       	brne	.-4      	; 0x333a <LCD_VidSendCommend+0x1fc>
    333e:	9a 83       	std	Y+2, r25	; 0x02
    3340:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
	_delay_ms(2);

#endif
}
    3342:	6d 96       	adiw	r28, 0x1d	; 29
    3344:	0f b6       	in	r0, 0x3f	; 63
    3346:	f8 94       	cli
    3348:	de bf       	out	0x3e, r29	; 62
    334a:	0f be       	out	0x3f, r0	; 63
    334c:	cd bf       	out	0x3d, r28	; 61
    334e:	cf 91       	pop	r28
    3350:	df 91       	pop	r29
    3352:	08 95       	ret

00003354 <LCD_VidInit>:



void LCD_VidInit (void) {
    3354:	0f 93       	push	r16
    3356:	1f 93       	push	r17
    3358:	df 93       	push	r29
    335a:	cf 93       	push	r28
    335c:	cd b7       	in	r28, 0x3d	; 61
    335e:	de b7       	in	r29, 0x3e	; 62
    3360:	c4 56       	subi	r28, 0x64	; 100
    3362:	d0 40       	sbci	r29, 0x00	; 0
    3364:	0f b6       	in	r0, 0x3f	; 63
    3366:	f8 94       	cli
    3368:	de bf       	out	0x3e, r29	; 62
    336a:	0f be       	out	0x3f, r0	; 63
    336c:	cd bf       	out	0x3d, r28	; 61

#ifdef EIGHT_BIT

/****to define CONTROL PORT as OUTPUT PINS******/
	DIO_VidSetPinDirection(CONTROL_PORT,RS,HIGH);
    336e:	83 e0       	ldi	r24, 0x03	; 3
    3370:	60 e0       	ldi	r22, 0x00	; 0
    3372:	41 e0       	ldi	r20, 0x01	; 1
    3374:	0e 94 02 15 	call	0x2a04	; 0x2a04 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(CONTROL_PORT,E,HIGH);
    3378:	83 e0       	ldi	r24, 0x03	; 3
    337a:	61 e0       	ldi	r22, 0x01	; 1
    337c:	41 e0       	ldi	r20, 0x01	; 1
    337e:	0e 94 02 15 	call	0x2a04	; 0x2a04 <DIO_VidSetPinDirection>
/****to define DATA PORT as OUTPUT PINS********/
	DIO_VidSetPortDirection(DATA_PORT,0xff);
    3382:	82 e0       	ldi	r24, 0x02	; 2
    3384:	6f ef       	ldi	r22, 0xFF	; 255
    3386:	0e 94 02 16 	call	0x2c04	; 0x2c04 <DIO_VidSetPortDirection>
    338a:	fe 01       	movw	r30, r28
    338c:	ef 59       	subi	r30, 0x9F	; 159
    338e:	ff 4f       	sbci	r31, 0xFF	; 255
    3390:	80 e0       	ldi	r24, 0x00	; 0
    3392:	90 e0       	ldi	r25, 0x00	; 0
    3394:	a0 e2       	ldi	r26, 0x20	; 32
    3396:	b2 e4       	ldi	r27, 0x42	; 66
    3398:	80 83       	st	Z, r24
    339a:	91 83       	std	Z+1, r25	; 0x01
    339c:	a2 83       	std	Z+2, r26	; 0x02
    339e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33a0:	8e 01       	movw	r16, r28
    33a2:	03 5a       	subi	r16, 0xA3	; 163
    33a4:	1f 4f       	sbci	r17, 0xFF	; 255
    33a6:	fe 01       	movw	r30, r28
    33a8:	ef 59       	subi	r30, 0x9F	; 159
    33aa:	ff 4f       	sbci	r31, 0xFF	; 255
    33ac:	60 81       	ld	r22, Z
    33ae:	71 81       	ldd	r23, Z+1	; 0x01
    33b0:	82 81       	ldd	r24, Z+2	; 0x02
    33b2:	93 81       	ldd	r25, Z+3	; 0x03
    33b4:	20 e0       	ldi	r18, 0x00	; 0
    33b6:	30 e0       	ldi	r19, 0x00	; 0
    33b8:	4a ef       	ldi	r20, 0xFA	; 250
    33ba:	54 e4       	ldi	r21, 0x44	; 68
    33bc:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    33c0:	dc 01       	movw	r26, r24
    33c2:	cb 01       	movw	r24, r22
    33c4:	f8 01       	movw	r30, r16
    33c6:	80 83       	st	Z, r24
    33c8:	91 83       	std	Z+1, r25	; 0x01
    33ca:	a2 83       	std	Z+2, r26	; 0x02
    33cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    33ce:	fe 01       	movw	r30, r28
    33d0:	e3 5a       	subi	r30, 0xA3	; 163
    33d2:	ff 4f       	sbci	r31, 0xFF	; 255
    33d4:	60 81       	ld	r22, Z
    33d6:	71 81       	ldd	r23, Z+1	; 0x01
    33d8:	82 81       	ldd	r24, Z+2	; 0x02
    33da:	93 81       	ldd	r25, Z+3	; 0x03
    33dc:	20 e0       	ldi	r18, 0x00	; 0
    33de:	30 e0       	ldi	r19, 0x00	; 0
    33e0:	40 e8       	ldi	r20, 0x80	; 128
    33e2:	5f e3       	ldi	r21, 0x3F	; 63
    33e4:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    33e8:	88 23       	and	r24, r24
    33ea:	44 f4       	brge	.+16     	; 0x33fc <LCD_VidInit+0xa8>
		__ticks = 1;
    33ec:	fe 01       	movw	r30, r28
    33ee:	e5 5a       	subi	r30, 0xA5	; 165
    33f0:	ff 4f       	sbci	r31, 0xFF	; 255
    33f2:	81 e0       	ldi	r24, 0x01	; 1
    33f4:	90 e0       	ldi	r25, 0x00	; 0
    33f6:	91 83       	std	Z+1, r25	; 0x01
    33f8:	80 83       	st	Z, r24
    33fa:	64 c0       	rjmp	.+200    	; 0x34c4 <LCD_VidInit+0x170>
	else if (__tmp > 65535)
    33fc:	fe 01       	movw	r30, r28
    33fe:	e3 5a       	subi	r30, 0xA3	; 163
    3400:	ff 4f       	sbci	r31, 0xFF	; 255
    3402:	60 81       	ld	r22, Z
    3404:	71 81       	ldd	r23, Z+1	; 0x01
    3406:	82 81       	ldd	r24, Z+2	; 0x02
    3408:	93 81       	ldd	r25, Z+3	; 0x03
    340a:	20 e0       	ldi	r18, 0x00	; 0
    340c:	3f ef       	ldi	r19, 0xFF	; 255
    340e:	4f e7       	ldi	r20, 0x7F	; 127
    3410:	57 e4       	ldi	r21, 0x47	; 71
    3412:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3416:	18 16       	cp	r1, r24
    3418:	0c f0       	brlt	.+2      	; 0x341c <LCD_VidInit+0xc8>
    341a:	43 c0       	rjmp	.+134    	; 0x34a2 <LCD_VidInit+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    341c:	fe 01       	movw	r30, r28
    341e:	ef 59       	subi	r30, 0x9F	; 159
    3420:	ff 4f       	sbci	r31, 0xFF	; 255
    3422:	60 81       	ld	r22, Z
    3424:	71 81       	ldd	r23, Z+1	; 0x01
    3426:	82 81       	ldd	r24, Z+2	; 0x02
    3428:	93 81       	ldd	r25, Z+3	; 0x03
    342a:	20 e0       	ldi	r18, 0x00	; 0
    342c:	30 e0       	ldi	r19, 0x00	; 0
    342e:	40 e2       	ldi	r20, 0x20	; 32
    3430:	51 e4       	ldi	r21, 0x41	; 65
    3432:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3436:	dc 01       	movw	r26, r24
    3438:	cb 01       	movw	r24, r22
    343a:	8e 01       	movw	r16, r28
    343c:	05 5a       	subi	r16, 0xA5	; 165
    343e:	1f 4f       	sbci	r17, 0xFF	; 255
    3440:	bc 01       	movw	r22, r24
    3442:	cd 01       	movw	r24, r26
    3444:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3448:	dc 01       	movw	r26, r24
    344a:	cb 01       	movw	r24, r22
    344c:	f8 01       	movw	r30, r16
    344e:	91 83       	std	Z+1, r25	; 0x01
    3450:	80 83       	st	Z, r24
    3452:	1f c0       	rjmp	.+62     	; 0x3492 <LCD_VidInit+0x13e>
    3454:	fe 01       	movw	r30, r28
    3456:	e7 5a       	subi	r30, 0xA7	; 167
    3458:	ff 4f       	sbci	r31, 0xFF	; 255
    345a:	88 ec       	ldi	r24, 0xC8	; 200
    345c:	90 e0       	ldi	r25, 0x00	; 0
    345e:	91 83       	std	Z+1, r25	; 0x01
    3460:	80 83       	st	Z, r24
    3462:	fe 01       	movw	r30, r28
    3464:	e7 5a       	subi	r30, 0xA7	; 167
    3466:	ff 4f       	sbci	r31, 0xFF	; 255
    3468:	80 81       	ld	r24, Z
    346a:	91 81       	ldd	r25, Z+1	; 0x01
    346c:	01 97       	sbiw	r24, 0x01	; 1
    346e:	f1 f7       	brne	.-4      	; 0x346c <LCD_VidInit+0x118>
    3470:	fe 01       	movw	r30, r28
    3472:	e7 5a       	subi	r30, 0xA7	; 167
    3474:	ff 4f       	sbci	r31, 0xFF	; 255
    3476:	91 83       	std	Z+1, r25	; 0x01
    3478:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    347a:	de 01       	movw	r26, r28
    347c:	a5 5a       	subi	r26, 0xA5	; 165
    347e:	bf 4f       	sbci	r27, 0xFF	; 255
    3480:	fe 01       	movw	r30, r28
    3482:	e5 5a       	subi	r30, 0xA5	; 165
    3484:	ff 4f       	sbci	r31, 0xFF	; 255
    3486:	80 81       	ld	r24, Z
    3488:	91 81       	ldd	r25, Z+1	; 0x01
    348a:	01 97       	sbiw	r24, 0x01	; 1
    348c:	11 96       	adiw	r26, 0x01	; 1
    348e:	9c 93       	st	X, r25
    3490:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3492:	fe 01       	movw	r30, r28
    3494:	e5 5a       	subi	r30, 0xA5	; 165
    3496:	ff 4f       	sbci	r31, 0xFF	; 255
    3498:	80 81       	ld	r24, Z
    349a:	91 81       	ldd	r25, Z+1	; 0x01
    349c:	00 97       	sbiw	r24, 0x00	; 0
    349e:	d1 f6       	brne	.-76     	; 0x3454 <LCD_VidInit+0x100>
    34a0:	27 c0       	rjmp	.+78     	; 0x34f0 <LCD_VidInit+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34a2:	8e 01       	movw	r16, r28
    34a4:	05 5a       	subi	r16, 0xA5	; 165
    34a6:	1f 4f       	sbci	r17, 0xFF	; 255
    34a8:	fe 01       	movw	r30, r28
    34aa:	e3 5a       	subi	r30, 0xA3	; 163
    34ac:	ff 4f       	sbci	r31, 0xFF	; 255
    34ae:	60 81       	ld	r22, Z
    34b0:	71 81       	ldd	r23, Z+1	; 0x01
    34b2:	82 81       	ldd	r24, Z+2	; 0x02
    34b4:	93 81       	ldd	r25, Z+3	; 0x03
    34b6:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    34ba:	dc 01       	movw	r26, r24
    34bc:	cb 01       	movw	r24, r22
    34be:	f8 01       	movw	r30, r16
    34c0:	91 83       	std	Z+1, r25	; 0x01
    34c2:	80 83       	st	Z, r24
    34c4:	de 01       	movw	r26, r28
    34c6:	a9 5a       	subi	r26, 0xA9	; 169
    34c8:	bf 4f       	sbci	r27, 0xFF	; 255
    34ca:	fe 01       	movw	r30, r28
    34cc:	e5 5a       	subi	r30, 0xA5	; 165
    34ce:	ff 4f       	sbci	r31, 0xFF	; 255
    34d0:	80 81       	ld	r24, Z
    34d2:	91 81       	ldd	r25, Z+1	; 0x01
    34d4:	8d 93       	st	X+, r24
    34d6:	9c 93       	st	X, r25
    34d8:	fe 01       	movw	r30, r28
    34da:	e9 5a       	subi	r30, 0xA9	; 169
    34dc:	ff 4f       	sbci	r31, 0xFF	; 255
    34de:	80 81       	ld	r24, Z
    34e0:	91 81       	ldd	r25, Z+1	; 0x01
    34e2:	01 97       	sbiw	r24, 0x01	; 1
    34e4:	f1 f7       	brne	.-4      	; 0x34e2 <LCD_VidInit+0x18e>
    34e6:	fe 01       	movw	r30, r28
    34e8:	e9 5a       	subi	r30, 0xA9	; 169
    34ea:	ff 4f       	sbci	r31, 0xFF	; 255
    34ec:	91 83       	std	Z+1, r25	; 0x01
    34ee:	80 83       	st	Z, r24
/******to initialize LCD after power***********/
	_delay_ms(40);
	//send function set commend
	LCD_VidSendCommend (FUNC_SET);
    34f0:	8c e3       	ldi	r24, 0x3C	; 60
    34f2:	0e 94 9f 18 	call	0x313e	; 0x313e <LCD_VidSendCommend>
    34f6:	fe 01       	movw	r30, r28
    34f8:	ed 5a       	subi	r30, 0xAD	; 173
    34fa:	ff 4f       	sbci	r31, 0xFF	; 255
    34fc:	80 e0       	ldi	r24, 0x00	; 0
    34fe:	90 e0       	ldi	r25, 0x00	; 0
    3500:	a0 e2       	ldi	r26, 0x20	; 32
    3502:	b2 e4       	ldi	r27, 0x42	; 66
    3504:	80 83       	st	Z, r24
    3506:	91 83       	std	Z+1, r25	; 0x01
    3508:	a2 83       	std	Z+2, r26	; 0x02
    350a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    350c:	8e 01       	movw	r16, r28
    350e:	01 5b       	subi	r16, 0xB1	; 177
    3510:	1f 4f       	sbci	r17, 0xFF	; 255
    3512:	fe 01       	movw	r30, r28
    3514:	ed 5a       	subi	r30, 0xAD	; 173
    3516:	ff 4f       	sbci	r31, 0xFF	; 255
    3518:	60 81       	ld	r22, Z
    351a:	71 81       	ldd	r23, Z+1	; 0x01
    351c:	82 81       	ldd	r24, Z+2	; 0x02
    351e:	93 81       	ldd	r25, Z+3	; 0x03
    3520:	2b ea       	ldi	r18, 0xAB	; 171
    3522:	3a ea       	ldi	r19, 0xAA	; 170
    3524:	4a e2       	ldi	r20, 0x2A	; 42
    3526:	50 e4       	ldi	r21, 0x40	; 64
    3528:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    352c:	dc 01       	movw	r26, r24
    352e:	cb 01       	movw	r24, r22
    3530:	f8 01       	movw	r30, r16
    3532:	80 83       	st	Z, r24
    3534:	91 83       	std	Z+1, r25	; 0x01
    3536:	a2 83       	std	Z+2, r26	; 0x02
    3538:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    353a:	fe 01       	movw	r30, r28
    353c:	e1 5b       	subi	r30, 0xB1	; 177
    353e:	ff 4f       	sbci	r31, 0xFF	; 255
    3540:	60 81       	ld	r22, Z
    3542:	71 81       	ldd	r23, Z+1	; 0x01
    3544:	82 81       	ldd	r24, Z+2	; 0x02
    3546:	93 81       	ldd	r25, Z+3	; 0x03
    3548:	20 e0       	ldi	r18, 0x00	; 0
    354a:	30 e0       	ldi	r19, 0x00	; 0
    354c:	40 e8       	ldi	r20, 0x80	; 128
    354e:	5f e3       	ldi	r21, 0x3F	; 63
    3550:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3554:	88 23       	and	r24, r24
    3556:	34 f4       	brge	.+12     	; 0x3564 <LCD_VidInit+0x210>
		__ticks = 1;
    3558:	fe 01       	movw	r30, r28
    355a:	e2 5b       	subi	r30, 0xB2	; 178
    355c:	ff 4f       	sbci	r31, 0xFF	; 255
    355e:	81 e0       	ldi	r24, 0x01	; 1
    3560:	80 83       	st	Z, r24
    3562:	e0 c0       	rjmp	.+448    	; 0x3724 <LCD_VidInit+0x3d0>
	else if (__tmp > 255)
    3564:	fe 01       	movw	r30, r28
    3566:	e1 5b       	subi	r30, 0xB1	; 177
    3568:	ff 4f       	sbci	r31, 0xFF	; 255
    356a:	60 81       	ld	r22, Z
    356c:	71 81       	ldd	r23, Z+1	; 0x01
    356e:	82 81       	ldd	r24, Z+2	; 0x02
    3570:	93 81       	ldd	r25, Z+3	; 0x03
    3572:	20 e0       	ldi	r18, 0x00	; 0
    3574:	30 e0       	ldi	r19, 0x00	; 0
    3576:	4f e7       	ldi	r20, 0x7F	; 127
    3578:	53 e4       	ldi	r21, 0x43	; 67
    357a:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    357e:	18 16       	cp	r1, r24
    3580:	0c f0       	brlt	.+2      	; 0x3584 <LCD_VidInit+0x230>
    3582:	c0 c0       	rjmp	.+384    	; 0x3704 <LCD_VidInit+0x3b0>
	{
		_delay_ms(__us / 1000.0);
    3584:	fe 01       	movw	r30, r28
    3586:	ed 5a       	subi	r30, 0xAD	; 173
    3588:	ff 4f       	sbci	r31, 0xFF	; 255
    358a:	60 81       	ld	r22, Z
    358c:	71 81       	ldd	r23, Z+1	; 0x01
    358e:	82 81       	ldd	r24, Z+2	; 0x02
    3590:	93 81       	ldd	r25, Z+3	; 0x03
    3592:	20 e0       	ldi	r18, 0x00	; 0
    3594:	30 e0       	ldi	r19, 0x00	; 0
    3596:	4a e7       	ldi	r20, 0x7A	; 122
    3598:	54 e4       	ldi	r21, 0x44	; 68
    359a:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <__divsf3>
    359e:	dc 01       	movw	r26, r24
    35a0:	cb 01       	movw	r24, r22
    35a2:	fe 01       	movw	r30, r28
    35a4:	e6 5b       	subi	r30, 0xB6	; 182
    35a6:	ff 4f       	sbci	r31, 0xFF	; 255
    35a8:	80 83       	st	Z, r24
    35aa:	91 83       	std	Z+1, r25	; 0x01
    35ac:	a2 83       	std	Z+2, r26	; 0x02
    35ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35b0:	8e 01       	movw	r16, r28
    35b2:	0a 5b       	subi	r16, 0xBA	; 186
    35b4:	1f 4f       	sbci	r17, 0xFF	; 255
    35b6:	fe 01       	movw	r30, r28
    35b8:	e6 5b       	subi	r30, 0xB6	; 182
    35ba:	ff 4f       	sbci	r31, 0xFF	; 255
    35bc:	60 81       	ld	r22, Z
    35be:	71 81       	ldd	r23, Z+1	; 0x01
    35c0:	82 81       	ldd	r24, Z+2	; 0x02
    35c2:	93 81       	ldd	r25, Z+3	; 0x03
    35c4:	20 e0       	ldi	r18, 0x00	; 0
    35c6:	30 e0       	ldi	r19, 0x00	; 0
    35c8:	4a ef       	ldi	r20, 0xFA	; 250
    35ca:	54 e4       	ldi	r21, 0x44	; 68
    35cc:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    35d0:	dc 01       	movw	r26, r24
    35d2:	cb 01       	movw	r24, r22
    35d4:	f8 01       	movw	r30, r16
    35d6:	80 83       	st	Z, r24
    35d8:	91 83       	std	Z+1, r25	; 0x01
    35da:	a2 83       	std	Z+2, r26	; 0x02
    35dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35de:	fe 01       	movw	r30, r28
    35e0:	ea 5b       	subi	r30, 0xBA	; 186
    35e2:	ff 4f       	sbci	r31, 0xFF	; 255
    35e4:	60 81       	ld	r22, Z
    35e6:	71 81       	ldd	r23, Z+1	; 0x01
    35e8:	82 81       	ldd	r24, Z+2	; 0x02
    35ea:	93 81       	ldd	r25, Z+3	; 0x03
    35ec:	20 e0       	ldi	r18, 0x00	; 0
    35ee:	30 e0       	ldi	r19, 0x00	; 0
    35f0:	40 e8       	ldi	r20, 0x80	; 128
    35f2:	5f e3       	ldi	r21, 0x3F	; 63
    35f4:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    35f8:	88 23       	and	r24, r24
    35fa:	44 f4       	brge	.+16     	; 0x360c <LCD_VidInit+0x2b8>
		__ticks = 1;
    35fc:	fe 01       	movw	r30, r28
    35fe:	ec 5b       	subi	r30, 0xBC	; 188
    3600:	ff 4f       	sbci	r31, 0xFF	; 255
    3602:	81 e0       	ldi	r24, 0x01	; 1
    3604:	90 e0       	ldi	r25, 0x00	; 0
    3606:	91 83       	std	Z+1, r25	; 0x01
    3608:	80 83       	st	Z, r24
    360a:	64 c0       	rjmp	.+200    	; 0x36d4 <LCD_VidInit+0x380>
	else if (__tmp > 65535)
    360c:	fe 01       	movw	r30, r28
    360e:	ea 5b       	subi	r30, 0xBA	; 186
    3610:	ff 4f       	sbci	r31, 0xFF	; 255
    3612:	60 81       	ld	r22, Z
    3614:	71 81       	ldd	r23, Z+1	; 0x01
    3616:	82 81       	ldd	r24, Z+2	; 0x02
    3618:	93 81       	ldd	r25, Z+3	; 0x03
    361a:	20 e0       	ldi	r18, 0x00	; 0
    361c:	3f ef       	ldi	r19, 0xFF	; 255
    361e:	4f e7       	ldi	r20, 0x7F	; 127
    3620:	57 e4       	ldi	r21, 0x47	; 71
    3622:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3626:	18 16       	cp	r1, r24
    3628:	0c f0       	brlt	.+2      	; 0x362c <LCD_VidInit+0x2d8>
    362a:	43 c0       	rjmp	.+134    	; 0x36b2 <LCD_VidInit+0x35e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    362c:	fe 01       	movw	r30, r28
    362e:	e6 5b       	subi	r30, 0xB6	; 182
    3630:	ff 4f       	sbci	r31, 0xFF	; 255
    3632:	60 81       	ld	r22, Z
    3634:	71 81       	ldd	r23, Z+1	; 0x01
    3636:	82 81       	ldd	r24, Z+2	; 0x02
    3638:	93 81       	ldd	r25, Z+3	; 0x03
    363a:	20 e0       	ldi	r18, 0x00	; 0
    363c:	30 e0       	ldi	r19, 0x00	; 0
    363e:	40 e2       	ldi	r20, 0x20	; 32
    3640:	51 e4       	ldi	r21, 0x41	; 65
    3642:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3646:	dc 01       	movw	r26, r24
    3648:	cb 01       	movw	r24, r22
    364a:	8e 01       	movw	r16, r28
    364c:	0c 5b       	subi	r16, 0xBC	; 188
    364e:	1f 4f       	sbci	r17, 0xFF	; 255
    3650:	bc 01       	movw	r22, r24
    3652:	cd 01       	movw	r24, r26
    3654:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3658:	dc 01       	movw	r26, r24
    365a:	cb 01       	movw	r24, r22
    365c:	f8 01       	movw	r30, r16
    365e:	91 83       	std	Z+1, r25	; 0x01
    3660:	80 83       	st	Z, r24
    3662:	1f c0       	rjmp	.+62     	; 0x36a2 <LCD_VidInit+0x34e>
    3664:	fe 01       	movw	r30, r28
    3666:	ee 5b       	subi	r30, 0xBE	; 190
    3668:	ff 4f       	sbci	r31, 0xFF	; 255
    366a:	88 ec       	ldi	r24, 0xC8	; 200
    366c:	90 e0       	ldi	r25, 0x00	; 0
    366e:	91 83       	std	Z+1, r25	; 0x01
    3670:	80 83       	st	Z, r24
    3672:	fe 01       	movw	r30, r28
    3674:	ee 5b       	subi	r30, 0xBE	; 190
    3676:	ff 4f       	sbci	r31, 0xFF	; 255
    3678:	80 81       	ld	r24, Z
    367a:	91 81       	ldd	r25, Z+1	; 0x01
    367c:	01 97       	sbiw	r24, 0x01	; 1
    367e:	f1 f7       	brne	.-4      	; 0x367c <LCD_VidInit+0x328>
    3680:	fe 01       	movw	r30, r28
    3682:	ee 5b       	subi	r30, 0xBE	; 190
    3684:	ff 4f       	sbci	r31, 0xFF	; 255
    3686:	91 83       	std	Z+1, r25	; 0x01
    3688:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    368a:	de 01       	movw	r26, r28
    368c:	ac 5b       	subi	r26, 0xBC	; 188
    368e:	bf 4f       	sbci	r27, 0xFF	; 255
    3690:	fe 01       	movw	r30, r28
    3692:	ec 5b       	subi	r30, 0xBC	; 188
    3694:	ff 4f       	sbci	r31, 0xFF	; 255
    3696:	80 81       	ld	r24, Z
    3698:	91 81       	ldd	r25, Z+1	; 0x01
    369a:	01 97       	sbiw	r24, 0x01	; 1
    369c:	11 96       	adiw	r26, 0x01	; 1
    369e:	9c 93       	st	X, r25
    36a0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36a2:	fe 01       	movw	r30, r28
    36a4:	ec 5b       	subi	r30, 0xBC	; 188
    36a6:	ff 4f       	sbci	r31, 0xFF	; 255
    36a8:	80 81       	ld	r24, Z
    36aa:	91 81       	ldd	r25, Z+1	; 0x01
    36ac:	00 97       	sbiw	r24, 0x00	; 0
    36ae:	d1 f6       	brne	.-76     	; 0x3664 <LCD_VidInit+0x310>
    36b0:	42 c0       	rjmp	.+132    	; 0x3736 <LCD_VidInit+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36b2:	8e 01       	movw	r16, r28
    36b4:	0c 5b       	subi	r16, 0xBC	; 188
    36b6:	1f 4f       	sbci	r17, 0xFF	; 255
    36b8:	fe 01       	movw	r30, r28
    36ba:	ea 5b       	subi	r30, 0xBA	; 186
    36bc:	ff 4f       	sbci	r31, 0xFF	; 255
    36be:	60 81       	ld	r22, Z
    36c0:	71 81       	ldd	r23, Z+1	; 0x01
    36c2:	82 81       	ldd	r24, Z+2	; 0x02
    36c4:	93 81       	ldd	r25, Z+3	; 0x03
    36c6:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    36ca:	dc 01       	movw	r26, r24
    36cc:	cb 01       	movw	r24, r22
    36ce:	f8 01       	movw	r30, r16
    36d0:	91 83       	std	Z+1, r25	; 0x01
    36d2:	80 83       	st	Z, r24
    36d4:	de 01       	movw	r26, r28
    36d6:	a0 5c       	subi	r26, 0xC0	; 192
    36d8:	bf 4f       	sbci	r27, 0xFF	; 255
    36da:	fe 01       	movw	r30, r28
    36dc:	ec 5b       	subi	r30, 0xBC	; 188
    36de:	ff 4f       	sbci	r31, 0xFF	; 255
    36e0:	80 81       	ld	r24, Z
    36e2:	91 81       	ldd	r25, Z+1	; 0x01
    36e4:	11 96       	adiw	r26, 0x01	; 1
    36e6:	9c 93       	st	X, r25
    36e8:	8e 93       	st	-X, r24
    36ea:	fe 01       	movw	r30, r28
    36ec:	e0 5c       	subi	r30, 0xC0	; 192
    36ee:	ff 4f       	sbci	r31, 0xFF	; 255
    36f0:	80 81       	ld	r24, Z
    36f2:	91 81       	ldd	r25, Z+1	; 0x01
    36f4:	01 97       	sbiw	r24, 0x01	; 1
    36f6:	f1 f7       	brne	.-4      	; 0x36f4 <LCD_VidInit+0x3a0>
    36f8:	fe 01       	movw	r30, r28
    36fa:	e0 5c       	subi	r30, 0xC0	; 192
    36fc:	ff 4f       	sbci	r31, 0xFF	; 255
    36fe:	91 83       	std	Z+1, r25	; 0x01
    3700:	80 83       	st	Z, r24
    3702:	19 c0       	rjmp	.+50     	; 0x3736 <LCD_VidInit+0x3e2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3704:	8e 01       	movw	r16, r28
    3706:	02 5b       	subi	r16, 0xB2	; 178
    3708:	1f 4f       	sbci	r17, 0xFF	; 255
    370a:	fe 01       	movw	r30, r28
    370c:	e1 5b       	subi	r30, 0xB1	; 177
    370e:	ff 4f       	sbci	r31, 0xFF	; 255
    3710:	60 81       	ld	r22, Z
    3712:	71 81       	ldd	r23, Z+1	; 0x01
    3714:	82 81       	ldd	r24, Z+2	; 0x02
    3716:	93 81       	ldd	r25, Z+3	; 0x03
    3718:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    371c:	dc 01       	movw	r26, r24
    371e:	cb 01       	movw	r24, r22
    3720:	f8 01       	movw	r30, r16
    3722:	80 83       	st	Z, r24
    3724:	fe 01       	movw	r30, r28
    3726:	e2 5b       	subi	r30, 0xB2	; 178
    3728:	ff 4f       	sbci	r31, 0xFF	; 255
    372a:	80 81       	ld	r24, Z
    372c:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    372e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3730:	8a 95       	dec	r24
    3732:	f1 f7       	brne	.-4      	; 0x3730 <LCD_VidInit+0x3dc>
    3734:	8f af       	std	Y+63, r24	; 0x3f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Display_ON & Cursor_OFF Command
	LCD_VidSendCommend(DISPLAY_ON_CURSOR_OFF);
    3736:	8c e0       	ldi	r24, 0x0C	; 12
    3738:	0e 94 9f 18 	call	0x313e	; 0x313e <LCD_VidSendCommend>
    373c:	80 e0       	ldi	r24, 0x00	; 0
    373e:	90 e0       	ldi	r25, 0x00	; 0
    3740:	a0 e2       	ldi	r26, 0x20	; 32
    3742:	b2 e4       	ldi	r27, 0x42	; 66
    3744:	8b af       	std	Y+59, r24	; 0x3b
    3746:	9c af       	std	Y+60, r25	; 0x3c
    3748:	ad af       	std	Y+61, r26	; 0x3d
    374a:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    374c:	6b ad       	ldd	r22, Y+59	; 0x3b
    374e:	7c ad       	ldd	r23, Y+60	; 0x3c
    3750:	8d ad       	ldd	r24, Y+61	; 0x3d
    3752:	9e ad       	ldd	r25, Y+62	; 0x3e
    3754:	2b ea       	ldi	r18, 0xAB	; 171
    3756:	3a ea       	ldi	r19, 0xAA	; 170
    3758:	4a e2       	ldi	r20, 0x2A	; 42
    375a:	50 e4       	ldi	r21, 0x40	; 64
    375c:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3760:	dc 01       	movw	r26, r24
    3762:	cb 01       	movw	r24, r22
    3764:	8f ab       	std	Y+55, r24	; 0x37
    3766:	98 af       	std	Y+56, r25	; 0x38
    3768:	a9 af       	std	Y+57, r26	; 0x39
    376a:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    376c:	6f a9       	ldd	r22, Y+55	; 0x37
    376e:	78 ad       	ldd	r23, Y+56	; 0x38
    3770:	89 ad       	ldd	r24, Y+57	; 0x39
    3772:	9a ad       	ldd	r25, Y+58	; 0x3a
    3774:	20 e0       	ldi	r18, 0x00	; 0
    3776:	30 e0       	ldi	r19, 0x00	; 0
    3778:	40 e8       	ldi	r20, 0x80	; 128
    377a:	5f e3       	ldi	r21, 0x3F	; 63
    377c:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3780:	88 23       	and	r24, r24
    3782:	1c f4       	brge	.+6      	; 0x378a <LCD_VidInit+0x436>
		__ticks = 1;
    3784:	81 e0       	ldi	r24, 0x01	; 1
    3786:	8e ab       	std	Y+54, r24	; 0x36
    3788:	91 c0       	rjmp	.+290    	; 0x38ac <LCD_VidInit+0x558>
	else if (__tmp > 255)
    378a:	6f a9       	ldd	r22, Y+55	; 0x37
    378c:	78 ad       	ldd	r23, Y+56	; 0x38
    378e:	89 ad       	ldd	r24, Y+57	; 0x39
    3790:	9a ad       	ldd	r25, Y+58	; 0x3a
    3792:	20 e0       	ldi	r18, 0x00	; 0
    3794:	30 e0       	ldi	r19, 0x00	; 0
    3796:	4f e7       	ldi	r20, 0x7F	; 127
    3798:	53 e4       	ldi	r21, 0x43	; 67
    379a:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    379e:	18 16       	cp	r1, r24
    37a0:	0c f0       	brlt	.+2      	; 0x37a4 <LCD_VidInit+0x450>
    37a2:	7b c0       	rjmp	.+246    	; 0x389a <LCD_VidInit+0x546>
	{
		_delay_ms(__us / 1000.0);
    37a4:	6b ad       	ldd	r22, Y+59	; 0x3b
    37a6:	7c ad       	ldd	r23, Y+60	; 0x3c
    37a8:	8d ad       	ldd	r24, Y+61	; 0x3d
    37aa:	9e ad       	ldd	r25, Y+62	; 0x3e
    37ac:	20 e0       	ldi	r18, 0x00	; 0
    37ae:	30 e0       	ldi	r19, 0x00	; 0
    37b0:	4a e7       	ldi	r20, 0x7A	; 122
    37b2:	54 e4       	ldi	r21, 0x44	; 68
    37b4:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <__divsf3>
    37b8:	dc 01       	movw	r26, r24
    37ba:	cb 01       	movw	r24, r22
    37bc:	8a ab       	std	Y+50, r24	; 0x32
    37be:	9b ab       	std	Y+51, r25	; 0x33
    37c0:	ac ab       	std	Y+52, r26	; 0x34
    37c2:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37c4:	6a a9       	ldd	r22, Y+50	; 0x32
    37c6:	7b a9       	ldd	r23, Y+51	; 0x33
    37c8:	8c a9       	ldd	r24, Y+52	; 0x34
    37ca:	9d a9       	ldd	r25, Y+53	; 0x35
    37cc:	20 e0       	ldi	r18, 0x00	; 0
    37ce:	30 e0       	ldi	r19, 0x00	; 0
    37d0:	4a ef       	ldi	r20, 0xFA	; 250
    37d2:	54 e4       	ldi	r21, 0x44	; 68
    37d4:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    37d8:	dc 01       	movw	r26, r24
    37da:	cb 01       	movw	r24, r22
    37dc:	8e a7       	std	Y+46, r24	; 0x2e
    37de:	9f a7       	std	Y+47, r25	; 0x2f
    37e0:	a8 ab       	std	Y+48, r26	; 0x30
    37e2:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    37e4:	6e a5       	ldd	r22, Y+46	; 0x2e
    37e6:	7f a5       	ldd	r23, Y+47	; 0x2f
    37e8:	88 a9       	ldd	r24, Y+48	; 0x30
    37ea:	99 a9       	ldd	r25, Y+49	; 0x31
    37ec:	20 e0       	ldi	r18, 0x00	; 0
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	40 e8       	ldi	r20, 0x80	; 128
    37f2:	5f e3       	ldi	r21, 0x3F	; 63
    37f4:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    37f8:	88 23       	and	r24, r24
    37fa:	2c f4       	brge	.+10     	; 0x3806 <LCD_VidInit+0x4b2>
		__ticks = 1;
    37fc:	81 e0       	ldi	r24, 0x01	; 1
    37fe:	90 e0       	ldi	r25, 0x00	; 0
    3800:	9d a7       	std	Y+45, r25	; 0x2d
    3802:	8c a7       	std	Y+44, r24	; 0x2c
    3804:	3f c0       	rjmp	.+126    	; 0x3884 <LCD_VidInit+0x530>
	else if (__tmp > 65535)
    3806:	6e a5       	ldd	r22, Y+46	; 0x2e
    3808:	7f a5       	ldd	r23, Y+47	; 0x2f
    380a:	88 a9       	ldd	r24, Y+48	; 0x30
    380c:	99 a9       	ldd	r25, Y+49	; 0x31
    380e:	20 e0       	ldi	r18, 0x00	; 0
    3810:	3f ef       	ldi	r19, 0xFF	; 255
    3812:	4f e7       	ldi	r20, 0x7F	; 127
    3814:	57 e4       	ldi	r21, 0x47	; 71
    3816:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    381a:	18 16       	cp	r1, r24
    381c:	4c f5       	brge	.+82     	; 0x3870 <LCD_VidInit+0x51c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    381e:	6a a9       	ldd	r22, Y+50	; 0x32
    3820:	7b a9       	ldd	r23, Y+51	; 0x33
    3822:	8c a9       	ldd	r24, Y+52	; 0x34
    3824:	9d a9       	ldd	r25, Y+53	; 0x35
    3826:	20 e0       	ldi	r18, 0x00	; 0
    3828:	30 e0       	ldi	r19, 0x00	; 0
    382a:	40 e2       	ldi	r20, 0x20	; 32
    382c:	51 e4       	ldi	r21, 0x41	; 65
    382e:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3832:	dc 01       	movw	r26, r24
    3834:	cb 01       	movw	r24, r22
    3836:	bc 01       	movw	r22, r24
    3838:	cd 01       	movw	r24, r26
    383a:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    383e:	dc 01       	movw	r26, r24
    3840:	cb 01       	movw	r24, r22
    3842:	9d a7       	std	Y+45, r25	; 0x2d
    3844:	8c a7       	std	Y+44, r24	; 0x2c
    3846:	0f c0       	rjmp	.+30     	; 0x3866 <LCD_VidInit+0x512>
    3848:	88 ec       	ldi	r24, 0xC8	; 200
    384a:	90 e0       	ldi	r25, 0x00	; 0
    384c:	9b a7       	std	Y+43, r25	; 0x2b
    384e:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3850:	8a a5       	ldd	r24, Y+42	; 0x2a
    3852:	9b a5       	ldd	r25, Y+43	; 0x2b
    3854:	01 97       	sbiw	r24, 0x01	; 1
    3856:	f1 f7       	brne	.-4      	; 0x3854 <LCD_VidInit+0x500>
    3858:	9b a7       	std	Y+43, r25	; 0x2b
    385a:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    385c:	8c a5       	ldd	r24, Y+44	; 0x2c
    385e:	9d a5       	ldd	r25, Y+45	; 0x2d
    3860:	01 97       	sbiw	r24, 0x01	; 1
    3862:	9d a7       	std	Y+45, r25	; 0x2d
    3864:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3866:	8c a5       	ldd	r24, Y+44	; 0x2c
    3868:	9d a5       	ldd	r25, Y+45	; 0x2d
    386a:	00 97       	sbiw	r24, 0x00	; 0
    386c:	69 f7       	brne	.-38     	; 0x3848 <LCD_VidInit+0x4f4>
    386e:	24 c0       	rjmp	.+72     	; 0x38b8 <LCD_VidInit+0x564>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3870:	6e a5       	ldd	r22, Y+46	; 0x2e
    3872:	7f a5       	ldd	r23, Y+47	; 0x2f
    3874:	88 a9       	ldd	r24, Y+48	; 0x30
    3876:	99 a9       	ldd	r25, Y+49	; 0x31
    3878:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    387c:	dc 01       	movw	r26, r24
    387e:	cb 01       	movw	r24, r22
    3880:	9d a7       	std	Y+45, r25	; 0x2d
    3882:	8c a7       	std	Y+44, r24	; 0x2c
    3884:	8c a5       	ldd	r24, Y+44	; 0x2c
    3886:	9d a5       	ldd	r25, Y+45	; 0x2d
    3888:	99 a7       	std	Y+41, r25	; 0x29
    388a:	88 a7       	std	Y+40, r24	; 0x28
    388c:	88 a5       	ldd	r24, Y+40	; 0x28
    388e:	99 a5       	ldd	r25, Y+41	; 0x29
    3890:	01 97       	sbiw	r24, 0x01	; 1
    3892:	f1 f7       	brne	.-4      	; 0x3890 <LCD_VidInit+0x53c>
    3894:	99 a7       	std	Y+41, r25	; 0x29
    3896:	88 a7       	std	Y+40, r24	; 0x28
    3898:	0f c0       	rjmp	.+30     	; 0x38b8 <LCD_VidInit+0x564>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    389a:	6f a9       	ldd	r22, Y+55	; 0x37
    389c:	78 ad       	ldd	r23, Y+56	; 0x38
    389e:	89 ad       	ldd	r24, Y+57	; 0x39
    38a0:	9a ad       	ldd	r25, Y+58	; 0x3a
    38a2:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    38a6:	dc 01       	movw	r26, r24
    38a8:	cb 01       	movw	r24, r22
    38aa:	8e ab       	std	Y+54, r24	; 0x36
    38ac:	8e a9       	ldd	r24, Y+54	; 0x36
    38ae:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    38b0:	8f a1       	ldd	r24, Y+39	; 0x27
    38b2:	8a 95       	dec	r24
    38b4:	f1 f7       	brne	.-4      	; 0x38b2 <LCD_VidInit+0x55e>
    38b6:	8f a3       	std	Y+39, r24	; 0x27
	// Delay for more than 39 us
	_delay_us(40);
	// Send Entry Mode Set Command
	LCD_VidSendCommend(ENTERY_MODE);
    38b8:	86 e0       	ldi	r24, 0x06	; 6
    38ba:	0e 94 9f 18 	call	0x313e	; 0x313e <LCD_VidSendCommend>
    38be:	80 e0       	ldi	r24, 0x00	; 0
    38c0:	90 e0       	ldi	r25, 0x00	; 0
    38c2:	a0 e2       	ldi	r26, 0x20	; 32
    38c4:	b2 e4       	ldi	r27, 0x42	; 66
    38c6:	8b a3       	std	Y+35, r24	; 0x23
    38c8:	9c a3       	std	Y+36, r25	; 0x24
    38ca:	ad a3       	std	Y+37, r26	; 0x25
    38cc:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    38ce:	6b a1       	ldd	r22, Y+35	; 0x23
    38d0:	7c a1       	ldd	r23, Y+36	; 0x24
    38d2:	8d a1       	ldd	r24, Y+37	; 0x25
    38d4:	9e a1       	ldd	r25, Y+38	; 0x26
    38d6:	2b ea       	ldi	r18, 0xAB	; 171
    38d8:	3a ea       	ldi	r19, 0xAA	; 170
    38da:	4a e2       	ldi	r20, 0x2A	; 42
    38dc:	50 e4       	ldi	r21, 0x40	; 64
    38de:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    38e2:	dc 01       	movw	r26, r24
    38e4:	cb 01       	movw	r24, r22
    38e6:	8f 8f       	std	Y+31, r24	; 0x1f
    38e8:	98 a3       	std	Y+32, r25	; 0x20
    38ea:	a9 a3       	std	Y+33, r26	; 0x21
    38ec:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    38ee:	6f 8d       	ldd	r22, Y+31	; 0x1f
    38f0:	78 a1       	ldd	r23, Y+32	; 0x20
    38f2:	89 a1       	ldd	r24, Y+33	; 0x21
    38f4:	9a a1       	ldd	r25, Y+34	; 0x22
    38f6:	20 e0       	ldi	r18, 0x00	; 0
    38f8:	30 e0       	ldi	r19, 0x00	; 0
    38fa:	40 e8       	ldi	r20, 0x80	; 128
    38fc:	5f e3       	ldi	r21, 0x3F	; 63
    38fe:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3902:	88 23       	and	r24, r24
    3904:	1c f4       	brge	.+6      	; 0x390c <LCD_VidInit+0x5b8>
		__ticks = 1;
    3906:	81 e0       	ldi	r24, 0x01	; 1
    3908:	8e 8f       	std	Y+30, r24	; 0x1e
    390a:	91 c0       	rjmp	.+290    	; 0x3a2e <LCD_VidInit+0x6da>
	else if (__tmp > 255)
    390c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    390e:	78 a1       	ldd	r23, Y+32	; 0x20
    3910:	89 a1       	ldd	r24, Y+33	; 0x21
    3912:	9a a1       	ldd	r25, Y+34	; 0x22
    3914:	20 e0       	ldi	r18, 0x00	; 0
    3916:	30 e0       	ldi	r19, 0x00	; 0
    3918:	4f e7       	ldi	r20, 0x7F	; 127
    391a:	53 e4       	ldi	r21, 0x43	; 67
    391c:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3920:	18 16       	cp	r1, r24
    3922:	0c f0       	brlt	.+2      	; 0x3926 <LCD_VidInit+0x5d2>
    3924:	7b c0       	rjmp	.+246    	; 0x3a1c <LCD_VidInit+0x6c8>
	{
		_delay_ms(__us / 1000.0);
    3926:	6b a1       	ldd	r22, Y+35	; 0x23
    3928:	7c a1       	ldd	r23, Y+36	; 0x24
    392a:	8d a1       	ldd	r24, Y+37	; 0x25
    392c:	9e a1       	ldd	r25, Y+38	; 0x26
    392e:	20 e0       	ldi	r18, 0x00	; 0
    3930:	30 e0       	ldi	r19, 0x00	; 0
    3932:	4a e7       	ldi	r20, 0x7A	; 122
    3934:	54 e4       	ldi	r21, 0x44	; 68
    3936:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <__divsf3>
    393a:	dc 01       	movw	r26, r24
    393c:	cb 01       	movw	r24, r22
    393e:	8a 8f       	std	Y+26, r24	; 0x1a
    3940:	9b 8f       	std	Y+27, r25	; 0x1b
    3942:	ac 8f       	std	Y+28, r26	; 0x1c
    3944:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3946:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3948:	7b 8d       	ldd	r23, Y+27	; 0x1b
    394a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    394c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    394e:	20 e0       	ldi	r18, 0x00	; 0
    3950:	30 e0       	ldi	r19, 0x00	; 0
    3952:	4a ef       	ldi	r20, 0xFA	; 250
    3954:	54 e4       	ldi	r21, 0x44	; 68
    3956:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    395a:	dc 01       	movw	r26, r24
    395c:	cb 01       	movw	r24, r22
    395e:	8e 8b       	std	Y+22, r24	; 0x16
    3960:	9f 8b       	std	Y+23, r25	; 0x17
    3962:	a8 8f       	std	Y+24, r26	; 0x18
    3964:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    3966:	6e 89       	ldd	r22, Y+22	; 0x16
    3968:	7f 89       	ldd	r23, Y+23	; 0x17
    396a:	88 8d       	ldd	r24, Y+24	; 0x18
    396c:	99 8d       	ldd	r25, Y+25	; 0x19
    396e:	20 e0       	ldi	r18, 0x00	; 0
    3970:	30 e0       	ldi	r19, 0x00	; 0
    3972:	40 e8       	ldi	r20, 0x80	; 128
    3974:	5f e3       	ldi	r21, 0x3F	; 63
    3976:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    397a:	88 23       	and	r24, r24
    397c:	2c f4       	brge	.+10     	; 0x3988 <LCD_VidInit+0x634>
		__ticks = 1;
    397e:	81 e0       	ldi	r24, 0x01	; 1
    3980:	90 e0       	ldi	r25, 0x00	; 0
    3982:	9d 8b       	std	Y+21, r25	; 0x15
    3984:	8c 8b       	std	Y+20, r24	; 0x14
    3986:	3f c0       	rjmp	.+126    	; 0x3a06 <LCD_VidInit+0x6b2>
	else if (__tmp > 65535)
    3988:	6e 89       	ldd	r22, Y+22	; 0x16
    398a:	7f 89       	ldd	r23, Y+23	; 0x17
    398c:	88 8d       	ldd	r24, Y+24	; 0x18
    398e:	99 8d       	ldd	r25, Y+25	; 0x19
    3990:	20 e0       	ldi	r18, 0x00	; 0
    3992:	3f ef       	ldi	r19, 0xFF	; 255
    3994:	4f e7       	ldi	r20, 0x7F	; 127
    3996:	57 e4       	ldi	r21, 0x47	; 71
    3998:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    399c:	18 16       	cp	r1, r24
    399e:	4c f5       	brge	.+82     	; 0x39f2 <LCD_VidInit+0x69e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39a0:	6a 8d       	ldd	r22, Y+26	; 0x1a
    39a2:	7b 8d       	ldd	r23, Y+27	; 0x1b
    39a4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    39a6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    39a8:	20 e0       	ldi	r18, 0x00	; 0
    39aa:	30 e0       	ldi	r19, 0x00	; 0
    39ac:	40 e2       	ldi	r20, 0x20	; 32
    39ae:	51 e4       	ldi	r21, 0x41	; 65
    39b0:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    39b4:	dc 01       	movw	r26, r24
    39b6:	cb 01       	movw	r24, r22
    39b8:	bc 01       	movw	r22, r24
    39ba:	cd 01       	movw	r24, r26
    39bc:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    39c0:	dc 01       	movw	r26, r24
    39c2:	cb 01       	movw	r24, r22
    39c4:	9d 8b       	std	Y+21, r25	; 0x15
    39c6:	8c 8b       	std	Y+20, r24	; 0x14
    39c8:	0f c0       	rjmp	.+30     	; 0x39e8 <LCD_VidInit+0x694>
    39ca:	88 ec       	ldi	r24, 0xC8	; 200
    39cc:	90 e0       	ldi	r25, 0x00	; 0
    39ce:	9b 8b       	std	Y+19, r25	; 0x13
    39d0:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    39d2:	8a 89       	ldd	r24, Y+18	; 0x12
    39d4:	9b 89       	ldd	r25, Y+19	; 0x13
    39d6:	01 97       	sbiw	r24, 0x01	; 1
    39d8:	f1 f7       	brne	.-4      	; 0x39d6 <LCD_VidInit+0x682>
    39da:	9b 8b       	std	Y+19, r25	; 0x13
    39dc:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39de:	8c 89       	ldd	r24, Y+20	; 0x14
    39e0:	9d 89       	ldd	r25, Y+21	; 0x15
    39e2:	01 97       	sbiw	r24, 0x01	; 1
    39e4:	9d 8b       	std	Y+21, r25	; 0x15
    39e6:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39e8:	8c 89       	ldd	r24, Y+20	; 0x14
    39ea:	9d 89       	ldd	r25, Y+21	; 0x15
    39ec:	00 97       	sbiw	r24, 0x00	; 0
    39ee:	69 f7       	brne	.-38     	; 0x39ca <LCD_VidInit+0x676>
    39f0:	24 c0       	rjmp	.+72     	; 0x3a3a <LCD_VidInit+0x6e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39f2:	6e 89       	ldd	r22, Y+22	; 0x16
    39f4:	7f 89       	ldd	r23, Y+23	; 0x17
    39f6:	88 8d       	ldd	r24, Y+24	; 0x18
    39f8:	99 8d       	ldd	r25, Y+25	; 0x19
    39fa:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    39fe:	dc 01       	movw	r26, r24
    3a00:	cb 01       	movw	r24, r22
    3a02:	9d 8b       	std	Y+21, r25	; 0x15
    3a04:	8c 8b       	std	Y+20, r24	; 0x14
    3a06:	8c 89       	ldd	r24, Y+20	; 0x14
    3a08:	9d 89       	ldd	r25, Y+21	; 0x15
    3a0a:	99 8b       	std	Y+17, r25	; 0x11
    3a0c:	88 8b       	std	Y+16, r24	; 0x10
    3a0e:	88 89       	ldd	r24, Y+16	; 0x10
    3a10:	99 89       	ldd	r25, Y+17	; 0x11
    3a12:	01 97       	sbiw	r24, 0x01	; 1
    3a14:	f1 f7       	brne	.-4      	; 0x3a12 <LCD_VidInit+0x6be>
    3a16:	99 8b       	std	Y+17, r25	; 0x11
    3a18:	88 8b       	std	Y+16, r24	; 0x10
    3a1a:	0f c0       	rjmp	.+30     	; 0x3a3a <LCD_VidInit+0x6e6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3a1c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3a1e:	78 a1       	ldd	r23, Y+32	; 0x20
    3a20:	89 a1       	ldd	r24, Y+33	; 0x21
    3a22:	9a a1       	ldd	r25, Y+34	; 0x22
    3a24:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3a28:	dc 01       	movw	r26, r24
    3a2a:	cb 01       	movw	r24, r22
    3a2c:	8e 8f       	std	Y+30, r24	; 0x1e
    3a2e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3a30:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3a32:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a34:	8a 95       	dec	r24
    3a36:	f1 f7       	brne	.-4      	; 0x3a34 <LCD_VidInit+0x6e0>
    3a38:	8f 87       	std	Y+15, r24	; 0x0f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
    3a3a:	81 e0       	ldi	r24, 0x01	; 1
    3a3c:	0e 94 9f 18 	call	0x313e	; 0x313e <LCD_VidSendCommend>
    3a40:	80 e0       	ldi	r24, 0x00	; 0
    3a42:	90 e0       	ldi	r25, 0x00	; 0
    3a44:	a0 e0       	ldi	r26, 0x00	; 0
    3a46:	b0 e4       	ldi	r27, 0x40	; 64
    3a48:	8b 87       	std	Y+11, r24	; 0x0b
    3a4a:	9c 87       	std	Y+12, r25	; 0x0c
    3a4c:	ad 87       	std	Y+13, r26	; 0x0d
    3a4e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a50:	6b 85       	ldd	r22, Y+11	; 0x0b
    3a52:	7c 85       	ldd	r23, Y+12	; 0x0c
    3a54:	8d 85       	ldd	r24, Y+13	; 0x0d
    3a56:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a58:	20 e0       	ldi	r18, 0x00	; 0
    3a5a:	30 e0       	ldi	r19, 0x00	; 0
    3a5c:	4a ef       	ldi	r20, 0xFA	; 250
    3a5e:	54 e4       	ldi	r21, 0x44	; 68
    3a60:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3a64:	dc 01       	movw	r26, r24
    3a66:	cb 01       	movw	r24, r22
    3a68:	8f 83       	std	Y+7, r24	; 0x07
    3a6a:	98 87       	std	Y+8, r25	; 0x08
    3a6c:	a9 87       	std	Y+9, r26	; 0x09
    3a6e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3a70:	6f 81       	ldd	r22, Y+7	; 0x07
    3a72:	78 85       	ldd	r23, Y+8	; 0x08
    3a74:	89 85       	ldd	r24, Y+9	; 0x09
    3a76:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a78:	20 e0       	ldi	r18, 0x00	; 0
    3a7a:	30 e0       	ldi	r19, 0x00	; 0
    3a7c:	40 e8       	ldi	r20, 0x80	; 128
    3a7e:	5f e3       	ldi	r21, 0x3F	; 63
    3a80:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3a84:	88 23       	and	r24, r24
    3a86:	2c f4       	brge	.+10     	; 0x3a92 <LCD_VidInit+0x73e>
		__ticks = 1;
    3a88:	81 e0       	ldi	r24, 0x01	; 1
    3a8a:	90 e0       	ldi	r25, 0x00	; 0
    3a8c:	9e 83       	std	Y+6, r25	; 0x06
    3a8e:	8d 83       	std	Y+5, r24	; 0x05
    3a90:	3f c0       	rjmp	.+126    	; 0x3b10 <LCD_VidInit+0x7bc>
	else if (__tmp > 65535)
    3a92:	6f 81       	ldd	r22, Y+7	; 0x07
    3a94:	78 85       	ldd	r23, Y+8	; 0x08
    3a96:	89 85       	ldd	r24, Y+9	; 0x09
    3a98:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a9a:	20 e0       	ldi	r18, 0x00	; 0
    3a9c:	3f ef       	ldi	r19, 0xFF	; 255
    3a9e:	4f e7       	ldi	r20, 0x7F	; 127
    3aa0:	57 e4       	ldi	r21, 0x47	; 71
    3aa2:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3aa6:	18 16       	cp	r1, r24
    3aa8:	4c f5       	brge	.+82     	; 0x3afc <LCD_VidInit+0x7a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3aaa:	6b 85       	ldd	r22, Y+11	; 0x0b
    3aac:	7c 85       	ldd	r23, Y+12	; 0x0c
    3aae:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ab0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ab2:	20 e0       	ldi	r18, 0x00	; 0
    3ab4:	30 e0       	ldi	r19, 0x00	; 0
    3ab6:	40 e2       	ldi	r20, 0x20	; 32
    3ab8:	51 e4       	ldi	r21, 0x41	; 65
    3aba:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3abe:	dc 01       	movw	r26, r24
    3ac0:	cb 01       	movw	r24, r22
    3ac2:	bc 01       	movw	r22, r24
    3ac4:	cd 01       	movw	r24, r26
    3ac6:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3aca:	dc 01       	movw	r26, r24
    3acc:	cb 01       	movw	r24, r22
    3ace:	9e 83       	std	Y+6, r25	; 0x06
    3ad0:	8d 83       	std	Y+5, r24	; 0x05
    3ad2:	0f c0       	rjmp	.+30     	; 0x3af2 <LCD_VidInit+0x79e>
    3ad4:	88 ec       	ldi	r24, 0xC8	; 200
    3ad6:	90 e0       	ldi	r25, 0x00	; 0
    3ad8:	9c 83       	std	Y+4, r25	; 0x04
    3ada:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3adc:	8b 81       	ldd	r24, Y+3	; 0x03
    3ade:	9c 81       	ldd	r25, Y+4	; 0x04
    3ae0:	01 97       	sbiw	r24, 0x01	; 1
    3ae2:	f1 f7       	brne	.-4      	; 0x3ae0 <LCD_VidInit+0x78c>
    3ae4:	9c 83       	std	Y+4, r25	; 0x04
    3ae6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ae8:	8d 81       	ldd	r24, Y+5	; 0x05
    3aea:	9e 81       	ldd	r25, Y+6	; 0x06
    3aec:	01 97       	sbiw	r24, 0x01	; 1
    3aee:	9e 83       	std	Y+6, r25	; 0x06
    3af0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3af2:	8d 81       	ldd	r24, Y+5	; 0x05
    3af4:	9e 81       	ldd	r25, Y+6	; 0x06
    3af6:	00 97       	sbiw	r24, 0x00	; 0
    3af8:	69 f7       	brne	.-38     	; 0x3ad4 <LCD_VidInit+0x780>
    3afa:	14 c0       	rjmp	.+40     	; 0x3b24 <LCD_VidInit+0x7d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3afc:	6f 81       	ldd	r22, Y+7	; 0x07
    3afe:	78 85       	ldd	r23, Y+8	; 0x08
    3b00:	89 85       	ldd	r24, Y+9	; 0x09
    3b02:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b04:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3b08:	dc 01       	movw	r26, r24
    3b0a:	cb 01       	movw	r24, r22
    3b0c:	9e 83       	std	Y+6, r25	; 0x06
    3b0e:	8d 83       	std	Y+5, r24	; 0x05
    3b10:	8d 81       	ldd	r24, Y+5	; 0x05
    3b12:	9e 81       	ldd	r25, Y+6	; 0x06
    3b14:	9a 83       	std	Y+2, r25	; 0x02
    3b16:	89 83       	std	Y+1, r24	; 0x01
    3b18:	89 81       	ldd	r24, Y+1	; 0x01
    3b1a:	9a 81       	ldd	r25, Y+2	; 0x02
    3b1c:	01 97       	sbiw	r24, 0x01	; 1
    3b1e:	f1 f7       	brne	.-4      	; 0x3b1c <LCD_VidInit+0x7c8>
    3b20:	9a 83       	std	Y+2, r25	; 0x02
    3b22:	89 83       	std	Y+1, r24	; 0x01
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
	// Delay for more than 1.53 ms
	_delay_ms(2);
#endif
}
    3b24:	cc 59       	subi	r28, 0x9C	; 156
    3b26:	df 4f       	sbci	r29, 0xFF	; 255
    3b28:	0f b6       	in	r0, 0x3f	; 63
    3b2a:	f8 94       	cli
    3b2c:	de bf       	out	0x3e, r29	; 62
    3b2e:	0f be       	out	0x3f, r0	; 63
    3b30:	cd bf       	out	0x3d, r28	; 61
    3b32:	cf 91       	pop	r28
    3b34:	df 91       	pop	r29
    3b36:	1f 91       	pop	r17
    3b38:	0f 91       	pop	r16
    3b3a:	08 95       	ret

00003b3c <LCD_VidSendChar>:

void LCD_VidSendChar(u8 Copy_U8Char){
    3b3c:	df 93       	push	r29
    3b3e:	cf 93       	push	r28
    3b40:	cd b7       	in	r28, 0x3d	; 61
    3b42:	de b7       	in	r29, 0x3e	; 62
    3b44:	6d 97       	sbiw	r28, 0x1d	; 29
    3b46:	0f b6       	in	r0, 0x3f	; 63
    3b48:	f8 94       	cli
    3b4a:	de bf       	out	0x3e, r29	; 62
    3b4c:	0f be       	out	0x3f, r0	; 63
    3b4e:	cd bf       	out	0x3d, r28	; 61
    3b50:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT
	/******* to define RS / RW ***********/
	DIO_VidSetPinValue(CONTROL_PORT,RS,HIGH);
    3b52:	83 e0       	ldi	r24, 0x03	; 3
    3b54:	60 e0       	ldi	r22, 0x00	; 0
    3b56:	41 e0       	ldi	r20, 0x01	; 1
    3b58:	0e 94 43 16 	call	0x2c86	; 0x2c86 <DIO_VidSetPinValue>
	/*to define value of character on port*/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Char);
    3b5c:	82 e0       	ldi	r24, 0x02	; 2
    3b5e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3b60:	0e 94 43 17 	call	0x2e86	; 0x2e86 <DIO_VidSetPortValue>
	/*********to make enable pulse*********/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    3b64:	83 e0       	ldi	r24, 0x03	; 3
    3b66:	61 e0       	ldi	r22, 0x01	; 1
    3b68:	41 e0       	ldi	r20, 0x01	; 1
    3b6a:	0e 94 43 16 	call	0x2c86	; 0x2c86 <DIO_VidSetPinValue>
    3b6e:	80 e0       	ldi	r24, 0x00	; 0
    3b70:	90 e0       	ldi	r25, 0x00	; 0
    3b72:	a0 e8       	ldi	r26, 0x80	; 128
    3b74:	bf e3       	ldi	r27, 0x3F	; 63
    3b76:	89 8f       	std	Y+25, r24	; 0x19
    3b78:	9a 8f       	std	Y+26, r25	; 0x1a
    3b7a:	ab 8f       	std	Y+27, r26	; 0x1b
    3b7c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b7e:	69 8d       	ldd	r22, Y+25	; 0x19
    3b80:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b82:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b84:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b86:	20 e0       	ldi	r18, 0x00	; 0
    3b88:	30 e0       	ldi	r19, 0x00	; 0
    3b8a:	4a ef       	ldi	r20, 0xFA	; 250
    3b8c:	54 e4       	ldi	r21, 0x44	; 68
    3b8e:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3b92:	dc 01       	movw	r26, r24
    3b94:	cb 01       	movw	r24, r22
    3b96:	8d 8b       	std	Y+21, r24	; 0x15
    3b98:	9e 8b       	std	Y+22, r25	; 0x16
    3b9a:	af 8b       	std	Y+23, r26	; 0x17
    3b9c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3b9e:	6d 89       	ldd	r22, Y+21	; 0x15
    3ba0:	7e 89       	ldd	r23, Y+22	; 0x16
    3ba2:	8f 89       	ldd	r24, Y+23	; 0x17
    3ba4:	98 8d       	ldd	r25, Y+24	; 0x18
    3ba6:	20 e0       	ldi	r18, 0x00	; 0
    3ba8:	30 e0       	ldi	r19, 0x00	; 0
    3baa:	40 e8       	ldi	r20, 0x80	; 128
    3bac:	5f e3       	ldi	r21, 0x3F	; 63
    3bae:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3bb2:	88 23       	and	r24, r24
    3bb4:	2c f4       	brge	.+10     	; 0x3bc0 <LCD_VidSendChar+0x84>
		__ticks = 1;
    3bb6:	81 e0       	ldi	r24, 0x01	; 1
    3bb8:	90 e0       	ldi	r25, 0x00	; 0
    3bba:	9c 8b       	std	Y+20, r25	; 0x14
    3bbc:	8b 8b       	std	Y+19, r24	; 0x13
    3bbe:	3f c0       	rjmp	.+126    	; 0x3c3e <LCD_VidSendChar+0x102>
	else if (__tmp > 65535)
    3bc0:	6d 89       	ldd	r22, Y+21	; 0x15
    3bc2:	7e 89       	ldd	r23, Y+22	; 0x16
    3bc4:	8f 89       	ldd	r24, Y+23	; 0x17
    3bc6:	98 8d       	ldd	r25, Y+24	; 0x18
    3bc8:	20 e0       	ldi	r18, 0x00	; 0
    3bca:	3f ef       	ldi	r19, 0xFF	; 255
    3bcc:	4f e7       	ldi	r20, 0x7F	; 127
    3bce:	57 e4       	ldi	r21, 0x47	; 71
    3bd0:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3bd4:	18 16       	cp	r1, r24
    3bd6:	4c f5       	brge	.+82     	; 0x3c2a <LCD_VidSendChar+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bd8:	69 8d       	ldd	r22, Y+25	; 0x19
    3bda:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3bdc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3bde:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3be0:	20 e0       	ldi	r18, 0x00	; 0
    3be2:	30 e0       	ldi	r19, 0x00	; 0
    3be4:	40 e2       	ldi	r20, 0x20	; 32
    3be6:	51 e4       	ldi	r21, 0x41	; 65
    3be8:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3bec:	dc 01       	movw	r26, r24
    3bee:	cb 01       	movw	r24, r22
    3bf0:	bc 01       	movw	r22, r24
    3bf2:	cd 01       	movw	r24, r26
    3bf4:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3bf8:	dc 01       	movw	r26, r24
    3bfa:	cb 01       	movw	r24, r22
    3bfc:	9c 8b       	std	Y+20, r25	; 0x14
    3bfe:	8b 8b       	std	Y+19, r24	; 0x13
    3c00:	0f c0       	rjmp	.+30     	; 0x3c20 <LCD_VidSendChar+0xe4>
    3c02:	88 ec       	ldi	r24, 0xC8	; 200
    3c04:	90 e0       	ldi	r25, 0x00	; 0
    3c06:	9a 8b       	std	Y+18, r25	; 0x12
    3c08:	89 8b       	std	Y+17, r24	; 0x11
    3c0a:	89 89       	ldd	r24, Y+17	; 0x11
    3c0c:	9a 89       	ldd	r25, Y+18	; 0x12
    3c0e:	01 97       	sbiw	r24, 0x01	; 1
    3c10:	f1 f7       	brne	.-4      	; 0x3c0e <LCD_VidSendChar+0xd2>
    3c12:	9a 8b       	std	Y+18, r25	; 0x12
    3c14:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c16:	8b 89       	ldd	r24, Y+19	; 0x13
    3c18:	9c 89       	ldd	r25, Y+20	; 0x14
    3c1a:	01 97       	sbiw	r24, 0x01	; 1
    3c1c:	9c 8b       	std	Y+20, r25	; 0x14
    3c1e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c20:	8b 89       	ldd	r24, Y+19	; 0x13
    3c22:	9c 89       	ldd	r25, Y+20	; 0x14
    3c24:	00 97       	sbiw	r24, 0x00	; 0
    3c26:	69 f7       	brne	.-38     	; 0x3c02 <LCD_VidSendChar+0xc6>
    3c28:	14 c0       	rjmp	.+40     	; 0x3c52 <LCD_VidSendChar+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c2a:	6d 89       	ldd	r22, Y+21	; 0x15
    3c2c:	7e 89       	ldd	r23, Y+22	; 0x16
    3c2e:	8f 89       	ldd	r24, Y+23	; 0x17
    3c30:	98 8d       	ldd	r25, Y+24	; 0x18
    3c32:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3c36:	dc 01       	movw	r26, r24
    3c38:	cb 01       	movw	r24, r22
    3c3a:	9c 8b       	std	Y+20, r25	; 0x14
    3c3c:	8b 8b       	std	Y+19, r24	; 0x13
    3c3e:	8b 89       	ldd	r24, Y+19	; 0x13
    3c40:	9c 89       	ldd	r25, Y+20	; 0x14
    3c42:	98 8b       	std	Y+16, r25	; 0x10
    3c44:	8f 87       	std	Y+15, r24	; 0x0f
    3c46:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c48:	98 89       	ldd	r25, Y+16	; 0x10
    3c4a:	01 97       	sbiw	r24, 0x01	; 1
    3c4c:	f1 f7       	brne	.-4      	; 0x3c4a <LCD_VidSendChar+0x10e>
    3c4e:	98 8b       	std	Y+16, r25	; 0x10
    3c50:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    3c52:	83 e0       	ldi	r24, 0x03	; 3
    3c54:	61 e0       	ldi	r22, 0x01	; 1
    3c56:	40 e0       	ldi	r20, 0x00	; 0
    3c58:	0e 94 43 16 	call	0x2c86	; 0x2c86 <DIO_VidSetPinValue>
    3c5c:	80 e0       	ldi	r24, 0x00	; 0
    3c5e:	90 e0       	ldi	r25, 0x00	; 0
    3c60:	a0 e0       	ldi	r26, 0x00	; 0
    3c62:	b0 e4       	ldi	r27, 0x40	; 64
    3c64:	8b 87       	std	Y+11, r24	; 0x0b
    3c66:	9c 87       	std	Y+12, r25	; 0x0c
    3c68:	ad 87       	std	Y+13, r26	; 0x0d
    3c6a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c6c:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c6e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c70:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c72:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c74:	20 e0       	ldi	r18, 0x00	; 0
    3c76:	30 e0       	ldi	r19, 0x00	; 0
    3c78:	4a ef       	ldi	r20, 0xFA	; 250
    3c7a:	54 e4       	ldi	r21, 0x44	; 68
    3c7c:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3c80:	dc 01       	movw	r26, r24
    3c82:	cb 01       	movw	r24, r22
    3c84:	8f 83       	std	Y+7, r24	; 0x07
    3c86:	98 87       	std	Y+8, r25	; 0x08
    3c88:	a9 87       	std	Y+9, r26	; 0x09
    3c8a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3c8c:	6f 81       	ldd	r22, Y+7	; 0x07
    3c8e:	78 85       	ldd	r23, Y+8	; 0x08
    3c90:	89 85       	ldd	r24, Y+9	; 0x09
    3c92:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c94:	20 e0       	ldi	r18, 0x00	; 0
    3c96:	30 e0       	ldi	r19, 0x00	; 0
    3c98:	40 e8       	ldi	r20, 0x80	; 128
    3c9a:	5f e3       	ldi	r21, 0x3F	; 63
    3c9c:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3ca0:	88 23       	and	r24, r24
    3ca2:	2c f4       	brge	.+10     	; 0x3cae <LCD_VidSendChar+0x172>
		__ticks = 1;
    3ca4:	81 e0       	ldi	r24, 0x01	; 1
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	9e 83       	std	Y+6, r25	; 0x06
    3caa:	8d 83       	std	Y+5, r24	; 0x05
    3cac:	3f c0       	rjmp	.+126    	; 0x3d2c <LCD_VidSendChar+0x1f0>
	else if (__tmp > 65535)
    3cae:	6f 81       	ldd	r22, Y+7	; 0x07
    3cb0:	78 85       	ldd	r23, Y+8	; 0x08
    3cb2:	89 85       	ldd	r24, Y+9	; 0x09
    3cb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cb6:	20 e0       	ldi	r18, 0x00	; 0
    3cb8:	3f ef       	ldi	r19, 0xFF	; 255
    3cba:	4f e7       	ldi	r20, 0x7F	; 127
    3cbc:	57 e4       	ldi	r21, 0x47	; 71
    3cbe:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3cc2:	18 16       	cp	r1, r24
    3cc4:	4c f5       	brge	.+82     	; 0x3d18 <LCD_VidSendChar+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cc6:	6b 85       	ldd	r22, Y+11	; 0x0b
    3cc8:	7c 85       	ldd	r23, Y+12	; 0x0c
    3cca:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ccc:	9e 85       	ldd	r25, Y+14	; 0x0e
    3cce:	20 e0       	ldi	r18, 0x00	; 0
    3cd0:	30 e0       	ldi	r19, 0x00	; 0
    3cd2:	40 e2       	ldi	r20, 0x20	; 32
    3cd4:	51 e4       	ldi	r21, 0x41	; 65
    3cd6:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3cda:	dc 01       	movw	r26, r24
    3cdc:	cb 01       	movw	r24, r22
    3cde:	bc 01       	movw	r22, r24
    3ce0:	cd 01       	movw	r24, r26
    3ce2:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3ce6:	dc 01       	movw	r26, r24
    3ce8:	cb 01       	movw	r24, r22
    3cea:	9e 83       	std	Y+6, r25	; 0x06
    3cec:	8d 83       	std	Y+5, r24	; 0x05
    3cee:	0f c0       	rjmp	.+30     	; 0x3d0e <LCD_VidSendChar+0x1d2>
    3cf0:	88 ec       	ldi	r24, 0xC8	; 200
    3cf2:	90 e0       	ldi	r25, 0x00	; 0
    3cf4:	9c 83       	std	Y+4, r25	; 0x04
    3cf6:	8b 83       	std	Y+3, r24	; 0x03
    3cf8:	8b 81       	ldd	r24, Y+3	; 0x03
    3cfa:	9c 81       	ldd	r25, Y+4	; 0x04
    3cfc:	01 97       	sbiw	r24, 0x01	; 1
    3cfe:	f1 f7       	brne	.-4      	; 0x3cfc <LCD_VidSendChar+0x1c0>
    3d00:	9c 83       	std	Y+4, r25	; 0x04
    3d02:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d04:	8d 81       	ldd	r24, Y+5	; 0x05
    3d06:	9e 81       	ldd	r25, Y+6	; 0x06
    3d08:	01 97       	sbiw	r24, 0x01	; 1
    3d0a:	9e 83       	std	Y+6, r25	; 0x06
    3d0c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d0e:	8d 81       	ldd	r24, Y+5	; 0x05
    3d10:	9e 81       	ldd	r25, Y+6	; 0x06
    3d12:	00 97       	sbiw	r24, 0x00	; 0
    3d14:	69 f7       	brne	.-38     	; 0x3cf0 <LCD_VidSendChar+0x1b4>
    3d16:	14 c0       	rjmp	.+40     	; 0x3d40 <LCD_VidSendChar+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d18:	6f 81       	ldd	r22, Y+7	; 0x07
    3d1a:	78 85       	ldd	r23, Y+8	; 0x08
    3d1c:	89 85       	ldd	r24, Y+9	; 0x09
    3d1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d20:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3d24:	dc 01       	movw	r26, r24
    3d26:	cb 01       	movw	r24, r22
    3d28:	9e 83       	std	Y+6, r25	; 0x06
    3d2a:	8d 83       	std	Y+5, r24	; 0x05
    3d2c:	8d 81       	ldd	r24, Y+5	; 0x05
    3d2e:	9e 81       	ldd	r25, Y+6	; 0x06
    3d30:	9a 83       	std	Y+2, r25	; 0x02
    3d32:	89 83       	std	Y+1, r24	; 0x01
    3d34:	89 81       	ldd	r24, Y+1	; 0x01
    3d36:	9a 81       	ldd	r25, Y+2	; 0x02
    3d38:	01 97       	sbiw	r24, 0x01	; 1
    3d3a:	f1 f7       	brne	.-4      	; 0x3d38 <LCD_VidSendChar+0x1fc>
    3d3c:	9a 83       	std	Y+2, r25	; 0x02
    3d3e:	89 83       	std	Y+1, r24	; 0x01
		DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
		_delay_ms(2);

#endif

}
    3d40:	6d 96       	adiw	r28, 0x1d	; 29
    3d42:	0f b6       	in	r0, 0x3f	; 63
    3d44:	f8 94       	cli
    3d46:	de bf       	out	0x3e, r29	; 62
    3d48:	0f be       	out	0x3f, r0	; 63
    3d4a:	cd bf       	out	0x3d, r28	; 61
    3d4c:	cf 91       	pop	r28
    3d4e:	df 91       	pop	r29
    3d50:	08 95       	ret

00003d52 <LCD_VidSendString>:

void LCD_VidSendString(u8 Copy_U8String[] ){
    3d52:	df 93       	push	r29
    3d54:	cf 93       	push	r28
    3d56:	cd b7       	in	r28, 0x3d	; 61
    3d58:	de b7       	in	r29, 0x3e	; 62
    3d5a:	6b 97       	sbiw	r28, 0x1b	; 27
    3d5c:	0f b6       	in	r0, 0x3f	; 63
    3d5e:	f8 94       	cli
    3d60:	de bf       	out	0x3e, r29	; 62
    3d62:	0f be       	out	0x3f, r0	; 63
    3d64:	cd bf       	out	0x3d, r28	; 61
    3d66:	9b 8f       	std	Y+27, r25	; 0x1b
    3d68:	8a 8f       	std	Y+26, r24	; 0x1a
	u8 i=0;
    3d6a:	19 8e       	std	Y+25, r1	; 0x19
    3d6c:	d2 c0       	rjmp	.+420    	; 0x3f12 <LCD_VidSendString+0x1c0>
	while( Copy_U8String[i] != '\0' ){
		if (15 == i){
    3d6e:	89 8d       	ldd	r24, Y+25	; 0x19
    3d70:	8f 30       	cpi	r24, 0x0F	; 15
    3d72:	19 f4       	brne	.+6      	; 0x3d7a <LCD_VidSendString+0x28>
			LCD_VidSendCommend(LINE_2_START);
    3d74:	80 ec       	ldi	r24, 0xC0	; 192
    3d76:	0e 94 9f 18 	call	0x313e	; 0x313e <LCD_VidSendCommend>
		}
		LCD_VidSendChar(Copy_U8String[i]);
    3d7a:	89 8d       	ldd	r24, Y+25	; 0x19
    3d7c:	28 2f       	mov	r18, r24
    3d7e:	30 e0       	ldi	r19, 0x00	; 0
    3d80:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3d82:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3d84:	fc 01       	movw	r30, r24
    3d86:	e2 0f       	add	r30, r18
    3d88:	f3 1f       	adc	r31, r19
    3d8a:	80 81       	ld	r24, Z
    3d8c:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    3d90:	80 e0       	ldi	r24, 0x00	; 0
    3d92:	90 e0       	ldi	r25, 0x00	; 0
    3d94:	a0 e8       	ldi	r26, 0x80	; 128
    3d96:	bf e3       	ldi	r27, 0x3F	; 63
    3d98:	8d 8b       	std	Y+21, r24	; 0x15
    3d9a:	9e 8b       	std	Y+22, r25	; 0x16
    3d9c:	af 8b       	std	Y+23, r26	; 0x17
    3d9e:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3da0:	6d 89       	ldd	r22, Y+21	; 0x15
    3da2:	7e 89       	ldd	r23, Y+22	; 0x16
    3da4:	8f 89       	ldd	r24, Y+23	; 0x17
    3da6:	98 8d       	ldd	r25, Y+24	; 0x18
    3da8:	2b ea       	ldi	r18, 0xAB	; 171
    3daa:	3a ea       	ldi	r19, 0xAA	; 170
    3dac:	4a e2       	ldi	r20, 0x2A	; 42
    3dae:	50 e4       	ldi	r21, 0x40	; 64
    3db0:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3db4:	dc 01       	movw	r26, r24
    3db6:	cb 01       	movw	r24, r22
    3db8:	89 8b       	std	Y+17, r24	; 0x11
    3dba:	9a 8b       	std	Y+18, r25	; 0x12
    3dbc:	ab 8b       	std	Y+19, r26	; 0x13
    3dbe:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    3dc0:	69 89       	ldd	r22, Y+17	; 0x11
    3dc2:	7a 89       	ldd	r23, Y+18	; 0x12
    3dc4:	8b 89       	ldd	r24, Y+19	; 0x13
    3dc6:	9c 89       	ldd	r25, Y+20	; 0x14
    3dc8:	20 e0       	ldi	r18, 0x00	; 0
    3dca:	30 e0       	ldi	r19, 0x00	; 0
    3dcc:	40 e8       	ldi	r20, 0x80	; 128
    3dce:	5f e3       	ldi	r21, 0x3F	; 63
    3dd0:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3dd4:	88 23       	and	r24, r24
    3dd6:	1c f4       	brge	.+6      	; 0x3dde <LCD_VidSendString+0x8c>
		__ticks = 1;
    3dd8:	81 e0       	ldi	r24, 0x01	; 1
    3dda:	88 8b       	std	Y+16, r24	; 0x10
    3ddc:	91 c0       	rjmp	.+290    	; 0x3f00 <LCD_VidSendString+0x1ae>
	else if (__tmp > 255)
    3dde:	69 89       	ldd	r22, Y+17	; 0x11
    3de0:	7a 89       	ldd	r23, Y+18	; 0x12
    3de2:	8b 89       	ldd	r24, Y+19	; 0x13
    3de4:	9c 89       	ldd	r25, Y+20	; 0x14
    3de6:	20 e0       	ldi	r18, 0x00	; 0
    3de8:	30 e0       	ldi	r19, 0x00	; 0
    3dea:	4f e7       	ldi	r20, 0x7F	; 127
    3dec:	53 e4       	ldi	r21, 0x43	; 67
    3dee:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3df2:	18 16       	cp	r1, r24
    3df4:	0c f0       	brlt	.+2      	; 0x3df8 <LCD_VidSendString+0xa6>
    3df6:	7b c0       	rjmp	.+246    	; 0x3eee <LCD_VidSendString+0x19c>
	{
		_delay_ms(__us / 1000.0);
    3df8:	6d 89       	ldd	r22, Y+21	; 0x15
    3dfa:	7e 89       	ldd	r23, Y+22	; 0x16
    3dfc:	8f 89       	ldd	r24, Y+23	; 0x17
    3dfe:	98 8d       	ldd	r25, Y+24	; 0x18
    3e00:	20 e0       	ldi	r18, 0x00	; 0
    3e02:	30 e0       	ldi	r19, 0x00	; 0
    3e04:	4a e7       	ldi	r20, 0x7A	; 122
    3e06:	54 e4       	ldi	r21, 0x44	; 68
    3e08:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <__divsf3>
    3e0c:	dc 01       	movw	r26, r24
    3e0e:	cb 01       	movw	r24, r22
    3e10:	8c 87       	std	Y+12, r24	; 0x0c
    3e12:	9d 87       	std	Y+13, r25	; 0x0d
    3e14:	ae 87       	std	Y+14, r26	; 0x0e
    3e16:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e18:	6c 85       	ldd	r22, Y+12	; 0x0c
    3e1a:	7d 85       	ldd	r23, Y+13	; 0x0d
    3e1c:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e1e:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e20:	20 e0       	ldi	r18, 0x00	; 0
    3e22:	30 e0       	ldi	r19, 0x00	; 0
    3e24:	4a ef       	ldi	r20, 0xFA	; 250
    3e26:	54 e4       	ldi	r21, 0x44	; 68
    3e28:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3e2c:	dc 01       	movw	r26, r24
    3e2e:	cb 01       	movw	r24, r22
    3e30:	88 87       	std	Y+8, r24	; 0x08
    3e32:	99 87       	std	Y+9, r25	; 0x09
    3e34:	aa 87       	std	Y+10, r26	; 0x0a
    3e36:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    3e38:	68 85       	ldd	r22, Y+8	; 0x08
    3e3a:	79 85       	ldd	r23, Y+9	; 0x09
    3e3c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e3e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3e40:	20 e0       	ldi	r18, 0x00	; 0
    3e42:	30 e0       	ldi	r19, 0x00	; 0
    3e44:	40 e8       	ldi	r20, 0x80	; 128
    3e46:	5f e3       	ldi	r21, 0x3F	; 63
    3e48:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    3e4c:	88 23       	and	r24, r24
    3e4e:	2c f4       	brge	.+10     	; 0x3e5a <LCD_VidSendString+0x108>
		__ticks = 1;
    3e50:	81 e0       	ldi	r24, 0x01	; 1
    3e52:	90 e0       	ldi	r25, 0x00	; 0
    3e54:	9f 83       	std	Y+7, r25	; 0x07
    3e56:	8e 83       	std	Y+6, r24	; 0x06
    3e58:	3f c0       	rjmp	.+126    	; 0x3ed8 <LCD_VidSendString+0x186>
	else if (__tmp > 65535)
    3e5a:	68 85       	ldd	r22, Y+8	; 0x08
    3e5c:	79 85       	ldd	r23, Y+9	; 0x09
    3e5e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e60:	9b 85       	ldd	r25, Y+11	; 0x0b
    3e62:	20 e0       	ldi	r18, 0x00	; 0
    3e64:	3f ef       	ldi	r19, 0xFF	; 255
    3e66:	4f e7       	ldi	r20, 0x7F	; 127
    3e68:	57 e4       	ldi	r21, 0x47	; 71
    3e6a:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    3e6e:	18 16       	cp	r1, r24
    3e70:	4c f5       	brge	.+82     	; 0x3ec4 <LCD_VidSendString+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e72:	6c 85       	ldd	r22, Y+12	; 0x0c
    3e74:	7d 85       	ldd	r23, Y+13	; 0x0d
    3e76:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e78:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e7a:	20 e0       	ldi	r18, 0x00	; 0
    3e7c:	30 e0       	ldi	r19, 0x00	; 0
    3e7e:	40 e2       	ldi	r20, 0x20	; 32
    3e80:	51 e4       	ldi	r21, 0x41	; 65
    3e82:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    3e86:	dc 01       	movw	r26, r24
    3e88:	cb 01       	movw	r24, r22
    3e8a:	bc 01       	movw	r22, r24
    3e8c:	cd 01       	movw	r24, r26
    3e8e:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3e92:	dc 01       	movw	r26, r24
    3e94:	cb 01       	movw	r24, r22
    3e96:	9f 83       	std	Y+7, r25	; 0x07
    3e98:	8e 83       	std	Y+6, r24	; 0x06
    3e9a:	0f c0       	rjmp	.+30     	; 0x3eba <LCD_VidSendString+0x168>
    3e9c:	88 ec       	ldi	r24, 0xC8	; 200
    3e9e:	90 e0       	ldi	r25, 0x00	; 0
    3ea0:	9d 83       	std	Y+5, r25	; 0x05
    3ea2:	8c 83       	std	Y+4, r24	; 0x04
    3ea4:	8c 81       	ldd	r24, Y+4	; 0x04
    3ea6:	9d 81       	ldd	r25, Y+5	; 0x05
    3ea8:	01 97       	sbiw	r24, 0x01	; 1
    3eaa:	f1 f7       	brne	.-4      	; 0x3ea8 <LCD_VidSendString+0x156>
    3eac:	9d 83       	std	Y+5, r25	; 0x05
    3eae:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3eb0:	8e 81       	ldd	r24, Y+6	; 0x06
    3eb2:	9f 81       	ldd	r25, Y+7	; 0x07
    3eb4:	01 97       	sbiw	r24, 0x01	; 1
    3eb6:	9f 83       	std	Y+7, r25	; 0x07
    3eb8:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3eba:	8e 81       	ldd	r24, Y+6	; 0x06
    3ebc:	9f 81       	ldd	r25, Y+7	; 0x07
    3ebe:	00 97       	sbiw	r24, 0x00	; 0
    3ec0:	69 f7       	brne	.-38     	; 0x3e9c <LCD_VidSendString+0x14a>
    3ec2:	24 c0       	rjmp	.+72     	; 0x3f0c <LCD_VidSendString+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ec4:	68 85       	ldd	r22, Y+8	; 0x08
    3ec6:	79 85       	ldd	r23, Y+9	; 0x09
    3ec8:	8a 85       	ldd	r24, Y+10	; 0x0a
    3eca:	9b 85       	ldd	r25, Y+11	; 0x0b
    3ecc:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3ed0:	dc 01       	movw	r26, r24
    3ed2:	cb 01       	movw	r24, r22
    3ed4:	9f 83       	std	Y+7, r25	; 0x07
    3ed6:	8e 83       	std	Y+6, r24	; 0x06
    3ed8:	8e 81       	ldd	r24, Y+6	; 0x06
    3eda:	9f 81       	ldd	r25, Y+7	; 0x07
    3edc:	9b 83       	std	Y+3, r25	; 0x03
    3ede:	8a 83       	std	Y+2, r24	; 0x02
    3ee0:	8a 81       	ldd	r24, Y+2	; 0x02
    3ee2:	9b 81       	ldd	r25, Y+3	; 0x03
    3ee4:	01 97       	sbiw	r24, 0x01	; 1
    3ee6:	f1 f7       	brne	.-4      	; 0x3ee4 <LCD_VidSendString+0x192>
    3ee8:	9b 83       	std	Y+3, r25	; 0x03
    3eea:	8a 83       	std	Y+2, r24	; 0x02
    3eec:	0f c0       	rjmp	.+30     	; 0x3f0c <LCD_VidSendString+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3eee:	69 89       	ldd	r22, Y+17	; 0x11
    3ef0:	7a 89       	ldd	r23, Y+18	; 0x12
    3ef2:	8b 89       	ldd	r24, Y+19	; 0x13
    3ef4:	9c 89       	ldd	r25, Y+20	; 0x14
    3ef6:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    3efa:	dc 01       	movw	r26, r24
    3efc:	cb 01       	movw	r24, r22
    3efe:	88 8b       	std	Y+16, r24	; 0x10
    3f00:	88 89       	ldd	r24, Y+16	; 0x10
    3f02:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3f04:	89 81       	ldd	r24, Y+1	; 0x01
    3f06:	8a 95       	dec	r24
    3f08:	f1 f7       	brne	.-4      	; 0x3f06 <LCD_VidSendString+0x1b4>
    3f0a:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(1);
		i++;
    3f0c:	89 8d       	ldd	r24, Y+25	; 0x19
    3f0e:	8f 5f       	subi	r24, 0xFF	; 255
    3f10:	89 8f       	std	Y+25, r24	; 0x19

}

void LCD_VidSendString(u8 Copy_U8String[] ){
	u8 i=0;
	while( Copy_U8String[i] != '\0' ){
    3f12:	89 8d       	ldd	r24, Y+25	; 0x19
    3f14:	28 2f       	mov	r18, r24
    3f16:	30 e0       	ldi	r19, 0x00	; 0
    3f18:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3f1a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3f1c:	fc 01       	movw	r30, r24
    3f1e:	e2 0f       	add	r30, r18
    3f20:	f3 1f       	adc	r31, r19
    3f22:	80 81       	ld	r24, Z
    3f24:	88 23       	and	r24, r24
    3f26:	09 f0       	breq	.+2      	; 0x3f2a <LCD_VidSendString+0x1d8>
    3f28:	22 cf       	rjmp	.-444    	; 0x3d6e <LCD_VidSendString+0x1c>
		}
		LCD_VidSendChar(Copy_U8String[i]);
		_delay_us(1);
		i++;
	}//end while
}//end FUNC LCD_VidSendString
    3f2a:	6b 96       	adiw	r28, 0x1b	; 27
    3f2c:	0f b6       	in	r0, 0x3f	; 63
    3f2e:	f8 94       	cli
    3f30:	de bf       	out	0x3e, r29	; 62
    3f32:	0f be       	out	0x3f, r0	; 63
    3f34:	cd bf       	out	0x3d, r28	; 61
    3f36:	cf 91       	pop	r28
    3f38:	df 91       	pop	r29
    3f3a:	08 95       	ret

00003f3c <LCD_U32Pow>:

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
    3f3c:	df 93       	push	r29
    3f3e:	cf 93       	push	r28
    3f40:	00 d0       	rcall	.+0      	; 0x3f42 <LCD_U32Pow+0x6>
    3f42:	00 d0       	rcall	.+0      	; 0x3f44 <LCD_U32Pow+0x8>
    3f44:	cd b7       	in	r28, 0x3d	; 61
    3f46:	de b7       	in	r29, 0x3e	; 62
    3f48:	8b 83       	std	Y+3, r24	; 0x03
    3f4a:	6c 83       	std	Y+4, r22	; 0x04
  u32 local_res = 1 ;
    3f4c:	81 e0       	ldi	r24, 0x01	; 1
    3f4e:	90 e0       	ldi	r25, 0x00	; 0
    3f50:	9a 83       	std	Y+2, r25	; 0x02
    3f52:	89 83       	std	Y+1, r24	; 0x01
    3f54:	12 c0       	rjmp	.+36     	; 0x3f7a <LCD_U32Pow+0x3e>
  while (Copy_U8Bow >0 ){
	  local_res *= Copy_U8Base ;
    3f56:	8b 81       	ldd	r24, Y+3	; 0x03
    3f58:	28 2f       	mov	r18, r24
    3f5a:	30 e0       	ldi	r19, 0x00	; 0
    3f5c:	89 81       	ldd	r24, Y+1	; 0x01
    3f5e:	9a 81       	ldd	r25, Y+2	; 0x02
    3f60:	ac 01       	movw	r20, r24
    3f62:	42 9f       	mul	r20, r18
    3f64:	c0 01       	movw	r24, r0
    3f66:	43 9f       	mul	r20, r19
    3f68:	90 0d       	add	r25, r0
    3f6a:	52 9f       	mul	r21, r18
    3f6c:	90 0d       	add	r25, r0
    3f6e:	11 24       	eor	r1, r1
    3f70:	9a 83       	std	Y+2, r25	; 0x02
    3f72:	89 83       	std	Y+1, r24	; 0x01
	  Copy_U8Bow--;
    3f74:	8c 81       	ldd	r24, Y+4	; 0x04
    3f76:	81 50       	subi	r24, 0x01	; 1
    3f78:	8c 83       	std	Y+4, r24	; 0x04
	}//end while
}//end FUNC LCD_VidSendString

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
  u32 local_res = 1 ;
  while (Copy_U8Bow >0 ){
    3f7a:	8c 81       	ldd	r24, Y+4	; 0x04
    3f7c:	88 23       	and	r24, r24
    3f7e:	59 f7       	brne	.-42     	; 0x3f56 <LCD_U32Pow+0x1a>
	  local_res *= Copy_U8Base ;
	  Copy_U8Bow--;
  }
  return  local_res ;
    3f80:	89 81       	ldd	r24, Y+1	; 0x01
    3f82:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3f84:	0f 90       	pop	r0
    3f86:	0f 90       	pop	r0
    3f88:	0f 90       	pop	r0
    3f8a:	0f 90       	pop	r0
    3f8c:	cf 91       	pop	r28
    3f8e:	df 91       	pop	r29
    3f90:	08 95       	ret

00003f92 <LCD_VidPrintVar>:

void LCD_VidPrintVar(u64 Copy_U8Var){
    3f92:	2f 92       	push	r2
    3f94:	3f 92       	push	r3
    3f96:	4f 92       	push	r4
    3f98:	5f 92       	push	r5
    3f9a:	6f 92       	push	r6
    3f9c:	7f 92       	push	r7
    3f9e:	8f 92       	push	r8
    3fa0:	9f 92       	push	r9
    3fa2:	af 92       	push	r10
    3fa4:	bf 92       	push	r11
    3fa6:	cf 92       	push	r12
    3fa8:	df 92       	push	r13
    3faa:	ef 92       	push	r14
    3fac:	ff 92       	push	r15
    3fae:	0f 93       	push	r16
    3fb0:	1f 93       	push	r17
    3fb2:	df 93       	push	r29
    3fb4:	cf 93       	push	r28
    3fb6:	cd b7       	in	r28, 0x3d	; 61
    3fb8:	de b7       	in	r29, 0x3e	; 62
    3fba:	c5 54       	subi	r28, 0x45	; 69
    3fbc:	d0 40       	sbci	r29, 0x00	; 0
    3fbe:	0f b6       	in	r0, 0x3f	; 63
    3fc0:	f8 94       	cli
    3fc2:	de bf       	out	0x3e, r29	; 62
    3fc4:	0f be       	out	0x3f, r0	; 63
    3fc6:	cd bf       	out	0x3d, r28	; 61
    3fc8:	2b 87       	std	Y+11, r18	; 0x0b
    3fca:	3c 87       	std	Y+12, r19	; 0x0c
    3fcc:	4d 87       	std	Y+13, r20	; 0x0d
    3fce:	5e 87       	std	Y+14, r21	; 0x0e
    3fd0:	6f 87       	std	Y+15, r22	; 0x0f
    3fd2:	78 8b       	std	Y+16, r23	; 0x10
    3fd4:	89 8b       	std	Y+17, r24	; 0x11
    3fd6:	9a 8b       	std	Y+18, r25	; 0x12
    u64 local_num = 0 ;
    3fd8:	1b 82       	std	Y+3, r1	; 0x03
    3fda:	1c 82       	std	Y+4, r1	; 0x04
    3fdc:	1d 82       	std	Y+5, r1	; 0x05
    3fde:	1e 82       	std	Y+6, r1	; 0x06
    3fe0:	1f 82       	std	Y+7, r1	; 0x07
    3fe2:	18 86       	std	Y+8, r1	; 0x08
    3fe4:	19 86       	std	Y+9, r1	; 0x09
    3fe6:	1a 86       	std	Y+10, r1	; 0x0a
    u8 i = 0 ;
    3fe8:	1a 82       	std	Y+2, r1	; 0x02
    // to check if it 0
	if (0 == Copy_U8Var){
    3fea:	8b 85       	ldd	r24, Y+11	; 0x0b
    3fec:	9c 85       	ldd	r25, Y+12	; 0x0c
    3fee:	89 2b       	or	r24, r25
    3ff0:	9d 85       	ldd	r25, Y+13	; 0x0d
    3ff2:	89 2b       	or	r24, r25
    3ff4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ff6:	89 2b       	or	r24, r25
    3ff8:	9f 85       	ldd	r25, Y+15	; 0x0f
    3ffa:	89 2b       	or	r24, r25
    3ffc:	98 89       	ldd	r25, Y+16	; 0x10
    3ffe:	89 2b       	or	r24, r25
    4000:	99 89       	ldd	r25, Y+17	; 0x11
    4002:	89 2b       	or	r24, r25
    4004:	9a 89       	ldd	r25, Y+18	; 0x12
    4006:	89 2b       	or	r24, r25
    4008:	88 23       	and	r24, r24
    400a:	39 f4       	brne	.+14     	; 0x401a <LCD_VidPrintVar+0x88>
		LCD_VidSendChar('0');
    400c:	80 e3       	ldi	r24, 0x30	; 48
    400e:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    4012:	41 c2       	rjmp	.+1154   	; 0x4496 <LCD_VidPrintVar+0x504>
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
		i++ ;
    4014:	8a 81       	ldd	r24, Y+2	; 0x02
    4016:	8f 5f       	subi	r24, 0xFF	; 255
    4018:	8a 83       	std	Y+2, r24	; 0x02
		LCD_VidSendChar('0');
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
    401a:	8a e0       	ldi	r24, 0x0A	; 10
    401c:	6a 81       	ldd	r22, Y+2	; 0x02
    401e:	0e 94 9e 1f 	call	0x3f3c	; 0x3f3c <LCD_U32Pow>
    4022:	1c 01       	movw	r2, r24
    4024:	44 24       	eor	r4, r4
    4026:	55 24       	eor	r5, r5
    4028:	66 24       	eor	r6, r6
    402a:	77 24       	eor	r7, r7
    402c:	43 01       	movw	r8, r6
    402e:	2b 85       	ldd	r18, Y+11	; 0x0b
    4030:	3c 85       	ldd	r19, Y+12	; 0x0c
    4032:	4d 85       	ldd	r20, Y+13	; 0x0d
    4034:	5e 85       	ldd	r21, Y+14	; 0x0e
    4036:	6f 85       	ldd	r22, Y+15	; 0x0f
    4038:	78 89       	ldd	r23, Y+16	; 0x10
    403a:	89 89       	ldd	r24, Y+17	; 0x11
    403c:	9a 89       	ldd	r25, Y+18	; 0x12
    403e:	a2 2c       	mov	r10, r2
    4040:	b3 2c       	mov	r11, r3
    4042:	c4 2c       	mov	r12, r4
    4044:	d5 2c       	mov	r13, r5
    4046:	e6 2c       	mov	r14, r6
    4048:	f7 2c       	mov	r15, r7
    404a:	08 2d       	mov	r16, r8
    404c:	19 2d       	mov	r17, r9
    404e:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__udivdi3>
    4052:	a2 2e       	mov	r10, r18
    4054:	b3 2e       	mov	r11, r19
    4056:	c4 2e       	mov	r12, r20
    4058:	d5 2e       	mov	r13, r21
    405a:	e6 2e       	mov	r14, r22
    405c:	f7 2e       	mov	r15, r23
    405e:	08 2f       	mov	r16, r24
    4060:	19 2f       	mov	r17, r25
    4062:	2a 2d       	mov	r18, r10
    4064:	3b 2d       	mov	r19, r11
    4066:	4c 2d       	mov	r20, r12
    4068:	5d 2d       	mov	r21, r13
    406a:	6e 2d       	mov	r22, r14
    406c:	7f 2d       	mov	r23, r15
    406e:	80 2f       	mov	r24, r16
    4070:	91 2f       	mov	r25, r17
    4072:	e2 2f       	mov	r30, r18
    4074:	e3 2b       	or	r30, r19
    4076:	e4 2b       	or	r30, r20
    4078:	e5 2b       	or	r30, r21
    407a:	e6 2b       	or	r30, r22
    407c:	e7 2b       	or	r30, r23
    407e:	e8 2b       	or	r30, r24
    4080:	e9 2b       	or	r30, r25
    4082:	ee 23       	and	r30, r30
    4084:	39 f6       	brne	.-114    	; 0x4014 <LCD_VidPrintVar+0x82>
		i++ ;
	}

	s8 copy_i = i-1 ;
    4086:	8a 81       	ldd	r24, Y+2	; 0x02
    4088:	81 50       	subi	r24, 0x01	; 1
    408a:	89 83       	std	Y+1, r24	; 0x01
    408c:	9a c1       	rjmp	.+820    	; 0x43c2 <LCD_VidPrintVar+0x430>

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
		local_num += (Copy_U8Var % 10) * ( LCD_U32Pow(10,copy_i) ) ;
    408e:	ab 84       	ldd	r10, Y+11	; 0x0b
    4090:	bc 84       	ldd	r11, Y+12	; 0x0c
    4092:	cd 84       	ldd	r12, Y+13	; 0x0d
    4094:	de 84       	ldd	r13, Y+14	; 0x0e
    4096:	ef 84       	ldd	r14, Y+15	; 0x0f
    4098:	f8 88       	ldd	r15, Y+16	; 0x10
    409a:	09 89       	ldd	r16, Y+17	; 0x11
    409c:	1a 89       	ldd	r17, Y+18	; 0x12
    409e:	2a 2d       	mov	r18, r10
    40a0:	3b 2d       	mov	r19, r11
    40a2:	4c 2d       	mov	r20, r12
    40a4:	5d 2d       	mov	r21, r13
    40a6:	6e 2d       	mov	r22, r14
    40a8:	7f 2d       	mov	r23, r15
    40aa:	80 2f       	mov	r24, r16
    40ac:	91 2f       	mov	r25, r17
    40ae:	0f 2e       	mov	r0, r31
    40b0:	fa e0       	ldi	r31, 0x0A	; 10
    40b2:	af 2e       	mov	r10, r31
    40b4:	f0 2d       	mov	r31, r0
    40b6:	bb 24       	eor	r11, r11
    40b8:	cc 24       	eor	r12, r12
    40ba:	dd 24       	eor	r13, r13
    40bc:	ee 24       	eor	r14, r14
    40be:	ff 24       	eor	r15, r15
    40c0:	00 e0       	ldi	r16, 0x00	; 0
    40c2:	10 e0       	ldi	r17, 0x00	; 0
    40c4:	0e 94 dd 07 	call	0xfba	; 0xfba <__umoddi3>
    40c8:	a2 2e       	mov	r10, r18
    40ca:	b3 2e       	mov	r11, r19
    40cc:	c4 2e       	mov	r12, r20
    40ce:	d5 2e       	mov	r13, r21
    40d0:	e6 2e       	mov	r14, r22
    40d2:	f7 2e       	mov	r15, r23
    40d4:	08 2f       	mov	r16, r24
    40d6:	19 2f       	mov	r17, r25
    40d8:	2a 2c       	mov	r2, r10
    40da:	3b 2c       	mov	r3, r11
    40dc:	4c 2c       	mov	r4, r12
    40de:	5d 2c       	mov	r5, r13
    40e0:	6e 2c       	mov	r6, r14
    40e2:	7f 2c       	mov	r7, r15
    40e4:	80 2e       	mov	r8, r16
    40e6:	91 2e       	mov	r9, r17
    40e8:	99 81       	ldd	r25, Y+1	; 0x01
    40ea:	8a e0       	ldi	r24, 0x0A	; 10
    40ec:	69 2f       	mov	r22, r25
    40ee:	0e 94 9e 1f 	call	0x3f3c	; 0x3f3c <LCD_U32Pow>
    40f2:	8c 01       	movw	r16, r24
    40f4:	20 e0       	ldi	r18, 0x00	; 0
    40f6:	30 e0       	ldi	r19, 0x00	; 0
    40f8:	40 e0       	ldi	r20, 0x00	; 0
    40fa:	50 e0       	ldi	r21, 0x00	; 0
    40fc:	60 e0       	ldi	r22, 0x00	; 0
    40fe:	70 e0       	ldi	r23, 0x00	; 0
    4100:	0b 8f       	std	Y+27, r16	; 0x1b
    4102:	1c 8f       	std	Y+28, r17	; 0x1c
    4104:	2d 8f       	std	Y+29, r18	; 0x1d
    4106:	3e 8f       	std	Y+30, r19	; 0x1e
    4108:	4f 8f       	std	Y+31, r20	; 0x1f
    410a:	58 a3       	std	Y+32, r21	; 0x20
    410c:	69 a3       	std	Y+33, r22	; 0x21
    410e:	7a a3       	std	Y+34, r23	; 0x22
    4110:	22 2d       	mov	r18, r2
    4112:	33 2d       	mov	r19, r3
    4114:	44 2d       	mov	r20, r4
    4116:	55 2d       	mov	r21, r5
    4118:	66 2d       	mov	r22, r6
    411a:	77 2d       	mov	r23, r7
    411c:	88 2d       	mov	r24, r8
    411e:	99 2d       	mov	r25, r9
    4120:	ab 8c       	ldd	r10, Y+27	; 0x1b
    4122:	bc 8c       	ldd	r11, Y+28	; 0x1c
    4124:	cd 8c       	ldd	r12, Y+29	; 0x1d
    4126:	de 8c       	ldd	r13, Y+30	; 0x1e
    4128:	ef 8c       	ldd	r14, Y+31	; 0x1f
    412a:	f8 a0       	ldd	r15, Y+32	; 0x20
    412c:	09 a1       	ldd	r16, Y+33	; 0x21
    412e:	1a a1       	ldd	r17, Y+34	; 0x22
    4130:	0e 94 41 00 	call	0x82	; 0x82 <__muldi3>
    4134:	a2 2e       	mov	r10, r18
    4136:	b3 2e       	mov	r11, r19
    4138:	c4 2e       	mov	r12, r20
    413a:	d5 2e       	mov	r13, r21
    413c:	e6 2e       	mov	r14, r22
    413e:	f7 2e       	mov	r15, r23
    4140:	08 2f       	mov	r16, r24
    4142:	19 2f       	mov	r17, r25
    4144:	ab 8a       	std	Y+19, r10	; 0x13
    4146:	bc 8a       	std	Y+20, r11	; 0x14
    4148:	cd 8a       	std	Y+21, r12	; 0x15
    414a:	de 8a       	std	Y+22, r13	; 0x16
    414c:	ef 8a       	std	Y+23, r14	; 0x17
    414e:	f8 8e       	std	Y+24, r15	; 0x18
    4150:	09 8f       	std	Y+25, r16	; 0x19
    4152:	1a 8f       	std	Y+26, r17	; 0x1a
    4154:	1b 81       	ldd	r17, Y+3	; 0x03
    4156:	1b a3       	std	Y+35, r17	; 0x23
    4158:	2c 81       	ldd	r18, Y+4	; 0x04
    415a:	2c a3       	std	Y+36, r18	; 0x24
    415c:	3d 81       	ldd	r19, Y+5	; 0x05
    415e:	3d a3       	std	Y+37, r19	; 0x25
    4160:	4e 81       	ldd	r20, Y+6	; 0x06
    4162:	4e a3       	std	Y+38, r20	; 0x26
    4164:	5f 81       	ldd	r21, Y+7	; 0x07
    4166:	5f a3       	std	Y+39, r21	; 0x27
    4168:	68 85       	ldd	r22, Y+8	; 0x08
    416a:	68 a7       	std	Y+40, r22	; 0x28
    416c:	79 85       	ldd	r23, Y+9	; 0x09
    416e:	79 a7       	std	Y+41, r23	; 0x29
    4170:	8a 85       	ldd	r24, Y+10	; 0x0a
    4172:	8a a7       	std	Y+42, r24	; 0x2a
    4174:	9b a1       	ldd	r25, Y+35	; 0x23
    4176:	0b 89       	ldd	r16, Y+19	; 0x13
    4178:	90 0f       	add	r25, r16
    417a:	9b a7       	std	Y+43, r25	; 0x2b
    417c:	11 e0       	ldi	r17, 0x01	; 1
    417e:	1b ab       	std	Y+51, r17	; 0x33
    4180:	2b a5       	ldd	r18, Y+43	; 0x2b
    4182:	3b a1       	ldd	r19, Y+35	; 0x23
    4184:	23 17       	cp	r18, r19
    4186:	08 f0       	brcs	.+2      	; 0x418a <LCD_VidPrintVar+0x1f8>
    4188:	1b aa       	std	Y+51, r1	; 0x33
    418a:	4c a1       	ldd	r20, Y+36	; 0x24
    418c:	5c 89       	ldd	r21, Y+20	; 0x14
    418e:	45 0f       	add	r20, r21
    4190:	4c a7       	std	Y+44, r20	; 0x2c
    4192:	61 e0       	ldi	r22, 0x01	; 1
    4194:	6c ab       	std	Y+52, r22	; 0x34
    4196:	7c a5       	ldd	r23, Y+44	; 0x2c
    4198:	8c a1       	ldd	r24, Y+36	; 0x24
    419a:	78 17       	cp	r23, r24
    419c:	08 f0       	brcs	.+2      	; 0x41a0 <LCD_VidPrintVar+0x20e>
    419e:	1c aa       	std	Y+52, r1	; 0x34
    41a0:	9b a9       	ldd	r25, Y+51	; 0x33
    41a2:	0c a5       	ldd	r16, Y+44	; 0x2c
    41a4:	90 0f       	add	r25, r16
    41a6:	9d ab       	std	Y+53, r25	; 0x35
    41a8:	11 e0       	ldi	r17, 0x01	; 1
    41aa:	1e ab       	std	Y+54, r17	; 0x36
    41ac:	2d a9       	ldd	r18, Y+53	; 0x35
    41ae:	3c a5       	ldd	r19, Y+44	; 0x2c
    41b0:	23 17       	cp	r18, r19
    41b2:	08 f0       	brcs	.+2      	; 0x41b6 <LCD_VidPrintVar+0x224>
    41b4:	1e aa       	std	Y+54, r1	; 0x36
    41b6:	4c a9       	ldd	r20, Y+52	; 0x34
    41b8:	5e a9       	ldd	r21, Y+54	; 0x36
    41ba:	45 2b       	or	r20, r21
    41bc:	4c ab       	std	Y+52, r20	; 0x34
    41be:	6d a9       	ldd	r22, Y+53	; 0x35
    41c0:	6c a7       	std	Y+44, r22	; 0x2c
    41c2:	7d a1       	ldd	r23, Y+37	; 0x25
    41c4:	8d 89       	ldd	r24, Y+21	; 0x15
    41c6:	78 0f       	add	r23, r24
    41c8:	7d a7       	std	Y+45, r23	; 0x2d
    41ca:	91 e0       	ldi	r25, 0x01	; 1
    41cc:	9f ab       	std	Y+55, r25	; 0x37
    41ce:	0d a5       	ldd	r16, Y+45	; 0x2d
    41d0:	1d a1       	ldd	r17, Y+37	; 0x25
    41d2:	01 17       	cp	r16, r17
    41d4:	08 f0       	brcs	.+2      	; 0x41d8 <LCD_VidPrintVar+0x246>
    41d6:	1f aa       	std	Y+55, r1	; 0x37
    41d8:	2c a9       	ldd	r18, Y+52	; 0x34
    41da:	3d a5       	ldd	r19, Y+45	; 0x2d
    41dc:	23 0f       	add	r18, r19
    41de:	28 af       	std	Y+56, r18	; 0x38
    41e0:	41 e0       	ldi	r20, 0x01	; 1
    41e2:	49 af       	std	Y+57, r20	; 0x39
    41e4:	58 ad       	ldd	r21, Y+56	; 0x38
    41e6:	6d a5       	ldd	r22, Y+45	; 0x2d
    41e8:	56 17       	cp	r21, r22
    41ea:	08 f0       	brcs	.+2      	; 0x41ee <LCD_VidPrintVar+0x25c>
    41ec:	19 ae       	std	Y+57, r1	; 0x39
    41ee:	7f a9       	ldd	r23, Y+55	; 0x37
    41f0:	89 ad       	ldd	r24, Y+57	; 0x39
    41f2:	78 2b       	or	r23, r24
    41f4:	7f ab       	std	Y+55, r23	; 0x37
    41f6:	98 ad       	ldd	r25, Y+56	; 0x38
    41f8:	9d a7       	std	Y+45, r25	; 0x2d
    41fa:	0e a1       	ldd	r16, Y+38	; 0x26
    41fc:	1e 89       	ldd	r17, Y+22	; 0x16
    41fe:	01 0f       	add	r16, r17
    4200:	0e a7       	std	Y+46, r16	; 0x2e
    4202:	21 e0       	ldi	r18, 0x01	; 1
    4204:	2a af       	std	Y+58, r18	; 0x3a
    4206:	3e a5       	ldd	r19, Y+46	; 0x2e
    4208:	4e a1       	ldd	r20, Y+38	; 0x26
    420a:	34 17       	cp	r19, r20
    420c:	08 f0       	brcs	.+2      	; 0x4210 <LCD_VidPrintVar+0x27e>
    420e:	1a ae       	std	Y+58, r1	; 0x3a
    4210:	5f a9       	ldd	r21, Y+55	; 0x37
    4212:	6e a5       	ldd	r22, Y+46	; 0x2e
    4214:	56 0f       	add	r21, r22
    4216:	5b af       	std	Y+59, r21	; 0x3b
    4218:	71 e0       	ldi	r23, 0x01	; 1
    421a:	7c af       	std	Y+60, r23	; 0x3c
    421c:	8b ad       	ldd	r24, Y+59	; 0x3b
    421e:	9e a5       	ldd	r25, Y+46	; 0x2e
    4220:	89 17       	cp	r24, r25
    4222:	08 f0       	brcs	.+2      	; 0x4226 <LCD_VidPrintVar+0x294>
    4224:	1c ae       	std	Y+60, r1	; 0x3c
    4226:	0a ad       	ldd	r16, Y+58	; 0x3a
    4228:	1c ad       	ldd	r17, Y+60	; 0x3c
    422a:	01 2b       	or	r16, r17
    422c:	0a af       	std	Y+58, r16	; 0x3a
    422e:	2b ad       	ldd	r18, Y+59	; 0x3b
    4230:	2e a7       	std	Y+46, r18	; 0x2e
    4232:	3f a1       	ldd	r19, Y+39	; 0x27
    4234:	4f 89       	ldd	r20, Y+23	; 0x17
    4236:	34 0f       	add	r19, r20
    4238:	3f a7       	std	Y+47, r19	; 0x2f
    423a:	51 e0       	ldi	r21, 0x01	; 1
    423c:	5d af       	std	Y+61, r21	; 0x3d
    423e:	6f a5       	ldd	r22, Y+47	; 0x2f
    4240:	7f a1       	ldd	r23, Y+39	; 0x27
    4242:	67 17       	cp	r22, r23
    4244:	08 f0       	brcs	.+2      	; 0x4248 <LCD_VidPrintVar+0x2b6>
    4246:	1d ae       	std	Y+61, r1	; 0x3d
    4248:	8a ad       	ldd	r24, Y+58	; 0x3a
    424a:	9f a5       	ldd	r25, Y+47	; 0x2f
    424c:	89 0f       	add	r24, r25
    424e:	8e af       	std	Y+62, r24	; 0x3e
    4250:	01 e0       	ldi	r16, 0x01	; 1
    4252:	0f af       	std	Y+63, r16	; 0x3f
    4254:	1e ad       	ldd	r17, Y+62	; 0x3e
    4256:	2f a5       	ldd	r18, Y+47	; 0x2f
    4258:	12 17       	cp	r17, r18
    425a:	08 f0       	brcs	.+2      	; 0x425e <LCD_VidPrintVar+0x2cc>
    425c:	1f ae       	std	Y+63, r1	; 0x3f
    425e:	3d ad       	ldd	r19, Y+61	; 0x3d
    4260:	4f ad       	ldd	r20, Y+63	; 0x3f
    4262:	34 2b       	or	r19, r20
    4264:	3d af       	std	Y+61, r19	; 0x3d
    4266:	5e ad       	ldd	r21, Y+62	; 0x3e
    4268:	5f a7       	std	Y+47, r21	; 0x2f
    426a:	68 a5       	ldd	r22, Y+40	; 0x28
    426c:	78 8d       	ldd	r23, Y+24	; 0x18
    426e:	67 0f       	add	r22, r23
    4270:	68 ab       	std	Y+48, r22	; 0x30
    4272:	81 e0       	ldi	r24, 0x01	; 1
    4274:	21 96       	adiw	r28, 0x01	; 1
    4276:	8f af       	std	Y+63, r24	; 0x3f
    4278:	21 97       	sbiw	r28, 0x01	; 1
    427a:	98 a9       	ldd	r25, Y+48	; 0x30
    427c:	08 a5       	ldd	r16, Y+40	; 0x28
    427e:	90 17       	cp	r25, r16
    4280:	18 f0       	brcs	.+6      	; 0x4288 <LCD_VidPrintVar+0x2f6>
    4282:	21 96       	adiw	r28, 0x01	; 1
    4284:	1f ae       	std	Y+63, r1	; 0x3f
    4286:	21 97       	sbiw	r28, 0x01	; 1
    4288:	1d ad       	ldd	r17, Y+61	; 0x3d
    428a:	28 a9       	ldd	r18, Y+48	; 0x30
    428c:	12 0f       	add	r17, r18
    428e:	22 96       	adiw	r28, 0x02	; 2
    4290:	1f af       	std	Y+63, r17	; 0x3f
    4292:	22 97       	sbiw	r28, 0x02	; 2
    4294:	31 e0       	ldi	r19, 0x01	; 1
    4296:	23 96       	adiw	r28, 0x03	; 3
    4298:	3f af       	std	Y+63, r19	; 0x3f
    429a:	23 97       	sbiw	r28, 0x03	; 3
    429c:	22 96       	adiw	r28, 0x02	; 2
    429e:	4f ad       	ldd	r20, Y+63	; 0x3f
    42a0:	22 97       	sbiw	r28, 0x02	; 2
    42a2:	58 a9       	ldd	r21, Y+48	; 0x30
    42a4:	45 17       	cp	r20, r21
    42a6:	18 f0       	brcs	.+6      	; 0x42ae <LCD_VidPrintVar+0x31c>
    42a8:	23 96       	adiw	r28, 0x03	; 3
    42aa:	1f ae       	std	Y+63, r1	; 0x3f
    42ac:	23 97       	sbiw	r28, 0x03	; 3
    42ae:	21 96       	adiw	r28, 0x01	; 1
    42b0:	6f ad       	ldd	r22, Y+63	; 0x3f
    42b2:	21 97       	sbiw	r28, 0x01	; 1
    42b4:	23 96       	adiw	r28, 0x03	; 3
    42b6:	7f ad       	ldd	r23, Y+63	; 0x3f
    42b8:	23 97       	sbiw	r28, 0x03	; 3
    42ba:	67 2b       	or	r22, r23
    42bc:	21 96       	adiw	r28, 0x01	; 1
    42be:	6f af       	std	Y+63, r22	; 0x3f
    42c0:	21 97       	sbiw	r28, 0x01	; 1
    42c2:	22 96       	adiw	r28, 0x02	; 2
    42c4:	8f ad       	ldd	r24, Y+63	; 0x3f
    42c6:	22 97       	sbiw	r28, 0x02	; 2
    42c8:	88 ab       	std	Y+48, r24	; 0x30
    42ca:	99 a5       	ldd	r25, Y+41	; 0x29
    42cc:	09 8d       	ldd	r16, Y+25	; 0x19
    42ce:	90 0f       	add	r25, r16
    42d0:	99 ab       	std	Y+49, r25	; 0x31
    42d2:	11 e0       	ldi	r17, 0x01	; 1
    42d4:	24 96       	adiw	r28, 0x04	; 4
    42d6:	1f af       	std	Y+63, r17	; 0x3f
    42d8:	24 97       	sbiw	r28, 0x04	; 4
    42da:	29 a9       	ldd	r18, Y+49	; 0x31
    42dc:	39 a5       	ldd	r19, Y+41	; 0x29
    42de:	23 17       	cp	r18, r19
    42e0:	18 f0       	brcs	.+6      	; 0x42e8 <LCD_VidPrintVar+0x356>
    42e2:	24 96       	adiw	r28, 0x04	; 4
    42e4:	1f ae       	std	Y+63, r1	; 0x3f
    42e6:	24 97       	sbiw	r28, 0x04	; 4
    42e8:	21 96       	adiw	r28, 0x01	; 1
    42ea:	4f ad       	ldd	r20, Y+63	; 0x3f
    42ec:	21 97       	sbiw	r28, 0x01	; 1
    42ee:	59 a9       	ldd	r21, Y+49	; 0x31
    42f0:	45 0f       	add	r20, r21
    42f2:	25 96       	adiw	r28, 0x05	; 5
    42f4:	4f af       	std	Y+63, r20	; 0x3f
    42f6:	25 97       	sbiw	r28, 0x05	; 5
    42f8:	61 e0       	ldi	r22, 0x01	; 1
    42fa:	26 96       	adiw	r28, 0x06	; 6
    42fc:	6f af       	std	Y+63, r22	; 0x3f
    42fe:	26 97       	sbiw	r28, 0x06	; 6
    4300:	25 96       	adiw	r28, 0x05	; 5
    4302:	7f ad       	ldd	r23, Y+63	; 0x3f
    4304:	25 97       	sbiw	r28, 0x05	; 5
    4306:	89 a9       	ldd	r24, Y+49	; 0x31
    4308:	78 17       	cp	r23, r24
    430a:	18 f0       	brcs	.+6      	; 0x4312 <LCD_VidPrintVar+0x380>
    430c:	26 96       	adiw	r28, 0x06	; 6
    430e:	1f ae       	std	Y+63, r1	; 0x3f
    4310:	26 97       	sbiw	r28, 0x06	; 6
    4312:	24 96       	adiw	r28, 0x04	; 4
    4314:	9f ad       	ldd	r25, Y+63	; 0x3f
    4316:	24 97       	sbiw	r28, 0x04	; 4
    4318:	26 96       	adiw	r28, 0x06	; 6
    431a:	0f ad       	ldd	r16, Y+63	; 0x3f
    431c:	26 97       	sbiw	r28, 0x06	; 6
    431e:	90 2b       	or	r25, r16
    4320:	24 96       	adiw	r28, 0x04	; 4
    4322:	9f af       	std	Y+63, r25	; 0x3f
    4324:	24 97       	sbiw	r28, 0x04	; 4
    4326:	25 96       	adiw	r28, 0x05	; 5
    4328:	1f ad       	ldd	r17, Y+63	; 0x3f
    432a:	25 97       	sbiw	r28, 0x05	; 5
    432c:	19 ab       	std	Y+49, r17	; 0x31
    432e:	2a a5       	ldd	r18, Y+42	; 0x2a
    4330:	3a 8d       	ldd	r19, Y+26	; 0x1a
    4332:	23 0f       	add	r18, r19
    4334:	2a ab       	std	Y+50, r18	; 0x32
    4336:	24 96       	adiw	r28, 0x04	; 4
    4338:	8f ad       	ldd	r24, Y+63	; 0x3f
    433a:	24 97       	sbiw	r28, 0x04	; 4
    433c:	4a a9       	ldd	r20, Y+50	; 0x32
    433e:	84 0f       	add	r24, r20
    4340:	8a ab       	std	Y+50, r24	; 0x32
    4342:	5b a5       	ldd	r21, Y+43	; 0x2b
    4344:	5b 83       	std	Y+3, r21	; 0x03
    4346:	6c a5       	ldd	r22, Y+44	; 0x2c
    4348:	6c 83       	std	Y+4, r22	; 0x04
    434a:	7d a5       	ldd	r23, Y+45	; 0x2d
    434c:	7d 83       	std	Y+5, r23	; 0x05
    434e:	8e a5       	ldd	r24, Y+46	; 0x2e
    4350:	8e 83       	std	Y+6, r24	; 0x06
    4352:	9f a5       	ldd	r25, Y+47	; 0x2f
    4354:	9f 83       	std	Y+7, r25	; 0x07
    4356:	08 a9       	ldd	r16, Y+48	; 0x30
    4358:	08 87       	std	Y+8, r16	; 0x08
    435a:	19 a9       	ldd	r17, Y+49	; 0x31
    435c:	19 87       	std	Y+9, r17	; 0x09
    435e:	2a a9       	ldd	r18, Y+50	; 0x32
    4360:	2a 87       	std	Y+10, r18	; 0x0a
		Copy_U8Var/=10 ;
    4362:	ab 84       	ldd	r10, Y+11	; 0x0b
    4364:	bc 84       	ldd	r11, Y+12	; 0x0c
    4366:	cd 84       	ldd	r12, Y+13	; 0x0d
    4368:	de 84       	ldd	r13, Y+14	; 0x0e
    436a:	ef 84       	ldd	r14, Y+15	; 0x0f
    436c:	f8 88       	ldd	r15, Y+16	; 0x10
    436e:	09 89       	ldd	r16, Y+17	; 0x11
    4370:	1a 89       	ldd	r17, Y+18	; 0x12
    4372:	2a 2d       	mov	r18, r10
    4374:	3b 2d       	mov	r19, r11
    4376:	4c 2d       	mov	r20, r12
    4378:	5d 2d       	mov	r21, r13
    437a:	6e 2d       	mov	r22, r14
    437c:	7f 2d       	mov	r23, r15
    437e:	80 2f       	mov	r24, r16
    4380:	91 2f       	mov	r25, r17
    4382:	0f 2e       	mov	r0, r31
    4384:	fa e0       	ldi	r31, 0x0A	; 10
    4386:	af 2e       	mov	r10, r31
    4388:	f0 2d       	mov	r31, r0
    438a:	bb 24       	eor	r11, r11
    438c:	cc 24       	eor	r12, r12
    438e:	dd 24       	eor	r13, r13
    4390:	ee 24       	eor	r14, r14
    4392:	ff 24       	eor	r15, r15
    4394:	00 e0       	ldi	r16, 0x00	; 0
    4396:	10 e0       	ldi	r17, 0x00	; 0
    4398:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__udivdi3>
    439c:	a2 2e       	mov	r10, r18
    439e:	b3 2e       	mov	r11, r19
    43a0:	c4 2e       	mov	r12, r20
    43a2:	d5 2e       	mov	r13, r21
    43a4:	e6 2e       	mov	r14, r22
    43a6:	f7 2e       	mov	r15, r23
    43a8:	08 2f       	mov	r16, r24
    43aa:	19 2f       	mov	r17, r25
    43ac:	ab 86       	std	Y+11, r10	; 0x0b
    43ae:	bc 86       	std	Y+12, r11	; 0x0c
    43b0:	cd 86       	std	Y+13, r12	; 0x0d
    43b2:	de 86       	std	Y+14, r13	; 0x0e
    43b4:	ef 86       	std	Y+15, r14	; 0x0f
    43b6:	f8 8a       	std	Y+16, r15	; 0x10
    43b8:	09 8b       	std	Y+17, r16	; 0x11
    43ba:	1a 8b       	std	Y+18, r17	; 0x12
		copy_i-- ;
    43bc:	89 81       	ldd	r24, Y+1	; 0x01
    43be:	81 50       	subi	r24, 0x01	; 1
    43c0:	89 83       	std	Y+1, r24	; 0x01
	}

	s8 copy_i = i-1 ;

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
    43c2:	89 81       	ldd	r24, Y+1	; 0x01
    43c4:	88 23       	and	r24, r24
    43c6:	0c f0       	brlt	.+2      	; 0x43ca <LCD_VidPrintVar+0x438>
    43c8:	62 ce       	rjmp	.-828    	; 0x408e <LCD_VidPrintVar+0xfc>
    43ca:	61 c0       	rjmp	.+194    	; 0x448e <LCD_VidPrintVar+0x4fc>
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
    43cc:	ab 80       	ldd	r10, Y+3	; 0x03
    43ce:	bc 80       	ldd	r11, Y+4	; 0x04
    43d0:	cd 80       	ldd	r12, Y+5	; 0x05
    43d2:	de 80       	ldd	r13, Y+6	; 0x06
    43d4:	ef 80       	ldd	r14, Y+7	; 0x07
    43d6:	f8 84       	ldd	r15, Y+8	; 0x08
    43d8:	09 85       	ldd	r16, Y+9	; 0x09
    43da:	1a 85       	ldd	r17, Y+10	; 0x0a
    43dc:	2a 2d       	mov	r18, r10
    43de:	3b 2d       	mov	r19, r11
    43e0:	4c 2d       	mov	r20, r12
    43e2:	5d 2d       	mov	r21, r13
    43e4:	6e 2d       	mov	r22, r14
    43e6:	7f 2d       	mov	r23, r15
    43e8:	80 2f       	mov	r24, r16
    43ea:	91 2f       	mov	r25, r17
    43ec:	0f 2e       	mov	r0, r31
    43ee:	fa e0       	ldi	r31, 0x0A	; 10
    43f0:	af 2e       	mov	r10, r31
    43f2:	f0 2d       	mov	r31, r0
    43f4:	bb 24       	eor	r11, r11
    43f6:	cc 24       	eor	r12, r12
    43f8:	dd 24       	eor	r13, r13
    43fa:	ee 24       	eor	r14, r14
    43fc:	ff 24       	eor	r15, r15
    43fe:	00 e0       	ldi	r16, 0x00	; 0
    4400:	10 e0       	ldi	r17, 0x00	; 0
    4402:	0e 94 dd 07 	call	0xfba	; 0xfba <__umoddi3>
    4406:	a2 2e       	mov	r10, r18
    4408:	b3 2e       	mov	r11, r19
    440a:	c4 2e       	mov	r12, r20
    440c:	d5 2e       	mov	r13, r21
    440e:	e6 2e       	mov	r14, r22
    4410:	f7 2e       	mov	r15, r23
    4412:	08 2f       	mov	r16, r24
    4414:	19 2f       	mov	r17, r25
    4416:	2a 2d       	mov	r18, r10
    4418:	3b 2d       	mov	r19, r11
    441a:	4c 2d       	mov	r20, r12
    441c:	5d 2d       	mov	r21, r13
    441e:	6e 2d       	mov	r22, r14
    4420:	7f 2d       	mov	r23, r15
    4422:	80 2f       	mov	r24, r16
    4424:	91 2f       	mov	r25, r17
    4426:	82 2f       	mov	r24, r18
    4428:	80 5d       	subi	r24, 0xD0	; 208
    442a:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
		local_num /= 10 ;
    442e:	ab 80       	ldd	r10, Y+3	; 0x03
    4430:	bc 80       	ldd	r11, Y+4	; 0x04
    4432:	cd 80       	ldd	r12, Y+5	; 0x05
    4434:	de 80       	ldd	r13, Y+6	; 0x06
    4436:	ef 80       	ldd	r14, Y+7	; 0x07
    4438:	f8 84       	ldd	r15, Y+8	; 0x08
    443a:	09 85       	ldd	r16, Y+9	; 0x09
    443c:	1a 85       	ldd	r17, Y+10	; 0x0a
    443e:	2a 2d       	mov	r18, r10
    4440:	3b 2d       	mov	r19, r11
    4442:	4c 2d       	mov	r20, r12
    4444:	5d 2d       	mov	r21, r13
    4446:	6e 2d       	mov	r22, r14
    4448:	7f 2d       	mov	r23, r15
    444a:	80 2f       	mov	r24, r16
    444c:	91 2f       	mov	r25, r17
    444e:	0f 2e       	mov	r0, r31
    4450:	fa e0       	ldi	r31, 0x0A	; 10
    4452:	af 2e       	mov	r10, r31
    4454:	f0 2d       	mov	r31, r0
    4456:	bb 24       	eor	r11, r11
    4458:	cc 24       	eor	r12, r12
    445a:	dd 24       	eor	r13, r13
    445c:	ee 24       	eor	r14, r14
    445e:	ff 24       	eor	r15, r15
    4460:	00 e0       	ldi	r16, 0x00	; 0
    4462:	10 e0       	ldi	r17, 0x00	; 0
    4464:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__udivdi3>
    4468:	a2 2e       	mov	r10, r18
    446a:	b3 2e       	mov	r11, r19
    446c:	c4 2e       	mov	r12, r20
    446e:	d5 2e       	mov	r13, r21
    4470:	e6 2e       	mov	r14, r22
    4472:	f7 2e       	mov	r15, r23
    4474:	08 2f       	mov	r16, r24
    4476:	19 2f       	mov	r17, r25
    4478:	ab 82       	std	Y+3, r10	; 0x03
    447a:	bc 82       	std	Y+4, r11	; 0x04
    447c:	cd 82       	std	Y+5, r12	; 0x05
    447e:	de 82       	std	Y+6, r13	; 0x06
    4480:	ef 82       	std	Y+7, r14	; 0x07
    4482:	f8 86       	std	Y+8, r15	; 0x08
    4484:	09 87       	std	Y+9, r16	; 0x09
    4486:	1a 87       	std	Y+10, r17	; 0x0a
		i--;
    4488:	8a 81       	ldd	r24, Y+2	; 0x02
    448a:	81 50       	subi	r24, 0x01	; 1
    448c:	8a 83       	std	Y+2, r24	; 0x02
		Copy_U8Var/=10 ;
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
    448e:	8a 81       	ldd	r24, Y+2	; 0x02
    4490:	88 23       	and	r24, r24
    4492:	09 f0       	breq	.+2      	; 0x4496 <LCD_VidPrintVar+0x504>
    4494:	9b cf       	rjmp	.-202    	; 0x43cc <LCD_VidPrintVar+0x43a>
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
		local_num /= 10 ;
		i--;
	}//end while

}
    4496:	cb 5b       	subi	r28, 0xBB	; 187
    4498:	df 4f       	sbci	r29, 0xFF	; 255
    449a:	0f b6       	in	r0, 0x3f	; 63
    449c:	f8 94       	cli
    449e:	de bf       	out	0x3e, r29	; 62
    44a0:	0f be       	out	0x3f, r0	; 63
    44a2:	cd bf       	out	0x3d, r28	; 61
    44a4:	cf 91       	pop	r28
    44a6:	df 91       	pop	r29
    44a8:	1f 91       	pop	r17
    44aa:	0f 91       	pop	r16
    44ac:	ff 90       	pop	r15
    44ae:	ef 90       	pop	r14
    44b0:	df 90       	pop	r13
    44b2:	cf 90       	pop	r12
    44b4:	bf 90       	pop	r11
    44b6:	af 90       	pop	r10
    44b8:	9f 90       	pop	r9
    44ba:	8f 90       	pop	r8
    44bc:	7f 90       	pop	r7
    44be:	6f 90       	pop	r6
    44c0:	5f 90       	pop	r5
    44c2:	4f 90       	pop	r4
    44c4:	3f 90       	pop	r3
    44c6:	2f 90       	pop	r2
    44c8:	08 95       	ret

000044ca <LCD_VidPosCur>:
void LCD_VidPosCur(u8 Copy_U8Row , u8 Copy_U8Col ) {
    44ca:	df 93       	push	r29
    44cc:	cf 93       	push	r28
    44ce:	00 d0       	rcall	.+0      	; 0x44d0 <LCD_VidPosCur+0x6>
    44d0:	0f 92       	push	r0
    44d2:	cd b7       	in	r28, 0x3d	; 61
    44d4:	de b7       	in	r29, 0x3e	; 62
    44d6:	8a 83       	std	Y+2, r24	; 0x02
    44d8:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_Address = 0 ;
    44da:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_U8Row == 0)
    44dc:	8a 81       	ldd	r24, Y+2	; 0x02
    44de:	88 23       	and	r24, r24
    44e0:	19 f4       	brne	.+6      	; 0x44e8 <LCD_VidPosCur+0x1e>
		Local_Address =0x80 ;
    44e2:	80 e8       	ldi	r24, 0x80	; 128
    44e4:	89 83       	std	Y+1, r24	; 0x01
    44e6:	05 c0       	rjmp	.+10     	; 0x44f2 <LCD_VidPosCur+0x28>
	else if (Copy_U8Row == 1)
    44e8:	8a 81       	ldd	r24, Y+2	; 0x02
    44ea:	81 30       	cpi	r24, 0x01	; 1
    44ec:	11 f4       	brne	.+4      	; 0x44f2 <LCD_VidPosCur+0x28>
		Local_Address =0xC0 ;
    44ee:	80 ec       	ldi	r24, 0xC0	; 192
    44f0:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_U8Col < 16 )
    44f2:	8b 81       	ldd	r24, Y+3	; 0x03
    44f4:	80 31       	cpi	r24, 0x10	; 16
    44f6:	20 f4       	brcc	.+8      	; 0x4500 <LCD_VidPosCur+0x36>
		Local_Address += Copy_U8Col ;
    44f8:	89 81       	ldd	r24, Y+1	; 0x01
    44fa:	9b 81       	ldd	r25, Y+3	; 0x03
    44fc:	89 0f       	add	r24, r25
    44fe:	89 83       	std	Y+1, r24	; 0x01
	LCD_VidSendCommend ( Local_Address );
    4500:	89 81       	ldd	r24, Y+1	; 0x01
    4502:	0e 94 9f 18 	call	0x313e	; 0x313e <LCD_VidSendCommend>
}
    4506:	0f 90       	pop	r0
    4508:	0f 90       	pop	r0
    450a:	0f 90       	pop	r0
    450c:	cf 91       	pop	r28
    450e:	df 91       	pop	r29
    4510:	08 95       	ret

00004512 <LCD_VidClear>:
void LCD_VidClear (){
    4512:	df 93       	push	r29
    4514:	cf 93       	push	r28
    4516:	cd b7       	in	r28, 0x3d	; 61
    4518:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommend(DISPLAY_CLEAR) ;
    451a:	81 e0       	ldi	r24, 0x01	; 1
    451c:	0e 94 9f 18 	call	0x313e	; 0x313e <LCD_VidSendCommend>
}
    4520:	cf 91       	pop	r28
    4522:	df 91       	pop	r29
    4524:	08 95       	ret

00004526 <main>:
#include "DIO_interface.h"
#include "INTERRUPT_Interface.h"
#include "ADC_interface.h"
#include "avr/delay.h"

void main (void){
    4526:	af 92       	push	r10
    4528:	bf 92       	push	r11
    452a:	cf 92       	push	r12
    452c:	df 92       	push	r13
    452e:	ef 92       	push	r14
    4530:	ff 92       	push	r15
    4532:	0f 93       	push	r16
    4534:	1f 93       	push	r17
    4536:	df 93       	push	r29
    4538:	cf 93       	push	r28
    453a:	cd b7       	in	r28, 0x3d	; 61
    453c:	de b7       	in	r29, 0x3e	; 62
    453e:	c0 58       	subi	r28, 0x80	; 128
    4540:	d0 40       	sbci	r29, 0x00	; 0
    4542:	0f b6       	in	r0, 0x3f	; 63
    4544:	f8 94       	cli
    4546:	de bf       	out	0x3e, r29	; 62
    4548:	0f be       	out	0x3f, r0	; 63
    454a:	cd bf       	out	0x3d, r28	; 61
	//to initailize LCD
	LCD_VidInit();
    454c:	0e 94 aa 19 	call	0x3354	; 0x3354 <LCD_VidInit>

	//initialize ADC
	ADC_VidInit();
    4550:	0e 94 27 14 	call	0x284e	; 0x284e <ADC_VidInit>

	while(1){
   	    LCD_VidPosCur(0,0);
    4554:	80 e0       	ldi	r24, 0x00	; 0
    4556:	60 e0       	ldi	r22, 0x00	; 0
    4558:	0e 94 65 22 	call	0x44ca	; 0x44ca <LCD_VidPosCur>
     	LCD_VidSendString("ANALOG : ");
    455c:	80 e6       	ldi	r24, 0x60	; 96
    455e:	90 e0       	ldi	r25, 0x00	; 0
    4560:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <LCD_VidSendString>
		LCD_VidPrintVar(ADC_VidReadChannel(0));
    4564:	80 e0       	ldi	r24, 0x00	; 0
    4566:	0e 94 3d 14 	call	0x287a	; 0x287a <ADC_VidReadChannel>
    456a:	5c 01       	movw	r10, r24
    456c:	cc 24       	eor	r12, r12
    456e:	dd 24       	eor	r13, r13
    4570:	ee 24       	eor	r14, r14
    4572:	ff 24       	eor	r15, r15
    4574:	87 01       	movw	r16, r14
    4576:	2a 2d       	mov	r18, r10
    4578:	3b 2d       	mov	r19, r11
    457a:	4c 2d       	mov	r20, r12
    457c:	5d 2d       	mov	r21, r13
    457e:	6e 2d       	mov	r22, r14
    4580:	7f 2d       	mov	r23, r15
    4582:	80 2f       	mov	r24, r16
    4584:	91 2f       	mov	r25, r17
    4586:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <LCD_VidPrintVar>
		LCD_VidSendString(" mV");
    458a:	8a e6       	ldi	r24, 0x6A	; 106
    458c:	90 e0       	ldi	r25, 0x00	; 0
    458e:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <LCD_VidSendString>
		LCD_VidPosCur(1,0);
    4592:	81 e0       	ldi	r24, 0x01	; 1
    4594:	60 e0       	ldi	r22, 0x00	; 0
    4596:	0e 94 65 22 	call	0x44ca	; 0x44ca <LCD_VidPosCur>
		LCD_VidSendString("BUTTON : ");
    459a:	8e e6       	ldi	r24, 0x6E	; 110
    459c:	90 e0       	ldi	r25, 0x00	; 0
    459e:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <LCD_VidSendString>
        switch (ADC_VidReadChannel(0)){
    45a2:	80 e0       	ldi	r24, 0x00	; 0
    45a4:	0e 94 3d 14 	call	0x287a	; 0x287a <ADC_VidReadChannel>
    45a8:	c1 58       	subi	r28, 0x81	; 129
    45aa:	df 4f       	sbci	r29, 0xFF	; 255
    45ac:	99 83       	std	Y+1, r25	; 0x01
    45ae:	88 83       	st	Y, r24
    45b0:	cf 57       	subi	r28, 0x7F	; 127
    45b2:	d0 40       	sbci	r29, 0x00	; 0
    45b4:	c1 58       	subi	r28, 0x81	; 129
    45b6:	df 4f       	sbci	r29, 0xFF	; 255
    45b8:	88 81       	ld	r24, Y
    45ba:	99 81       	ldd	r25, Y+1	; 0x01
    45bc:	cf 57       	subi	r28, 0x7F	; 127
    45be:	d0 40       	sbci	r29, 0x00	; 0
    45c0:	e5 e0       	ldi	r30, 0x05	; 5
    45c2:	8a 37       	cpi	r24, 0x7A	; 122
    45c4:	9e 07       	cpc	r25, r30
    45c6:	09 f4       	brne	.+2      	; 0x45ca <main+0xa4>
    45c8:	e8 c3       	rjmp	.+2000   	; 0x4d9a <main+0x874>
    45ca:	c1 58       	subi	r28, 0x81	; 129
    45cc:	df 4f       	sbci	r29, 0xFF	; 255
    45ce:	88 81       	ld	r24, Y
    45d0:	99 81       	ldd	r25, Y+1	; 0x01
    45d2:	cf 57       	subi	r28, 0x7F	; 127
    45d4:	d0 40       	sbci	r29, 0x00	; 0
    45d6:	e5 e0       	ldi	r30, 0x05	; 5
    45d8:	8b 37       	cpi	r24, 0x7B	; 123
    45da:	9e 07       	cpc	r25, r30
    45dc:	c0 f5       	brcc	.+112    	; 0x464e <main+0x128>
    45de:	c1 58       	subi	r28, 0x81	; 129
    45e0:	df 4f       	sbci	r29, 0xFF	; 255
    45e2:	88 81       	ld	r24, Y
    45e4:	99 81       	ldd	r25, Y+1	; 0x01
    45e6:	cf 57       	subi	r28, 0x7F	; 127
    45e8:	d0 40       	sbci	r29, 0x00	; 0
    45ea:	e2 e0       	ldi	r30, 0x02	; 2
    45ec:	89 35       	cpi	r24, 0x59	; 89
    45ee:	9e 07       	cpc	r25, r30
    45f0:	09 f4       	brne	.+2      	; 0x45f4 <main+0xce>
    45f2:	c3 c4       	rjmp	.+2438   	; 0x4f7a <main+0xa54>
    45f4:	c1 58       	subi	r28, 0x81	; 129
    45f6:	df 4f       	sbci	r29, 0xFF	; 255
    45f8:	88 81       	ld	r24, Y
    45fa:	99 81       	ldd	r25, Y+1	; 0x01
    45fc:	cf 57       	subi	r28, 0x7F	; 127
    45fe:	d0 40       	sbci	r29, 0x00	; 0
    4600:	e2 e0       	ldi	r30, 0x02	; 2
    4602:	8a 35       	cpi	r24, 0x5A	; 90
    4604:	9e 07       	cpc	r25, r30
    4606:	60 f4       	brcc	.+24     	; 0x4620 <main+0xfa>
    4608:	c1 58       	subi	r28, 0x81	; 129
    460a:	df 4f       	sbci	r29, 0xFF	; 255
    460c:	88 81       	ld	r24, Y
    460e:	99 81       	ldd	r25, Y+1	; 0x01
    4610:	cf 57       	subi	r28, 0x7F	; 127
    4612:	d0 40       	sbci	r29, 0x00	; 0
    4614:	e1 e0       	ldi	r30, 0x01	; 1
    4616:	8a 32       	cpi	r24, 0x2A	; 42
    4618:	9e 07       	cpc	r25, r30
    461a:	09 f4       	brne	.+2      	; 0x461e <main+0xf8>
    461c:	26 c5       	rjmp	.+2636   	; 0x506a <main+0xb44>
    461e:	9a cf       	rjmp	.-204    	; 0x4554 <main+0x2e>
    4620:	c1 58       	subi	r28, 0x81	; 129
    4622:	df 4f       	sbci	r29, 0xFF	; 255
    4624:	88 81       	ld	r24, Y
    4626:	99 81       	ldd	r25, Y+1	; 0x01
    4628:	cf 57       	subi	r28, 0x7F	; 127
    462a:	d0 40       	sbci	r29, 0x00	; 0
    462c:	e2 e0       	ldi	r30, 0x02	; 2
    462e:	8a 3b       	cpi	r24, 0xBA	; 186
    4630:	9e 07       	cpc	r25, r30
    4632:	09 f4       	brne	.+2      	; 0x4636 <main+0x110>
    4634:	2a c4       	rjmp	.+2132   	; 0x4e8a <main+0x964>
    4636:	c1 58       	subi	r28, 0x81	; 129
    4638:	df 4f       	sbci	r29, 0xFF	; 255
    463a:	88 81       	ld	r24, Y
    463c:	99 81       	ldd	r25, Y+1	; 0x01
    463e:	cf 57       	subi	r28, 0x7F	; 127
    4640:	d0 40       	sbci	r29, 0x00	; 0
    4642:	e3 e0       	ldi	r30, 0x03	; 3
    4644:	81 32       	cpi	r24, 0x21	; 33
    4646:	9e 07       	cpc	r25, r30
    4648:	09 f4       	brne	.+2      	; 0x464c <main+0x126>
    464a:	1c c3       	rjmp	.+1592   	; 0x4c84 <main+0x75e>
    464c:	83 cf       	rjmp	.-250    	; 0x4554 <main+0x2e>
    464e:	c1 58       	subi	r28, 0x81	; 129
    4650:	df 4f       	sbci	r29, 0xFF	; 255
    4652:	88 81       	ld	r24, Y
    4654:	99 81       	ldd	r25, Y+1	; 0x01
    4656:	cf 57       	subi	r28, 0x7F	; 127
    4658:	d0 40       	sbci	r29, 0x00	; 0
    465a:	e6 e0       	ldi	r30, 0x06	; 6
    465c:	83 34       	cpi	r24, 0x43	; 67
    465e:	9e 07       	cpc	r25, r30
    4660:	09 f4       	brne	.+2      	; 0x4664 <main+0x13e>
    4662:	57 c2       	rjmp	.+1198   	; 0x4b12 <main+0x5ec>
    4664:	c1 58       	subi	r28, 0x81	; 129
    4666:	df 4f       	sbci	r29, 0xFF	; 255
    4668:	88 81       	ld	r24, Y
    466a:	99 81       	ldd	r25, Y+1	; 0x01
    466c:	cf 57       	subi	r28, 0x7F	; 127
    466e:	d0 40       	sbci	r29, 0x00	; 0
    4670:	e6 e0       	ldi	r30, 0x06	; 6
    4672:	84 34       	cpi	r24, 0x44	; 68
    4674:	9e 07       	cpc	r25, r30
    4676:	60 f4       	brcc	.+24     	; 0x4690 <main+0x16a>
    4678:	c1 58       	subi	r28, 0x81	; 129
    467a:	df 4f       	sbci	r29, 0xFF	; 255
    467c:	88 81       	ld	r24, Y
    467e:	99 81       	ldd	r25, Y+1	; 0x01
    4680:	cf 57       	subi	r28, 0x7F	; 127
    4682:	d0 40       	sbci	r29, 0x00	; 0
    4684:	e5 e0       	ldi	r30, 0x05	; 5
    4686:	8c 3d       	cpi	r24, 0xDC	; 220
    4688:	9e 07       	cpc	r25, r30
    468a:	09 f4       	brne	.+2      	; 0x468e <main+0x168>
    468c:	89 c1       	rjmp	.+786    	; 0x49a0 <main+0x47a>
    468e:	62 cf       	rjmp	.-316    	; 0x4554 <main+0x2e>
    4690:	c1 58       	subi	r28, 0x81	; 129
    4692:	df 4f       	sbci	r29, 0xFF	; 255
    4694:	88 81       	ld	r24, Y
    4696:	99 81       	ldd	r25, Y+1	; 0x01
    4698:	cf 57       	subi	r28, 0x7F	; 127
    469a:	d0 40       	sbci	r29, 0x00	; 0
    469c:	ed e0       	ldi	r30, 0x0D	; 13
    469e:	80 3b       	cpi	r24, 0xB0	; 176
    46a0:	9e 07       	cpc	r25, r30
    46a2:	09 f4       	brne	.+2      	; 0x46a6 <main+0x180>
    46a4:	c4 c0       	rjmp	.+392    	; 0x482e <main+0x308>
    46a6:	c1 58       	subi	r28, 0x81	; 129
    46a8:	df 4f       	sbci	r29, 0xFF	; 255
    46aa:	88 81       	ld	r24, Y
    46ac:	99 81       	ldd	r25, Y+1	; 0x01
    46ae:	cf 57       	subi	r28, 0x7F	; 127
    46b0:	d0 40       	sbci	r29, 0x00	; 0
    46b2:	ef e0       	ldi	r30, 0x0F	; 15
    46b4:	82 3a       	cpi	r24, 0xA2	; 162
    46b6:	9e 07       	cpc	r25, r30
    46b8:	09 f0       	breq	.+2      	; 0x46bc <main+0x196>
    46ba:	4c cf       	rjmp	.-360    	; 0x4554 <main+0x2e>
        case 4002 : LCD_VidSendChar('7') ; _delay_ms(1000); LCD_VidClear(); break ;
    46bc:	87 e3       	ldi	r24, 0x37	; 55
    46be:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    46c2:	fe 01       	movw	r30, r28
    46c4:	e5 58       	subi	r30, 0x85	; 133
    46c6:	ff 4f       	sbci	r31, 0xFF	; 255
    46c8:	80 e0       	ldi	r24, 0x00	; 0
    46ca:	90 e0       	ldi	r25, 0x00	; 0
    46cc:	aa e7       	ldi	r26, 0x7A	; 122
    46ce:	b4 e4       	ldi	r27, 0x44	; 68
    46d0:	80 83       	st	Z, r24
    46d2:	91 83       	std	Z+1, r25	; 0x01
    46d4:	a2 83       	std	Z+2, r26	; 0x02
    46d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46d8:	8e 01       	movw	r16, r28
    46da:	09 58       	subi	r16, 0x89	; 137
    46dc:	1f 4f       	sbci	r17, 0xFF	; 255
    46de:	fe 01       	movw	r30, r28
    46e0:	e5 58       	subi	r30, 0x85	; 133
    46e2:	ff 4f       	sbci	r31, 0xFF	; 255
    46e4:	60 81       	ld	r22, Z
    46e6:	71 81       	ldd	r23, Z+1	; 0x01
    46e8:	82 81       	ldd	r24, Z+2	; 0x02
    46ea:	93 81       	ldd	r25, Z+3	; 0x03
    46ec:	20 e0       	ldi	r18, 0x00	; 0
    46ee:	30 e0       	ldi	r19, 0x00	; 0
    46f0:	4a ef       	ldi	r20, 0xFA	; 250
    46f2:	54 e4       	ldi	r21, 0x44	; 68
    46f4:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    46f8:	dc 01       	movw	r26, r24
    46fa:	cb 01       	movw	r24, r22
    46fc:	f8 01       	movw	r30, r16
    46fe:	80 83       	st	Z, r24
    4700:	91 83       	std	Z+1, r25	; 0x01
    4702:	a2 83       	std	Z+2, r26	; 0x02
    4704:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4706:	fe 01       	movw	r30, r28
    4708:	e9 58       	subi	r30, 0x89	; 137
    470a:	ff 4f       	sbci	r31, 0xFF	; 255
    470c:	60 81       	ld	r22, Z
    470e:	71 81       	ldd	r23, Z+1	; 0x01
    4710:	82 81       	ldd	r24, Z+2	; 0x02
    4712:	93 81       	ldd	r25, Z+3	; 0x03
    4714:	20 e0       	ldi	r18, 0x00	; 0
    4716:	30 e0       	ldi	r19, 0x00	; 0
    4718:	40 e8       	ldi	r20, 0x80	; 128
    471a:	5f e3       	ldi	r21, 0x3F	; 63
    471c:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4720:	88 23       	and	r24, r24
    4722:	44 f4       	brge	.+16     	; 0x4734 <main+0x20e>
		__ticks = 1;
    4724:	fe 01       	movw	r30, r28
    4726:	eb 58       	subi	r30, 0x8B	; 139
    4728:	ff 4f       	sbci	r31, 0xFF	; 255
    472a:	81 e0       	ldi	r24, 0x01	; 1
    472c:	90 e0       	ldi	r25, 0x00	; 0
    472e:	91 83       	std	Z+1, r25	; 0x01
    4730:	80 83       	st	Z, r24
    4732:	64 c0       	rjmp	.+200    	; 0x47fc <main+0x2d6>
	else if (__tmp > 65535)
    4734:	fe 01       	movw	r30, r28
    4736:	e9 58       	subi	r30, 0x89	; 137
    4738:	ff 4f       	sbci	r31, 0xFF	; 255
    473a:	60 81       	ld	r22, Z
    473c:	71 81       	ldd	r23, Z+1	; 0x01
    473e:	82 81       	ldd	r24, Z+2	; 0x02
    4740:	93 81       	ldd	r25, Z+3	; 0x03
    4742:	20 e0       	ldi	r18, 0x00	; 0
    4744:	3f ef       	ldi	r19, 0xFF	; 255
    4746:	4f e7       	ldi	r20, 0x7F	; 127
    4748:	57 e4       	ldi	r21, 0x47	; 71
    474a:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    474e:	18 16       	cp	r1, r24
    4750:	0c f0       	brlt	.+2      	; 0x4754 <main+0x22e>
    4752:	43 c0       	rjmp	.+134    	; 0x47da <main+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4754:	fe 01       	movw	r30, r28
    4756:	e5 58       	subi	r30, 0x85	; 133
    4758:	ff 4f       	sbci	r31, 0xFF	; 255
    475a:	60 81       	ld	r22, Z
    475c:	71 81       	ldd	r23, Z+1	; 0x01
    475e:	82 81       	ldd	r24, Z+2	; 0x02
    4760:	93 81       	ldd	r25, Z+3	; 0x03
    4762:	20 e0       	ldi	r18, 0x00	; 0
    4764:	30 e0       	ldi	r19, 0x00	; 0
    4766:	40 e2       	ldi	r20, 0x20	; 32
    4768:	51 e4       	ldi	r21, 0x41	; 65
    476a:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    476e:	dc 01       	movw	r26, r24
    4770:	cb 01       	movw	r24, r22
    4772:	8e 01       	movw	r16, r28
    4774:	0b 58       	subi	r16, 0x8B	; 139
    4776:	1f 4f       	sbci	r17, 0xFF	; 255
    4778:	bc 01       	movw	r22, r24
    477a:	cd 01       	movw	r24, r26
    477c:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4780:	dc 01       	movw	r26, r24
    4782:	cb 01       	movw	r24, r22
    4784:	f8 01       	movw	r30, r16
    4786:	91 83       	std	Z+1, r25	; 0x01
    4788:	80 83       	st	Z, r24
    478a:	1f c0       	rjmp	.+62     	; 0x47ca <main+0x2a4>
    478c:	fe 01       	movw	r30, r28
    478e:	ed 58       	subi	r30, 0x8D	; 141
    4790:	ff 4f       	sbci	r31, 0xFF	; 255
    4792:	88 ec       	ldi	r24, 0xC8	; 200
    4794:	90 e0       	ldi	r25, 0x00	; 0
    4796:	91 83       	std	Z+1, r25	; 0x01
    4798:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    479a:	fe 01       	movw	r30, r28
    479c:	ed 58       	subi	r30, 0x8D	; 141
    479e:	ff 4f       	sbci	r31, 0xFF	; 255
    47a0:	80 81       	ld	r24, Z
    47a2:	91 81       	ldd	r25, Z+1	; 0x01
    47a4:	01 97       	sbiw	r24, 0x01	; 1
    47a6:	f1 f7       	brne	.-4      	; 0x47a4 <main+0x27e>
    47a8:	fe 01       	movw	r30, r28
    47aa:	ed 58       	subi	r30, 0x8D	; 141
    47ac:	ff 4f       	sbci	r31, 0xFF	; 255
    47ae:	91 83       	std	Z+1, r25	; 0x01
    47b0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47b2:	de 01       	movw	r26, r28
    47b4:	ab 58       	subi	r26, 0x8B	; 139
    47b6:	bf 4f       	sbci	r27, 0xFF	; 255
    47b8:	fe 01       	movw	r30, r28
    47ba:	eb 58       	subi	r30, 0x8B	; 139
    47bc:	ff 4f       	sbci	r31, 0xFF	; 255
    47be:	80 81       	ld	r24, Z
    47c0:	91 81       	ldd	r25, Z+1	; 0x01
    47c2:	01 97       	sbiw	r24, 0x01	; 1
    47c4:	11 96       	adiw	r26, 0x01	; 1
    47c6:	9c 93       	st	X, r25
    47c8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47ca:	fe 01       	movw	r30, r28
    47cc:	eb 58       	subi	r30, 0x8B	; 139
    47ce:	ff 4f       	sbci	r31, 0xFF	; 255
    47d0:	80 81       	ld	r24, Z
    47d2:	91 81       	ldd	r25, Z+1	; 0x01
    47d4:	00 97       	sbiw	r24, 0x00	; 0
    47d6:	d1 f6       	brne	.-76     	; 0x478c <main+0x266>
    47d8:	27 c0       	rjmp	.+78     	; 0x4828 <main+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47da:	8e 01       	movw	r16, r28
    47dc:	0b 58       	subi	r16, 0x8B	; 139
    47de:	1f 4f       	sbci	r17, 0xFF	; 255
    47e0:	fe 01       	movw	r30, r28
    47e2:	e9 58       	subi	r30, 0x89	; 137
    47e4:	ff 4f       	sbci	r31, 0xFF	; 255
    47e6:	60 81       	ld	r22, Z
    47e8:	71 81       	ldd	r23, Z+1	; 0x01
    47ea:	82 81       	ldd	r24, Z+2	; 0x02
    47ec:	93 81       	ldd	r25, Z+3	; 0x03
    47ee:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    47f2:	dc 01       	movw	r26, r24
    47f4:	cb 01       	movw	r24, r22
    47f6:	f8 01       	movw	r30, r16
    47f8:	91 83       	std	Z+1, r25	; 0x01
    47fa:	80 83       	st	Z, r24
    47fc:	de 01       	movw	r26, r28
    47fe:	af 58       	subi	r26, 0x8F	; 143
    4800:	bf 4f       	sbci	r27, 0xFF	; 255
    4802:	fe 01       	movw	r30, r28
    4804:	eb 58       	subi	r30, 0x8B	; 139
    4806:	ff 4f       	sbci	r31, 0xFF	; 255
    4808:	80 81       	ld	r24, Z
    480a:	91 81       	ldd	r25, Z+1	; 0x01
    480c:	8d 93       	st	X+, r24
    480e:	9c 93       	st	X, r25
    4810:	fe 01       	movw	r30, r28
    4812:	ef 58       	subi	r30, 0x8F	; 143
    4814:	ff 4f       	sbci	r31, 0xFF	; 255
    4816:	80 81       	ld	r24, Z
    4818:	91 81       	ldd	r25, Z+1	; 0x01
    481a:	01 97       	sbiw	r24, 0x01	; 1
    481c:	f1 f7       	brne	.-4      	; 0x481a <main+0x2f4>
    481e:	fe 01       	movw	r30, r28
    4820:	ef 58       	subi	r30, 0x8F	; 143
    4822:	ff 4f       	sbci	r31, 0xFF	; 255
    4824:	91 83       	std	Z+1, r25	; 0x01
    4826:	80 83       	st	Z, r24
    4828:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    482c:	93 ce       	rjmp	.-730    	; 0x4554 <main+0x2e>
        case 3504 : LCD_VidSendChar('4') ; _delay_ms(1000); LCD_VidClear(); break ;
    482e:	84 e3       	ldi	r24, 0x34	; 52
    4830:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    4834:	fe 01       	movw	r30, r28
    4836:	e3 59       	subi	r30, 0x93	; 147
    4838:	ff 4f       	sbci	r31, 0xFF	; 255
    483a:	80 e0       	ldi	r24, 0x00	; 0
    483c:	90 e0       	ldi	r25, 0x00	; 0
    483e:	aa e7       	ldi	r26, 0x7A	; 122
    4840:	b4 e4       	ldi	r27, 0x44	; 68
    4842:	80 83       	st	Z, r24
    4844:	91 83       	std	Z+1, r25	; 0x01
    4846:	a2 83       	std	Z+2, r26	; 0x02
    4848:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    484a:	8e 01       	movw	r16, r28
    484c:	07 59       	subi	r16, 0x97	; 151
    484e:	1f 4f       	sbci	r17, 0xFF	; 255
    4850:	fe 01       	movw	r30, r28
    4852:	e3 59       	subi	r30, 0x93	; 147
    4854:	ff 4f       	sbci	r31, 0xFF	; 255
    4856:	60 81       	ld	r22, Z
    4858:	71 81       	ldd	r23, Z+1	; 0x01
    485a:	82 81       	ldd	r24, Z+2	; 0x02
    485c:	93 81       	ldd	r25, Z+3	; 0x03
    485e:	20 e0       	ldi	r18, 0x00	; 0
    4860:	30 e0       	ldi	r19, 0x00	; 0
    4862:	4a ef       	ldi	r20, 0xFA	; 250
    4864:	54 e4       	ldi	r21, 0x44	; 68
    4866:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    486a:	dc 01       	movw	r26, r24
    486c:	cb 01       	movw	r24, r22
    486e:	f8 01       	movw	r30, r16
    4870:	80 83       	st	Z, r24
    4872:	91 83       	std	Z+1, r25	; 0x01
    4874:	a2 83       	std	Z+2, r26	; 0x02
    4876:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4878:	fe 01       	movw	r30, r28
    487a:	e7 59       	subi	r30, 0x97	; 151
    487c:	ff 4f       	sbci	r31, 0xFF	; 255
    487e:	60 81       	ld	r22, Z
    4880:	71 81       	ldd	r23, Z+1	; 0x01
    4882:	82 81       	ldd	r24, Z+2	; 0x02
    4884:	93 81       	ldd	r25, Z+3	; 0x03
    4886:	20 e0       	ldi	r18, 0x00	; 0
    4888:	30 e0       	ldi	r19, 0x00	; 0
    488a:	40 e8       	ldi	r20, 0x80	; 128
    488c:	5f e3       	ldi	r21, 0x3F	; 63
    488e:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4892:	88 23       	and	r24, r24
    4894:	44 f4       	brge	.+16     	; 0x48a6 <main+0x380>
		__ticks = 1;
    4896:	fe 01       	movw	r30, r28
    4898:	e9 59       	subi	r30, 0x99	; 153
    489a:	ff 4f       	sbci	r31, 0xFF	; 255
    489c:	81 e0       	ldi	r24, 0x01	; 1
    489e:	90 e0       	ldi	r25, 0x00	; 0
    48a0:	91 83       	std	Z+1, r25	; 0x01
    48a2:	80 83       	st	Z, r24
    48a4:	64 c0       	rjmp	.+200    	; 0x496e <main+0x448>
	else if (__tmp > 65535)
    48a6:	fe 01       	movw	r30, r28
    48a8:	e7 59       	subi	r30, 0x97	; 151
    48aa:	ff 4f       	sbci	r31, 0xFF	; 255
    48ac:	60 81       	ld	r22, Z
    48ae:	71 81       	ldd	r23, Z+1	; 0x01
    48b0:	82 81       	ldd	r24, Z+2	; 0x02
    48b2:	93 81       	ldd	r25, Z+3	; 0x03
    48b4:	20 e0       	ldi	r18, 0x00	; 0
    48b6:	3f ef       	ldi	r19, 0xFF	; 255
    48b8:	4f e7       	ldi	r20, 0x7F	; 127
    48ba:	57 e4       	ldi	r21, 0x47	; 71
    48bc:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    48c0:	18 16       	cp	r1, r24
    48c2:	0c f0       	brlt	.+2      	; 0x48c6 <main+0x3a0>
    48c4:	43 c0       	rjmp	.+134    	; 0x494c <main+0x426>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48c6:	fe 01       	movw	r30, r28
    48c8:	e3 59       	subi	r30, 0x93	; 147
    48ca:	ff 4f       	sbci	r31, 0xFF	; 255
    48cc:	60 81       	ld	r22, Z
    48ce:	71 81       	ldd	r23, Z+1	; 0x01
    48d0:	82 81       	ldd	r24, Z+2	; 0x02
    48d2:	93 81       	ldd	r25, Z+3	; 0x03
    48d4:	20 e0       	ldi	r18, 0x00	; 0
    48d6:	30 e0       	ldi	r19, 0x00	; 0
    48d8:	40 e2       	ldi	r20, 0x20	; 32
    48da:	51 e4       	ldi	r21, 0x41	; 65
    48dc:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    48e0:	dc 01       	movw	r26, r24
    48e2:	cb 01       	movw	r24, r22
    48e4:	8e 01       	movw	r16, r28
    48e6:	09 59       	subi	r16, 0x99	; 153
    48e8:	1f 4f       	sbci	r17, 0xFF	; 255
    48ea:	bc 01       	movw	r22, r24
    48ec:	cd 01       	movw	r24, r26
    48ee:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    48f2:	dc 01       	movw	r26, r24
    48f4:	cb 01       	movw	r24, r22
    48f6:	f8 01       	movw	r30, r16
    48f8:	91 83       	std	Z+1, r25	; 0x01
    48fa:	80 83       	st	Z, r24
    48fc:	1f c0       	rjmp	.+62     	; 0x493c <main+0x416>
    48fe:	fe 01       	movw	r30, r28
    4900:	eb 59       	subi	r30, 0x9B	; 155
    4902:	ff 4f       	sbci	r31, 0xFF	; 255
    4904:	88 ec       	ldi	r24, 0xC8	; 200
    4906:	90 e0       	ldi	r25, 0x00	; 0
    4908:	91 83       	std	Z+1, r25	; 0x01
    490a:	80 83       	st	Z, r24
    490c:	fe 01       	movw	r30, r28
    490e:	eb 59       	subi	r30, 0x9B	; 155
    4910:	ff 4f       	sbci	r31, 0xFF	; 255
    4912:	80 81       	ld	r24, Z
    4914:	91 81       	ldd	r25, Z+1	; 0x01
    4916:	01 97       	sbiw	r24, 0x01	; 1
    4918:	f1 f7       	brne	.-4      	; 0x4916 <main+0x3f0>
    491a:	fe 01       	movw	r30, r28
    491c:	eb 59       	subi	r30, 0x9B	; 155
    491e:	ff 4f       	sbci	r31, 0xFF	; 255
    4920:	91 83       	std	Z+1, r25	; 0x01
    4922:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4924:	de 01       	movw	r26, r28
    4926:	a9 59       	subi	r26, 0x99	; 153
    4928:	bf 4f       	sbci	r27, 0xFF	; 255
    492a:	fe 01       	movw	r30, r28
    492c:	e9 59       	subi	r30, 0x99	; 153
    492e:	ff 4f       	sbci	r31, 0xFF	; 255
    4930:	80 81       	ld	r24, Z
    4932:	91 81       	ldd	r25, Z+1	; 0x01
    4934:	01 97       	sbiw	r24, 0x01	; 1
    4936:	11 96       	adiw	r26, 0x01	; 1
    4938:	9c 93       	st	X, r25
    493a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    493c:	fe 01       	movw	r30, r28
    493e:	e9 59       	subi	r30, 0x99	; 153
    4940:	ff 4f       	sbci	r31, 0xFF	; 255
    4942:	80 81       	ld	r24, Z
    4944:	91 81       	ldd	r25, Z+1	; 0x01
    4946:	00 97       	sbiw	r24, 0x00	; 0
    4948:	d1 f6       	brne	.-76     	; 0x48fe <main+0x3d8>
    494a:	27 c0       	rjmp	.+78     	; 0x499a <main+0x474>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    494c:	8e 01       	movw	r16, r28
    494e:	09 59       	subi	r16, 0x99	; 153
    4950:	1f 4f       	sbci	r17, 0xFF	; 255
    4952:	fe 01       	movw	r30, r28
    4954:	e7 59       	subi	r30, 0x97	; 151
    4956:	ff 4f       	sbci	r31, 0xFF	; 255
    4958:	60 81       	ld	r22, Z
    495a:	71 81       	ldd	r23, Z+1	; 0x01
    495c:	82 81       	ldd	r24, Z+2	; 0x02
    495e:	93 81       	ldd	r25, Z+3	; 0x03
    4960:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4964:	dc 01       	movw	r26, r24
    4966:	cb 01       	movw	r24, r22
    4968:	f8 01       	movw	r30, r16
    496a:	91 83       	std	Z+1, r25	; 0x01
    496c:	80 83       	st	Z, r24
    496e:	de 01       	movw	r26, r28
    4970:	ad 59       	subi	r26, 0x9D	; 157
    4972:	bf 4f       	sbci	r27, 0xFF	; 255
    4974:	fe 01       	movw	r30, r28
    4976:	e9 59       	subi	r30, 0x99	; 153
    4978:	ff 4f       	sbci	r31, 0xFF	; 255
    497a:	80 81       	ld	r24, Z
    497c:	91 81       	ldd	r25, Z+1	; 0x01
    497e:	8d 93       	st	X+, r24
    4980:	9c 93       	st	X, r25
    4982:	fe 01       	movw	r30, r28
    4984:	ed 59       	subi	r30, 0x9D	; 157
    4986:	ff 4f       	sbci	r31, 0xFF	; 255
    4988:	80 81       	ld	r24, Z
    498a:	91 81       	ldd	r25, Z+1	; 0x01
    498c:	01 97       	sbiw	r24, 0x01	; 1
    498e:	f1 f7       	brne	.-4      	; 0x498c <main+0x466>
    4990:	fe 01       	movw	r30, r28
    4992:	ed 59       	subi	r30, 0x9D	; 157
    4994:	ff 4f       	sbci	r31, 0xFF	; 255
    4996:	91 83       	std	Z+1, r25	; 0x01
    4998:	80 83       	st	Z, r24
    499a:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    499e:	da cd       	rjmp	.-1100   	; 0x4554 <main+0x2e>
        case 1500 : LCD_VidSendChar('1') ; _delay_ms(1000); LCD_VidClear(); break ;
    49a0:	81 e3       	ldi	r24, 0x31	; 49
    49a2:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    49a6:	fe 01       	movw	r30, r28
    49a8:	e1 5a       	subi	r30, 0xA1	; 161
    49aa:	ff 4f       	sbci	r31, 0xFF	; 255
    49ac:	80 e0       	ldi	r24, 0x00	; 0
    49ae:	90 e0       	ldi	r25, 0x00	; 0
    49b0:	aa e7       	ldi	r26, 0x7A	; 122
    49b2:	b4 e4       	ldi	r27, 0x44	; 68
    49b4:	80 83       	st	Z, r24
    49b6:	91 83       	std	Z+1, r25	; 0x01
    49b8:	a2 83       	std	Z+2, r26	; 0x02
    49ba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49bc:	8e 01       	movw	r16, r28
    49be:	05 5a       	subi	r16, 0xA5	; 165
    49c0:	1f 4f       	sbci	r17, 0xFF	; 255
    49c2:	fe 01       	movw	r30, r28
    49c4:	e1 5a       	subi	r30, 0xA1	; 161
    49c6:	ff 4f       	sbci	r31, 0xFF	; 255
    49c8:	60 81       	ld	r22, Z
    49ca:	71 81       	ldd	r23, Z+1	; 0x01
    49cc:	82 81       	ldd	r24, Z+2	; 0x02
    49ce:	93 81       	ldd	r25, Z+3	; 0x03
    49d0:	20 e0       	ldi	r18, 0x00	; 0
    49d2:	30 e0       	ldi	r19, 0x00	; 0
    49d4:	4a ef       	ldi	r20, 0xFA	; 250
    49d6:	54 e4       	ldi	r21, 0x44	; 68
    49d8:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    49dc:	dc 01       	movw	r26, r24
    49de:	cb 01       	movw	r24, r22
    49e0:	f8 01       	movw	r30, r16
    49e2:	80 83       	st	Z, r24
    49e4:	91 83       	std	Z+1, r25	; 0x01
    49e6:	a2 83       	std	Z+2, r26	; 0x02
    49e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    49ea:	fe 01       	movw	r30, r28
    49ec:	e5 5a       	subi	r30, 0xA5	; 165
    49ee:	ff 4f       	sbci	r31, 0xFF	; 255
    49f0:	60 81       	ld	r22, Z
    49f2:	71 81       	ldd	r23, Z+1	; 0x01
    49f4:	82 81       	ldd	r24, Z+2	; 0x02
    49f6:	93 81       	ldd	r25, Z+3	; 0x03
    49f8:	20 e0       	ldi	r18, 0x00	; 0
    49fa:	30 e0       	ldi	r19, 0x00	; 0
    49fc:	40 e8       	ldi	r20, 0x80	; 128
    49fe:	5f e3       	ldi	r21, 0x3F	; 63
    4a00:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4a04:	88 23       	and	r24, r24
    4a06:	44 f4       	brge	.+16     	; 0x4a18 <main+0x4f2>
		__ticks = 1;
    4a08:	fe 01       	movw	r30, r28
    4a0a:	e7 5a       	subi	r30, 0xA7	; 167
    4a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a0e:	81 e0       	ldi	r24, 0x01	; 1
    4a10:	90 e0       	ldi	r25, 0x00	; 0
    4a12:	91 83       	std	Z+1, r25	; 0x01
    4a14:	80 83       	st	Z, r24
    4a16:	64 c0       	rjmp	.+200    	; 0x4ae0 <main+0x5ba>
	else if (__tmp > 65535)
    4a18:	fe 01       	movw	r30, r28
    4a1a:	e5 5a       	subi	r30, 0xA5	; 165
    4a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a1e:	60 81       	ld	r22, Z
    4a20:	71 81       	ldd	r23, Z+1	; 0x01
    4a22:	82 81       	ldd	r24, Z+2	; 0x02
    4a24:	93 81       	ldd	r25, Z+3	; 0x03
    4a26:	20 e0       	ldi	r18, 0x00	; 0
    4a28:	3f ef       	ldi	r19, 0xFF	; 255
    4a2a:	4f e7       	ldi	r20, 0x7F	; 127
    4a2c:	57 e4       	ldi	r21, 0x47	; 71
    4a2e:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    4a32:	18 16       	cp	r1, r24
    4a34:	0c f0       	brlt	.+2      	; 0x4a38 <main+0x512>
    4a36:	43 c0       	rjmp	.+134    	; 0x4abe <main+0x598>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a38:	fe 01       	movw	r30, r28
    4a3a:	e1 5a       	subi	r30, 0xA1	; 161
    4a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a3e:	60 81       	ld	r22, Z
    4a40:	71 81       	ldd	r23, Z+1	; 0x01
    4a42:	82 81       	ldd	r24, Z+2	; 0x02
    4a44:	93 81       	ldd	r25, Z+3	; 0x03
    4a46:	20 e0       	ldi	r18, 0x00	; 0
    4a48:	30 e0       	ldi	r19, 0x00	; 0
    4a4a:	40 e2       	ldi	r20, 0x20	; 32
    4a4c:	51 e4       	ldi	r21, 0x41	; 65
    4a4e:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4a52:	dc 01       	movw	r26, r24
    4a54:	cb 01       	movw	r24, r22
    4a56:	8e 01       	movw	r16, r28
    4a58:	07 5a       	subi	r16, 0xA7	; 167
    4a5a:	1f 4f       	sbci	r17, 0xFF	; 255
    4a5c:	bc 01       	movw	r22, r24
    4a5e:	cd 01       	movw	r24, r26
    4a60:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4a64:	dc 01       	movw	r26, r24
    4a66:	cb 01       	movw	r24, r22
    4a68:	f8 01       	movw	r30, r16
    4a6a:	91 83       	std	Z+1, r25	; 0x01
    4a6c:	80 83       	st	Z, r24
    4a6e:	1f c0       	rjmp	.+62     	; 0x4aae <main+0x588>
    4a70:	fe 01       	movw	r30, r28
    4a72:	e9 5a       	subi	r30, 0xA9	; 169
    4a74:	ff 4f       	sbci	r31, 0xFF	; 255
    4a76:	88 ec       	ldi	r24, 0xC8	; 200
    4a78:	90 e0       	ldi	r25, 0x00	; 0
    4a7a:	91 83       	std	Z+1, r25	; 0x01
    4a7c:	80 83       	st	Z, r24
    4a7e:	fe 01       	movw	r30, r28
    4a80:	e9 5a       	subi	r30, 0xA9	; 169
    4a82:	ff 4f       	sbci	r31, 0xFF	; 255
    4a84:	80 81       	ld	r24, Z
    4a86:	91 81       	ldd	r25, Z+1	; 0x01
    4a88:	01 97       	sbiw	r24, 0x01	; 1
    4a8a:	f1 f7       	brne	.-4      	; 0x4a88 <main+0x562>
    4a8c:	fe 01       	movw	r30, r28
    4a8e:	e9 5a       	subi	r30, 0xA9	; 169
    4a90:	ff 4f       	sbci	r31, 0xFF	; 255
    4a92:	91 83       	std	Z+1, r25	; 0x01
    4a94:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a96:	de 01       	movw	r26, r28
    4a98:	a7 5a       	subi	r26, 0xA7	; 167
    4a9a:	bf 4f       	sbci	r27, 0xFF	; 255
    4a9c:	fe 01       	movw	r30, r28
    4a9e:	e7 5a       	subi	r30, 0xA7	; 167
    4aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    4aa2:	80 81       	ld	r24, Z
    4aa4:	91 81       	ldd	r25, Z+1	; 0x01
    4aa6:	01 97       	sbiw	r24, 0x01	; 1
    4aa8:	11 96       	adiw	r26, 0x01	; 1
    4aaa:	9c 93       	st	X, r25
    4aac:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4aae:	fe 01       	movw	r30, r28
    4ab0:	e7 5a       	subi	r30, 0xA7	; 167
    4ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ab4:	80 81       	ld	r24, Z
    4ab6:	91 81       	ldd	r25, Z+1	; 0x01
    4ab8:	00 97       	sbiw	r24, 0x00	; 0
    4aba:	d1 f6       	brne	.-76     	; 0x4a70 <main+0x54a>
    4abc:	27 c0       	rjmp	.+78     	; 0x4b0c <main+0x5e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4abe:	8e 01       	movw	r16, r28
    4ac0:	07 5a       	subi	r16, 0xA7	; 167
    4ac2:	1f 4f       	sbci	r17, 0xFF	; 255
    4ac4:	fe 01       	movw	r30, r28
    4ac6:	e5 5a       	subi	r30, 0xA5	; 165
    4ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    4aca:	60 81       	ld	r22, Z
    4acc:	71 81       	ldd	r23, Z+1	; 0x01
    4ace:	82 81       	ldd	r24, Z+2	; 0x02
    4ad0:	93 81       	ldd	r25, Z+3	; 0x03
    4ad2:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4ad6:	dc 01       	movw	r26, r24
    4ad8:	cb 01       	movw	r24, r22
    4ada:	f8 01       	movw	r30, r16
    4adc:	91 83       	std	Z+1, r25	; 0x01
    4ade:	80 83       	st	Z, r24
    4ae0:	de 01       	movw	r26, r28
    4ae2:	ab 5a       	subi	r26, 0xAB	; 171
    4ae4:	bf 4f       	sbci	r27, 0xFF	; 255
    4ae6:	fe 01       	movw	r30, r28
    4ae8:	e7 5a       	subi	r30, 0xA7	; 167
    4aea:	ff 4f       	sbci	r31, 0xFF	; 255
    4aec:	80 81       	ld	r24, Z
    4aee:	91 81       	ldd	r25, Z+1	; 0x01
    4af0:	8d 93       	st	X+, r24
    4af2:	9c 93       	st	X, r25
    4af4:	fe 01       	movw	r30, r28
    4af6:	eb 5a       	subi	r30, 0xAB	; 171
    4af8:	ff 4f       	sbci	r31, 0xFF	; 255
    4afa:	80 81       	ld	r24, Z
    4afc:	91 81       	ldd	r25, Z+1	; 0x01
    4afe:	01 97       	sbiw	r24, 0x01	; 1
    4b00:	f1 f7       	brne	.-4      	; 0x4afe <main+0x5d8>
    4b02:	fe 01       	movw	r30, r28
    4b04:	eb 5a       	subi	r30, 0xAB	; 171
    4b06:	ff 4f       	sbci	r31, 0xFF	; 255
    4b08:	91 83       	std	Z+1, r25	; 0x01
    4b0a:	80 83       	st	Z, r24
    4b0c:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    4b10:	21 cd       	rjmp	.-1470   	; 0x4554 <main+0x2e>
        case 1603 : LCD_VidSendChar('8') ; _delay_ms(1000); LCD_VidClear(); break ;
    4b12:	88 e3       	ldi	r24, 0x38	; 56
    4b14:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    4b18:	fe 01       	movw	r30, r28
    4b1a:	ef 5a       	subi	r30, 0xAF	; 175
    4b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b1e:	80 e0       	ldi	r24, 0x00	; 0
    4b20:	90 e0       	ldi	r25, 0x00	; 0
    4b22:	aa e7       	ldi	r26, 0x7A	; 122
    4b24:	b4 e4       	ldi	r27, 0x44	; 68
    4b26:	80 83       	st	Z, r24
    4b28:	91 83       	std	Z+1, r25	; 0x01
    4b2a:	a2 83       	std	Z+2, r26	; 0x02
    4b2c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b2e:	8e 01       	movw	r16, r28
    4b30:	03 5b       	subi	r16, 0xB3	; 179
    4b32:	1f 4f       	sbci	r17, 0xFF	; 255
    4b34:	fe 01       	movw	r30, r28
    4b36:	ef 5a       	subi	r30, 0xAF	; 175
    4b38:	ff 4f       	sbci	r31, 0xFF	; 255
    4b3a:	60 81       	ld	r22, Z
    4b3c:	71 81       	ldd	r23, Z+1	; 0x01
    4b3e:	82 81       	ldd	r24, Z+2	; 0x02
    4b40:	93 81       	ldd	r25, Z+3	; 0x03
    4b42:	20 e0       	ldi	r18, 0x00	; 0
    4b44:	30 e0       	ldi	r19, 0x00	; 0
    4b46:	4a ef       	ldi	r20, 0xFA	; 250
    4b48:	54 e4       	ldi	r21, 0x44	; 68
    4b4a:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4b4e:	dc 01       	movw	r26, r24
    4b50:	cb 01       	movw	r24, r22
    4b52:	f8 01       	movw	r30, r16
    4b54:	80 83       	st	Z, r24
    4b56:	91 83       	std	Z+1, r25	; 0x01
    4b58:	a2 83       	std	Z+2, r26	; 0x02
    4b5a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b5c:	fe 01       	movw	r30, r28
    4b5e:	e3 5b       	subi	r30, 0xB3	; 179
    4b60:	ff 4f       	sbci	r31, 0xFF	; 255
    4b62:	60 81       	ld	r22, Z
    4b64:	71 81       	ldd	r23, Z+1	; 0x01
    4b66:	82 81       	ldd	r24, Z+2	; 0x02
    4b68:	93 81       	ldd	r25, Z+3	; 0x03
    4b6a:	20 e0       	ldi	r18, 0x00	; 0
    4b6c:	30 e0       	ldi	r19, 0x00	; 0
    4b6e:	40 e8       	ldi	r20, 0x80	; 128
    4b70:	5f e3       	ldi	r21, 0x3F	; 63
    4b72:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4b76:	88 23       	and	r24, r24
    4b78:	44 f4       	brge	.+16     	; 0x4b8a <main+0x664>
		__ticks = 1;
    4b7a:	fe 01       	movw	r30, r28
    4b7c:	e5 5b       	subi	r30, 0xB5	; 181
    4b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b80:	81 e0       	ldi	r24, 0x01	; 1
    4b82:	90 e0       	ldi	r25, 0x00	; 0
    4b84:	91 83       	std	Z+1, r25	; 0x01
    4b86:	80 83       	st	Z, r24
    4b88:	64 c0       	rjmp	.+200    	; 0x4c52 <main+0x72c>
	else if (__tmp > 65535)
    4b8a:	fe 01       	movw	r30, r28
    4b8c:	e3 5b       	subi	r30, 0xB3	; 179
    4b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b90:	60 81       	ld	r22, Z
    4b92:	71 81       	ldd	r23, Z+1	; 0x01
    4b94:	82 81       	ldd	r24, Z+2	; 0x02
    4b96:	93 81       	ldd	r25, Z+3	; 0x03
    4b98:	20 e0       	ldi	r18, 0x00	; 0
    4b9a:	3f ef       	ldi	r19, 0xFF	; 255
    4b9c:	4f e7       	ldi	r20, 0x7F	; 127
    4b9e:	57 e4       	ldi	r21, 0x47	; 71
    4ba0:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    4ba4:	18 16       	cp	r1, r24
    4ba6:	0c f0       	brlt	.+2      	; 0x4baa <main+0x684>
    4ba8:	43 c0       	rjmp	.+134    	; 0x4c30 <main+0x70a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4baa:	fe 01       	movw	r30, r28
    4bac:	ef 5a       	subi	r30, 0xAF	; 175
    4bae:	ff 4f       	sbci	r31, 0xFF	; 255
    4bb0:	60 81       	ld	r22, Z
    4bb2:	71 81       	ldd	r23, Z+1	; 0x01
    4bb4:	82 81       	ldd	r24, Z+2	; 0x02
    4bb6:	93 81       	ldd	r25, Z+3	; 0x03
    4bb8:	20 e0       	ldi	r18, 0x00	; 0
    4bba:	30 e0       	ldi	r19, 0x00	; 0
    4bbc:	40 e2       	ldi	r20, 0x20	; 32
    4bbe:	51 e4       	ldi	r21, 0x41	; 65
    4bc0:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4bc4:	dc 01       	movw	r26, r24
    4bc6:	cb 01       	movw	r24, r22
    4bc8:	8e 01       	movw	r16, r28
    4bca:	05 5b       	subi	r16, 0xB5	; 181
    4bcc:	1f 4f       	sbci	r17, 0xFF	; 255
    4bce:	bc 01       	movw	r22, r24
    4bd0:	cd 01       	movw	r24, r26
    4bd2:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4bd6:	dc 01       	movw	r26, r24
    4bd8:	cb 01       	movw	r24, r22
    4bda:	f8 01       	movw	r30, r16
    4bdc:	91 83       	std	Z+1, r25	; 0x01
    4bde:	80 83       	st	Z, r24
    4be0:	1f c0       	rjmp	.+62     	; 0x4c20 <main+0x6fa>
    4be2:	fe 01       	movw	r30, r28
    4be4:	e7 5b       	subi	r30, 0xB7	; 183
    4be6:	ff 4f       	sbci	r31, 0xFF	; 255
    4be8:	88 ec       	ldi	r24, 0xC8	; 200
    4bea:	90 e0       	ldi	r25, 0x00	; 0
    4bec:	91 83       	std	Z+1, r25	; 0x01
    4bee:	80 83       	st	Z, r24
    4bf0:	fe 01       	movw	r30, r28
    4bf2:	e7 5b       	subi	r30, 0xB7	; 183
    4bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    4bf6:	80 81       	ld	r24, Z
    4bf8:	91 81       	ldd	r25, Z+1	; 0x01
    4bfa:	01 97       	sbiw	r24, 0x01	; 1
    4bfc:	f1 f7       	brne	.-4      	; 0x4bfa <main+0x6d4>
    4bfe:	fe 01       	movw	r30, r28
    4c00:	e7 5b       	subi	r30, 0xB7	; 183
    4c02:	ff 4f       	sbci	r31, 0xFF	; 255
    4c04:	91 83       	std	Z+1, r25	; 0x01
    4c06:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c08:	de 01       	movw	r26, r28
    4c0a:	a5 5b       	subi	r26, 0xB5	; 181
    4c0c:	bf 4f       	sbci	r27, 0xFF	; 255
    4c0e:	fe 01       	movw	r30, r28
    4c10:	e5 5b       	subi	r30, 0xB5	; 181
    4c12:	ff 4f       	sbci	r31, 0xFF	; 255
    4c14:	80 81       	ld	r24, Z
    4c16:	91 81       	ldd	r25, Z+1	; 0x01
    4c18:	01 97       	sbiw	r24, 0x01	; 1
    4c1a:	11 96       	adiw	r26, 0x01	; 1
    4c1c:	9c 93       	st	X, r25
    4c1e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c20:	fe 01       	movw	r30, r28
    4c22:	e5 5b       	subi	r30, 0xB5	; 181
    4c24:	ff 4f       	sbci	r31, 0xFF	; 255
    4c26:	80 81       	ld	r24, Z
    4c28:	91 81       	ldd	r25, Z+1	; 0x01
    4c2a:	00 97       	sbiw	r24, 0x00	; 0
    4c2c:	d1 f6       	brne	.-76     	; 0x4be2 <main+0x6bc>
    4c2e:	27 c0       	rjmp	.+78     	; 0x4c7e <main+0x758>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c30:	8e 01       	movw	r16, r28
    4c32:	05 5b       	subi	r16, 0xB5	; 181
    4c34:	1f 4f       	sbci	r17, 0xFF	; 255
    4c36:	fe 01       	movw	r30, r28
    4c38:	e3 5b       	subi	r30, 0xB3	; 179
    4c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    4c3c:	60 81       	ld	r22, Z
    4c3e:	71 81       	ldd	r23, Z+1	; 0x01
    4c40:	82 81       	ldd	r24, Z+2	; 0x02
    4c42:	93 81       	ldd	r25, Z+3	; 0x03
    4c44:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4c48:	dc 01       	movw	r26, r24
    4c4a:	cb 01       	movw	r24, r22
    4c4c:	f8 01       	movw	r30, r16
    4c4e:	91 83       	std	Z+1, r25	; 0x01
    4c50:	80 83       	st	Z, r24
    4c52:	de 01       	movw	r26, r28
    4c54:	a9 5b       	subi	r26, 0xB9	; 185
    4c56:	bf 4f       	sbci	r27, 0xFF	; 255
    4c58:	fe 01       	movw	r30, r28
    4c5a:	e5 5b       	subi	r30, 0xB5	; 181
    4c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c5e:	80 81       	ld	r24, Z
    4c60:	91 81       	ldd	r25, Z+1	; 0x01
    4c62:	8d 93       	st	X+, r24
    4c64:	9c 93       	st	X, r25
    4c66:	fe 01       	movw	r30, r28
    4c68:	e9 5b       	subi	r30, 0xB9	; 185
    4c6a:	ff 4f       	sbci	r31, 0xFF	; 255
    4c6c:	80 81       	ld	r24, Z
    4c6e:	91 81       	ldd	r25, Z+1	; 0x01
    4c70:	01 97       	sbiw	r24, 0x01	; 1
    4c72:	f1 f7       	brne	.-4      	; 0x4c70 <main+0x74a>
    4c74:	fe 01       	movw	r30, r28
    4c76:	e9 5b       	subi	r30, 0xB9	; 185
    4c78:	ff 4f       	sbci	r31, 0xFF	; 255
    4c7a:	91 83       	std	Z+1, r25	; 0x01
    4c7c:	80 83       	st	Z, r24
    4c7e:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    4c82:	68 cc       	rjmp	.-1840   	; 0x4554 <main+0x2e>
        case 801  : LCD_VidSendChar('9') ; _delay_ms(1000); LCD_VidClear(); break ;
    4c84:	89 e3       	ldi	r24, 0x39	; 57
    4c86:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    4c8a:	fe 01       	movw	r30, r28
    4c8c:	ed 5b       	subi	r30, 0xBD	; 189
    4c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c90:	80 e0       	ldi	r24, 0x00	; 0
    4c92:	90 e0       	ldi	r25, 0x00	; 0
    4c94:	aa e7       	ldi	r26, 0x7A	; 122
    4c96:	b4 e4       	ldi	r27, 0x44	; 68
    4c98:	80 83       	st	Z, r24
    4c9a:	91 83       	std	Z+1, r25	; 0x01
    4c9c:	a2 83       	std	Z+2, r26	; 0x02
    4c9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ca0:	8e 01       	movw	r16, r28
    4ca2:	01 5c       	subi	r16, 0xC1	; 193
    4ca4:	1f 4f       	sbci	r17, 0xFF	; 255
    4ca6:	fe 01       	movw	r30, r28
    4ca8:	ed 5b       	subi	r30, 0xBD	; 189
    4caa:	ff 4f       	sbci	r31, 0xFF	; 255
    4cac:	60 81       	ld	r22, Z
    4cae:	71 81       	ldd	r23, Z+1	; 0x01
    4cb0:	82 81       	ldd	r24, Z+2	; 0x02
    4cb2:	93 81       	ldd	r25, Z+3	; 0x03
    4cb4:	20 e0       	ldi	r18, 0x00	; 0
    4cb6:	30 e0       	ldi	r19, 0x00	; 0
    4cb8:	4a ef       	ldi	r20, 0xFA	; 250
    4cba:	54 e4       	ldi	r21, 0x44	; 68
    4cbc:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4cc0:	dc 01       	movw	r26, r24
    4cc2:	cb 01       	movw	r24, r22
    4cc4:	f8 01       	movw	r30, r16
    4cc6:	80 83       	st	Z, r24
    4cc8:	91 83       	std	Z+1, r25	; 0x01
    4cca:	a2 83       	std	Z+2, r26	; 0x02
    4ccc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4cce:	fe 01       	movw	r30, r28
    4cd0:	ff 96       	adiw	r30, 0x3f	; 63
    4cd2:	60 81       	ld	r22, Z
    4cd4:	71 81       	ldd	r23, Z+1	; 0x01
    4cd6:	82 81       	ldd	r24, Z+2	; 0x02
    4cd8:	93 81       	ldd	r25, Z+3	; 0x03
    4cda:	20 e0       	ldi	r18, 0x00	; 0
    4cdc:	30 e0       	ldi	r19, 0x00	; 0
    4cde:	40 e8       	ldi	r20, 0x80	; 128
    4ce0:	5f e3       	ldi	r21, 0x3F	; 63
    4ce2:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4ce6:	88 23       	and	r24, r24
    4ce8:	2c f4       	brge	.+10     	; 0x4cf4 <main+0x7ce>
		__ticks = 1;
    4cea:	81 e0       	ldi	r24, 0x01	; 1
    4cec:	90 e0       	ldi	r25, 0x00	; 0
    4cee:	9e af       	std	Y+62, r25	; 0x3e
    4cf0:	8d af       	std	Y+61, r24	; 0x3d
    4cf2:	46 c0       	rjmp	.+140    	; 0x4d80 <main+0x85a>
	else if (__tmp > 65535)
    4cf4:	fe 01       	movw	r30, r28
    4cf6:	ff 96       	adiw	r30, 0x3f	; 63
    4cf8:	60 81       	ld	r22, Z
    4cfa:	71 81       	ldd	r23, Z+1	; 0x01
    4cfc:	82 81       	ldd	r24, Z+2	; 0x02
    4cfe:	93 81       	ldd	r25, Z+3	; 0x03
    4d00:	20 e0       	ldi	r18, 0x00	; 0
    4d02:	3f ef       	ldi	r19, 0xFF	; 255
    4d04:	4f e7       	ldi	r20, 0x7F	; 127
    4d06:	57 e4       	ldi	r21, 0x47	; 71
    4d08:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    4d0c:	18 16       	cp	r1, r24
    4d0e:	64 f5       	brge	.+88     	; 0x4d68 <main+0x842>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d10:	fe 01       	movw	r30, r28
    4d12:	ed 5b       	subi	r30, 0xBD	; 189
    4d14:	ff 4f       	sbci	r31, 0xFF	; 255
    4d16:	60 81       	ld	r22, Z
    4d18:	71 81       	ldd	r23, Z+1	; 0x01
    4d1a:	82 81       	ldd	r24, Z+2	; 0x02
    4d1c:	93 81       	ldd	r25, Z+3	; 0x03
    4d1e:	20 e0       	ldi	r18, 0x00	; 0
    4d20:	30 e0       	ldi	r19, 0x00	; 0
    4d22:	40 e2       	ldi	r20, 0x20	; 32
    4d24:	51 e4       	ldi	r21, 0x41	; 65
    4d26:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4d2a:	dc 01       	movw	r26, r24
    4d2c:	cb 01       	movw	r24, r22
    4d2e:	bc 01       	movw	r22, r24
    4d30:	cd 01       	movw	r24, r26
    4d32:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4d36:	dc 01       	movw	r26, r24
    4d38:	cb 01       	movw	r24, r22
    4d3a:	9e af       	std	Y+62, r25	; 0x3e
    4d3c:	8d af       	std	Y+61, r24	; 0x3d
    4d3e:	0f c0       	rjmp	.+30     	; 0x4d5e <main+0x838>
    4d40:	88 ec       	ldi	r24, 0xC8	; 200
    4d42:	90 e0       	ldi	r25, 0x00	; 0
    4d44:	9c af       	std	Y+60, r25	; 0x3c
    4d46:	8b af       	std	Y+59, r24	; 0x3b
    4d48:	8b ad       	ldd	r24, Y+59	; 0x3b
    4d4a:	9c ad       	ldd	r25, Y+60	; 0x3c
    4d4c:	01 97       	sbiw	r24, 0x01	; 1
    4d4e:	f1 f7       	brne	.-4      	; 0x4d4c <main+0x826>
    4d50:	9c af       	std	Y+60, r25	; 0x3c
    4d52:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d54:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d56:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d58:	01 97       	sbiw	r24, 0x01	; 1
    4d5a:	9e af       	std	Y+62, r25	; 0x3e
    4d5c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d5e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d60:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d62:	00 97       	sbiw	r24, 0x00	; 0
    4d64:	69 f7       	brne	.-38     	; 0x4d40 <main+0x81a>
    4d66:	16 c0       	rjmp	.+44     	; 0x4d94 <main+0x86e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d68:	fe 01       	movw	r30, r28
    4d6a:	ff 96       	adiw	r30, 0x3f	; 63
    4d6c:	60 81       	ld	r22, Z
    4d6e:	71 81       	ldd	r23, Z+1	; 0x01
    4d70:	82 81       	ldd	r24, Z+2	; 0x02
    4d72:	93 81       	ldd	r25, Z+3	; 0x03
    4d74:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4d78:	dc 01       	movw	r26, r24
    4d7a:	cb 01       	movw	r24, r22
    4d7c:	9e af       	std	Y+62, r25	; 0x3e
    4d7e:	8d af       	std	Y+61, r24	; 0x3d
    4d80:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d82:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d84:	9a af       	std	Y+58, r25	; 0x3a
    4d86:	89 af       	std	Y+57, r24	; 0x39
    4d88:	89 ad       	ldd	r24, Y+57	; 0x39
    4d8a:	9a ad       	ldd	r25, Y+58	; 0x3a
    4d8c:	01 97       	sbiw	r24, 0x01	; 1
    4d8e:	f1 f7       	brne	.-4      	; 0x4d8c <main+0x866>
    4d90:	9a af       	std	Y+58, r25	; 0x3a
    4d92:	89 af       	std	Y+57, r24	; 0x39
    4d94:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    4d98:	dd cb       	rjmp	.-2118   	; 0x4554 <main+0x2e>
        case 1402 : LCD_VidSendChar('5') ; _delay_ms(1000); LCD_VidClear(); break ;
    4d9a:	85 e3       	ldi	r24, 0x35	; 53
    4d9c:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    4da0:	80 e0       	ldi	r24, 0x00	; 0
    4da2:	90 e0       	ldi	r25, 0x00	; 0
    4da4:	aa e7       	ldi	r26, 0x7A	; 122
    4da6:	b4 e4       	ldi	r27, 0x44	; 68
    4da8:	8d ab       	std	Y+53, r24	; 0x35
    4daa:	9e ab       	std	Y+54, r25	; 0x36
    4dac:	af ab       	std	Y+55, r26	; 0x37
    4dae:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4db0:	6d a9       	ldd	r22, Y+53	; 0x35
    4db2:	7e a9       	ldd	r23, Y+54	; 0x36
    4db4:	8f a9       	ldd	r24, Y+55	; 0x37
    4db6:	98 ad       	ldd	r25, Y+56	; 0x38
    4db8:	20 e0       	ldi	r18, 0x00	; 0
    4dba:	30 e0       	ldi	r19, 0x00	; 0
    4dbc:	4a ef       	ldi	r20, 0xFA	; 250
    4dbe:	54 e4       	ldi	r21, 0x44	; 68
    4dc0:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4dc4:	dc 01       	movw	r26, r24
    4dc6:	cb 01       	movw	r24, r22
    4dc8:	89 ab       	std	Y+49, r24	; 0x31
    4dca:	9a ab       	std	Y+50, r25	; 0x32
    4dcc:	ab ab       	std	Y+51, r26	; 0x33
    4dce:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4dd0:	69 a9       	ldd	r22, Y+49	; 0x31
    4dd2:	7a a9       	ldd	r23, Y+50	; 0x32
    4dd4:	8b a9       	ldd	r24, Y+51	; 0x33
    4dd6:	9c a9       	ldd	r25, Y+52	; 0x34
    4dd8:	20 e0       	ldi	r18, 0x00	; 0
    4dda:	30 e0       	ldi	r19, 0x00	; 0
    4ddc:	40 e8       	ldi	r20, 0x80	; 128
    4dde:	5f e3       	ldi	r21, 0x3F	; 63
    4de0:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4de4:	88 23       	and	r24, r24
    4de6:	2c f4       	brge	.+10     	; 0x4df2 <main+0x8cc>
		__ticks = 1;
    4de8:	81 e0       	ldi	r24, 0x01	; 1
    4dea:	90 e0       	ldi	r25, 0x00	; 0
    4dec:	98 ab       	std	Y+48, r25	; 0x30
    4dee:	8f a7       	std	Y+47, r24	; 0x2f
    4df0:	3f c0       	rjmp	.+126    	; 0x4e70 <main+0x94a>
	else if (__tmp > 65535)
    4df2:	69 a9       	ldd	r22, Y+49	; 0x31
    4df4:	7a a9       	ldd	r23, Y+50	; 0x32
    4df6:	8b a9       	ldd	r24, Y+51	; 0x33
    4df8:	9c a9       	ldd	r25, Y+52	; 0x34
    4dfa:	20 e0       	ldi	r18, 0x00	; 0
    4dfc:	3f ef       	ldi	r19, 0xFF	; 255
    4dfe:	4f e7       	ldi	r20, 0x7F	; 127
    4e00:	57 e4       	ldi	r21, 0x47	; 71
    4e02:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    4e06:	18 16       	cp	r1, r24
    4e08:	4c f5       	brge	.+82     	; 0x4e5c <main+0x936>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e0a:	6d a9       	ldd	r22, Y+53	; 0x35
    4e0c:	7e a9       	ldd	r23, Y+54	; 0x36
    4e0e:	8f a9       	ldd	r24, Y+55	; 0x37
    4e10:	98 ad       	ldd	r25, Y+56	; 0x38
    4e12:	20 e0       	ldi	r18, 0x00	; 0
    4e14:	30 e0       	ldi	r19, 0x00	; 0
    4e16:	40 e2       	ldi	r20, 0x20	; 32
    4e18:	51 e4       	ldi	r21, 0x41	; 65
    4e1a:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4e1e:	dc 01       	movw	r26, r24
    4e20:	cb 01       	movw	r24, r22
    4e22:	bc 01       	movw	r22, r24
    4e24:	cd 01       	movw	r24, r26
    4e26:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4e2a:	dc 01       	movw	r26, r24
    4e2c:	cb 01       	movw	r24, r22
    4e2e:	98 ab       	std	Y+48, r25	; 0x30
    4e30:	8f a7       	std	Y+47, r24	; 0x2f
    4e32:	0f c0       	rjmp	.+30     	; 0x4e52 <main+0x92c>
    4e34:	88 ec       	ldi	r24, 0xC8	; 200
    4e36:	90 e0       	ldi	r25, 0x00	; 0
    4e38:	9e a7       	std	Y+46, r25	; 0x2e
    4e3a:	8d a7       	std	Y+45, r24	; 0x2d
    4e3c:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e3e:	9e a5       	ldd	r25, Y+46	; 0x2e
    4e40:	01 97       	sbiw	r24, 0x01	; 1
    4e42:	f1 f7       	brne	.-4      	; 0x4e40 <main+0x91a>
    4e44:	9e a7       	std	Y+46, r25	; 0x2e
    4e46:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e48:	8f a5       	ldd	r24, Y+47	; 0x2f
    4e4a:	98 a9       	ldd	r25, Y+48	; 0x30
    4e4c:	01 97       	sbiw	r24, 0x01	; 1
    4e4e:	98 ab       	std	Y+48, r25	; 0x30
    4e50:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e52:	8f a5       	ldd	r24, Y+47	; 0x2f
    4e54:	98 a9       	ldd	r25, Y+48	; 0x30
    4e56:	00 97       	sbiw	r24, 0x00	; 0
    4e58:	69 f7       	brne	.-38     	; 0x4e34 <main+0x90e>
    4e5a:	14 c0       	rjmp	.+40     	; 0x4e84 <main+0x95e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e5c:	69 a9       	ldd	r22, Y+49	; 0x31
    4e5e:	7a a9       	ldd	r23, Y+50	; 0x32
    4e60:	8b a9       	ldd	r24, Y+51	; 0x33
    4e62:	9c a9       	ldd	r25, Y+52	; 0x34
    4e64:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4e68:	dc 01       	movw	r26, r24
    4e6a:	cb 01       	movw	r24, r22
    4e6c:	98 ab       	std	Y+48, r25	; 0x30
    4e6e:	8f a7       	std	Y+47, r24	; 0x2f
    4e70:	8f a5       	ldd	r24, Y+47	; 0x2f
    4e72:	98 a9       	ldd	r25, Y+48	; 0x30
    4e74:	9c a7       	std	Y+44, r25	; 0x2c
    4e76:	8b a7       	std	Y+43, r24	; 0x2b
    4e78:	8b a5       	ldd	r24, Y+43	; 0x2b
    4e7a:	9c a5       	ldd	r25, Y+44	; 0x2c
    4e7c:	01 97       	sbiw	r24, 0x01	; 1
    4e7e:	f1 f7       	brne	.-4      	; 0x4e7c <main+0x956>
    4e80:	9c a7       	std	Y+44, r25	; 0x2c
    4e82:	8b a7       	std	Y+43, r24	; 0x2b
    4e84:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    4e88:	65 cb       	rjmp	.-2358   	; 0x4554 <main+0x2e>
        case 698  : LCD_VidSendChar('6') ; _delay_ms(1000); LCD_VidClear(); break ;
    4e8a:	86 e3       	ldi	r24, 0x36	; 54
    4e8c:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    4e90:	80 e0       	ldi	r24, 0x00	; 0
    4e92:	90 e0       	ldi	r25, 0x00	; 0
    4e94:	aa e7       	ldi	r26, 0x7A	; 122
    4e96:	b4 e4       	ldi	r27, 0x44	; 68
    4e98:	8f a3       	std	Y+39, r24	; 0x27
    4e9a:	98 a7       	std	Y+40, r25	; 0x28
    4e9c:	a9 a7       	std	Y+41, r26	; 0x29
    4e9e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ea0:	6f a1       	ldd	r22, Y+39	; 0x27
    4ea2:	78 a5       	ldd	r23, Y+40	; 0x28
    4ea4:	89 a5       	ldd	r24, Y+41	; 0x29
    4ea6:	9a a5       	ldd	r25, Y+42	; 0x2a
    4ea8:	20 e0       	ldi	r18, 0x00	; 0
    4eaa:	30 e0       	ldi	r19, 0x00	; 0
    4eac:	4a ef       	ldi	r20, 0xFA	; 250
    4eae:	54 e4       	ldi	r21, 0x44	; 68
    4eb0:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4eb4:	dc 01       	movw	r26, r24
    4eb6:	cb 01       	movw	r24, r22
    4eb8:	8b a3       	std	Y+35, r24	; 0x23
    4eba:	9c a3       	std	Y+36, r25	; 0x24
    4ebc:	ad a3       	std	Y+37, r26	; 0x25
    4ebe:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4ec0:	6b a1       	ldd	r22, Y+35	; 0x23
    4ec2:	7c a1       	ldd	r23, Y+36	; 0x24
    4ec4:	8d a1       	ldd	r24, Y+37	; 0x25
    4ec6:	9e a1       	ldd	r25, Y+38	; 0x26
    4ec8:	20 e0       	ldi	r18, 0x00	; 0
    4eca:	30 e0       	ldi	r19, 0x00	; 0
    4ecc:	40 e8       	ldi	r20, 0x80	; 128
    4ece:	5f e3       	ldi	r21, 0x3F	; 63
    4ed0:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4ed4:	88 23       	and	r24, r24
    4ed6:	2c f4       	brge	.+10     	; 0x4ee2 <main+0x9bc>
		__ticks = 1;
    4ed8:	81 e0       	ldi	r24, 0x01	; 1
    4eda:	90 e0       	ldi	r25, 0x00	; 0
    4edc:	9a a3       	std	Y+34, r25	; 0x22
    4ede:	89 a3       	std	Y+33, r24	; 0x21
    4ee0:	3f c0       	rjmp	.+126    	; 0x4f60 <main+0xa3a>
	else if (__tmp > 65535)
    4ee2:	6b a1       	ldd	r22, Y+35	; 0x23
    4ee4:	7c a1       	ldd	r23, Y+36	; 0x24
    4ee6:	8d a1       	ldd	r24, Y+37	; 0x25
    4ee8:	9e a1       	ldd	r25, Y+38	; 0x26
    4eea:	20 e0       	ldi	r18, 0x00	; 0
    4eec:	3f ef       	ldi	r19, 0xFF	; 255
    4eee:	4f e7       	ldi	r20, 0x7F	; 127
    4ef0:	57 e4       	ldi	r21, 0x47	; 71
    4ef2:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    4ef6:	18 16       	cp	r1, r24
    4ef8:	4c f5       	brge	.+82     	; 0x4f4c <main+0xa26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4efa:	6f a1       	ldd	r22, Y+39	; 0x27
    4efc:	78 a5       	ldd	r23, Y+40	; 0x28
    4efe:	89 a5       	ldd	r24, Y+41	; 0x29
    4f00:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f02:	20 e0       	ldi	r18, 0x00	; 0
    4f04:	30 e0       	ldi	r19, 0x00	; 0
    4f06:	40 e2       	ldi	r20, 0x20	; 32
    4f08:	51 e4       	ldi	r21, 0x41	; 65
    4f0a:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4f0e:	dc 01       	movw	r26, r24
    4f10:	cb 01       	movw	r24, r22
    4f12:	bc 01       	movw	r22, r24
    4f14:	cd 01       	movw	r24, r26
    4f16:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4f1a:	dc 01       	movw	r26, r24
    4f1c:	cb 01       	movw	r24, r22
    4f1e:	9a a3       	std	Y+34, r25	; 0x22
    4f20:	89 a3       	std	Y+33, r24	; 0x21
    4f22:	0f c0       	rjmp	.+30     	; 0x4f42 <main+0xa1c>
    4f24:	88 ec       	ldi	r24, 0xC8	; 200
    4f26:	90 e0       	ldi	r25, 0x00	; 0
    4f28:	98 a3       	std	Y+32, r25	; 0x20
    4f2a:	8f 8f       	std	Y+31, r24	; 0x1f
    4f2c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f2e:	98 a1       	ldd	r25, Y+32	; 0x20
    4f30:	01 97       	sbiw	r24, 0x01	; 1
    4f32:	f1 f7       	brne	.-4      	; 0x4f30 <main+0xa0a>
    4f34:	98 a3       	std	Y+32, r25	; 0x20
    4f36:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f38:	89 a1       	ldd	r24, Y+33	; 0x21
    4f3a:	9a a1       	ldd	r25, Y+34	; 0x22
    4f3c:	01 97       	sbiw	r24, 0x01	; 1
    4f3e:	9a a3       	std	Y+34, r25	; 0x22
    4f40:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f42:	89 a1       	ldd	r24, Y+33	; 0x21
    4f44:	9a a1       	ldd	r25, Y+34	; 0x22
    4f46:	00 97       	sbiw	r24, 0x00	; 0
    4f48:	69 f7       	brne	.-38     	; 0x4f24 <main+0x9fe>
    4f4a:	14 c0       	rjmp	.+40     	; 0x4f74 <main+0xa4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f4c:	6b a1       	ldd	r22, Y+35	; 0x23
    4f4e:	7c a1       	ldd	r23, Y+36	; 0x24
    4f50:	8d a1       	ldd	r24, Y+37	; 0x25
    4f52:	9e a1       	ldd	r25, Y+38	; 0x26
    4f54:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    4f58:	dc 01       	movw	r26, r24
    4f5a:	cb 01       	movw	r24, r22
    4f5c:	9a a3       	std	Y+34, r25	; 0x22
    4f5e:	89 a3       	std	Y+33, r24	; 0x21
    4f60:	89 a1       	ldd	r24, Y+33	; 0x21
    4f62:	9a a1       	ldd	r25, Y+34	; 0x22
    4f64:	9e 8f       	std	Y+30, r25	; 0x1e
    4f66:	8d 8f       	std	Y+29, r24	; 0x1d
    4f68:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f6a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4f6c:	01 97       	sbiw	r24, 0x01	; 1
    4f6e:	f1 f7       	brne	.-4      	; 0x4f6c <main+0xa46>
    4f70:	9e 8f       	std	Y+30, r25	; 0x1e
    4f72:	8d 8f       	std	Y+29, r24	; 0x1d
    4f74:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    4f78:	ed ca       	rjmp	.-2598   	; 0x4554 <main+0x2e>
        case 601  : LCD_VidSendChar('2') ; _delay_ms(1000); LCD_VidClear(); break ;
    4f7a:	82 e3       	ldi	r24, 0x32	; 50
    4f7c:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    4f80:	80 e0       	ldi	r24, 0x00	; 0
    4f82:	90 e0       	ldi	r25, 0x00	; 0
    4f84:	aa e7       	ldi	r26, 0x7A	; 122
    4f86:	b4 e4       	ldi	r27, 0x44	; 68
    4f88:	89 8f       	std	Y+25, r24	; 0x19
    4f8a:	9a 8f       	std	Y+26, r25	; 0x1a
    4f8c:	ab 8f       	std	Y+27, r26	; 0x1b
    4f8e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f90:	69 8d       	ldd	r22, Y+25	; 0x19
    4f92:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4f94:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4f96:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f98:	20 e0       	ldi	r18, 0x00	; 0
    4f9a:	30 e0       	ldi	r19, 0x00	; 0
    4f9c:	4a ef       	ldi	r20, 0xFA	; 250
    4f9e:	54 e4       	ldi	r21, 0x44	; 68
    4fa0:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4fa4:	dc 01       	movw	r26, r24
    4fa6:	cb 01       	movw	r24, r22
    4fa8:	8d 8b       	std	Y+21, r24	; 0x15
    4faa:	9e 8b       	std	Y+22, r25	; 0x16
    4fac:	af 8b       	std	Y+23, r26	; 0x17
    4fae:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4fb0:	6d 89       	ldd	r22, Y+21	; 0x15
    4fb2:	7e 89       	ldd	r23, Y+22	; 0x16
    4fb4:	8f 89       	ldd	r24, Y+23	; 0x17
    4fb6:	98 8d       	ldd	r25, Y+24	; 0x18
    4fb8:	20 e0       	ldi	r18, 0x00	; 0
    4fba:	30 e0       	ldi	r19, 0x00	; 0
    4fbc:	40 e8       	ldi	r20, 0x80	; 128
    4fbe:	5f e3       	ldi	r21, 0x3F	; 63
    4fc0:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    4fc4:	88 23       	and	r24, r24
    4fc6:	2c f4       	brge	.+10     	; 0x4fd2 <main+0xaac>
		__ticks = 1;
    4fc8:	81 e0       	ldi	r24, 0x01	; 1
    4fca:	90 e0       	ldi	r25, 0x00	; 0
    4fcc:	9c 8b       	std	Y+20, r25	; 0x14
    4fce:	8b 8b       	std	Y+19, r24	; 0x13
    4fd0:	3f c0       	rjmp	.+126    	; 0x5050 <main+0xb2a>
	else if (__tmp > 65535)
    4fd2:	6d 89       	ldd	r22, Y+21	; 0x15
    4fd4:	7e 89       	ldd	r23, Y+22	; 0x16
    4fd6:	8f 89       	ldd	r24, Y+23	; 0x17
    4fd8:	98 8d       	ldd	r25, Y+24	; 0x18
    4fda:	20 e0       	ldi	r18, 0x00	; 0
    4fdc:	3f ef       	ldi	r19, 0xFF	; 255
    4fde:	4f e7       	ldi	r20, 0x7F	; 127
    4fe0:	57 e4       	ldi	r21, 0x47	; 71
    4fe2:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    4fe6:	18 16       	cp	r1, r24
    4fe8:	4c f5       	brge	.+82     	; 0x503c <main+0xb16>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fea:	69 8d       	ldd	r22, Y+25	; 0x19
    4fec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4fee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4ff0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4ff2:	20 e0       	ldi	r18, 0x00	; 0
    4ff4:	30 e0       	ldi	r19, 0x00	; 0
    4ff6:	40 e2       	ldi	r20, 0x20	; 32
    4ff8:	51 e4       	ldi	r21, 0x41	; 65
    4ffa:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    4ffe:	dc 01       	movw	r26, r24
    5000:	cb 01       	movw	r24, r22
    5002:	bc 01       	movw	r22, r24
    5004:	cd 01       	movw	r24, r26
    5006:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    500a:	dc 01       	movw	r26, r24
    500c:	cb 01       	movw	r24, r22
    500e:	9c 8b       	std	Y+20, r25	; 0x14
    5010:	8b 8b       	std	Y+19, r24	; 0x13
    5012:	0f c0       	rjmp	.+30     	; 0x5032 <main+0xb0c>
    5014:	88 ec       	ldi	r24, 0xC8	; 200
    5016:	90 e0       	ldi	r25, 0x00	; 0
    5018:	9a 8b       	std	Y+18, r25	; 0x12
    501a:	89 8b       	std	Y+17, r24	; 0x11
    501c:	89 89       	ldd	r24, Y+17	; 0x11
    501e:	9a 89       	ldd	r25, Y+18	; 0x12
    5020:	01 97       	sbiw	r24, 0x01	; 1
    5022:	f1 f7       	brne	.-4      	; 0x5020 <main+0xafa>
    5024:	9a 8b       	std	Y+18, r25	; 0x12
    5026:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5028:	8b 89       	ldd	r24, Y+19	; 0x13
    502a:	9c 89       	ldd	r25, Y+20	; 0x14
    502c:	01 97       	sbiw	r24, 0x01	; 1
    502e:	9c 8b       	std	Y+20, r25	; 0x14
    5030:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5032:	8b 89       	ldd	r24, Y+19	; 0x13
    5034:	9c 89       	ldd	r25, Y+20	; 0x14
    5036:	00 97       	sbiw	r24, 0x00	; 0
    5038:	69 f7       	brne	.-38     	; 0x5014 <main+0xaee>
    503a:	14 c0       	rjmp	.+40     	; 0x5064 <main+0xb3e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    503c:	6d 89       	ldd	r22, Y+21	; 0x15
    503e:	7e 89       	ldd	r23, Y+22	; 0x16
    5040:	8f 89       	ldd	r24, Y+23	; 0x17
    5042:	98 8d       	ldd	r25, Y+24	; 0x18
    5044:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    5048:	dc 01       	movw	r26, r24
    504a:	cb 01       	movw	r24, r22
    504c:	9c 8b       	std	Y+20, r25	; 0x14
    504e:	8b 8b       	std	Y+19, r24	; 0x13
    5050:	8b 89       	ldd	r24, Y+19	; 0x13
    5052:	9c 89       	ldd	r25, Y+20	; 0x14
    5054:	98 8b       	std	Y+16, r25	; 0x10
    5056:	8f 87       	std	Y+15, r24	; 0x0f
    5058:	8f 85       	ldd	r24, Y+15	; 0x0f
    505a:	98 89       	ldd	r25, Y+16	; 0x10
    505c:	01 97       	sbiw	r24, 0x01	; 1
    505e:	f1 f7       	brne	.-4      	; 0x505c <main+0xb36>
    5060:	98 8b       	std	Y+16, r25	; 0x10
    5062:	8f 87       	std	Y+15, r24	; 0x0f
    5064:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    5068:	75 ca       	rjmp	.-2838   	; 0x4554 <main+0x2e>
        case 298  : LCD_VidSendChar('3') ; _delay_ms(1000); LCD_VidClear(); break ;
    506a:	83 e3       	ldi	r24, 0x33	; 51
    506c:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_VidSendChar>
    5070:	80 e0       	ldi	r24, 0x00	; 0
    5072:	90 e0       	ldi	r25, 0x00	; 0
    5074:	aa e7       	ldi	r26, 0x7A	; 122
    5076:	b4 e4       	ldi	r27, 0x44	; 68
    5078:	8b 87       	std	Y+11, r24	; 0x0b
    507a:	9c 87       	std	Y+12, r25	; 0x0c
    507c:	ad 87       	std	Y+13, r26	; 0x0d
    507e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5080:	6b 85       	ldd	r22, Y+11	; 0x0b
    5082:	7c 85       	ldd	r23, Y+12	; 0x0c
    5084:	8d 85       	ldd	r24, Y+13	; 0x0d
    5086:	9e 85       	ldd	r25, Y+14	; 0x0e
    5088:	20 e0       	ldi	r18, 0x00	; 0
    508a:	30 e0       	ldi	r19, 0x00	; 0
    508c:	4a ef       	ldi	r20, 0xFA	; 250
    508e:	54 e4       	ldi	r21, 0x44	; 68
    5090:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    5094:	dc 01       	movw	r26, r24
    5096:	cb 01       	movw	r24, r22
    5098:	8f 83       	std	Y+7, r24	; 0x07
    509a:	98 87       	std	Y+8, r25	; 0x08
    509c:	a9 87       	std	Y+9, r26	; 0x09
    509e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    50a0:	6f 81       	ldd	r22, Y+7	; 0x07
    50a2:	78 85       	ldd	r23, Y+8	; 0x08
    50a4:	89 85       	ldd	r24, Y+9	; 0x09
    50a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    50a8:	20 e0       	ldi	r18, 0x00	; 0
    50aa:	30 e0       	ldi	r19, 0x00	; 0
    50ac:	40 e8       	ldi	r20, 0x80	; 128
    50ae:	5f e3       	ldi	r21, 0x3F	; 63
    50b0:	0e 94 fd 11 	call	0x23fa	; 0x23fa <__ltsf2>
    50b4:	88 23       	and	r24, r24
    50b6:	2c f4       	brge	.+10     	; 0x50c2 <main+0xb9c>
		__ticks = 1;
    50b8:	81 e0       	ldi	r24, 0x01	; 1
    50ba:	90 e0       	ldi	r25, 0x00	; 0
    50bc:	9e 83       	std	Y+6, r25	; 0x06
    50be:	8d 83       	std	Y+5, r24	; 0x05
    50c0:	3f c0       	rjmp	.+126    	; 0x5140 <main+0xc1a>
	else if (__tmp > 65535)
    50c2:	6f 81       	ldd	r22, Y+7	; 0x07
    50c4:	78 85       	ldd	r23, Y+8	; 0x08
    50c6:	89 85       	ldd	r24, Y+9	; 0x09
    50c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    50ca:	20 e0       	ldi	r18, 0x00	; 0
    50cc:	3f ef       	ldi	r19, 0xFF	; 255
    50ce:	4f e7       	ldi	r20, 0x7F	; 127
    50d0:	57 e4       	ldi	r21, 0x47	; 71
    50d2:	0e 94 9d 11 	call	0x233a	; 0x233a <__gtsf2>
    50d6:	18 16       	cp	r1, r24
    50d8:	4c f5       	brge	.+82     	; 0x512c <main+0xc06>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    50da:	6b 85       	ldd	r22, Y+11	; 0x0b
    50dc:	7c 85       	ldd	r23, Y+12	; 0x0c
    50de:	8d 85       	ldd	r24, Y+13	; 0x0d
    50e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    50e2:	20 e0       	ldi	r18, 0x00	; 0
    50e4:	30 e0       	ldi	r19, 0x00	; 0
    50e6:	40 e2       	ldi	r20, 0x20	; 32
    50e8:	51 e4       	ldi	r21, 0x41	; 65
    50ea:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__mulsf3>
    50ee:	dc 01       	movw	r26, r24
    50f0:	cb 01       	movw	r24, r22
    50f2:	bc 01       	movw	r22, r24
    50f4:	cd 01       	movw	r24, r26
    50f6:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    50fa:	dc 01       	movw	r26, r24
    50fc:	cb 01       	movw	r24, r22
    50fe:	9e 83       	std	Y+6, r25	; 0x06
    5100:	8d 83       	std	Y+5, r24	; 0x05
    5102:	0f c0       	rjmp	.+30     	; 0x5122 <main+0xbfc>
    5104:	88 ec       	ldi	r24, 0xC8	; 200
    5106:	90 e0       	ldi	r25, 0x00	; 0
    5108:	9c 83       	std	Y+4, r25	; 0x04
    510a:	8b 83       	std	Y+3, r24	; 0x03
    510c:	8b 81       	ldd	r24, Y+3	; 0x03
    510e:	9c 81       	ldd	r25, Y+4	; 0x04
    5110:	01 97       	sbiw	r24, 0x01	; 1
    5112:	f1 f7       	brne	.-4      	; 0x5110 <main+0xbea>
    5114:	9c 83       	std	Y+4, r25	; 0x04
    5116:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5118:	8d 81       	ldd	r24, Y+5	; 0x05
    511a:	9e 81       	ldd	r25, Y+6	; 0x06
    511c:	01 97       	sbiw	r24, 0x01	; 1
    511e:	9e 83       	std	Y+6, r25	; 0x06
    5120:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5122:	8d 81       	ldd	r24, Y+5	; 0x05
    5124:	9e 81       	ldd	r25, Y+6	; 0x06
    5126:	00 97       	sbiw	r24, 0x00	; 0
    5128:	69 f7       	brne	.-38     	; 0x5104 <main+0xbde>
    512a:	14 c0       	rjmp	.+40     	; 0x5154 <main+0xc2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    512c:	6f 81       	ldd	r22, Y+7	; 0x07
    512e:	78 85       	ldd	r23, Y+8	; 0x08
    5130:	89 85       	ldd	r24, Y+9	; 0x09
    5132:	9a 85       	ldd	r25, Y+10	; 0x0a
    5134:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    5138:	dc 01       	movw	r26, r24
    513a:	cb 01       	movw	r24, r22
    513c:	9e 83       	std	Y+6, r25	; 0x06
    513e:	8d 83       	std	Y+5, r24	; 0x05
    5140:	8d 81       	ldd	r24, Y+5	; 0x05
    5142:	9e 81       	ldd	r25, Y+6	; 0x06
    5144:	9a 83       	std	Y+2, r25	; 0x02
    5146:	89 83       	std	Y+1, r24	; 0x01
    5148:	89 81       	ldd	r24, Y+1	; 0x01
    514a:	9a 81       	ldd	r25, Y+2	; 0x02
    514c:	01 97       	sbiw	r24, 0x01	; 1
    514e:	f1 f7       	brne	.-4      	; 0x514c <main+0xc26>
    5150:	9a 83       	std	Y+2, r25	; 0x02
    5152:	89 83       	std	Y+1, r24	; 0x01
    5154:	0e 94 89 22 	call	0x4512	; 0x4512 <LCD_VidClear>
    5158:	fd c9       	rjmp	.-3078   	; 0x4554 <main+0x2e>

0000515a <__mulsi3>:
    515a:	62 9f       	mul	r22, r18
    515c:	d0 01       	movw	r26, r0
    515e:	73 9f       	mul	r23, r19
    5160:	f0 01       	movw	r30, r0
    5162:	82 9f       	mul	r24, r18
    5164:	e0 0d       	add	r30, r0
    5166:	f1 1d       	adc	r31, r1
    5168:	64 9f       	mul	r22, r20
    516a:	e0 0d       	add	r30, r0
    516c:	f1 1d       	adc	r31, r1
    516e:	92 9f       	mul	r25, r18
    5170:	f0 0d       	add	r31, r0
    5172:	83 9f       	mul	r24, r19
    5174:	f0 0d       	add	r31, r0
    5176:	74 9f       	mul	r23, r20
    5178:	f0 0d       	add	r31, r0
    517a:	65 9f       	mul	r22, r21
    517c:	f0 0d       	add	r31, r0
    517e:	99 27       	eor	r25, r25
    5180:	72 9f       	mul	r23, r18
    5182:	b0 0d       	add	r27, r0
    5184:	e1 1d       	adc	r30, r1
    5186:	f9 1f       	adc	r31, r25
    5188:	63 9f       	mul	r22, r19
    518a:	b0 0d       	add	r27, r0
    518c:	e1 1d       	adc	r30, r1
    518e:	f9 1f       	adc	r31, r25
    5190:	bd 01       	movw	r22, r26
    5192:	cf 01       	movw	r24, r30
    5194:	11 24       	eor	r1, r1
    5196:	08 95       	ret

00005198 <__udivmodsi4>:
    5198:	a1 e2       	ldi	r26, 0x21	; 33
    519a:	1a 2e       	mov	r1, r26
    519c:	aa 1b       	sub	r26, r26
    519e:	bb 1b       	sub	r27, r27
    51a0:	fd 01       	movw	r30, r26
    51a2:	0d c0       	rjmp	.+26     	; 0x51be <__udivmodsi4_ep>

000051a4 <__udivmodsi4_loop>:
    51a4:	aa 1f       	adc	r26, r26
    51a6:	bb 1f       	adc	r27, r27
    51a8:	ee 1f       	adc	r30, r30
    51aa:	ff 1f       	adc	r31, r31
    51ac:	a2 17       	cp	r26, r18
    51ae:	b3 07       	cpc	r27, r19
    51b0:	e4 07       	cpc	r30, r20
    51b2:	f5 07       	cpc	r31, r21
    51b4:	20 f0       	brcs	.+8      	; 0x51be <__udivmodsi4_ep>
    51b6:	a2 1b       	sub	r26, r18
    51b8:	b3 0b       	sbc	r27, r19
    51ba:	e4 0b       	sbc	r30, r20
    51bc:	f5 0b       	sbc	r31, r21

000051be <__udivmodsi4_ep>:
    51be:	66 1f       	adc	r22, r22
    51c0:	77 1f       	adc	r23, r23
    51c2:	88 1f       	adc	r24, r24
    51c4:	99 1f       	adc	r25, r25
    51c6:	1a 94       	dec	r1
    51c8:	69 f7       	brne	.-38     	; 0x51a4 <__udivmodsi4_loop>
    51ca:	60 95       	com	r22
    51cc:	70 95       	com	r23
    51ce:	80 95       	com	r24
    51d0:	90 95       	com	r25
    51d2:	9b 01       	movw	r18, r22
    51d4:	ac 01       	movw	r20, r24
    51d6:	bd 01       	movw	r22, r26
    51d8:	cf 01       	movw	r24, r30
    51da:	08 95       	ret

000051dc <__prologue_saves__>:
    51dc:	2f 92       	push	r2
    51de:	3f 92       	push	r3
    51e0:	4f 92       	push	r4
    51e2:	5f 92       	push	r5
    51e4:	6f 92       	push	r6
    51e6:	7f 92       	push	r7
    51e8:	8f 92       	push	r8
    51ea:	9f 92       	push	r9
    51ec:	af 92       	push	r10
    51ee:	bf 92       	push	r11
    51f0:	cf 92       	push	r12
    51f2:	df 92       	push	r13
    51f4:	ef 92       	push	r14
    51f6:	ff 92       	push	r15
    51f8:	0f 93       	push	r16
    51fa:	1f 93       	push	r17
    51fc:	cf 93       	push	r28
    51fe:	df 93       	push	r29
    5200:	cd b7       	in	r28, 0x3d	; 61
    5202:	de b7       	in	r29, 0x3e	; 62
    5204:	ca 1b       	sub	r28, r26
    5206:	db 0b       	sbc	r29, r27
    5208:	0f b6       	in	r0, 0x3f	; 63
    520a:	f8 94       	cli
    520c:	de bf       	out	0x3e, r29	; 62
    520e:	0f be       	out	0x3f, r0	; 63
    5210:	cd bf       	out	0x3d, r28	; 61
    5212:	09 94       	ijmp

00005214 <__epilogue_restores__>:
    5214:	2a 88       	ldd	r2, Y+18	; 0x12
    5216:	39 88       	ldd	r3, Y+17	; 0x11
    5218:	48 88       	ldd	r4, Y+16	; 0x10
    521a:	5f 84       	ldd	r5, Y+15	; 0x0f
    521c:	6e 84       	ldd	r6, Y+14	; 0x0e
    521e:	7d 84       	ldd	r7, Y+13	; 0x0d
    5220:	8c 84       	ldd	r8, Y+12	; 0x0c
    5222:	9b 84       	ldd	r9, Y+11	; 0x0b
    5224:	aa 84       	ldd	r10, Y+10	; 0x0a
    5226:	b9 84       	ldd	r11, Y+9	; 0x09
    5228:	c8 84       	ldd	r12, Y+8	; 0x08
    522a:	df 80       	ldd	r13, Y+7	; 0x07
    522c:	ee 80       	ldd	r14, Y+6	; 0x06
    522e:	fd 80       	ldd	r15, Y+5	; 0x05
    5230:	0c 81       	ldd	r16, Y+4	; 0x04
    5232:	1b 81       	ldd	r17, Y+3	; 0x03
    5234:	aa 81       	ldd	r26, Y+2	; 0x02
    5236:	b9 81       	ldd	r27, Y+1	; 0x01
    5238:	ce 0f       	add	r28, r30
    523a:	d1 1d       	adc	r29, r1
    523c:	0f b6       	in	r0, 0x3f	; 63
    523e:	f8 94       	cli
    5240:	de bf       	out	0x3e, r29	; 62
    5242:	0f be       	out	0x3f, r0	; 63
    5244:	cd bf       	out	0x3d, r28	; 61
    5246:	ed 01       	movw	r28, r26
    5248:	08 95       	ret

0000524a <_exit>:
    524a:	f8 94       	cli

0000524c <__stop_program>:
    524c:	ff cf       	rjmp	.-2      	; 0x524c <__stop_program>
