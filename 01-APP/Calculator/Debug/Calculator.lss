
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006138  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000128  00800060  00006138  000061cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800188  00800188  000062f4  2**0
                  ALLOC
  3 .stab         000024cc  00000000  00000000  000062f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cb4  00000000  00000000  000087c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001e0  00000000  00000000  00009474  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000022e  00000000  00000000  00009654  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000032e8  00000000  00000000  00009882  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000165a  00000000  00000000  0000cb6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000158c  00000000  00000000  0000e1c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000200  00000000  00000000  0000f750  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000037e  00000000  00000000  0000f950  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002378  00000000  00000000  0000fcce  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00012046  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e3       	ldi	r30, 0x38	; 56
      68:	f1 e6       	ldi	r31, 0x61	; 97
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 38       	cpi	r26, 0x88	; 136
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 e8       	ldi	r26, 0x88	; 136
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ab 38       	cpi	r26, 0x8B	; 139
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 ba 23 	call	0x4774	; 0x4774 <main>
      8a:	0c 94 9a 30 	jmp	0x6134	; 0x6134 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 63 30 	jmp	0x60c6	; 0x60c6 <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 7f 30 	jmp	0x60fe	; 0x60fe <__epilogue_restores__>

00000288 <__ashldi3>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	df 93       	push	r29
     290:	cf 93       	push	r28
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
     296:	60 97       	sbiw	r28, 0x10	; 16
     298:	0f b6       	in	r0, 0x3f	; 63
     29a:	f8 94       	cli
     29c:	de bf       	out	0x3e, r29	; 62
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	cd bf       	out	0x3d, r28	; 61
     2a2:	a8 2f       	mov	r26, r24
     2a4:	00 23       	and	r16, r16
     2a6:	09 f4       	brne	.+2      	; 0x2aa <__ashldi3+0x22>
     2a8:	61 c0       	rjmp	.+194    	; 0x36c <__ashldi3+0xe4>
     2aa:	7e 01       	movw	r14, r28
     2ac:	08 94       	sec
     2ae:	e1 1c       	adc	r14, r1
     2b0:	f1 1c       	adc	r15, r1
     2b2:	88 e0       	ldi	r24, 0x08	; 8
     2b4:	f7 01       	movw	r30, r14
     2b6:	11 92       	st	Z+, r1
     2b8:	8a 95       	dec	r24
     2ba:	e9 f7       	brne	.-6      	; 0x2b6 <__ashldi3+0x2e>
     2bc:	29 83       	std	Y+1, r18	; 0x01
     2be:	3a 83       	std	Y+2, r19	; 0x02
     2c0:	4b 83       	std	Y+3, r20	; 0x03
     2c2:	5c 83       	std	Y+4, r21	; 0x04
     2c4:	6d 83       	std	Y+5, r22	; 0x05
     2c6:	7e 83       	std	Y+6, r23	; 0x06
     2c8:	af 83       	std	Y+7, r26	; 0x07
     2ca:	98 87       	std	Y+8, r25	; 0x08
     2cc:	80 e2       	ldi	r24, 0x20	; 32
     2ce:	80 1b       	sub	r24, r16
     2d0:	e8 2f       	mov	r30, r24
     2d2:	ff 27       	eor	r31, r31
     2d4:	e7 fd       	sbrc	r30, 7
     2d6:	f0 95       	com	r31
     2d8:	49 81       	ldd	r20, Y+1	; 0x01
     2da:	5a 81       	ldd	r21, Y+2	; 0x02
     2dc:	6b 81       	ldd	r22, Y+3	; 0x03
     2de:	7c 81       	ldd	r23, Y+4	; 0x04
     2e0:	18 16       	cp	r1, r24
     2e2:	84 f0       	brlt	.+32     	; 0x304 <__ashldi3+0x7c>
     2e4:	19 86       	std	Y+9, r1	; 0x09
     2e6:	1a 86       	std	Y+10, r1	; 0x0a
     2e8:	1b 86       	std	Y+11, r1	; 0x0b
     2ea:	1c 86       	std	Y+12, r1	; 0x0c
     2ec:	88 27       	eor	r24, r24
     2ee:	99 27       	eor	r25, r25
     2f0:	8e 1b       	sub	r24, r30
     2f2:	9f 0b       	sbc	r25, r31
     2f4:	04 c0       	rjmp	.+8      	; 0x2fe <__ashldi3+0x76>
     2f6:	44 0f       	add	r20, r20
     2f8:	55 1f       	adc	r21, r21
     2fa:	66 1f       	adc	r22, r22
     2fc:	77 1f       	adc	r23, r23
     2fe:	8a 95       	dec	r24
     300:	d2 f7       	brpl	.-12     	; 0x2f6 <__ashldi3+0x6e>
     302:	28 c0       	rjmp	.+80     	; 0x354 <__ashldi3+0xcc>
     304:	20 2f       	mov	r18, r16
     306:	33 27       	eor	r19, r19
     308:	27 fd       	sbrc	r18, 7
     30a:	30 95       	com	r19
     30c:	db 01       	movw	r26, r22
     30e:	ca 01       	movw	r24, r20
     310:	02 2e       	mov	r0, r18
     312:	04 c0       	rjmp	.+8      	; 0x31c <__ashldi3+0x94>
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	aa 1f       	adc	r26, r26
     31a:	bb 1f       	adc	r27, r27
     31c:	0a 94       	dec	r0
     31e:	d2 f7       	brpl	.-12     	; 0x314 <__ashldi3+0x8c>
     320:	89 87       	std	Y+9, r24	; 0x09
     322:	9a 87       	std	Y+10, r25	; 0x0a
     324:	ab 87       	std	Y+11, r26	; 0x0b
     326:	bc 87       	std	Y+12, r27	; 0x0c
     328:	04 c0       	rjmp	.+8      	; 0x332 <__ashldi3+0xaa>
     32a:	76 95       	lsr	r23
     32c:	67 95       	ror	r22
     32e:	57 95       	ror	r21
     330:	47 95       	ror	r20
     332:	ea 95       	dec	r30
     334:	d2 f7       	brpl	.-12     	; 0x32a <__ashldi3+0xa2>
     336:	8d 81       	ldd	r24, Y+5	; 0x05
     338:	9e 81       	ldd	r25, Y+6	; 0x06
     33a:	af 81       	ldd	r26, Y+7	; 0x07
     33c:	b8 85       	ldd	r27, Y+8	; 0x08
     33e:	04 c0       	rjmp	.+8      	; 0x348 <__ashldi3+0xc0>
     340:	88 0f       	add	r24, r24
     342:	99 1f       	adc	r25, r25
     344:	aa 1f       	adc	r26, r26
     346:	bb 1f       	adc	r27, r27
     348:	2a 95       	dec	r18
     34a:	d2 f7       	brpl	.-12     	; 0x340 <__ashldi3+0xb8>
     34c:	48 2b       	or	r20, r24
     34e:	59 2b       	or	r21, r25
     350:	6a 2b       	or	r22, r26
     352:	7b 2b       	or	r23, r27
     354:	4d 87       	std	Y+13, r20	; 0x0d
     356:	5e 87       	std	Y+14, r21	; 0x0e
     358:	6f 87       	std	Y+15, r22	; 0x0f
     35a:	78 8b       	std	Y+16, r23	; 0x10
     35c:	29 85       	ldd	r18, Y+9	; 0x09
     35e:	3a 85       	ldd	r19, Y+10	; 0x0a
     360:	4b 85       	ldd	r20, Y+11	; 0x0b
     362:	5c 85       	ldd	r21, Y+12	; 0x0c
     364:	6d 85       	ldd	r22, Y+13	; 0x0d
     366:	7e 85       	ldd	r23, Y+14	; 0x0e
     368:	af 85       	ldd	r26, Y+15	; 0x0f
     36a:	98 89       	ldd	r25, Y+16	; 0x10
     36c:	8a 2f       	mov	r24, r26
     36e:	60 96       	adiw	r28, 0x10	; 16
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf 91       	pop	r28
     37c:	df 91       	pop	r29
     37e:	0f 91       	pop	r16
     380:	ff 90       	pop	r15
     382:	ef 90       	pop	r14
     384:	08 95       	ret

00000386 <__fixunssfsi>:
     386:	ef 92       	push	r14
     388:	ff 92       	push	r15
     38a:	0f 93       	push	r16
     38c:	1f 93       	push	r17
     38e:	7b 01       	movw	r14, r22
     390:	8c 01       	movw	r16, r24
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	5f e4       	ldi	r21, 0x4F	; 79
     39a:	0e 94 54 12 	call	0x24a8	; 0x24a8 <__gesf2>
     39e:	88 23       	and	r24, r24
     3a0:	8c f0       	brlt	.+34     	; 0x3c4 <__fixunssfsi+0x3e>
     3a2:	c8 01       	movw	r24, r16
     3a4:	b7 01       	movw	r22, r14
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	5f e4       	ldi	r21, 0x4F	; 79
     3ae:	0e 94 20 10 	call	0x2040	; 0x2040 <__subsf3>
     3b2:	0e 94 b4 12 	call	0x2568	; 0x2568 <__fixsfsi>
     3b6:	9b 01       	movw	r18, r22
     3b8:	ac 01       	movw	r20, r24
     3ba:	20 50       	subi	r18, 0x00	; 0
     3bc:	30 40       	sbci	r19, 0x00	; 0
     3be:	40 40       	sbci	r20, 0x00	; 0
     3c0:	50 48       	sbci	r21, 0x80	; 128
     3c2:	06 c0       	rjmp	.+12     	; 0x3d0 <__fixunssfsi+0x4a>
     3c4:	c8 01       	movw	r24, r16
     3c6:	b7 01       	movw	r22, r14
     3c8:	0e 94 b4 12 	call	0x2568	; 0x2568 <__fixsfsi>
     3cc:	9b 01       	movw	r18, r22
     3ce:	ac 01       	movw	r20, r24
     3d0:	b9 01       	movw	r22, r18
     3d2:	ca 01       	movw	r24, r20
     3d4:	1f 91       	pop	r17
     3d6:	0f 91       	pop	r16
     3d8:	ff 90       	pop	r15
     3da:	ef 90       	pop	r14
     3dc:	08 95       	ret

000003de <__udivdi3>:
     3de:	ae e5       	ldi	r26, 0x5E	; 94
     3e0:	b0 e0       	ldi	r27, 0x00	; 0
     3e2:	e5 ef       	ldi	r30, 0xF5	; 245
     3e4:	f1 e0       	ldi	r31, 0x01	; 1
     3e6:	0c 94 63 30 	jmp	0x60c6	; 0x60c6 <__prologue_saves__>
     3ea:	a8 e0       	ldi	r26, 0x08	; 8
     3ec:	4e 01       	movw	r8, r28
     3ee:	08 94       	sec
     3f0:	81 1c       	adc	r8, r1
     3f2:	91 1c       	adc	r9, r1
     3f4:	f4 01       	movw	r30, r8
     3f6:	6a 2e       	mov	r6, r26
     3f8:	11 92       	st	Z+, r1
     3fa:	6a 94       	dec	r6
     3fc:	e9 f7       	brne	.-6      	; 0x3f8 <__udivdi3+0x1a>
     3fe:	29 83       	std	Y+1, r18	; 0x01
     400:	3a 83       	std	Y+2, r19	; 0x02
     402:	4b 83       	std	Y+3, r20	; 0x03
     404:	5c 83       	std	Y+4, r21	; 0x04
     406:	6d 83       	std	Y+5, r22	; 0x05
     408:	7e 83       	std	Y+6, r23	; 0x06
     40a:	8f 83       	std	Y+7, r24	; 0x07
     40c:	98 87       	std	Y+8, r25	; 0x08
     40e:	ce 01       	movw	r24, r28
     410:	09 96       	adiw	r24, 0x09	; 9
     412:	fc 01       	movw	r30, r24
     414:	11 92       	st	Z+, r1
     416:	aa 95       	dec	r26
     418:	e9 f7       	brne	.-6      	; 0x414 <__udivdi3+0x36>
     41a:	a9 86       	std	Y+9, r10	; 0x09
     41c:	ba 86       	std	Y+10, r11	; 0x0a
     41e:	cb 86       	std	Y+11, r12	; 0x0b
     420:	dc 86       	std	Y+12, r13	; 0x0c
     422:	ed 86       	std	Y+13, r14	; 0x0d
     424:	fe 86       	std	Y+14, r15	; 0x0e
     426:	0f 87       	std	Y+15, r16	; 0x0f
     428:	18 8b       	std	Y+16, r17	; 0x10
     42a:	29 84       	ldd	r2, Y+9	; 0x09
     42c:	3a 84       	ldd	r3, Y+10	; 0x0a
     42e:	4b 84       	ldd	r4, Y+11	; 0x0b
     430:	5c 84       	ldd	r5, Y+12	; 0x0c
     432:	ed 84       	ldd	r14, Y+13	; 0x0d
     434:	fe 84       	ldd	r15, Y+14	; 0x0e
     436:	0f 85       	ldd	r16, Y+15	; 0x0f
     438:	18 89       	ldd	r17, Y+16	; 0x10
     43a:	69 80       	ldd	r6, Y+1	; 0x01
     43c:	7a 80       	ldd	r7, Y+2	; 0x02
     43e:	8b 80       	ldd	r8, Y+3	; 0x03
     440:	9c 80       	ldd	r9, Y+4	; 0x04
     442:	6d a6       	std	Y+45, r6	; 0x2d
     444:	7e a6       	std	Y+46, r7	; 0x2e
     446:	8f a6       	std	Y+47, r8	; 0x2f
     448:	98 aa       	std	Y+48, r9	; 0x30
     44a:	6d 80       	ldd	r6, Y+5	; 0x05
     44c:	7e 80       	ldd	r7, Y+6	; 0x06
     44e:	8f 80       	ldd	r8, Y+7	; 0x07
     450:	98 84       	ldd	r9, Y+8	; 0x08
     452:	e1 14       	cp	r14, r1
     454:	f1 04       	cpc	r15, r1
     456:	01 05       	cpc	r16, r1
     458:	11 05       	cpc	r17, r1
     45a:	09 f0       	breq	.+2      	; 0x45e <__udivdi3+0x80>
     45c:	b3 c3       	rjmp	.+1894   	; 0xbc4 <__stack+0x365>
     45e:	62 14       	cp	r6, r2
     460:	73 04       	cpc	r7, r3
     462:	84 04       	cpc	r8, r4
     464:	95 04       	cpc	r9, r5
     466:	08 f0       	brcs	.+2      	; 0x46a <__udivdi3+0x8c>
     468:	3d c1       	rjmp	.+634    	; 0x6e4 <__udivdi3+0x306>
     46a:	00 e0       	ldi	r16, 0x00	; 0
     46c:	20 16       	cp	r2, r16
     46e:	00 e0       	ldi	r16, 0x00	; 0
     470:	30 06       	cpc	r3, r16
     472:	01 e0       	ldi	r16, 0x01	; 1
     474:	40 06       	cpc	r4, r16
     476:	00 e0       	ldi	r16, 0x00	; 0
     478:	50 06       	cpc	r5, r16
     47a:	88 f4       	brcc	.+34     	; 0x49e <__udivdi3+0xc0>
     47c:	1f ef       	ldi	r17, 0xFF	; 255
     47e:	21 16       	cp	r2, r17
     480:	31 04       	cpc	r3, r1
     482:	41 04       	cpc	r4, r1
     484:	51 04       	cpc	r5, r1
     486:	39 f0       	breq	.+14     	; 0x496 <__udivdi3+0xb8>
     488:	30 f0       	brcs	.+12     	; 0x496 <__udivdi3+0xb8>
     48a:	48 e0       	ldi	r20, 0x08	; 8
     48c:	e4 2e       	mov	r14, r20
     48e:	f1 2c       	mov	r15, r1
     490:	01 2d       	mov	r16, r1
     492:	11 2d       	mov	r17, r1
     494:	18 c0       	rjmp	.+48     	; 0x4c6 <__udivdi3+0xe8>
     496:	ee 24       	eor	r14, r14
     498:	ff 24       	eor	r15, r15
     49a:	87 01       	movw	r16, r14
     49c:	14 c0       	rjmp	.+40     	; 0x4c6 <__udivdi3+0xe8>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	22 16       	cp	r2, r18
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	32 06       	cpc	r3, r18
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	42 06       	cpc	r4, r18
     4aa:	21 e0       	ldi	r18, 0x01	; 1
     4ac:	52 06       	cpc	r5, r18
     4ae:	30 f0       	brcs	.+12     	; 0x4bc <__udivdi3+0xde>
     4b0:	38 e1       	ldi	r19, 0x18	; 24
     4b2:	e3 2e       	mov	r14, r19
     4b4:	f1 2c       	mov	r15, r1
     4b6:	01 2d       	mov	r16, r1
     4b8:	11 2d       	mov	r17, r1
     4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <__udivdi3+0xe8>
     4bc:	20 e1       	ldi	r18, 0x10	; 16
     4be:	e2 2e       	mov	r14, r18
     4c0:	f1 2c       	mov	r15, r1
     4c2:	01 2d       	mov	r16, r1
     4c4:	11 2d       	mov	r17, r1
     4c6:	d2 01       	movw	r26, r4
     4c8:	c1 01       	movw	r24, r2
     4ca:	0e 2c       	mov	r0, r14
     4cc:	04 c0       	rjmp	.+8      	; 0x4d6 <__udivdi3+0xf8>
     4ce:	b6 95       	lsr	r27
     4d0:	a7 95       	ror	r26
     4d2:	97 95       	ror	r25
     4d4:	87 95       	ror	r24
     4d6:	0a 94       	dec	r0
     4d8:	d2 f7       	brpl	.-12     	; 0x4ce <__udivdi3+0xf0>
     4da:	88 57       	subi	r24, 0x78	; 120
     4dc:	9f 4f       	sbci	r25, 0xFF	; 255
     4de:	dc 01       	movw	r26, r24
     4e0:	2c 91       	ld	r18, X
     4e2:	80 e2       	ldi	r24, 0x20	; 32
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	a0 e0       	ldi	r26, 0x00	; 0
     4e8:	b0 e0       	ldi	r27, 0x00	; 0
     4ea:	8e 19       	sub	r24, r14
     4ec:	9f 09       	sbc	r25, r15
     4ee:	a0 0b       	sbc	r26, r16
     4f0:	b1 0b       	sbc	r27, r17
     4f2:	7c 01       	movw	r14, r24
     4f4:	8d 01       	movw	r16, r26
     4f6:	e2 1a       	sub	r14, r18
     4f8:	f1 08       	sbc	r15, r1
     4fa:	01 09       	sbc	r16, r1
     4fc:	11 09       	sbc	r17, r1
     4fe:	e1 14       	cp	r14, r1
     500:	f1 04       	cpc	r15, r1
     502:	01 05       	cpc	r16, r1
     504:	11 05       	cpc	r17, r1
     506:	a1 f1       	breq	.+104    	; 0x570 <__udivdi3+0x192>
     508:	0e 2c       	mov	r0, r14
     50a:	04 c0       	rjmp	.+8      	; 0x514 <__udivdi3+0x136>
     50c:	22 0c       	add	r2, r2
     50e:	33 1c       	adc	r3, r3
     510:	44 1c       	adc	r4, r4
     512:	55 1c       	adc	r5, r5
     514:	0a 94       	dec	r0
     516:	d2 f7       	brpl	.-12     	; 0x50c <__udivdi3+0x12e>
     518:	a4 01       	movw	r20, r8
     51a:	93 01       	movw	r18, r6
     51c:	0e 2c       	mov	r0, r14
     51e:	04 c0       	rjmp	.+8      	; 0x528 <__udivdi3+0x14a>
     520:	22 0f       	add	r18, r18
     522:	33 1f       	adc	r19, r19
     524:	44 1f       	adc	r20, r20
     526:	55 1f       	adc	r21, r21
     528:	0a 94       	dec	r0
     52a:	d2 f7       	brpl	.-12     	; 0x520 <__udivdi3+0x142>
     52c:	80 e2       	ldi	r24, 0x20	; 32
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	8e 19       	sub	r24, r14
     532:	9f 09       	sbc	r25, r15
     534:	6d a4       	ldd	r6, Y+45	; 0x2d
     536:	7e a4       	ldd	r7, Y+46	; 0x2e
     538:	8f a4       	ldd	r8, Y+47	; 0x2f
     53a:	98 a8       	ldd	r9, Y+48	; 0x30
     53c:	04 c0       	rjmp	.+8      	; 0x546 <__udivdi3+0x168>
     53e:	96 94       	lsr	r9
     540:	87 94       	ror	r8
     542:	77 94       	ror	r7
     544:	67 94       	ror	r6
     546:	8a 95       	dec	r24
     548:	d2 f7       	brpl	.-12     	; 0x53e <__udivdi3+0x160>
     54a:	62 2a       	or	r6, r18
     54c:	73 2a       	or	r7, r19
     54e:	84 2a       	or	r8, r20
     550:	95 2a       	or	r9, r21
     552:	ad a4       	ldd	r10, Y+45	; 0x2d
     554:	be a4       	ldd	r11, Y+46	; 0x2e
     556:	cf a4       	ldd	r12, Y+47	; 0x2f
     558:	d8 a8       	ldd	r13, Y+48	; 0x30
     55a:	04 c0       	rjmp	.+8      	; 0x564 <__udivdi3+0x186>
     55c:	aa 0c       	add	r10, r10
     55e:	bb 1c       	adc	r11, r11
     560:	cc 1c       	adc	r12, r12
     562:	dd 1c       	adc	r13, r13
     564:	ea 94       	dec	r14
     566:	d2 f7       	brpl	.-12     	; 0x55c <__udivdi3+0x17e>
     568:	ad a6       	std	Y+45, r10	; 0x2d
     56a:	be a6       	std	Y+46, r11	; 0x2e
     56c:	cf a6       	std	Y+47, r12	; 0x2f
     56e:	d8 aa       	std	Y+48, r13	; 0x30
     570:	62 01       	movw	r12, r4
     572:	ee 24       	eor	r14, r14
     574:	ff 24       	eor	r15, r15
     576:	cd aa       	std	Y+53, r12	; 0x35
     578:	de aa       	std	Y+54, r13	; 0x36
     57a:	ef aa       	std	Y+55, r14	; 0x37
     57c:	f8 ae       	std	Y+56, r15	; 0x38
     57e:	92 01       	movw	r18, r4
     580:	81 01       	movw	r16, r2
     582:	20 70       	andi	r18, 0x00	; 0
     584:	30 70       	andi	r19, 0x00	; 0
     586:	09 af       	std	Y+57, r16	; 0x39
     588:	1a af       	std	Y+58, r17	; 0x3a
     58a:	2b af       	std	Y+59, r18	; 0x3b
     58c:	3c af       	std	Y+60, r19	; 0x3c
     58e:	c4 01       	movw	r24, r8
     590:	b3 01       	movw	r22, r6
     592:	a7 01       	movw	r20, r14
     594:	96 01       	movw	r18, r12
     596:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     59a:	7b 01       	movw	r14, r22
     59c:	8c 01       	movw	r16, r24
     59e:	c4 01       	movw	r24, r8
     5a0:	b3 01       	movw	r22, r6
     5a2:	2d a9       	ldd	r18, Y+53	; 0x35
     5a4:	3e a9       	ldd	r19, Y+54	; 0x36
     5a6:	4f a9       	ldd	r20, Y+55	; 0x37
     5a8:	58 ad       	ldd	r21, Y+56	; 0x38
     5aa:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     5ae:	c9 01       	movw	r24, r18
     5b0:	da 01       	movw	r26, r20
     5b2:	3c 01       	movw	r6, r24
     5b4:	4d 01       	movw	r8, r26
     5b6:	c4 01       	movw	r24, r8
     5b8:	b3 01       	movw	r22, r6
     5ba:	29 ad       	ldd	r18, Y+57	; 0x39
     5bc:	3a ad       	ldd	r19, Y+58	; 0x3a
     5be:	4b ad       	ldd	r20, Y+59	; 0x3b
     5c0:	5c ad       	ldd	r21, Y+60	; 0x3c
     5c2:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     5c6:	9b 01       	movw	r18, r22
     5c8:	ac 01       	movw	r20, r24
     5ca:	87 01       	movw	r16, r14
     5cc:	ff 24       	eor	r15, r15
     5ce:	ee 24       	eor	r14, r14
     5d0:	ad a4       	ldd	r10, Y+45	; 0x2d
     5d2:	be a4       	ldd	r11, Y+46	; 0x2e
     5d4:	cf a4       	ldd	r12, Y+47	; 0x2f
     5d6:	d8 a8       	ldd	r13, Y+48	; 0x30
     5d8:	c6 01       	movw	r24, r12
     5da:	aa 27       	eor	r26, r26
     5dc:	bb 27       	eor	r27, r27
     5de:	57 01       	movw	r10, r14
     5e0:	68 01       	movw	r12, r16
     5e2:	a8 2a       	or	r10, r24
     5e4:	b9 2a       	or	r11, r25
     5e6:	ca 2a       	or	r12, r26
     5e8:	db 2a       	or	r13, r27
     5ea:	a2 16       	cp	r10, r18
     5ec:	b3 06       	cpc	r11, r19
     5ee:	c4 06       	cpc	r12, r20
     5f0:	d5 06       	cpc	r13, r21
     5f2:	e0 f4       	brcc	.+56     	; 0x62c <__udivdi3+0x24e>
     5f4:	08 94       	sec
     5f6:	61 08       	sbc	r6, r1
     5f8:	71 08       	sbc	r7, r1
     5fa:	81 08       	sbc	r8, r1
     5fc:	91 08       	sbc	r9, r1
     5fe:	a2 0c       	add	r10, r2
     600:	b3 1c       	adc	r11, r3
     602:	c4 1c       	adc	r12, r4
     604:	d5 1c       	adc	r13, r5
     606:	a2 14       	cp	r10, r2
     608:	b3 04       	cpc	r11, r3
     60a:	c4 04       	cpc	r12, r4
     60c:	d5 04       	cpc	r13, r5
     60e:	70 f0       	brcs	.+28     	; 0x62c <__udivdi3+0x24e>
     610:	a2 16       	cp	r10, r18
     612:	b3 06       	cpc	r11, r19
     614:	c4 06       	cpc	r12, r20
     616:	d5 06       	cpc	r13, r21
     618:	48 f4       	brcc	.+18     	; 0x62c <__udivdi3+0x24e>
     61a:	08 94       	sec
     61c:	61 08       	sbc	r6, r1
     61e:	71 08       	sbc	r7, r1
     620:	81 08       	sbc	r8, r1
     622:	91 08       	sbc	r9, r1
     624:	a2 0c       	add	r10, r2
     626:	b3 1c       	adc	r11, r3
     628:	c4 1c       	adc	r12, r4
     62a:	d5 1c       	adc	r13, r5
     62c:	a2 1a       	sub	r10, r18
     62e:	b3 0a       	sbc	r11, r19
     630:	c4 0a       	sbc	r12, r20
     632:	d5 0a       	sbc	r13, r21
     634:	c6 01       	movw	r24, r12
     636:	b5 01       	movw	r22, r10
     638:	2d a9       	ldd	r18, Y+53	; 0x35
     63a:	3e a9       	ldd	r19, Y+54	; 0x36
     63c:	4f a9       	ldd	r20, Y+55	; 0x37
     63e:	58 ad       	ldd	r21, Y+56	; 0x38
     640:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     644:	7b 01       	movw	r14, r22
     646:	8c 01       	movw	r16, r24
     648:	c6 01       	movw	r24, r12
     64a:	b5 01       	movw	r22, r10
     64c:	2d a9       	ldd	r18, Y+53	; 0x35
     64e:	3e a9       	ldd	r19, Y+54	; 0x36
     650:	4f a9       	ldd	r20, Y+55	; 0x37
     652:	58 ad       	ldd	r21, Y+56	; 0x38
     654:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     658:	c9 01       	movw	r24, r18
     65a:	da 01       	movw	r26, r20
     65c:	5c 01       	movw	r10, r24
     65e:	6d 01       	movw	r12, r26
     660:	c6 01       	movw	r24, r12
     662:	b5 01       	movw	r22, r10
     664:	29 ad       	ldd	r18, Y+57	; 0x39
     666:	3a ad       	ldd	r19, Y+58	; 0x3a
     668:	4b ad       	ldd	r20, Y+59	; 0x3b
     66a:	5c ad       	ldd	r21, Y+60	; 0x3c
     66c:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     670:	9b 01       	movw	r18, r22
     672:	ac 01       	movw	r20, r24
     674:	87 01       	movw	r16, r14
     676:	ff 24       	eor	r15, r15
     678:	ee 24       	eor	r14, r14
     67a:	8d a5       	ldd	r24, Y+45	; 0x2d
     67c:	9e a5       	ldd	r25, Y+46	; 0x2e
     67e:	af a5       	ldd	r26, Y+47	; 0x2f
     680:	b8 a9       	ldd	r27, Y+48	; 0x30
     682:	a0 70       	andi	r26, 0x00	; 0
     684:	b0 70       	andi	r27, 0x00	; 0
     686:	e8 2a       	or	r14, r24
     688:	f9 2a       	or	r15, r25
     68a:	0a 2b       	or	r16, r26
     68c:	1b 2b       	or	r17, r27
     68e:	e2 16       	cp	r14, r18
     690:	f3 06       	cpc	r15, r19
     692:	04 07       	cpc	r16, r20
     694:	15 07       	cpc	r17, r21
     696:	c0 f4       	brcc	.+48     	; 0x6c8 <__udivdi3+0x2ea>
     698:	08 94       	sec
     69a:	a1 08       	sbc	r10, r1
     69c:	b1 08       	sbc	r11, r1
     69e:	c1 08       	sbc	r12, r1
     6a0:	d1 08       	sbc	r13, r1
     6a2:	e2 0c       	add	r14, r2
     6a4:	f3 1c       	adc	r15, r3
     6a6:	04 1d       	adc	r16, r4
     6a8:	15 1d       	adc	r17, r5
     6aa:	e2 14       	cp	r14, r2
     6ac:	f3 04       	cpc	r15, r3
     6ae:	04 05       	cpc	r16, r4
     6b0:	15 05       	cpc	r17, r5
     6b2:	50 f0       	brcs	.+20     	; 0x6c8 <__udivdi3+0x2ea>
     6b4:	e2 16       	cp	r14, r18
     6b6:	f3 06       	cpc	r15, r19
     6b8:	04 07       	cpc	r16, r20
     6ba:	15 07       	cpc	r17, r21
     6bc:	28 f4       	brcc	.+10     	; 0x6c8 <__udivdi3+0x2ea>
     6be:	08 94       	sec
     6c0:	a1 08       	sbc	r10, r1
     6c2:	b1 08       	sbc	r11, r1
     6c4:	c1 08       	sbc	r12, r1
     6c6:	d1 08       	sbc	r13, r1
     6c8:	d3 01       	movw	r26, r6
     6ca:	99 27       	eor	r25, r25
     6cc:	88 27       	eor	r24, r24
     6ce:	86 01       	movw	r16, r12
     6d0:	75 01       	movw	r14, r10
     6d2:	e8 2a       	or	r14, r24
     6d4:	f9 2a       	or	r15, r25
     6d6:	0a 2b       	or	r16, r26
     6d8:	1b 2b       	or	r17, r27
     6da:	e9 aa       	std	Y+49, r14	; 0x31
     6dc:	fa aa       	std	Y+50, r15	; 0x32
     6de:	0b ab       	std	Y+51, r16	; 0x33
     6e0:	1c ab       	std	Y+52, r17	; 0x34
     6e2:	cf c4       	rjmp	.+2462   	; 0x1082 <__stack+0x823>
     6e4:	21 14       	cp	r2, r1
     6e6:	31 04       	cpc	r3, r1
     6e8:	41 04       	cpc	r4, r1
     6ea:	51 04       	cpc	r5, r1
     6ec:	71 f4       	brne	.+28     	; 0x70a <__udivdi3+0x32c>
     6ee:	61 e0       	ldi	r22, 0x01	; 1
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	20 e0       	ldi	r18, 0x00	; 0
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	40 e0       	ldi	r20, 0x00	; 0
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     702:	c9 01       	movw	r24, r18
     704:	da 01       	movw	r26, r20
     706:	1c 01       	movw	r2, r24
     708:	2d 01       	movw	r4, r26
     70a:	00 e0       	ldi	r16, 0x00	; 0
     70c:	20 16       	cp	r2, r16
     70e:	00 e0       	ldi	r16, 0x00	; 0
     710:	30 06       	cpc	r3, r16
     712:	01 e0       	ldi	r16, 0x01	; 1
     714:	40 06       	cpc	r4, r16
     716:	00 e0       	ldi	r16, 0x00	; 0
     718:	50 06       	cpc	r5, r16
     71a:	88 f4       	brcc	.+34     	; 0x73e <__udivdi3+0x360>
     71c:	1f ef       	ldi	r17, 0xFF	; 255
     71e:	21 16       	cp	r2, r17
     720:	31 04       	cpc	r3, r1
     722:	41 04       	cpc	r4, r1
     724:	51 04       	cpc	r5, r1
     726:	31 f0       	breq	.+12     	; 0x734 <__udivdi3+0x356>
     728:	28 f0       	brcs	.+10     	; 0x734 <__udivdi3+0x356>
     72a:	48 e0       	ldi	r20, 0x08	; 8
     72c:	50 e0       	ldi	r21, 0x00	; 0
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	17 c0       	rjmp	.+46     	; 0x762 <__udivdi3+0x384>
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	12 c0       	rjmp	.+36     	; 0x762 <__udivdi3+0x384>
     73e:	20 e0       	ldi	r18, 0x00	; 0
     740:	22 16       	cp	r2, r18
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	32 06       	cpc	r3, r18
     746:	20 e0       	ldi	r18, 0x00	; 0
     748:	42 06       	cpc	r4, r18
     74a:	21 e0       	ldi	r18, 0x01	; 1
     74c:	52 06       	cpc	r5, r18
     74e:	28 f0       	brcs	.+10     	; 0x75a <__udivdi3+0x37c>
     750:	48 e1       	ldi	r20, 0x18	; 24
     752:	50 e0       	ldi	r21, 0x00	; 0
     754:	60 e0       	ldi	r22, 0x00	; 0
     756:	70 e0       	ldi	r23, 0x00	; 0
     758:	04 c0       	rjmp	.+8      	; 0x762 <__udivdi3+0x384>
     75a:	40 e1       	ldi	r20, 0x10	; 16
     75c:	50 e0       	ldi	r21, 0x00	; 0
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	d2 01       	movw	r26, r4
     764:	c1 01       	movw	r24, r2
     766:	04 2e       	mov	r0, r20
     768:	04 c0       	rjmp	.+8      	; 0x772 <__udivdi3+0x394>
     76a:	b6 95       	lsr	r27
     76c:	a7 95       	ror	r26
     76e:	97 95       	ror	r25
     770:	87 95       	ror	r24
     772:	0a 94       	dec	r0
     774:	d2 f7       	brpl	.-12     	; 0x76a <__udivdi3+0x38c>
     776:	88 57       	subi	r24, 0x78	; 120
     778:	9f 4f       	sbci	r25, 0xFF	; 255
     77a:	dc 01       	movw	r26, r24
     77c:	2c 91       	ld	r18, X
     77e:	e0 e2       	ldi	r30, 0x20	; 32
     780:	ee 2e       	mov	r14, r30
     782:	f1 2c       	mov	r15, r1
     784:	01 2d       	mov	r16, r1
     786:	11 2d       	mov	r17, r1
     788:	d8 01       	movw	r26, r16
     78a:	c7 01       	movw	r24, r14
     78c:	84 1b       	sub	r24, r20
     78e:	95 0b       	sbc	r25, r21
     790:	a6 0b       	sbc	r26, r22
     792:	b7 0b       	sbc	r27, r23
     794:	82 1b       	sub	r24, r18
     796:	91 09       	sbc	r25, r1
     798:	a1 09       	sbc	r26, r1
     79a:	b1 09       	sbc	r27, r1
     79c:	00 97       	sbiw	r24, 0x00	; 0
     79e:	a1 05       	cpc	r26, r1
     7a0:	b1 05       	cpc	r27, r1
     7a2:	61 f4       	brne	.+24     	; 0x7bc <__udivdi3+0x3de>
     7a4:	64 01       	movw	r12, r8
     7a6:	53 01       	movw	r10, r6
     7a8:	a2 18       	sub	r10, r2
     7aa:	b3 08       	sbc	r11, r3
     7ac:	c4 08       	sbc	r12, r4
     7ae:	d5 08       	sbc	r13, r5
     7b0:	31 e0       	ldi	r19, 0x01	; 1
     7b2:	63 2e       	mov	r6, r19
     7b4:	71 2c       	mov	r7, r1
     7b6:	81 2c       	mov	r8, r1
     7b8:	91 2c       	mov	r9, r1
     7ba:	1e c1       	rjmp	.+572    	; 0x9f8 <__stack+0x199>
     7bc:	6f 96       	adiw	r28, 0x1f	; 31
     7be:	8f af       	std	Y+63, r24	; 0x3f
     7c0:	6f 97       	sbiw	r28, 0x1f	; 31
     7c2:	08 2e       	mov	r0, r24
     7c4:	04 c0       	rjmp	.+8      	; 0x7ce <__udivdi3+0x3f0>
     7c6:	22 0c       	add	r2, r2
     7c8:	33 1c       	adc	r3, r3
     7ca:	44 1c       	adc	r4, r4
     7cc:	55 1c       	adc	r5, r5
     7ce:	0a 94       	dec	r0
     7d0:	d2 f7       	brpl	.-12     	; 0x7c6 <__udivdi3+0x3e8>
     7d2:	ee 2d       	mov	r30, r14
     7d4:	e8 1b       	sub	r30, r24
     7d6:	64 01       	movw	r12, r8
     7d8:	53 01       	movw	r10, r6
     7da:	0e 2e       	mov	r0, r30
     7dc:	04 c0       	rjmp	.+8      	; 0x7e6 <__udivdi3+0x408>
     7de:	d6 94       	lsr	r13
     7e0:	c7 94       	ror	r12
     7e2:	b7 94       	ror	r11
     7e4:	a7 94       	ror	r10
     7e6:	0a 94       	dec	r0
     7e8:	d2 f7       	brpl	.-12     	; 0x7de <__udivdi3+0x400>
     7ea:	a4 01       	movw	r20, r8
     7ec:	93 01       	movw	r18, r6
     7ee:	6f 96       	adiw	r28, 0x1f	; 31
     7f0:	0f ac       	ldd	r0, Y+63	; 0x3f
     7f2:	6f 97       	sbiw	r28, 0x1f	; 31
     7f4:	04 c0       	rjmp	.+8      	; 0x7fe <__udivdi3+0x420>
     7f6:	22 0f       	add	r18, r18
     7f8:	33 1f       	adc	r19, r19
     7fa:	44 1f       	adc	r20, r20
     7fc:	55 1f       	adc	r21, r21
     7fe:	0a 94       	dec	r0
     800:	d2 f7       	brpl	.-12     	; 0x7f6 <__udivdi3+0x418>
     802:	6d a4       	ldd	r6, Y+45	; 0x2d
     804:	7e a4       	ldd	r7, Y+46	; 0x2e
     806:	8f a4       	ldd	r8, Y+47	; 0x2f
     808:	98 a8       	ldd	r9, Y+48	; 0x30
     80a:	0e 2e       	mov	r0, r30
     80c:	04 c0       	rjmp	.+8      	; 0x816 <__udivdi3+0x438>
     80e:	96 94       	lsr	r9
     810:	87 94       	ror	r8
     812:	77 94       	ror	r7
     814:	67 94       	ror	r6
     816:	0a 94       	dec	r0
     818:	d2 f7       	brpl	.-12     	; 0x80e <__udivdi3+0x430>
     81a:	84 01       	movw	r16, r8
     81c:	73 01       	movw	r14, r6
     81e:	e2 2a       	or	r14, r18
     820:	f3 2a       	or	r15, r19
     822:	04 2b       	or	r16, r20
     824:	15 2b       	or	r17, r21
     826:	e9 a6       	std	Y+41, r14	; 0x29
     828:	fa a6       	std	Y+42, r15	; 0x2a
     82a:	0b a7       	std	Y+43, r16	; 0x2b
     82c:	1c a7       	std	Y+44, r17	; 0x2c
     82e:	32 01       	movw	r6, r4
     830:	88 24       	eor	r8, r8
     832:	99 24       	eor	r9, r9
     834:	92 01       	movw	r18, r4
     836:	81 01       	movw	r16, r2
     838:	20 70       	andi	r18, 0x00	; 0
     83a:	30 70       	andi	r19, 0x00	; 0
     83c:	21 96       	adiw	r28, 0x01	; 1
     83e:	0c af       	std	Y+60, r16	; 0x3c
     840:	1d af       	std	Y+61, r17	; 0x3d
     842:	2e af       	std	Y+62, r18	; 0x3e
     844:	3f af       	std	Y+63, r19	; 0x3f
     846:	21 97       	sbiw	r28, 0x01	; 1
     848:	c6 01       	movw	r24, r12
     84a:	b5 01       	movw	r22, r10
     84c:	a4 01       	movw	r20, r8
     84e:	93 01       	movw	r18, r6
     850:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     854:	7b 01       	movw	r14, r22
     856:	8c 01       	movw	r16, r24
     858:	c6 01       	movw	r24, r12
     85a:	b5 01       	movw	r22, r10
     85c:	a4 01       	movw	r20, r8
     85e:	93 01       	movw	r18, r6
     860:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     864:	c9 01       	movw	r24, r18
     866:	da 01       	movw	r26, r20
     868:	25 96       	adiw	r28, 0x05	; 5
     86a:	8c af       	std	Y+60, r24	; 0x3c
     86c:	9d af       	std	Y+61, r25	; 0x3d
     86e:	ae af       	std	Y+62, r26	; 0x3e
     870:	bf af       	std	Y+63, r27	; 0x3f
     872:	25 97       	sbiw	r28, 0x05	; 5
     874:	bc 01       	movw	r22, r24
     876:	cd 01       	movw	r24, r26
     878:	21 96       	adiw	r28, 0x01	; 1
     87a:	2c ad       	ldd	r18, Y+60	; 0x3c
     87c:	3d ad       	ldd	r19, Y+61	; 0x3d
     87e:	4e ad       	ldd	r20, Y+62	; 0x3e
     880:	5f ad       	ldd	r21, Y+63	; 0x3f
     882:	21 97       	sbiw	r28, 0x01	; 1
     884:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     888:	9b 01       	movw	r18, r22
     88a:	ac 01       	movw	r20, r24
     88c:	87 01       	movw	r16, r14
     88e:	ff 24       	eor	r15, r15
     890:	ee 24       	eor	r14, r14
     892:	a9 a4       	ldd	r10, Y+41	; 0x29
     894:	ba a4       	ldd	r11, Y+42	; 0x2a
     896:	cb a4       	ldd	r12, Y+43	; 0x2b
     898:	dc a4       	ldd	r13, Y+44	; 0x2c
     89a:	c6 01       	movw	r24, r12
     89c:	aa 27       	eor	r26, r26
     89e:	bb 27       	eor	r27, r27
     8a0:	5c 01       	movw	r10, r24
     8a2:	6d 01       	movw	r12, r26
     8a4:	ae 28       	or	r10, r14
     8a6:	bf 28       	or	r11, r15
     8a8:	c0 2a       	or	r12, r16
     8aa:	d1 2a       	or	r13, r17
     8ac:	a2 16       	cp	r10, r18
     8ae:	b3 06       	cpc	r11, r19
     8b0:	c4 06       	cpc	r12, r20
     8b2:	d5 06       	cpc	r13, r21
     8b4:	60 f5       	brcc	.+88     	; 0x90e <__stack+0xaf>
     8b6:	25 96       	adiw	r28, 0x05	; 5
     8b8:	6c ad       	ldd	r22, Y+60	; 0x3c
     8ba:	7d ad       	ldd	r23, Y+61	; 0x3d
     8bc:	8e ad       	ldd	r24, Y+62	; 0x3e
     8be:	9f ad       	ldd	r25, Y+63	; 0x3f
     8c0:	25 97       	sbiw	r28, 0x05	; 5
     8c2:	61 50       	subi	r22, 0x01	; 1
     8c4:	70 40       	sbci	r23, 0x00	; 0
     8c6:	80 40       	sbci	r24, 0x00	; 0
     8c8:	90 40       	sbci	r25, 0x00	; 0
     8ca:	25 96       	adiw	r28, 0x05	; 5
     8cc:	6c af       	std	Y+60, r22	; 0x3c
     8ce:	7d af       	std	Y+61, r23	; 0x3d
     8d0:	8e af       	std	Y+62, r24	; 0x3e
     8d2:	9f af       	std	Y+63, r25	; 0x3f
     8d4:	25 97       	sbiw	r28, 0x05	; 5
     8d6:	a2 0c       	add	r10, r2
     8d8:	b3 1c       	adc	r11, r3
     8da:	c4 1c       	adc	r12, r4
     8dc:	d5 1c       	adc	r13, r5
     8de:	a2 14       	cp	r10, r2
     8e0:	b3 04       	cpc	r11, r3
     8e2:	c4 04       	cpc	r12, r4
     8e4:	d5 04       	cpc	r13, r5
     8e6:	98 f0       	brcs	.+38     	; 0x90e <__stack+0xaf>
     8e8:	a2 16       	cp	r10, r18
     8ea:	b3 06       	cpc	r11, r19
     8ec:	c4 06       	cpc	r12, r20
     8ee:	d5 06       	cpc	r13, r21
     8f0:	70 f4       	brcc	.+28     	; 0x90e <__stack+0xaf>
     8f2:	61 50       	subi	r22, 0x01	; 1
     8f4:	70 40       	sbci	r23, 0x00	; 0
     8f6:	80 40       	sbci	r24, 0x00	; 0
     8f8:	90 40       	sbci	r25, 0x00	; 0
     8fa:	25 96       	adiw	r28, 0x05	; 5
     8fc:	6c af       	std	Y+60, r22	; 0x3c
     8fe:	7d af       	std	Y+61, r23	; 0x3d
     900:	8e af       	std	Y+62, r24	; 0x3e
     902:	9f af       	std	Y+63, r25	; 0x3f
     904:	25 97       	sbiw	r28, 0x05	; 5
     906:	a2 0c       	add	r10, r2
     908:	b3 1c       	adc	r11, r3
     90a:	c4 1c       	adc	r12, r4
     90c:	d5 1c       	adc	r13, r5
     90e:	a2 1a       	sub	r10, r18
     910:	b3 0a       	sbc	r11, r19
     912:	c4 0a       	sbc	r12, r20
     914:	d5 0a       	sbc	r13, r21
     916:	c6 01       	movw	r24, r12
     918:	b5 01       	movw	r22, r10
     91a:	a4 01       	movw	r20, r8
     91c:	93 01       	movw	r18, r6
     91e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     922:	7b 01       	movw	r14, r22
     924:	8c 01       	movw	r16, r24
     926:	c6 01       	movw	r24, r12
     928:	b5 01       	movw	r22, r10
     92a:	a4 01       	movw	r20, r8
     92c:	93 01       	movw	r18, r6
     92e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     932:	c9 01       	movw	r24, r18
     934:	da 01       	movw	r26, r20
     936:	3c 01       	movw	r6, r24
     938:	4d 01       	movw	r8, r26
     93a:	c4 01       	movw	r24, r8
     93c:	b3 01       	movw	r22, r6
     93e:	21 96       	adiw	r28, 0x01	; 1
     940:	2c ad       	ldd	r18, Y+60	; 0x3c
     942:	3d ad       	ldd	r19, Y+61	; 0x3d
     944:	4e ad       	ldd	r20, Y+62	; 0x3e
     946:	5f ad       	ldd	r21, Y+63	; 0x3f
     948:	21 97       	sbiw	r28, 0x01	; 1
     94a:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     94e:	9b 01       	movw	r18, r22
     950:	ac 01       	movw	r20, r24
     952:	87 01       	movw	r16, r14
     954:	ff 24       	eor	r15, r15
     956:	ee 24       	eor	r14, r14
     958:	89 a5       	ldd	r24, Y+41	; 0x29
     95a:	9a a5       	ldd	r25, Y+42	; 0x2a
     95c:	ab a5       	ldd	r26, Y+43	; 0x2b
     95e:	bc a5       	ldd	r27, Y+44	; 0x2c
     960:	a0 70       	andi	r26, 0x00	; 0
     962:	b0 70       	andi	r27, 0x00	; 0
     964:	57 01       	movw	r10, r14
     966:	68 01       	movw	r12, r16
     968:	a8 2a       	or	r10, r24
     96a:	b9 2a       	or	r11, r25
     96c:	ca 2a       	or	r12, r26
     96e:	db 2a       	or	r13, r27
     970:	a2 16       	cp	r10, r18
     972:	b3 06       	cpc	r11, r19
     974:	c4 06       	cpc	r12, r20
     976:	d5 06       	cpc	r13, r21
     978:	e0 f4       	brcc	.+56     	; 0x9b2 <__stack+0x153>
     97a:	08 94       	sec
     97c:	61 08       	sbc	r6, r1
     97e:	71 08       	sbc	r7, r1
     980:	81 08       	sbc	r8, r1
     982:	91 08       	sbc	r9, r1
     984:	a2 0c       	add	r10, r2
     986:	b3 1c       	adc	r11, r3
     988:	c4 1c       	adc	r12, r4
     98a:	d5 1c       	adc	r13, r5
     98c:	a2 14       	cp	r10, r2
     98e:	b3 04       	cpc	r11, r3
     990:	c4 04       	cpc	r12, r4
     992:	d5 04       	cpc	r13, r5
     994:	70 f0       	brcs	.+28     	; 0x9b2 <__stack+0x153>
     996:	a2 16       	cp	r10, r18
     998:	b3 06       	cpc	r11, r19
     99a:	c4 06       	cpc	r12, r20
     99c:	d5 06       	cpc	r13, r21
     99e:	48 f4       	brcc	.+18     	; 0x9b2 <__stack+0x153>
     9a0:	08 94       	sec
     9a2:	61 08       	sbc	r6, r1
     9a4:	71 08       	sbc	r7, r1
     9a6:	81 08       	sbc	r8, r1
     9a8:	91 08       	sbc	r9, r1
     9aa:	a2 0c       	add	r10, r2
     9ac:	b3 1c       	adc	r11, r3
     9ae:	c4 1c       	adc	r12, r4
     9b0:	d5 1c       	adc	r13, r5
     9b2:	8d a5       	ldd	r24, Y+45	; 0x2d
     9b4:	9e a5       	ldd	r25, Y+46	; 0x2e
     9b6:	af a5       	ldd	r26, Y+47	; 0x2f
     9b8:	b8 a9       	ldd	r27, Y+48	; 0x30
     9ba:	6f 96       	adiw	r28, 0x1f	; 31
     9bc:	0f ac       	ldd	r0, Y+63	; 0x3f
     9be:	6f 97       	sbiw	r28, 0x1f	; 31
     9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__stack+0x16b>
     9c2:	88 0f       	add	r24, r24
     9c4:	99 1f       	adc	r25, r25
     9c6:	aa 1f       	adc	r26, r26
     9c8:	bb 1f       	adc	r27, r27
     9ca:	0a 94       	dec	r0
     9cc:	d2 f7       	brpl	.-12     	; 0x9c2 <__stack+0x163>
     9ce:	8d a7       	std	Y+45, r24	; 0x2d
     9d0:	9e a7       	std	Y+46, r25	; 0x2e
     9d2:	af a7       	std	Y+47, r26	; 0x2f
     9d4:	b8 ab       	std	Y+48, r27	; 0x30
     9d6:	a2 1a       	sub	r10, r18
     9d8:	b3 0a       	sbc	r11, r19
     9da:	c4 0a       	sbc	r12, r20
     9dc:	d5 0a       	sbc	r13, r21
     9de:	25 96       	adiw	r28, 0x05	; 5
     9e0:	ec ac       	ldd	r14, Y+60	; 0x3c
     9e2:	fd ac       	ldd	r15, Y+61	; 0x3d
     9e4:	0e ad       	ldd	r16, Y+62	; 0x3e
     9e6:	1f ad       	ldd	r17, Y+63	; 0x3f
     9e8:	25 97       	sbiw	r28, 0x05	; 5
     9ea:	d7 01       	movw	r26, r14
     9ec:	99 27       	eor	r25, r25
     9ee:	88 27       	eor	r24, r24
     9f0:	68 2a       	or	r6, r24
     9f2:	79 2a       	or	r7, r25
     9f4:	8a 2a       	or	r8, r26
     9f6:	9b 2a       	or	r9, r27
     9f8:	82 01       	movw	r16, r4
     9fa:	22 27       	eor	r18, r18
     9fc:	33 27       	eor	r19, r19
     9fe:	29 96       	adiw	r28, 0x09	; 9
     a00:	0c af       	std	Y+60, r16	; 0x3c
     a02:	1d af       	std	Y+61, r17	; 0x3d
     a04:	2e af       	std	Y+62, r18	; 0x3e
     a06:	3f af       	std	Y+63, r19	; 0x3f
     a08:	29 97       	sbiw	r28, 0x09	; 9
     a0a:	a2 01       	movw	r20, r4
     a0c:	91 01       	movw	r18, r2
     a0e:	40 70       	andi	r20, 0x00	; 0
     a10:	50 70       	andi	r21, 0x00	; 0
     a12:	2d 96       	adiw	r28, 0x0d	; 13
     a14:	2c af       	std	Y+60, r18	; 0x3c
     a16:	3d af       	std	Y+61, r19	; 0x3d
     a18:	4e af       	std	Y+62, r20	; 0x3e
     a1a:	5f af       	std	Y+63, r21	; 0x3f
     a1c:	2d 97       	sbiw	r28, 0x0d	; 13
     a1e:	c6 01       	movw	r24, r12
     a20:	b5 01       	movw	r22, r10
     a22:	29 96       	adiw	r28, 0x09	; 9
     a24:	2c ad       	ldd	r18, Y+60	; 0x3c
     a26:	3d ad       	ldd	r19, Y+61	; 0x3d
     a28:	4e ad       	ldd	r20, Y+62	; 0x3e
     a2a:	5f ad       	ldd	r21, Y+63	; 0x3f
     a2c:	29 97       	sbiw	r28, 0x09	; 9
     a2e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     a32:	7b 01       	movw	r14, r22
     a34:	8c 01       	movw	r16, r24
     a36:	c6 01       	movw	r24, r12
     a38:	b5 01       	movw	r22, r10
     a3a:	29 96       	adiw	r28, 0x09	; 9
     a3c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a3e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a40:	4e ad       	ldd	r20, Y+62	; 0x3e
     a42:	5f ad       	ldd	r21, Y+63	; 0x3f
     a44:	29 97       	sbiw	r28, 0x09	; 9
     a46:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     a4a:	c9 01       	movw	r24, r18
     a4c:	da 01       	movw	r26, r20
     a4e:	61 96       	adiw	r28, 0x11	; 17
     a50:	8c af       	std	Y+60, r24	; 0x3c
     a52:	9d af       	std	Y+61, r25	; 0x3d
     a54:	ae af       	std	Y+62, r26	; 0x3e
     a56:	bf af       	std	Y+63, r27	; 0x3f
     a58:	61 97       	sbiw	r28, 0x11	; 17
     a5a:	bc 01       	movw	r22, r24
     a5c:	cd 01       	movw	r24, r26
     a5e:	2d 96       	adiw	r28, 0x0d	; 13
     a60:	2c ad       	ldd	r18, Y+60	; 0x3c
     a62:	3d ad       	ldd	r19, Y+61	; 0x3d
     a64:	4e ad       	ldd	r20, Y+62	; 0x3e
     a66:	5f ad       	ldd	r21, Y+63	; 0x3f
     a68:	2d 97       	sbiw	r28, 0x0d	; 13
     a6a:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     a6e:	9b 01       	movw	r18, r22
     a70:	ac 01       	movw	r20, r24
     a72:	87 01       	movw	r16, r14
     a74:	ff 24       	eor	r15, r15
     a76:	ee 24       	eor	r14, r14
     a78:	ad a4       	ldd	r10, Y+45	; 0x2d
     a7a:	be a4       	ldd	r11, Y+46	; 0x2e
     a7c:	cf a4       	ldd	r12, Y+47	; 0x2f
     a7e:	d8 a8       	ldd	r13, Y+48	; 0x30
     a80:	c6 01       	movw	r24, r12
     a82:	aa 27       	eor	r26, r26
     a84:	bb 27       	eor	r27, r27
     a86:	57 01       	movw	r10, r14
     a88:	68 01       	movw	r12, r16
     a8a:	a8 2a       	or	r10, r24
     a8c:	b9 2a       	or	r11, r25
     a8e:	ca 2a       	or	r12, r26
     a90:	db 2a       	or	r13, r27
     a92:	a2 16       	cp	r10, r18
     a94:	b3 06       	cpc	r11, r19
     a96:	c4 06       	cpc	r12, r20
     a98:	d5 06       	cpc	r13, r21
     a9a:	60 f5       	brcc	.+88     	; 0xaf4 <__stack+0x295>
     a9c:	61 96       	adiw	r28, 0x11	; 17
     a9e:	6c ad       	ldd	r22, Y+60	; 0x3c
     aa0:	7d ad       	ldd	r23, Y+61	; 0x3d
     aa2:	8e ad       	ldd	r24, Y+62	; 0x3e
     aa4:	9f ad       	ldd	r25, Y+63	; 0x3f
     aa6:	61 97       	sbiw	r28, 0x11	; 17
     aa8:	61 50       	subi	r22, 0x01	; 1
     aaa:	70 40       	sbci	r23, 0x00	; 0
     aac:	80 40       	sbci	r24, 0x00	; 0
     aae:	90 40       	sbci	r25, 0x00	; 0
     ab0:	61 96       	adiw	r28, 0x11	; 17
     ab2:	6c af       	std	Y+60, r22	; 0x3c
     ab4:	7d af       	std	Y+61, r23	; 0x3d
     ab6:	8e af       	std	Y+62, r24	; 0x3e
     ab8:	9f af       	std	Y+63, r25	; 0x3f
     aba:	61 97       	sbiw	r28, 0x11	; 17
     abc:	a2 0c       	add	r10, r2
     abe:	b3 1c       	adc	r11, r3
     ac0:	c4 1c       	adc	r12, r4
     ac2:	d5 1c       	adc	r13, r5
     ac4:	a2 14       	cp	r10, r2
     ac6:	b3 04       	cpc	r11, r3
     ac8:	c4 04       	cpc	r12, r4
     aca:	d5 04       	cpc	r13, r5
     acc:	98 f0       	brcs	.+38     	; 0xaf4 <__stack+0x295>
     ace:	a2 16       	cp	r10, r18
     ad0:	b3 06       	cpc	r11, r19
     ad2:	c4 06       	cpc	r12, r20
     ad4:	d5 06       	cpc	r13, r21
     ad6:	70 f4       	brcc	.+28     	; 0xaf4 <__stack+0x295>
     ad8:	61 50       	subi	r22, 0x01	; 1
     ada:	70 40       	sbci	r23, 0x00	; 0
     adc:	80 40       	sbci	r24, 0x00	; 0
     ade:	90 40       	sbci	r25, 0x00	; 0
     ae0:	61 96       	adiw	r28, 0x11	; 17
     ae2:	6c af       	std	Y+60, r22	; 0x3c
     ae4:	7d af       	std	Y+61, r23	; 0x3d
     ae6:	8e af       	std	Y+62, r24	; 0x3e
     ae8:	9f af       	std	Y+63, r25	; 0x3f
     aea:	61 97       	sbiw	r28, 0x11	; 17
     aec:	a2 0c       	add	r10, r2
     aee:	b3 1c       	adc	r11, r3
     af0:	c4 1c       	adc	r12, r4
     af2:	d5 1c       	adc	r13, r5
     af4:	a2 1a       	sub	r10, r18
     af6:	b3 0a       	sbc	r11, r19
     af8:	c4 0a       	sbc	r12, r20
     afa:	d5 0a       	sbc	r13, r21
     afc:	c6 01       	movw	r24, r12
     afe:	b5 01       	movw	r22, r10
     b00:	29 96       	adiw	r28, 0x09	; 9
     b02:	2c ad       	ldd	r18, Y+60	; 0x3c
     b04:	3d ad       	ldd	r19, Y+61	; 0x3d
     b06:	4e ad       	ldd	r20, Y+62	; 0x3e
     b08:	5f ad       	ldd	r21, Y+63	; 0x3f
     b0a:	29 97       	sbiw	r28, 0x09	; 9
     b0c:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     b10:	7b 01       	movw	r14, r22
     b12:	8c 01       	movw	r16, r24
     b14:	c6 01       	movw	r24, r12
     b16:	b5 01       	movw	r22, r10
     b18:	29 96       	adiw	r28, 0x09	; 9
     b1a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b1c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b1e:	4e ad       	ldd	r20, Y+62	; 0x3e
     b20:	5f ad       	ldd	r21, Y+63	; 0x3f
     b22:	29 97       	sbiw	r28, 0x09	; 9
     b24:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     b28:	c9 01       	movw	r24, r18
     b2a:	da 01       	movw	r26, r20
     b2c:	5c 01       	movw	r10, r24
     b2e:	6d 01       	movw	r12, r26
     b30:	c6 01       	movw	r24, r12
     b32:	b5 01       	movw	r22, r10
     b34:	2d 96       	adiw	r28, 0x0d	; 13
     b36:	2c ad       	ldd	r18, Y+60	; 0x3c
     b38:	3d ad       	ldd	r19, Y+61	; 0x3d
     b3a:	4e ad       	ldd	r20, Y+62	; 0x3e
     b3c:	5f ad       	ldd	r21, Y+63	; 0x3f
     b3e:	2d 97       	sbiw	r28, 0x0d	; 13
     b40:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     b44:	9b 01       	movw	r18, r22
     b46:	ac 01       	movw	r20, r24
     b48:	87 01       	movw	r16, r14
     b4a:	ff 24       	eor	r15, r15
     b4c:	ee 24       	eor	r14, r14
     b4e:	8d a5       	ldd	r24, Y+45	; 0x2d
     b50:	9e a5       	ldd	r25, Y+46	; 0x2e
     b52:	af a5       	ldd	r26, Y+47	; 0x2f
     b54:	b8 a9       	ldd	r27, Y+48	; 0x30
     b56:	a0 70       	andi	r26, 0x00	; 0
     b58:	b0 70       	andi	r27, 0x00	; 0
     b5a:	e8 2a       	or	r14, r24
     b5c:	f9 2a       	or	r15, r25
     b5e:	0a 2b       	or	r16, r26
     b60:	1b 2b       	or	r17, r27
     b62:	e2 16       	cp	r14, r18
     b64:	f3 06       	cpc	r15, r19
     b66:	04 07       	cpc	r16, r20
     b68:	15 07       	cpc	r17, r21
     b6a:	c0 f4       	brcc	.+48     	; 0xb9c <__stack+0x33d>
     b6c:	08 94       	sec
     b6e:	a1 08       	sbc	r10, r1
     b70:	b1 08       	sbc	r11, r1
     b72:	c1 08       	sbc	r12, r1
     b74:	d1 08       	sbc	r13, r1
     b76:	e2 0c       	add	r14, r2
     b78:	f3 1c       	adc	r15, r3
     b7a:	04 1d       	adc	r16, r4
     b7c:	15 1d       	adc	r17, r5
     b7e:	e2 14       	cp	r14, r2
     b80:	f3 04       	cpc	r15, r3
     b82:	04 05       	cpc	r16, r4
     b84:	15 05       	cpc	r17, r5
     b86:	50 f0       	brcs	.+20     	; 0xb9c <__stack+0x33d>
     b88:	e2 16       	cp	r14, r18
     b8a:	f3 06       	cpc	r15, r19
     b8c:	04 07       	cpc	r16, r20
     b8e:	15 07       	cpc	r17, r21
     b90:	28 f4       	brcc	.+10     	; 0xb9c <__stack+0x33d>
     b92:	08 94       	sec
     b94:	a1 08       	sbc	r10, r1
     b96:	b1 08       	sbc	r11, r1
     b98:	c1 08       	sbc	r12, r1
     b9a:	d1 08       	sbc	r13, r1
     b9c:	61 96       	adiw	r28, 0x11	; 17
     b9e:	ec ac       	ldd	r14, Y+60	; 0x3c
     ba0:	fd ac       	ldd	r15, Y+61	; 0x3d
     ba2:	0e ad       	ldd	r16, Y+62	; 0x3e
     ba4:	1f ad       	ldd	r17, Y+63	; 0x3f
     ba6:	61 97       	sbiw	r28, 0x11	; 17
     ba8:	d7 01       	movw	r26, r14
     baa:	99 27       	eor	r25, r25
     bac:	88 27       	eor	r24, r24
     bae:	96 01       	movw	r18, r12
     bb0:	85 01       	movw	r16, r10
     bb2:	08 2b       	or	r16, r24
     bb4:	19 2b       	or	r17, r25
     bb6:	2a 2b       	or	r18, r26
     bb8:	3b 2b       	or	r19, r27
     bba:	09 ab       	std	Y+49, r16	; 0x31
     bbc:	1a ab       	std	Y+50, r17	; 0x32
     bbe:	2b ab       	std	Y+51, r18	; 0x33
     bc0:	3c ab       	std	Y+52, r19	; 0x34
     bc2:	62 c2       	rjmp	.+1220   	; 0x1088 <__stack+0x829>
     bc4:	6e 14       	cp	r6, r14
     bc6:	7f 04       	cpc	r7, r15
     bc8:	80 06       	cpc	r8, r16
     bca:	91 06       	cpc	r9, r17
     bcc:	08 f4       	brcc	.+2      	; 0xbd0 <__stack+0x371>
     bce:	51 c2       	rjmp	.+1186   	; 0x1072 <__stack+0x813>
     bd0:	20 e0       	ldi	r18, 0x00	; 0
     bd2:	e2 16       	cp	r14, r18
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	f2 06       	cpc	r15, r18
     bd8:	21 e0       	ldi	r18, 0x01	; 1
     bda:	02 07       	cpc	r16, r18
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	12 07       	cpc	r17, r18
     be0:	88 f4       	brcc	.+34     	; 0xc04 <__stack+0x3a5>
     be2:	3f ef       	ldi	r19, 0xFF	; 255
     be4:	e3 16       	cp	r14, r19
     be6:	f1 04       	cpc	r15, r1
     be8:	01 05       	cpc	r16, r1
     bea:	11 05       	cpc	r17, r1
     bec:	31 f0       	breq	.+12     	; 0xbfa <__stack+0x39b>
     bee:	28 f0       	brcs	.+10     	; 0xbfa <__stack+0x39b>
     bf0:	48 e0       	ldi	r20, 0x08	; 8
     bf2:	50 e0       	ldi	r21, 0x00	; 0
     bf4:	60 e0       	ldi	r22, 0x00	; 0
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	17 c0       	rjmp	.+46     	; 0xc28 <__stack+0x3c9>
     bfa:	40 e0       	ldi	r20, 0x00	; 0
     bfc:	50 e0       	ldi	r21, 0x00	; 0
     bfe:	60 e0       	ldi	r22, 0x00	; 0
     c00:	70 e0       	ldi	r23, 0x00	; 0
     c02:	12 c0       	rjmp	.+36     	; 0xc28 <__stack+0x3c9>
     c04:	40 e0       	ldi	r20, 0x00	; 0
     c06:	e4 16       	cp	r14, r20
     c08:	40 e0       	ldi	r20, 0x00	; 0
     c0a:	f4 06       	cpc	r15, r20
     c0c:	40 e0       	ldi	r20, 0x00	; 0
     c0e:	04 07       	cpc	r16, r20
     c10:	41 e0       	ldi	r20, 0x01	; 1
     c12:	14 07       	cpc	r17, r20
     c14:	28 f0       	brcs	.+10     	; 0xc20 <__stack+0x3c1>
     c16:	48 e1       	ldi	r20, 0x18	; 24
     c18:	50 e0       	ldi	r21, 0x00	; 0
     c1a:	60 e0       	ldi	r22, 0x00	; 0
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	04 c0       	rjmp	.+8      	; 0xc28 <__stack+0x3c9>
     c20:	40 e1       	ldi	r20, 0x10	; 16
     c22:	50 e0       	ldi	r21, 0x00	; 0
     c24:	60 e0       	ldi	r22, 0x00	; 0
     c26:	70 e0       	ldi	r23, 0x00	; 0
     c28:	d8 01       	movw	r26, r16
     c2a:	c7 01       	movw	r24, r14
     c2c:	04 2e       	mov	r0, r20
     c2e:	04 c0       	rjmp	.+8      	; 0xc38 <__stack+0x3d9>
     c30:	b6 95       	lsr	r27
     c32:	a7 95       	ror	r26
     c34:	97 95       	ror	r25
     c36:	87 95       	ror	r24
     c38:	0a 94       	dec	r0
     c3a:	d2 f7       	brpl	.-12     	; 0xc30 <__stack+0x3d1>
     c3c:	88 57       	subi	r24, 0x78	; 120
     c3e:	9f 4f       	sbci	r25, 0xFF	; 255
     c40:	dc 01       	movw	r26, r24
     c42:	2c 91       	ld	r18, X
     c44:	30 e2       	ldi	r19, 0x20	; 32
     c46:	a3 2e       	mov	r10, r19
     c48:	b1 2c       	mov	r11, r1
     c4a:	c1 2c       	mov	r12, r1
     c4c:	d1 2c       	mov	r13, r1
     c4e:	d6 01       	movw	r26, r12
     c50:	c5 01       	movw	r24, r10
     c52:	84 1b       	sub	r24, r20
     c54:	95 0b       	sbc	r25, r21
     c56:	a6 0b       	sbc	r26, r22
     c58:	b7 0b       	sbc	r27, r23
     c5a:	82 1b       	sub	r24, r18
     c5c:	91 09       	sbc	r25, r1
     c5e:	a1 09       	sbc	r26, r1
     c60:	b1 09       	sbc	r27, r1
     c62:	00 97       	sbiw	r24, 0x00	; 0
     c64:	a1 05       	cpc	r26, r1
     c66:	b1 05       	cpc	r27, r1
     c68:	89 f4       	brne	.+34     	; 0xc8c <__stack+0x42d>
     c6a:	e6 14       	cp	r14, r6
     c6c:	f7 04       	cpc	r15, r7
     c6e:	08 05       	cpc	r16, r8
     c70:	19 05       	cpc	r17, r9
     c72:	08 f4       	brcc	.+2      	; 0xc76 <__stack+0x417>
     c74:	f2 c1       	rjmp	.+996    	; 0x105a <__stack+0x7fb>
     c76:	6d a4       	ldd	r6, Y+45	; 0x2d
     c78:	7e a4       	ldd	r7, Y+46	; 0x2e
     c7a:	8f a4       	ldd	r8, Y+47	; 0x2f
     c7c:	98 a8       	ldd	r9, Y+48	; 0x30
     c7e:	62 14       	cp	r6, r2
     c80:	73 04       	cpc	r7, r3
     c82:	84 04       	cpc	r8, r4
     c84:	95 04       	cpc	r9, r5
     c86:	08 f0       	brcs	.+2      	; 0xc8a <__stack+0x42b>
     c88:	e8 c1       	rjmp	.+976    	; 0x105a <__stack+0x7fb>
     c8a:	f3 c1       	rjmp	.+998    	; 0x1072 <__stack+0x813>
     c8c:	6e 96       	adiw	r28, 0x1e	; 30
     c8e:	8f af       	std	Y+63, r24	; 0x3f
     c90:	6e 97       	sbiw	r28, 0x1e	; 30
     c92:	08 2e       	mov	r0, r24
     c94:	04 c0       	rjmp	.+8      	; 0xc9e <__stack+0x43f>
     c96:	ee 0c       	add	r14, r14
     c98:	ff 1c       	adc	r15, r15
     c9a:	00 1f       	adc	r16, r16
     c9c:	11 1f       	adc	r17, r17
     c9e:	0a 94       	dec	r0
     ca0:	d2 f7       	brpl	.-12     	; 0xc96 <__stack+0x437>
     ca2:	6a 2d       	mov	r22, r10
     ca4:	68 1b       	sub	r22, r24
     ca6:	d2 01       	movw	r26, r4
     ca8:	c1 01       	movw	r24, r2
     caa:	06 2e       	mov	r0, r22
     cac:	04 c0       	rjmp	.+8      	; 0xcb6 <__stack+0x457>
     cae:	b6 95       	lsr	r27
     cb0:	a7 95       	ror	r26
     cb2:	97 95       	ror	r25
     cb4:	87 95       	ror	r24
     cb6:	0a 94       	dec	r0
     cb8:	d2 f7       	brpl	.-12     	; 0xcae <__stack+0x44f>
     cba:	5c 01       	movw	r10, r24
     cbc:	6d 01       	movw	r12, r26
     cbe:	ae 28       	or	r10, r14
     cc0:	bf 28       	or	r11, r15
     cc2:	c0 2a       	or	r12, r16
     cc4:	d1 2a       	or	r13, r17
     cc6:	ad a2       	std	Y+37, r10	; 0x25
     cc8:	be a2       	std	Y+38, r11	; 0x26
     cca:	cf a2       	std	Y+39, r12	; 0x27
     ccc:	d8 a6       	std	Y+40, r13	; 0x28
     cce:	72 01       	movw	r14, r4
     cd0:	61 01       	movw	r12, r2
     cd2:	6e 96       	adiw	r28, 0x1e	; 30
     cd4:	0f ac       	ldd	r0, Y+63	; 0x3f
     cd6:	6e 97       	sbiw	r28, 0x1e	; 30
     cd8:	04 c0       	rjmp	.+8      	; 0xce2 <__stack+0x483>
     cda:	cc 0c       	add	r12, r12
     cdc:	dd 1c       	adc	r13, r13
     cde:	ee 1c       	adc	r14, r14
     ce0:	ff 1c       	adc	r15, r15
     ce2:	0a 94       	dec	r0
     ce4:	d2 f7       	brpl	.-12     	; 0xcda <__stack+0x47b>
     ce6:	c9 a2       	std	Y+33, r12	; 0x21
     ce8:	da a2       	std	Y+34, r13	; 0x22
     cea:	eb a2       	std	Y+35, r14	; 0x23
     cec:	fc a2       	std	Y+36, r15	; 0x24
     cee:	64 01       	movw	r12, r8
     cf0:	53 01       	movw	r10, r6
     cf2:	06 2e       	mov	r0, r22
     cf4:	04 c0       	rjmp	.+8      	; 0xcfe <__stack+0x49f>
     cf6:	d6 94       	lsr	r13
     cf8:	c7 94       	ror	r12
     cfa:	b7 94       	ror	r11
     cfc:	a7 94       	ror	r10
     cfe:	0a 94       	dec	r0
     d00:	d2 f7       	brpl	.-12     	; 0xcf6 <__stack+0x497>
     d02:	d4 01       	movw	r26, r8
     d04:	c3 01       	movw	r24, r6
     d06:	6e 96       	adiw	r28, 0x1e	; 30
     d08:	0f ac       	ldd	r0, Y+63	; 0x3f
     d0a:	6e 97       	sbiw	r28, 0x1e	; 30
     d0c:	04 c0       	rjmp	.+8      	; 0xd16 <__stack+0x4b7>
     d0e:	88 0f       	add	r24, r24
     d10:	99 1f       	adc	r25, r25
     d12:	aa 1f       	adc	r26, r26
     d14:	bb 1f       	adc	r27, r27
     d16:	0a 94       	dec	r0
     d18:	d2 f7       	brpl	.-12     	; 0xd0e <__stack+0x4af>
     d1a:	ed a4       	ldd	r14, Y+45	; 0x2d
     d1c:	fe a4       	ldd	r15, Y+46	; 0x2e
     d1e:	0f a5       	ldd	r16, Y+47	; 0x2f
     d20:	18 a9       	ldd	r17, Y+48	; 0x30
     d22:	04 c0       	rjmp	.+8      	; 0xd2c <__stack+0x4cd>
     d24:	16 95       	lsr	r17
     d26:	07 95       	ror	r16
     d28:	f7 94       	ror	r15
     d2a:	e7 94       	ror	r14
     d2c:	6a 95       	dec	r22
     d2e:	d2 f7       	brpl	.-12     	; 0xd24 <__stack+0x4c5>
     d30:	37 01       	movw	r6, r14
     d32:	48 01       	movw	r8, r16
     d34:	68 2a       	or	r6, r24
     d36:	79 2a       	or	r7, r25
     d38:	8a 2a       	or	r8, r26
     d3a:	9b 2a       	or	r9, r27
     d3c:	6d 8e       	std	Y+29, r6	; 0x1d
     d3e:	7e 8e       	std	Y+30, r7	; 0x1e
     d40:	8f 8e       	std	Y+31, r8	; 0x1f
     d42:	98 a2       	std	Y+32, r9	; 0x20
     d44:	ed a0       	ldd	r14, Y+37	; 0x25
     d46:	fe a0       	ldd	r15, Y+38	; 0x26
     d48:	0f a1       	ldd	r16, Y+39	; 0x27
     d4a:	18 a5       	ldd	r17, Y+40	; 0x28
     d4c:	38 01       	movw	r6, r16
     d4e:	88 24       	eor	r8, r8
     d50:	99 24       	eor	r9, r9
     d52:	98 01       	movw	r18, r16
     d54:	87 01       	movw	r16, r14
     d56:	20 70       	andi	r18, 0x00	; 0
     d58:	30 70       	andi	r19, 0x00	; 0
     d5a:	65 96       	adiw	r28, 0x15	; 21
     d5c:	0c af       	std	Y+60, r16	; 0x3c
     d5e:	1d af       	std	Y+61, r17	; 0x3d
     d60:	2e af       	std	Y+62, r18	; 0x3e
     d62:	3f af       	std	Y+63, r19	; 0x3f
     d64:	65 97       	sbiw	r28, 0x15	; 21
     d66:	c6 01       	movw	r24, r12
     d68:	b5 01       	movw	r22, r10
     d6a:	a4 01       	movw	r20, r8
     d6c:	93 01       	movw	r18, r6
     d6e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     d72:	7b 01       	movw	r14, r22
     d74:	8c 01       	movw	r16, r24
     d76:	c6 01       	movw	r24, r12
     d78:	b5 01       	movw	r22, r10
     d7a:	a4 01       	movw	r20, r8
     d7c:	93 01       	movw	r18, r6
     d7e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     d82:	c9 01       	movw	r24, r18
     d84:	da 01       	movw	r26, r20
     d86:	1c 01       	movw	r2, r24
     d88:	2d 01       	movw	r4, r26
     d8a:	c2 01       	movw	r24, r4
     d8c:	b1 01       	movw	r22, r2
     d8e:	65 96       	adiw	r28, 0x15	; 21
     d90:	2c ad       	ldd	r18, Y+60	; 0x3c
     d92:	3d ad       	ldd	r19, Y+61	; 0x3d
     d94:	4e ad       	ldd	r20, Y+62	; 0x3e
     d96:	5f ad       	ldd	r21, Y+63	; 0x3f
     d98:	65 97       	sbiw	r28, 0x15	; 21
     d9a:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     d9e:	9b 01       	movw	r18, r22
     da0:	ac 01       	movw	r20, r24
     da2:	87 01       	movw	r16, r14
     da4:	ff 24       	eor	r15, r15
     da6:	ee 24       	eor	r14, r14
     da8:	ad 8c       	ldd	r10, Y+29	; 0x1d
     daa:	be 8c       	ldd	r11, Y+30	; 0x1e
     dac:	cf 8c       	ldd	r12, Y+31	; 0x1f
     dae:	d8 a0       	ldd	r13, Y+32	; 0x20
     db0:	c6 01       	movw	r24, r12
     db2:	aa 27       	eor	r26, r26
     db4:	bb 27       	eor	r27, r27
     db6:	57 01       	movw	r10, r14
     db8:	68 01       	movw	r12, r16
     dba:	a8 2a       	or	r10, r24
     dbc:	b9 2a       	or	r11, r25
     dbe:	ca 2a       	or	r12, r26
     dc0:	db 2a       	or	r13, r27
     dc2:	a2 16       	cp	r10, r18
     dc4:	b3 06       	cpc	r11, r19
     dc6:	c4 06       	cpc	r12, r20
     dc8:	d5 06       	cpc	r13, r21
     dca:	00 f5       	brcc	.+64     	; 0xe0c <__stack+0x5ad>
     dcc:	08 94       	sec
     dce:	21 08       	sbc	r2, r1
     dd0:	31 08       	sbc	r3, r1
     dd2:	41 08       	sbc	r4, r1
     dd4:	51 08       	sbc	r5, r1
     dd6:	ed a0       	ldd	r14, Y+37	; 0x25
     dd8:	fe a0       	ldd	r15, Y+38	; 0x26
     dda:	0f a1       	ldd	r16, Y+39	; 0x27
     ddc:	18 a5       	ldd	r17, Y+40	; 0x28
     dde:	ae 0c       	add	r10, r14
     de0:	bf 1c       	adc	r11, r15
     de2:	c0 1e       	adc	r12, r16
     de4:	d1 1e       	adc	r13, r17
     de6:	ae 14       	cp	r10, r14
     de8:	bf 04       	cpc	r11, r15
     dea:	c0 06       	cpc	r12, r16
     dec:	d1 06       	cpc	r13, r17
     dee:	70 f0       	brcs	.+28     	; 0xe0c <__stack+0x5ad>
     df0:	a2 16       	cp	r10, r18
     df2:	b3 06       	cpc	r11, r19
     df4:	c4 06       	cpc	r12, r20
     df6:	d5 06       	cpc	r13, r21
     df8:	48 f4       	brcc	.+18     	; 0xe0c <__stack+0x5ad>
     dfa:	08 94       	sec
     dfc:	21 08       	sbc	r2, r1
     dfe:	31 08       	sbc	r3, r1
     e00:	41 08       	sbc	r4, r1
     e02:	51 08       	sbc	r5, r1
     e04:	ae 0c       	add	r10, r14
     e06:	bf 1c       	adc	r11, r15
     e08:	c0 1e       	adc	r12, r16
     e0a:	d1 1e       	adc	r13, r17
     e0c:	a2 1a       	sub	r10, r18
     e0e:	b3 0a       	sbc	r11, r19
     e10:	c4 0a       	sbc	r12, r20
     e12:	d5 0a       	sbc	r13, r21
     e14:	c6 01       	movw	r24, r12
     e16:	b5 01       	movw	r22, r10
     e18:	a4 01       	movw	r20, r8
     e1a:	93 01       	movw	r18, r6
     e1c:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     e20:	7b 01       	movw	r14, r22
     e22:	8c 01       	movw	r16, r24
     e24:	c6 01       	movw	r24, r12
     e26:	b5 01       	movw	r22, r10
     e28:	a4 01       	movw	r20, r8
     e2a:	93 01       	movw	r18, r6
     e2c:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
     e30:	c9 01       	movw	r24, r18
     e32:	da 01       	movw	r26, r20
     e34:	3c 01       	movw	r6, r24
     e36:	4d 01       	movw	r8, r26
     e38:	c4 01       	movw	r24, r8
     e3a:	b3 01       	movw	r22, r6
     e3c:	65 96       	adiw	r28, 0x15	; 21
     e3e:	2c ad       	ldd	r18, Y+60	; 0x3c
     e40:	3d ad       	ldd	r19, Y+61	; 0x3d
     e42:	4e ad       	ldd	r20, Y+62	; 0x3e
     e44:	5f ad       	ldd	r21, Y+63	; 0x3f
     e46:	65 97       	sbiw	r28, 0x15	; 21
     e48:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     e4c:	9b 01       	movw	r18, r22
     e4e:	ac 01       	movw	r20, r24
     e50:	87 01       	movw	r16, r14
     e52:	ff 24       	eor	r15, r15
     e54:	ee 24       	eor	r14, r14
     e56:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e58:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e5a:	af 8d       	ldd	r26, Y+31	; 0x1f
     e5c:	b8 a1       	ldd	r27, Y+32	; 0x20
     e5e:	a0 70       	andi	r26, 0x00	; 0
     e60:	b0 70       	andi	r27, 0x00	; 0
     e62:	57 01       	movw	r10, r14
     e64:	68 01       	movw	r12, r16
     e66:	a8 2a       	or	r10, r24
     e68:	b9 2a       	or	r11, r25
     e6a:	ca 2a       	or	r12, r26
     e6c:	db 2a       	or	r13, r27
     e6e:	a2 16       	cp	r10, r18
     e70:	b3 06       	cpc	r11, r19
     e72:	c4 06       	cpc	r12, r20
     e74:	d5 06       	cpc	r13, r21
     e76:	00 f5       	brcc	.+64     	; 0xeb8 <__stack+0x659>
     e78:	08 94       	sec
     e7a:	61 08       	sbc	r6, r1
     e7c:	71 08       	sbc	r7, r1
     e7e:	81 08       	sbc	r8, r1
     e80:	91 08       	sbc	r9, r1
     e82:	6d a1       	ldd	r22, Y+37	; 0x25
     e84:	7e a1       	ldd	r23, Y+38	; 0x26
     e86:	8f a1       	ldd	r24, Y+39	; 0x27
     e88:	98 a5       	ldd	r25, Y+40	; 0x28
     e8a:	a6 0e       	add	r10, r22
     e8c:	b7 1e       	adc	r11, r23
     e8e:	c8 1e       	adc	r12, r24
     e90:	d9 1e       	adc	r13, r25
     e92:	a6 16       	cp	r10, r22
     e94:	b7 06       	cpc	r11, r23
     e96:	c8 06       	cpc	r12, r24
     e98:	d9 06       	cpc	r13, r25
     e9a:	70 f0       	brcs	.+28     	; 0xeb8 <__stack+0x659>
     e9c:	a2 16       	cp	r10, r18
     e9e:	b3 06       	cpc	r11, r19
     ea0:	c4 06       	cpc	r12, r20
     ea2:	d5 06       	cpc	r13, r21
     ea4:	48 f4       	brcc	.+18     	; 0xeb8 <__stack+0x659>
     ea6:	08 94       	sec
     ea8:	61 08       	sbc	r6, r1
     eaa:	71 08       	sbc	r7, r1
     eac:	81 08       	sbc	r8, r1
     eae:	91 08       	sbc	r9, r1
     eb0:	a6 0e       	add	r10, r22
     eb2:	b7 1e       	adc	r11, r23
     eb4:	c8 1e       	adc	r12, r24
     eb6:	d9 1e       	adc	r13, r25
     eb8:	d6 01       	movw	r26, r12
     eba:	c5 01       	movw	r24, r10
     ebc:	82 1b       	sub	r24, r18
     ebe:	93 0b       	sbc	r25, r19
     ec0:	a4 0b       	sbc	r26, r20
     ec2:	b5 0b       	sbc	r27, r21
     ec4:	89 8f       	std	Y+25, r24	; 0x19
     ec6:	9a 8f       	std	Y+26, r25	; 0x1a
     ec8:	ab 8f       	std	Y+27, r26	; 0x1b
     eca:	bc 8f       	std	Y+28, r27	; 0x1c
     ecc:	d1 01       	movw	r26, r2
     ece:	99 27       	eor	r25, r25
     ed0:	88 27       	eor	r24, r24
     ed2:	64 01       	movw	r12, r8
     ed4:	53 01       	movw	r10, r6
     ed6:	a8 2a       	or	r10, r24
     ed8:	b9 2a       	or	r11, r25
     eda:	ca 2a       	or	r12, r26
     edc:	db 2a       	or	r13, r27
     ede:	a9 aa       	std	Y+49, r10	; 0x31
     ee0:	ba aa       	std	Y+50, r11	; 0x32
     ee2:	cb aa       	std	Y+51, r12	; 0x33
     ee4:	dc aa       	std	Y+52, r13	; 0x34
     ee6:	86 01       	movw	r16, r12
     ee8:	75 01       	movw	r14, r10
     eea:	2f ef       	ldi	r18, 0xFF	; 255
     eec:	3f ef       	ldi	r19, 0xFF	; 255
     eee:	40 e0       	ldi	r20, 0x00	; 0
     ef0:	50 e0       	ldi	r21, 0x00	; 0
     ef2:	e2 22       	and	r14, r18
     ef4:	f3 22       	and	r15, r19
     ef6:	04 23       	and	r16, r20
     ef8:	15 23       	and	r17, r21
     efa:	a6 01       	movw	r20, r12
     efc:	66 27       	eor	r22, r22
     efe:	77 27       	eor	r23, r23
     f00:	6d 96       	adiw	r28, 0x1d	; 29
     f02:	4c af       	std	Y+60, r20	; 0x3c
     f04:	5d af       	std	Y+61, r21	; 0x3d
     f06:	6e af       	std	Y+62, r22	; 0x3e
     f08:	7f af       	std	Y+63, r23	; 0x3f
     f0a:	6d 97       	sbiw	r28, 0x1d	; 29
     f0c:	a9 a0       	ldd	r10, Y+33	; 0x21
     f0e:	ba a0       	ldd	r11, Y+34	; 0x22
     f10:	cb a0       	ldd	r12, Y+35	; 0x23
     f12:	dc a0       	ldd	r13, Y+36	; 0x24
     f14:	6f ef       	ldi	r22, 0xFF	; 255
     f16:	7f ef       	ldi	r23, 0xFF	; 255
     f18:	80 e0       	ldi	r24, 0x00	; 0
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	a6 22       	and	r10, r22
     f1e:	b7 22       	and	r11, r23
     f20:	c8 22       	and	r12, r24
     f22:	d9 22       	and	r13, r25
     f24:	89 a1       	ldd	r24, Y+33	; 0x21
     f26:	9a a1       	ldd	r25, Y+34	; 0x22
     f28:	ab a1       	ldd	r26, Y+35	; 0x23
     f2a:	bc a1       	ldd	r27, Y+36	; 0x24
     f2c:	1d 01       	movw	r2, r26
     f2e:	44 24       	eor	r4, r4
     f30:	55 24       	eor	r5, r5
     f32:	c8 01       	movw	r24, r16
     f34:	b7 01       	movw	r22, r14
     f36:	a6 01       	movw	r20, r12
     f38:	95 01       	movw	r18, r10
     f3a:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     f3e:	69 96       	adiw	r28, 0x19	; 25
     f40:	6c af       	std	Y+60, r22	; 0x3c
     f42:	7d af       	std	Y+61, r23	; 0x3d
     f44:	8e af       	std	Y+62, r24	; 0x3e
     f46:	9f af       	std	Y+63, r25	; 0x3f
     f48:	69 97       	sbiw	r28, 0x19	; 25
     f4a:	c8 01       	movw	r24, r16
     f4c:	b7 01       	movw	r22, r14
     f4e:	a2 01       	movw	r20, r4
     f50:	91 01       	movw	r18, r2
     f52:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     f56:	3b 01       	movw	r6, r22
     f58:	4c 01       	movw	r8, r24
     f5a:	6d 96       	adiw	r28, 0x1d	; 29
     f5c:	6c ad       	ldd	r22, Y+60	; 0x3c
     f5e:	7d ad       	ldd	r23, Y+61	; 0x3d
     f60:	8e ad       	ldd	r24, Y+62	; 0x3e
     f62:	9f ad       	ldd	r25, Y+63	; 0x3f
     f64:	6d 97       	sbiw	r28, 0x1d	; 29
     f66:	a6 01       	movw	r20, r12
     f68:	95 01       	movw	r18, r10
     f6a:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     f6e:	7b 01       	movw	r14, r22
     f70:	8c 01       	movw	r16, r24
     f72:	6d 96       	adiw	r28, 0x1d	; 29
     f74:	6c ad       	ldd	r22, Y+60	; 0x3c
     f76:	7d ad       	ldd	r23, Y+61	; 0x3d
     f78:	8e ad       	ldd	r24, Y+62	; 0x3e
     f7a:	9f ad       	ldd	r25, Y+63	; 0x3f
     f7c:	6d 97       	sbiw	r28, 0x1d	; 29
     f7e:	a2 01       	movw	r20, r4
     f80:	91 01       	movw	r18, r2
     f82:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
     f86:	5b 01       	movw	r10, r22
     f88:	6c 01       	movw	r12, r24
     f8a:	a8 01       	movw	r20, r16
     f8c:	97 01       	movw	r18, r14
     f8e:	26 0d       	add	r18, r6
     f90:	37 1d       	adc	r19, r7
     f92:	48 1d       	adc	r20, r8
     f94:	59 1d       	adc	r21, r9
     f96:	69 96       	adiw	r28, 0x19	; 25
     f98:	6c ac       	ldd	r6, Y+60	; 0x3c
     f9a:	7d ac       	ldd	r7, Y+61	; 0x3d
     f9c:	8e ac       	ldd	r8, Y+62	; 0x3e
     f9e:	9f ac       	ldd	r9, Y+63	; 0x3f
     fa0:	69 97       	sbiw	r28, 0x19	; 25
     fa2:	c4 01       	movw	r24, r8
     fa4:	aa 27       	eor	r26, r26
     fa6:	bb 27       	eor	r27, r27
     fa8:	28 0f       	add	r18, r24
     faa:	39 1f       	adc	r19, r25
     fac:	4a 1f       	adc	r20, r26
     fae:	5b 1f       	adc	r21, r27
     fb0:	2e 15       	cp	r18, r14
     fb2:	3f 05       	cpc	r19, r15
     fb4:	40 07       	cpc	r20, r16
     fb6:	51 07       	cpc	r21, r17
     fb8:	48 f4       	brcc	.+18     	; 0xfcc <__stack+0x76d>
     fba:	e1 2c       	mov	r14, r1
     fbc:	f1 2c       	mov	r15, r1
     fbe:	61 e0       	ldi	r22, 0x01	; 1
     fc0:	06 2f       	mov	r16, r22
     fc2:	11 2d       	mov	r17, r1
     fc4:	ae 0c       	add	r10, r14
     fc6:	bf 1c       	adc	r11, r15
     fc8:	c0 1e       	adc	r12, r16
     fca:	d1 1e       	adc	r13, r17
     fcc:	ca 01       	movw	r24, r20
     fce:	aa 27       	eor	r26, r26
     fd0:	bb 27       	eor	r27, r27
     fd2:	bc 01       	movw	r22, r24
     fd4:	cd 01       	movw	r24, r26
     fd6:	6a 0d       	add	r22, r10
     fd8:	7b 1d       	adc	r23, r11
     fda:	8c 1d       	adc	r24, r12
     fdc:	9d 1d       	adc	r25, r13
     fde:	69 8c       	ldd	r6, Y+25	; 0x19
     fe0:	7a 8c       	ldd	r7, Y+26	; 0x1a
     fe2:	8b 8c       	ldd	r8, Y+27	; 0x1b
     fe4:	9c 8c       	ldd	r9, Y+28	; 0x1c
     fe6:	66 16       	cp	r6, r22
     fe8:	77 06       	cpc	r7, r23
     fea:	88 06       	cpc	r8, r24
     fec:	99 06       	cpc	r9, r25
     fee:	40 f1       	brcs	.+80     	; 0x1040 <__stack+0x7e1>
     ff0:	66 15       	cp	r22, r6
     ff2:	77 05       	cpc	r23, r7
     ff4:	88 05       	cpc	r24, r8
     ff6:	99 05       	cpc	r25, r9
     ff8:	09 f0       	breq	.+2      	; 0xffc <__stack+0x79d>
     ffa:	43 c0       	rjmp	.+134    	; 0x1082 <__stack+0x823>
     ffc:	d9 01       	movw	r26, r18
     ffe:	99 27       	eor	r25, r25
    1000:	88 27       	eor	r24, r24
    1002:	69 96       	adiw	r28, 0x19	; 25
    1004:	2c ad       	ldd	r18, Y+60	; 0x3c
    1006:	3d ad       	ldd	r19, Y+61	; 0x3d
    1008:	4e ad       	ldd	r20, Y+62	; 0x3e
    100a:	5f ad       	ldd	r21, Y+63	; 0x3f
    100c:	69 97       	sbiw	r28, 0x19	; 25
    100e:	40 70       	andi	r20, 0x00	; 0
    1010:	50 70       	andi	r21, 0x00	; 0
    1012:	82 0f       	add	r24, r18
    1014:	93 1f       	adc	r25, r19
    1016:	a4 1f       	adc	r26, r20
    1018:	b5 1f       	adc	r27, r21
    101a:	2d a5       	ldd	r18, Y+45	; 0x2d
    101c:	3e a5       	ldd	r19, Y+46	; 0x2e
    101e:	4f a5       	ldd	r20, Y+47	; 0x2f
    1020:	58 a9       	ldd	r21, Y+48	; 0x30
    1022:	6e 96       	adiw	r28, 0x1e	; 30
    1024:	0f ac       	ldd	r0, Y+63	; 0x3f
    1026:	6e 97       	sbiw	r28, 0x1e	; 30
    1028:	04 c0       	rjmp	.+8      	; 0x1032 <__stack+0x7d3>
    102a:	22 0f       	add	r18, r18
    102c:	33 1f       	adc	r19, r19
    102e:	44 1f       	adc	r20, r20
    1030:	55 1f       	adc	r21, r21
    1032:	0a 94       	dec	r0
    1034:	d2 f7       	brpl	.-12     	; 0x102a <__stack+0x7cb>
    1036:	28 17       	cp	r18, r24
    1038:	39 07       	cpc	r19, r25
    103a:	4a 07       	cpc	r20, r26
    103c:	5b 07       	cpc	r21, r27
    103e:	08 f5       	brcc	.+66     	; 0x1082 <__stack+0x823>
    1040:	09 a9       	ldd	r16, Y+49	; 0x31
    1042:	1a a9       	ldd	r17, Y+50	; 0x32
    1044:	2b a9       	ldd	r18, Y+51	; 0x33
    1046:	3c a9       	ldd	r19, Y+52	; 0x34
    1048:	01 50       	subi	r16, 0x01	; 1
    104a:	10 40       	sbci	r17, 0x00	; 0
    104c:	20 40       	sbci	r18, 0x00	; 0
    104e:	30 40       	sbci	r19, 0x00	; 0
    1050:	09 ab       	std	Y+49, r16	; 0x31
    1052:	1a ab       	std	Y+50, r17	; 0x32
    1054:	2b ab       	std	Y+51, r18	; 0x33
    1056:	3c ab       	std	Y+52, r19	; 0x34
    1058:	14 c0       	rjmp	.+40     	; 0x1082 <__stack+0x823>
    105a:	66 24       	eor	r6, r6
    105c:	77 24       	eor	r7, r7
    105e:	43 01       	movw	r8, r6
    1060:	21 e0       	ldi	r18, 0x01	; 1
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	40 e0       	ldi	r20, 0x00	; 0
    1066:	50 e0       	ldi	r21, 0x00	; 0
    1068:	29 ab       	std	Y+49, r18	; 0x31
    106a:	3a ab       	std	Y+50, r19	; 0x32
    106c:	4b ab       	std	Y+51, r20	; 0x33
    106e:	5c ab       	std	Y+52, r21	; 0x34
    1070:	0b c0       	rjmp	.+22     	; 0x1088 <__stack+0x829>
    1072:	66 24       	eor	r6, r6
    1074:	77 24       	eor	r7, r7
    1076:	43 01       	movw	r8, r6
    1078:	19 aa       	std	Y+49, r1	; 0x31
    107a:	1a aa       	std	Y+50, r1	; 0x32
    107c:	1b aa       	std	Y+51, r1	; 0x33
    107e:	1c aa       	std	Y+52, r1	; 0x34
    1080:	03 c0       	rjmp	.+6      	; 0x1088 <__stack+0x829>
    1082:	66 24       	eor	r6, r6
    1084:	77 24       	eor	r7, r7
    1086:	43 01       	movw	r8, r6
    1088:	fe 01       	movw	r30, r28
    108a:	71 96       	adiw	r30, 0x11	; 17
    108c:	88 e0       	ldi	r24, 0x08	; 8
    108e:	df 01       	movw	r26, r30
    1090:	1d 92       	st	X+, r1
    1092:	8a 95       	dec	r24
    1094:	e9 f7       	brne	.-6      	; 0x1090 <__stack+0x831>
    1096:	a9 a8       	ldd	r10, Y+49	; 0x31
    1098:	ba a8       	ldd	r11, Y+50	; 0x32
    109a:	cb a8       	ldd	r12, Y+51	; 0x33
    109c:	dc a8       	ldd	r13, Y+52	; 0x34
    109e:	a9 8a       	std	Y+17, r10	; 0x11
    10a0:	ba 8a       	std	Y+18, r11	; 0x12
    10a2:	cb 8a       	std	Y+19, r12	; 0x13
    10a4:	dc 8a       	std	Y+20, r13	; 0x14
    10a6:	6d 8a       	std	Y+21, r6	; 0x15
    10a8:	7e 8a       	std	Y+22, r7	; 0x16
    10aa:	8f 8a       	std	Y+23, r8	; 0x17
    10ac:	98 8e       	std	Y+24, r9	; 0x18
    10ae:	29 a9       	ldd	r18, Y+49	; 0x31
    10b0:	3a 89       	ldd	r19, Y+18	; 0x12
    10b2:	4b 89       	ldd	r20, Y+19	; 0x13
    10b4:	5c 89       	ldd	r21, Y+20	; 0x14
    10b6:	66 2d       	mov	r22, r6
    10b8:	7e 89       	ldd	r23, Y+22	; 0x16
    10ba:	8f 89       	ldd	r24, Y+23	; 0x17
    10bc:	98 8d       	ldd	r25, Y+24	; 0x18
    10be:	c2 5a       	subi	r28, 0xA2	; 162
    10c0:	df 4f       	sbci	r29, 0xFF	; 255
    10c2:	e2 e1       	ldi	r30, 0x12	; 18
    10c4:	0c 94 7f 30 	jmp	0x60fe	; 0x60fe <__epilogue_restores__>

000010c8 <__umoddi3>:
    10c8:	ab e5       	ldi	r26, 0x5B	; 91
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	ea e6       	ldi	r30, 0x6A	; 106
    10ce:	f8 e0       	ldi	r31, 0x08	; 8
    10d0:	0c 94 63 30 	jmp	0x60c6	; 0x60c6 <__prologue_saves__>
    10d4:	a8 e0       	ldi	r26, 0x08	; 8
    10d6:	4e 01       	movw	r8, r28
    10d8:	08 94       	sec
    10da:	81 1c       	adc	r8, r1
    10dc:	91 1c       	adc	r9, r1
    10de:	f4 01       	movw	r30, r8
    10e0:	6a 2e       	mov	r6, r26
    10e2:	11 92       	st	Z+, r1
    10e4:	6a 94       	dec	r6
    10e6:	e9 f7       	brne	.-6      	; 0x10e2 <__umoddi3+0x1a>
    10e8:	29 83       	std	Y+1, r18	; 0x01
    10ea:	3a 83       	std	Y+2, r19	; 0x02
    10ec:	4b 83       	std	Y+3, r20	; 0x03
    10ee:	5c 83       	std	Y+4, r21	; 0x04
    10f0:	6d 83       	std	Y+5, r22	; 0x05
    10f2:	7e 83       	std	Y+6, r23	; 0x06
    10f4:	8f 83       	std	Y+7, r24	; 0x07
    10f6:	98 87       	std	Y+8, r25	; 0x08
    10f8:	ce 01       	movw	r24, r28
    10fa:	09 96       	adiw	r24, 0x09	; 9
    10fc:	fc 01       	movw	r30, r24
    10fe:	11 92       	st	Z+, r1
    1100:	aa 95       	dec	r26
    1102:	e9 f7       	brne	.-6      	; 0x10fe <__umoddi3+0x36>
    1104:	a9 86       	std	Y+9, r10	; 0x09
    1106:	ba 86       	std	Y+10, r11	; 0x0a
    1108:	cb 86       	std	Y+11, r12	; 0x0b
    110a:	dc 86       	std	Y+12, r13	; 0x0c
    110c:	ed 86       	std	Y+13, r14	; 0x0d
    110e:	fe 86       	std	Y+14, r15	; 0x0e
    1110:	0f 87       	std	Y+15, r16	; 0x0f
    1112:	18 8b       	std	Y+16, r17	; 0x10
    1114:	29 84       	ldd	r2, Y+9	; 0x09
    1116:	3a 84       	ldd	r3, Y+10	; 0x0a
    1118:	4b 84       	ldd	r4, Y+11	; 0x0b
    111a:	5c 84       	ldd	r5, Y+12	; 0x0c
    111c:	ad 84       	ldd	r10, Y+13	; 0x0d
    111e:	be 84       	ldd	r11, Y+14	; 0x0e
    1120:	cf 84       	ldd	r12, Y+15	; 0x0f
    1122:	d8 88       	ldd	r13, Y+16	; 0x10
    1124:	29 81       	ldd	r18, Y+1	; 0x01
    1126:	3a 81       	ldd	r19, Y+2	; 0x02
    1128:	4b 81       	ldd	r20, Y+3	; 0x03
    112a:	5c 81       	ldd	r21, Y+4	; 0x04
    112c:	69 96       	adiw	r28, 0x19	; 25
    112e:	2f af       	std	Y+63, r18	; 0x3f
    1130:	69 97       	sbiw	r28, 0x19	; 25
    1132:	6a 96       	adiw	r28, 0x1a	; 26
    1134:	3f af       	std	Y+63, r19	; 0x3f
    1136:	6a 97       	sbiw	r28, 0x1a	; 26
    1138:	6b 96       	adiw	r28, 0x1b	; 27
    113a:	4f af       	std	Y+63, r20	; 0x3f
    113c:	6b 97       	sbiw	r28, 0x1b	; 27
    113e:	6c 96       	adiw	r28, 0x1c	; 28
    1140:	5f af       	std	Y+63, r21	; 0x3f
    1142:	6c 97       	sbiw	r28, 0x1c	; 28
    1144:	6c 96       	adiw	r28, 0x1c	; 28
    1146:	6c ac       	ldd	r6, Y+60	; 0x3c
    1148:	7d ac       	ldd	r7, Y+61	; 0x3d
    114a:	8e ac       	ldd	r8, Y+62	; 0x3e
    114c:	9f ac       	ldd	r9, Y+63	; 0x3f
    114e:	6c 97       	sbiw	r28, 0x1c	; 28
    1150:	69 aa       	std	Y+49, r6	; 0x31
    1152:	7a aa       	std	Y+50, r7	; 0x32
    1154:	8b aa       	std	Y+51, r8	; 0x33
    1156:	9c aa       	std	Y+52, r9	; 0x34
    1158:	6d 81       	ldd	r22, Y+5	; 0x05
    115a:	7e 81       	ldd	r23, Y+6	; 0x06
    115c:	8f 81       	ldd	r24, Y+7	; 0x07
    115e:	98 85       	ldd	r25, Y+8	; 0x08
    1160:	3b 01       	movw	r6, r22
    1162:	4c 01       	movw	r8, r24
    1164:	6d aa       	std	Y+53, r6	; 0x35
    1166:	7e aa       	std	Y+54, r7	; 0x36
    1168:	8f aa       	std	Y+55, r8	; 0x37
    116a:	98 ae       	std	Y+56, r9	; 0x38
    116c:	a1 14       	cp	r10, r1
    116e:	b1 04       	cpc	r11, r1
    1170:	c1 04       	cpc	r12, r1
    1172:	d1 04       	cpc	r13, r1
    1174:	09 f0       	breq	.+2      	; 0x1178 <__umoddi3+0xb0>
    1176:	04 c3       	rjmp	.+1544   	; 0x1780 <__umoddi3+0x6b8>
    1178:	62 14       	cp	r6, r2
    117a:	73 04       	cpc	r7, r3
    117c:	84 04       	cpc	r8, r4
    117e:	95 04       	cpc	r9, r5
    1180:	08 f0       	brcs	.+2      	; 0x1184 <__umoddi3+0xbc>
    1182:	00 c1       	rjmp	.+512    	; 0x1384 <__umoddi3+0x2bc>
    1184:	00 e0       	ldi	r16, 0x00	; 0
    1186:	20 16       	cp	r2, r16
    1188:	00 e0       	ldi	r16, 0x00	; 0
    118a:	30 06       	cpc	r3, r16
    118c:	01 e0       	ldi	r16, 0x01	; 1
    118e:	40 06       	cpc	r4, r16
    1190:	00 e0       	ldi	r16, 0x00	; 0
    1192:	50 06       	cpc	r5, r16
    1194:	88 f4       	brcc	.+34     	; 0x11b8 <__umoddi3+0xf0>
    1196:	1f ef       	ldi	r17, 0xFF	; 255
    1198:	21 16       	cp	r2, r17
    119a:	31 04       	cpc	r3, r1
    119c:	41 04       	cpc	r4, r1
    119e:	51 04       	cpc	r5, r1
    11a0:	39 f0       	breq	.+14     	; 0x11b0 <__umoddi3+0xe8>
    11a2:	30 f0       	brcs	.+12     	; 0x11b0 <__umoddi3+0xe8>
    11a4:	88 e0       	ldi	r24, 0x08	; 8
    11a6:	e8 2e       	mov	r14, r24
    11a8:	f1 2c       	mov	r15, r1
    11aa:	01 2d       	mov	r16, r1
    11ac:	11 2d       	mov	r17, r1
    11ae:	18 c0       	rjmp	.+48     	; 0x11e0 <__umoddi3+0x118>
    11b0:	ee 24       	eor	r14, r14
    11b2:	ff 24       	eor	r15, r15
    11b4:	87 01       	movw	r16, r14
    11b6:	14 c0       	rjmp	.+40     	; 0x11e0 <__umoddi3+0x118>
    11b8:	40 e0       	ldi	r20, 0x00	; 0
    11ba:	24 16       	cp	r2, r20
    11bc:	40 e0       	ldi	r20, 0x00	; 0
    11be:	34 06       	cpc	r3, r20
    11c0:	40 e0       	ldi	r20, 0x00	; 0
    11c2:	44 06       	cpc	r4, r20
    11c4:	41 e0       	ldi	r20, 0x01	; 1
    11c6:	54 06       	cpc	r5, r20
    11c8:	30 f0       	brcs	.+12     	; 0x11d6 <__umoddi3+0x10e>
    11ca:	b8 e1       	ldi	r27, 0x18	; 24
    11cc:	eb 2e       	mov	r14, r27
    11ce:	f1 2c       	mov	r15, r1
    11d0:	01 2d       	mov	r16, r1
    11d2:	11 2d       	mov	r17, r1
    11d4:	05 c0       	rjmp	.+10     	; 0x11e0 <__umoddi3+0x118>
    11d6:	a0 e1       	ldi	r26, 0x10	; 16
    11d8:	ea 2e       	mov	r14, r26
    11da:	f1 2c       	mov	r15, r1
    11dc:	01 2d       	mov	r16, r1
    11de:	11 2d       	mov	r17, r1
    11e0:	d2 01       	movw	r26, r4
    11e2:	c1 01       	movw	r24, r2
    11e4:	0e 2c       	mov	r0, r14
    11e6:	04 c0       	rjmp	.+8      	; 0x11f0 <__umoddi3+0x128>
    11e8:	b6 95       	lsr	r27
    11ea:	a7 95       	ror	r26
    11ec:	97 95       	ror	r25
    11ee:	87 95       	ror	r24
    11f0:	0a 94       	dec	r0
    11f2:	d2 f7       	brpl	.-12     	; 0x11e8 <__umoddi3+0x120>
    11f4:	88 57       	subi	r24, 0x78	; 120
    11f6:	9f 4f       	sbci	r25, 0xFF	; 255
    11f8:	dc 01       	movw	r26, r24
    11fa:	2c 91       	ld	r18, X
    11fc:	80 e2       	ldi	r24, 0x20	; 32
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	a0 e0       	ldi	r26, 0x00	; 0
    1202:	b0 e0       	ldi	r27, 0x00	; 0
    1204:	8e 19       	sub	r24, r14
    1206:	9f 09       	sbc	r25, r15
    1208:	a0 0b       	sbc	r26, r16
    120a:	b1 0b       	sbc	r27, r17
    120c:	5c 01       	movw	r10, r24
    120e:	6d 01       	movw	r12, r26
    1210:	a2 1a       	sub	r10, r18
    1212:	b1 08       	sbc	r11, r1
    1214:	c1 08       	sbc	r12, r1
    1216:	d1 08       	sbc	r13, r1
    1218:	a9 ae       	std	Y+57, r10	; 0x39
    121a:	ba ae       	std	Y+58, r11	; 0x3a
    121c:	cb ae       	std	Y+59, r12	; 0x3b
    121e:	dc ae       	std	Y+60, r13	; 0x3c
    1220:	a1 14       	cp	r10, r1
    1222:	b1 04       	cpc	r11, r1
    1224:	c1 04       	cpc	r12, r1
    1226:	d1 04       	cpc	r13, r1
    1228:	09 f4       	brne	.+2      	; 0x122c <__umoddi3+0x164>
    122a:	3f c0       	rjmp	.+126    	; 0x12aa <__umoddi3+0x1e2>
    122c:	69 ad       	ldd	r22, Y+57	; 0x39
    122e:	06 2e       	mov	r0, r22
    1230:	04 c0       	rjmp	.+8      	; 0x123a <__umoddi3+0x172>
    1232:	22 0c       	add	r2, r2
    1234:	33 1c       	adc	r3, r3
    1236:	44 1c       	adc	r4, r4
    1238:	55 1c       	adc	r5, r5
    123a:	0a 94       	dec	r0
    123c:	d2 f7       	brpl	.-12     	; 0x1232 <__umoddi3+0x16a>
    123e:	a4 01       	movw	r20, r8
    1240:	93 01       	movw	r18, r6
    1242:	06 2e       	mov	r0, r22
    1244:	04 c0       	rjmp	.+8      	; 0x124e <__umoddi3+0x186>
    1246:	22 0f       	add	r18, r18
    1248:	33 1f       	adc	r19, r19
    124a:	44 1f       	adc	r20, r20
    124c:	55 1f       	adc	r21, r21
    124e:	0a 94       	dec	r0
    1250:	d2 f7       	brpl	.-12     	; 0x1246 <__umoddi3+0x17e>
    1252:	80 e2       	ldi	r24, 0x20	; 32
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	8a 19       	sub	r24, r10
    1258:	9b 09       	sbc	r25, r11
    125a:	6c 96       	adiw	r28, 0x1c	; 28
    125c:	cc ac       	ldd	r12, Y+60	; 0x3c
    125e:	dd ac       	ldd	r13, Y+61	; 0x3d
    1260:	ee ac       	ldd	r14, Y+62	; 0x3e
    1262:	ff ac       	ldd	r15, Y+63	; 0x3f
    1264:	6c 97       	sbiw	r28, 0x1c	; 28
    1266:	04 c0       	rjmp	.+8      	; 0x1270 <__umoddi3+0x1a8>
    1268:	f6 94       	lsr	r15
    126a:	e7 94       	ror	r14
    126c:	d7 94       	ror	r13
    126e:	c7 94       	ror	r12
    1270:	8a 95       	dec	r24
    1272:	d2 f7       	brpl	.-12     	; 0x1268 <__umoddi3+0x1a0>
    1274:	87 01       	movw	r16, r14
    1276:	76 01       	movw	r14, r12
    1278:	e2 2a       	or	r14, r18
    127a:	f3 2a       	or	r15, r19
    127c:	04 2b       	or	r16, r20
    127e:	15 2b       	or	r17, r21
    1280:	ed aa       	std	Y+53, r14	; 0x35
    1282:	fe aa       	std	Y+54, r15	; 0x36
    1284:	0f ab       	std	Y+55, r16	; 0x37
    1286:	18 af       	std	Y+56, r17	; 0x38
    1288:	6c 96       	adiw	r28, 0x1c	; 28
    128a:	8c ad       	ldd	r24, Y+60	; 0x3c
    128c:	9d ad       	ldd	r25, Y+61	; 0x3d
    128e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1290:	bf ad       	ldd	r27, Y+63	; 0x3f
    1292:	6c 97       	sbiw	r28, 0x1c	; 28
    1294:	04 c0       	rjmp	.+8      	; 0x129e <__umoddi3+0x1d6>
    1296:	88 0f       	add	r24, r24
    1298:	99 1f       	adc	r25, r25
    129a:	aa 1f       	adc	r26, r26
    129c:	bb 1f       	adc	r27, r27
    129e:	6a 95       	dec	r22
    12a0:	d2 f7       	brpl	.-12     	; 0x1296 <__umoddi3+0x1ce>
    12a2:	89 ab       	std	Y+49, r24	; 0x31
    12a4:	9a ab       	std	Y+50, r25	; 0x32
    12a6:	ab ab       	std	Y+51, r26	; 0x33
    12a8:	bc ab       	std	Y+52, r27	; 0x34
    12aa:	32 01       	movw	r6, r4
    12ac:	88 24       	eor	r8, r8
    12ae:	99 24       	eor	r9, r9
    12b0:	b2 01       	movw	r22, r4
    12b2:	a1 01       	movw	r20, r2
    12b4:	60 70       	andi	r22, 0x00	; 0
    12b6:	70 70       	andi	r23, 0x00	; 0
    12b8:	21 96       	adiw	r28, 0x01	; 1
    12ba:	4c af       	std	Y+60, r20	; 0x3c
    12bc:	5d af       	std	Y+61, r21	; 0x3d
    12be:	6e af       	std	Y+62, r22	; 0x3e
    12c0:	7f af       	std	Y+63, r23	; 0x3f
    12c2:	21 97       	sbiw	r28, 0x01	; 1
    12c4:	6d a9       	ldd	r22, Y+53	; 0x35
    12c6:	7e a9       	ldd	r23, Y+54	; 0x36
    12c8:	8f a9       	ldd	r24, Y+55	; 0x37
    12ca:	98 ad       	ldd	r25, Y+56	; 0x38
    12cc:	a4 01       	movw	r20, r8
    12ce:	93 01       	movw	r18, r6
    12d0:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    12d4:	7b 01       	movw	r14, r22
    12d6:	8c 01       	movw	r16, r24
    12d8:	6d a9       	ldd	r22, Y+53	; 0x35
    12da:	7e a9       	ldd	r23, Y+54	; 0x36
    12dc:	8f a9       	ldd	r24, Y+55	; 0x37
    12de:	98 ad       	ldd	r25, Y+56	; 0x38
    12e0:	a4 01       	movw	r20, r8
    12e2:	93 01       	movw	r18, r6
    12e4:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    12e8:	ca 01       	movw	r24, r20
    12ea:	b9 01       	movw	r22, r18
    12ec:	21 96       	adiw	r28, 0x01	; 1
    12ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    12f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    12f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    12f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    12f6:	21 97       	sbiw	r28, 0x01	; 1
    12f8:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    12fc:	9b 01       	movw	r18, r22
    12fe:	ac 01       	movw	r20, r24
    1300:	87 01       	movw	r16, r14
    1302:	ff 24       	eor	r15, r15
    1304:	ee 24       	eor	r14, r14
    1306:	a9 a8       	ldd	r10, Y+49	; 0x31
    1308:	ba a8       	ldd	r11, Y+50	; 0x32
    130a:	cb a8       	ldd	r12, Y+51	; 0x33
    130c:	dc a8       	ldd	r13, Y+52	; 0x34
    130e:	c6 01       	movw	r24, r12
    1310:	aa 27       	eor	r26, r26
    1312:	bb 27       	eor	r27, r27
    1314:	57 01       	movw	r10, r14
    1316:	68 01       	movw	r12, r16
    1318:	a8 2a       	or	r10, r24
    131a:	b9 2a       	or	r11, r25
    131c:	ca 2a       	or	r12, r26
    131e:	db 2a       	or	r13, r27
    1320:	a2 16       	cp	r10, r18
    1322:	b3 06       	cpc	r11, r19
    1324:	c4 06       	cpc	r12, r20
    1326:	d5 06       	cpc	r13, r21
    1328:	90 f4       	brcc	.+36     	; 0x134e <__umoddi3+0x286>
    132a:	a2 0c       	add	r10, r2
    132c:	b3 1c       	adc	r11, r3
    132e:	c4 1c       	adc	r12, r4
    1330:	d5 1c       	adc	r13, r5
    1332:	a2 14       	cp	r10, r2
    1334:	b3 04       	cpc	r11, r3
    1336:	c4 04       	cpc	r12, r4
    1338:	d5 04       	cpc	r13, r5
    133a:	48 f0       	brcs	.+18     	; 0x134e <__umoddi3+0x286>
    133c:	a2 16       	cp	r10, r18
    133e:	b3 06       	cpc	r11, r19
    1340:	c4 06       	cpc	r12, r20
    1342:	d5 06       	cpc	r13, r21
    1344:	20 f4       	brcc	.+8      	; 0x134e <__umoddi3+0x286>
    1346:	a2 0c       	add	r10, r2
    1348:	b3 1c       	adc	r11, r3
    134a:	c4 1c       	adc	r12, r4
    134c:	d5 1c       	adc	r13, r5
    134e:	a2 1a       	sub	r10, r18
    1350:	b3 0a       	sbc	r11, r19
    1352:	c4 0a       	sbc	r12, r20
    1354:	d5 0a       	sbc	r13, r21
    1356:	c6 01       	movw	r24, r12
    1358:	b5 01       	movw	r22, r10
    135a:	a4 01       	movw	r20, r8
    135c:	93 01       	movw	r18, r6
    135e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    1362:	7b 01       	movw	r14, r22
    1364:	8c 01       	movw	r16, r24
    1366:	c6 01       	movw	r24, r12
    1368:	b5 01       	movw	r22, r10
    136a:	a4 01       	movw	r20, r8
    136c:	93 01       	movw	r18, r6
    136e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    1372:	ca 01       	movw	r24, r20
    1374:	b9 01       	movw	r22, r18
    1376:	21 96       	adiw	r28, 0x01	; 1
    1378:	2c ad       	ldd	r18, Y+60	; 0x3c
    137a:	3d ad       	ldd	r19, Y+61	; 0x3d
    137c:	4e ad       	ldd	r20, Y+62	; 0x3e
    137e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1380:	21 97       	sbiw	r28, 0x01	; 1
    1382:	ba c1       	rjmp	.+884    	; 0x16f8 <__umoddi3+0x630>
    1384:	21 14       	cp	r2, r1
    1386:	31 04       	cpc	r3, r1
    1388:	41 04       	cpc	r4, r1
    138a:	51 04       	cpc	r5, r1
    138c:	71 f4       	brne	.+28     	; 0x13aa <__umoddi3+0x2e2>
    138e:	61 e0       	ldi	r22, 0x01	; 1
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	20 e0       	ldi	r18, 0x00	; 0
    1398:	30 e0       	ldi	r19, 0x00	; 0
    139a:	40 e0       	ldi	r20, 0x00	; 0
    139c:	50 e0       	ldi	r21, 0x00	; 0
    139e:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    13a2:	c9 01       	movw	r24, r18
    13a4:	da 01       	movw	r26, r20
    13a6:	1c 01       	movw	r2, r24
    13a8:	2d 01       	movw	r4, r26
    13aa:	00 e0       	ldi	r16, 0x00	; 0
    13ac:	20 16       	cp	r2, r16
    13ae:	00 e0       	ldi	r16, 0x00	; 0
    13b0:	30 06       	cpc	r3, r16
    13b2:	01 e0       	ldi	r16, 0x01	; 1
    13b4:	40 06       	cpc	r4, r16
    13b6:	00 e0       	ldi	r16, 0x00	; 0
    13b8:	50 06       	cpc	r5, r16
    13ba:	88 f4       	brcc	.+34     	; 0x13de <__umoddi3+0x316>
    13bc:	1f ef       	ldi	r17, 0xFF	; 255
    13be:	21 16       	cp	r2, r17
    13c0:	31 04       	cpc	r3, r1
    13c2:	41 04       	cpc	r4, r1
    13c4:	51 04       	cpc	r5, r1
    13c6:	39 f0       	breq	.+14     	; 0x13d6 <__umoddi3+0x30e>
    13c8:	30 f0       	brcs	.+12     	; 0x13d6 <__umoddi3+0x30e>
    13ca:	68 e0       	ldi	r22, 0x08	; 8
    13cc:	e6 2e       	mov	r14, r22
    13ce:	f1 2c       	mov	r15, r1
    13d0:	01 2d       	mov	r16, r1
    13d2:	11 2d       	mov	r17, r1
    13d4:	18 c0       	rjmp	.+48     	; 0x1406 <__umoddi3+0x33e>
    13d6:	ee 24       	eor	r14, r14
    13d8:	ff 24       	eor	r15, r15
    13da:	87 01       	movw	r16, r14
    13dc:	14 c0       	rjmp	.+40     	; 0x1406 <__umoddi3+0x33e>
    13de:	40 e0       	ldi	r20, 0x00	; 0
    13e0:	24 16       	cp	r2, r20
    13e2:	40 e0       	ldi	r20, 0x00	; 0
    13e4:	34 06       	cpc	r3, r20
    13e6:	40 e0       	ldi	r20, 0x00	; 0
    13e8:	44 06       	cpc	r4, r20
    13ea:	41 e0       	ldi	r20, 0x01	; 1
    13ec:	54 06       	cpc	r5, r20
    13ee:	30 f0       	brcs	.+12     	; 0x13fc <__umoddi3+0x334>
    13f0:	58 e1       	ldi	r21, 0x18	; 24
    13f2:	e5 2e       	mov	r14, r21
    13f4:	f1 2c       	mov	r15, r1
    13f6:	01 2d       	mov	r16, r1
    13f8:	11 2d       	mov	r17, r1
    13fa:	05 c0       	rjmp	.+10     	; 0x1406 <__umoddi3+0x33e>
    13fc:	40 e1       	ldi	r20, 0x10	; 16
    13fe:	e4 2e       	mov	r14, r20
    1400:	f1 2c       	mov	r15, r1
    1402:	01 2d       	mov	r16, r1
    1404:	11 2d       	mov	r17, r1
    1406:	d2 01       	movw	r26, r4
    1408:	c1 01       	movw	r24, r2
    140a:	0e 2c       	mov	r0, r14
    140c:	04 c0       	rjmp	.+8      	; 0x1416 <__umoddi3+0x34e>
    140e:	b6 95       	lsr	r27
    1410:	a7 95       	ror	r26
    1412:	97 95       	ror	r25
    1414:	87 95       	ror	r24
    1416:	0a 94       	dec	r0
    1418:	d2 f7       	brpl	.-12     	; 0x140e <__umoddi3+0x346>
    141a:	88 57       	subi	r24, 0x78	; 120
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	dc 01       	movw	r26, r24
    1420:	2c 91       	ld	r18, X
    1422:	30 e2       	ldi	r19, 0x20	; 32
    1424:	a3 2e       	mov	r10, r19
    1426:	b1 2c       	mov	r11, r1
    1428:	c1 2c       	mov	r12, r1
    142a:	d1 2c       	mov	r13, r1
    142c:	d6 01       	movw	r26, r12
    142e:	c5 01       	movw	r24, r10
    1430:	8e 19       	sub	r24, r14
    1432:	9f 09       	sbc	r25, r15
    1434:	a0 0b       	sbc	r26, r16
    1436:	b1 0b       	sbc	r27, r17
    1438:	7c 01       	movw	r14, r24
    143a:	8d 01       	movw	r16, r26
    143c:	e2 1a       	sub	r14, r18
    143e:	f1 08       	sbc	r15, r1
    1440:	01 09       	sbc	r16, r1
    1442:	11 09       	sbc	r17, r1
    1444:	e9 ae       	std	Y+57, r14	; 0x39
    1446:	fa ae       	std	Y+58, r15	; 0x3a
    1448:	0b af       	std	Y+59, r16	; 0x3b
    144a:	1c af       	std	Y+60, r17	; 0x3c
    144c:	e1 14       	cp	r14, r1
    144e:	f1 04       	cpc	r15, r1
    1450:	01 05       	cpc	r16, r1
    1452:	11 05       	cpc	r17, r1
    1454:	39 f4       	brne	.+14     	; 0x1464 <__umoddi3+0x39c>
    1456:	64 01       	movw	r12, r8
    1458:	53 01       	movw	r10, r6
    145a:	a2 18       	sub	r10, r2
    145c:	b3 08       	sbc	r11, r3
    145e:	c4 08       	sbc	r12, r4
    1460:	d5 08       	sbc	r13, r5
    1462:	e2 c0       	rjmp	.+452    	; 0x1628 <__umoddi3+0x560>
    1464:	f9 ac       	ldd	r15, Y+57	; 0x39
    1466:	68 96       	adiw	r28, 0x18	; 24
    1468:	ff ae       	std	Y+63, r15	; 0x3f
    146a:	68 97       	sbiw	r28, 0x18	; 24
    146c:	0f 2c       	mov	r0, r15
    146e:	04 c0       	rjmp	.+8      	; 0x1478 <__umoddi3+0x3b0>
    1470:	22 0c       	add	r2, r2
    1472:	33 1c       	adc	r3, r3
    1474:	44 1c       	adc	r4, r4
    1476:	55 1c       	adc	r5, r5
    1478:	0a 94       	dec	r0
    147a:	d2 f7       	brpl	.-12     	; 0x1470 <__umoddi3+0x3a8>
    147c:	8a 2d       	mov	r24, r10
    147e:	8f 19       	sub	r24, r15
    1480:	64 01       	movw	r12, r8
    1482:	53 01       	movw	r10, r6
    1484:	08 2e       	mov	r0, r24
    1486:	04 c0       	rjmp	.+8      	; 0x1490 <__umoddi3+0x3c8>
    1488:	d6 94       	lsr	r13
    148a:	c7 94       	ror	r12
    148c:	b7 94       	ror	r11
    148e:	a7 94       	ror	r10
    1490:	0a 94       	dec	r0
    1492:	d2 f7       	brpl	.-12     	; 0x1488 <__umoddi3+0x3c0>
    1494:	a4 01       	movw	r20, r8
    1496:	93 01       	movw	r18, r6
    1498:	04 c0       	rjmp	.+8      	; 0x14a2 <__umoddi3+0x3da>
    149a:	22 0f       	add	r18, r18
    149c:	33 1f       	adc	r19, r19
    149e:	44 1f       	adc	r20, r20
    14a0:	55 1f       	adc	r21, r21
    14a2:	fa 94       	dec	r15
    14a4:	d2 f7       	brpl	.-12     	; 0x149a <__umoddi3+0x3d2>
    14a6:	6c 96       	adiw	r28, 0x1c	; 28
    14a8:	6c ac       	ldd	r6, Y+60	; 0x3c
    14aa:	7d ac       	ldd	r7, Y+61	; 0x3d
    14ac:	8e ac       	ldd	r8, Y+62	; 0x3e
    14ae:	9f ac       	ldd	r9, Y+63	; 0x3f
    14b0:	6c 97       	sbiw	r28, 0x1c	; 28
    14b2:	04 c0       	rjmp	.+8      	; 0x14bc <__umoddi3+0x3f4>
    14b4:	96 94       	lsr	r9
    14b6:	87 94       	ror	r8
    14b8:	77 94       	ror	r7
    14ba:	67 94       	ror	r6
    14bc:	8a 95       	dec	r24
    14be:	d2 f7       	brpl	.-12     	; 0x14b4 <__umoddi3+0x3ec>
    14c0:	84 01       	movw	r16, r8
    14c2:	73 01       	movw	r14, r6
    14c4:	e2 2a       	or	r14, r18
    14c6:	f3 2a       	or	r15, r19
    14c8:	04 2b       	or	r16, r20
    14ca:	15 2b       	or	r17, r21
    14cc:	ed a6       	std	Y+45, r14	; 0x2d
    14ce:	fe a6       	std	Y+46, r15	; 0x2e
    14d0:	0f a7       	std	Y+47, r16	; 0x2f
    14d2:	18 ab       	std	Y+48, r17	; 0x30
    14d4:	32 01       	movw	r6, r4
    14d6:	88 24       	eor	r8, r8
    14d8:	99 24       	eor	r9, r9
    14da:	b2 01       	movw	r22, r4
    14dc:	a1 01       	movw	r20, r2
    14de:	60 70       	andi	r22, 0x00	; 0
    14e0:	70 70       	andi	r23, 0x00	; 0
    14e2:	25 96       	adiw	r28, 0x05	; 5
    14e4:	4c af       	std	Y+60, r20	; 0x3c
    14e6:	5d af       	std	Y+61, r21	; 0x3d
    14e8:	6e af       	std	Y+62, r22	; 0x3e
    14ea:	7f af       	std	Y+63, r23	; 0x3f
    14ec:	25 97       	sbiw	r28, 0x05	; 5
    14ee:	c6 01       	movw	r24, r12
    14f0:	b5 01       	movw	r22, r10
    14f2:	a4 01       	movw	r20, r8
    14f4:	93 01       	movw	r18, r6
    14f6:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    14fa:	7b 01       	movw	r14, r22
    14fc:	8c 01       	movw	r16, r24
    14fe:	c6 01       	movw	r24, r12
    1500:	b5 01       	movw	r22, r10
    1502:	a4 01       	movw	r20, r8
    1504:	93 01       	movw	r18, r6
    1506:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    150a:	ca 01       	movw	r24, r20
    150c:	b9 01       	movw	r22, r18
    150e:	25 96       	adiw	r28, 0x05	; 5
    1510:	2c ad       	ldd	r18, Y+60	; 0x3c
    1512:	3d ad       	ldd	r19, Y+61	; 0x3d
    1514:	4e ad       	ldd	r20, Y+62	; 0x3e
    1516:	5f ad       	ldd	r21, Y+63	; 0x3f
    1518:	25 97       	sbiw	r28, 0x05	; 5
    151a:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    151e:	9b 01       	movw	r18, r22
    1520:	ac 01       	movw	r20, r24
    1522:	87 01       	movw	r16, r14
    1524:	ff 24       	eor	r15, r15
    1526:	ee 24       	eor	r14, r14
    1528:	ad a4       	ldd	r10, Y+45	; 0x2d
    152a:	be a4       	ldd	r11, Y+46	; 0x2e
    152c:	cf a4       	ldd	r12, Y+47	; 0x2f
    152e:	d8 a8       	ldd	r13, Y+48	; 0x30
    1530:	c6 01       	movw	r24, r12
    1532:	aa 27       	eor	r26, r26
    1534:	bb 27       	eor	r27, r27
    1536:	5c 01       	movw	r10, r24
    1538:	6d 01       	movw	r12, r26
    153a:	ae 28       	or	r10, r14
    153c:	bf 28       	or	r11, r15
    153e:	c0 2a       	or	r12, r16
    1540:	d1 2a       	or	r13, r17
    1542:	a2 16       	cp	r10, r18
    1544:	b3 06       	cpc	r11, r19
    1546:	c4 06       	cpc	r12, r20
    1548:	d5 06       	cpc	r13, r21
    154a:	90 f4       	brcc	.+36     	; 0x1570 <__umoddi3+0x4a8>
    154c:	a2 0c       	add	r10, r2
    154e:	b3 1c       	adc	r11, r3
    1550:	c4 1c       	adc	r12, r4
    1552:	d5 1c       	adc	r13, r5
    1554:	a2 14       	cp	r10, r2
    1556:	b3 04       	cpc	r11, r3
    1558:	c4 04       	cpc	r12, r4
    155a:	d5 04       	cpc	r13, r5
    155c:	48 f0       	brcs	.+18     	; 0x1570 <__umoddi3+0x4a8>
    155e:	a2 16       	cp	r10, r18
    1560:	b3 06       	cpc	r11, r19
    1562:	c4 06       	cpc	r12, r20
    1564:	d5 06       	cpc	r13, r21
    1566:	20 f4       	brcc	.+8      	; 0x1570 <__umoddi3+0x4a8>
    1568:	a2 0c       	add	r10, r2
    156a:	b3 1c       	adc	r11, r3
    156c:	c4 1c       	adc	r12, r4
    156e:	d5 1c       	adc	r13, r5
    1570:	a2 1a       	sub	r10, r18
    1572:	b3 0a       	sbc	r11, r19
    1574:	c4 0a       	sbc	r12, r20
    1576:	d5 0a       	sbc	r13, r21
    1578:	c6 01       	movw	r24, r12
    157a:	b5 01       	movw	r22, r10
    157c:	a4 01       	movw	r20, r8
    157e:	93 01       	movw	r18, r6
    1580:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    1584:	7b 01       	movw	r14, r22
    1586:	8c 01       	movw	r16, r24
    1588:	c6 01       	movw	r24, r12
    158a:	b5 01       	movw	r22, r10
    158c:	a4 01       	movw	r20, r8
    158e:	93 01       	movw	r18, r6
    1590:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    1594:	ca 01       	movw	r24, r20
    1596:	b9 01       	movw	r22, r18
    1598:	25 96       	adiw	r28, 0x05	; 5
    159a:	2c ad       	ldd	r18, Y+60	; 0x3c
    159c:	3d ad       	ldd	r19, Y+61	; 0x3d
    159e:	4e ad       	ldd	r20, Y+62	; 0x3e
    15a0:	5f ad       	ldd	r21, Y+63	; 0x3f
    15a2:	25 97       	sbiw	r28, 0x05	; 5
    15a4:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    15a8:	9b 01       	movw	r18, r22
    15aa:	ac 01       	movw	r20, r24
    15ac:	87 01       	movw	r16, r14
    15ae:	ff 24       	eor	r15, r15
    15b0:	ee 24       	eor	r14, r14
    15b2:	8d a5       	ldd	r24, Y+45	; 0x2d
    15b4:	9e a5       	ldd	r25, Y+46	; 0x2e
    15b6:	af a5       	ldd	r26, Y+47	; 0x2f
    15b8:	b8 a9       	ldd	r27, Y+48	; 0x30
    15ba:	a0 70       	andi	r26, 0x00	; 0
    15bc:	b0 70       	andi	r27, 0x00	; 0
    15be:	57 01       	movw	r10, r14
    15c0:	68 01       	movw	r12, r16
    15c2:	a8 2a       	or	r10, r24
    15c4:	b9 2a       	or	r11, r25
    15c6:	ca 2a       	or	r12, r26
    15c8:	db 2a       	or	r13, r27
    15ca:	a2 16       	cp	r10, r18
    15cc:	b3 06       	cpc	r11, r19
    15ce:	c4 06       	cpc	r12, r20
    15d0:	d5 06       	cpc	r13, r21
    15d2:	90 f4       	brcc	.+36     	; 0x15f8 <__umoddi3+0x530>
    15d4:	a2 0c       	add	r10, r2
    15d6:	b3 1c       	adc	r11, r3
    15d8:	c4 1c       	adc	r12, r4
    15da:	d5 1c       	adc	r13, r5
    15dc:	a2 14       	cp	r10, r2
    15de:	b3 04       	cpc	r11, r3
    15e0:	c4 04       	cpc	r12, r4
    15e2:	d5 04       	cpc	r13, r5
    15e4:	48 f0       	brcs	.+18     	; 0x15f8 <__umoddi3+0x530>
    15e6:	a2 16       	cp	r10, r18
    15e8:	b3 06       	cpc	r11, r19
    15ea:	c4 06       	cpc	r12, r20
    15ec:	d5 06       	cpc	r13, r21
    15ee:	20 f4       	brcc	.+8      	; 0x15f8 <__umoddi3+0x530>
    15f0:	a2 0c       	add	r10, r2
    15f2:	b3 1c       	adc	r11, r3
    15f4:	c4 1c       	adc	r12, r4
    15f6:	d5 1c       	adc	r13, r5
    15f8:	6c 96       	adiw	r28, 0x1c	; 28
    15fa:	ec ac       	ldd	r14, Y+60	; 0x3c
    15fc:	fd ac       	ldd	r15, Y+61	; 0x3d
    15fe:	0e ad       	ldd	r16, Y+62	; 0x3e
    1600:	1f ad       	ldd	r17, Y+63	; 0x3f
    1602:	6c 97       	sbiw	r28, 0x1c	; 28
    1604:	68 96       	adiw	r28, 0x18	; 24
    1606:	0f ac       	ldd	r0, Y+63	; 0x3f
    1608:	68 97       	sbiw	r28, 0x18	; 24
    160a:	04 c0       	rjmp	.+8      	; 0x1614 <__umoddi3+0x54c>
    160c:	ee 0c       	add	r14, r14
    160e:	ff 1c       	adc	r15, r15
    1610:	00 1f       	adc	r16, r16
    1612:	11 1f       	adc	r17, r17
    1614:	0a 94       	dec	r0
    1616:	d2 f7       	brpl	.-12     	; 0x160c <__umoddi3+0x544>
    1618:	e9 aa       	std	Y+49, r14	; 0x31
    161a:	fa aa       	std	Y+50, r15	; 0x32
    161c:	0b ab       	std	Y+51, r16	; 0x33
    161e:	1c ab       	std	Y+52, r17	; 0x34
    1620:	a2 1a       	sub	r10, r18
    1622:	b3 0a       	sbc	r11, r19
    1624:	c4 0a       	sbc	r12, r20
    1626:	d5 0a       	sbc	r13, r21
    1628:	32 01       	movw	r6, r4
    162a:	88 24       	eor	r8, r8
    162c:	99 24       	eor	r9, r9
    162e:	b2 01       	movw	r22, r4
    1630:	a1 01       	movw	r20, r2
    1632:	60 70       	andi	r22, 0x00	; 0
    1634:	70 70       	andi	r23, 0x00	; 0
    1636:	29 96       	adiw	r28, 0x09	; 9
    1638:	4c af       	std	Y+60, r20	; 0x3c
    163a:	5d af       	std	Y+61, r21	; 0x3d
    163c:	6e af       	std	Y+62, r22	; 0x3e
    163e:	7f af       	std	Y+63, r23	; 0x3f
    1640:	29 97       	sbiw	r28, 0x09	; 9
    1642:	c6 01       	movw	r24, r12
    1644:	b5 01       	movw	r22, r10
    1646:	a4 01       	movw	r20, r8
    1648:	93 01       	movw	r18, r6
    164a:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    164e:	7b 01       	movw	r14, r22
    1650:	8c 01       	movw	r16, r24
    1652:	c6 01       	movw	r24, r12
    1654:	b5 01       	movw	r22, r10
    1656:	a4 01       	movw	r20, r8
    1658:	93 01       	movw	r18, r6
    165a:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    165e:	ca 01       	movw	r24, r20
    1660:	b9 01       	movw	r22, r18
    1662:	29 96       	adiw	r28, 0x09	; 9
    1664:	2c ad       	ldd	r18, Y+60	; 0x3c
    1666:	3d ad       	ldd	r19, Y+61	; 0x3d
    1668:	4e ad       	ldd	r20, Y+62	; 0x3e
    166a:	5f ad       	ldd	r21, Y+63	; 0x3f
    166c:	29 97       	sbiw	r28, 0x09	; 9
    166e:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    1672:	9b 01       	movw	r18, r22
    1674:	ac 01       	movw	r20, r24
    1676:	87 01       	movw	r16, r14
    1678:	ff 24       	eor	r15, r15
    167a:	ee 24       	eor	r14, r14
    167c:	a9 a8       	ldd	r10, Y+49	; 0x31
    167e:	ba a8       	ldd	r11, Y+50	; 0x32
    1680:	cb a8       	ldd	r12, Y+51	; 0x33
    1682:	dc a8       	ldd	r13, Y+52	; 0x34
    1684:	c6 01       	movw	r24, r12
    1686:	aa 27       	eor	r26, r26
    1688:	bb 27       	eor	r27, r27
    168a:	57 01       	movw	r10, r14
    168c:	68 01       	movw	r12, r16
    168e:	a8 2a       	or	r10, r24
    1690:	b9 2a       	or	r11, r25
    1692:	ca 2a       	or	r12, r26
    1694:	db 2a       	or	r13, r27
    1696:	a2 16       	cp	r10, r18
    1698:	b3 06       	cpc	r11, r19
    169a:	c4 06       	cpc	r12, r20
    169c:	d5 06       	cpc	r13, r21
    169e:	90 f4       	brcc	.+36     	; 0x16c4 <__umoddi3+0x5fc>
    16a0:	a2 0c       	add	r10, r2
    16a2:	b3 1c       	adc	r11, r3
    16a4:	c4 1c       	adc	r12, r4
    16a6:	d5 1c       	adc	r13, r5
    16a8:	a2 14       	cp	r10, r2
    16aa:	b3 04       	cpc	r11, r3
    16ac:	c4 04       	cpc	r12, r4
    16ae:	d5 04       	cpc	r13, r5
    16b0:	48 f0       	brcs	.+18     	; 0x16c4 <__umoddi3+0x5fc>
    16b2:	a2 16       	cp	r10, r18
    16b4:	b3 06       	cpc	r11, r19
    16b6:	c4 06       	cpc	r12, r20
    16b8:	d5 06       	cpc	r13, r21
    16ba:	20 f4       	brcc	.+8      	; 0x16c4 <__umoddi3+0x5fc>
    16bc:	a2 0c       	add	r10, r2
    16be:	b3 1c       	adc	r11, r3
    16c0:	c4 1c       	adc	r12, r4
    16c2:	d5 1c       	adc	r13, r5
    16c4:	a2 1a       	sub	r10, r18
    16c6:	b3 0a       	sbc	r11, r19
    16c8:	c4 0a       	sbc	r12, r20
    16ca:	d5 0a       	sbc	r13, r21
    16cc:	c6 01       	movw	r24, r12
    16ce:	b5 01       	movw	r22, r10
    16d0:	a4 01       	movw	r20, r8
    16d2:	93 01       	movw	r18, r6
    16d4:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    16d8:	7b 01       	movw	r14, r22
    16da:	8c 01       	movw	r16, r24
    16dc:	c6 01       	movw	r24, r12
    16de:	b5 01       	movw	r22, r10
    16e0:	a4 01       	movw	r20, r8
    16e2:	93 01       	movw	r18, r6
    16e4:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    16e8:	ca 01       	movw	r24, r20
    16ea:	b9 01       	movw	r22, r18
    16ec:	29 96       	adiw	r28, 0x09	; 9
    16ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    16f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    16f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    16f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    16f6:	29 97       	sbiw	r28, 0x09	; 9
    16f8:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    16fc:	9b 01       	movw	r18, r22
    16fe:	ac 01       	movw	r20, r24
    1700:	87 01       	movw	r16, r14
    1702:	ff 24       	eor	r15, r15
    1704:	ee 24       	eor	r14, r14
    1706:	89 a9       	ldd	r24, Y+49	; 0x31
    1708:	9a a9       	ldd	r25, Y+50	; 0x32
    170a:	ab a9       	ldd	r26, Y+51	; 0x33
    170c:	bc a9       	ldd	r27, Y+52	; 0x34
    170e:	a0 70       	andi	r26, 0x00	; 0
    1710:	b0 70       	andi	r27, 0x00	; 0
    1712:	e8 2a       	or	r14, r24
    1714:	f9 2a       	or	r15, r25
    1716:	0a 2b       	or	r16, r26
    1718:	1b 2b       	or	r17, r27
    171a:	e2 16       	cp	r14, r18
    171c:	f3 06       	cpc	r15, r19
    171e:	04 07       	cpc	r16, r20
    1720:	15 07       	cpc	r17, r21
    1722:	90 f4       	brcc	.+36     	; 0x1748 <__umoddi3+0x680>
    1724:	e2 0c       	add	r14, r2
    1726:	f3 1c       	adc	r15, r3
    1728:	04 1d       	adc	r16, r4
    172a:	15 1d       	adc	r17, r5
    172c:	e2 14       	cp	r14, r2
    172e:	f3 04       	cpc	r15, r3
    1730:	04 05       	cpc	r16, r4
    1732:	15 05       	cpc	r17, r5
    1734:	48 f0       	brcs	.+18     	; 0x1748 <__umoddi3+0x680>
    1736:	e2 16       	cp	r14, r18
    1738:	f3 06       	cpc	r15, r19
    173a:	04 07       	cpc	r16, r20
    173c:	15 07       	cpc	r17, r21
    173e:	20 f4       	brcc	.+8      	; 0x1748 <__umoddi3+0x680>
    1740:	e2 0c       	add	r14, r2
    1742:	f3 1c       	adc	r15, r3
    1744:	04 1d       	adc	r16, r4
    1746:	15 1d       	adc	r17, r5
    1748:	e2 1a       	sub	r14, r18
    174a:	f3 0a       	sbc	r15, r19
    174c:	04 0b       	sbc	r16, r20
    174e:	15 0b       	sbc	r17, r21
    1750:	d8 01       	movw	r26, r16
    1752:	c7 01       	movw	r24, r14
    1754:	09 ac       	ldd	r0, Y+57	; 0x39
    1756:	04 c0       	rjmp	.+8      	; 0x1760 <__umoddi3+0x698>
    1758:	b6 95       	lsr	r27
    175a:	a7 95       	ror	r26
    175c:	97 95       	ror	r25
    175e:	87 95       	ror	r24
    1760:	0a 94       	dec	r0
    1762:	d2 f7       	brpl	.-12     	; 0x1758 <__umoddi3+0x690>
    1764:	89 8b       	std	Y+17, r24	; 0x11
    1766:	9a 8b       	std	Y+18, r25	; 0x12
    1768:	ab 8b       	std	Y+19, r26	; 0x13
    176a:	bc 8b       	std	Y+20, r27	; 0x14
    176c:	1d 8a       	std	Y+21, r1	; 0x15
    176e:	1e 8a       	std	Y+22, r1	; 0x16
    1770:	1f 8a       	std	Y+23, r1	; 0x17
    1772:	18 8e       	std	Y+24, r1	; 0x18
    1774:	28 2f       	mov	r18, r24
    1776:	3a 89       	ldd	r19, Y+18	; 0x12
    1778:	4b 89       	ldd	r20, Y+19	; 0x13
    177a:	5c 89       	ldd	r21, Y+20	; 0x14
    177c:	6d 89       	ldd	r22, Y+21	; 0x15
    177e:	0c c3       	rjmp	.+1560   	; 0x1d98 <__umoddi3+0xcd0>
    1780:	6a 14       	cp	r6, r10
    1782:	7b 04       	cpc	r7, r11
    1784:	8c 04       	cpc	r8, r12
    1786:	9d 04       	cpc	r9, r13
    1788:	08 f4       	brcc	.+2      	; 0x178c <__umoddi3+0x6c4>
    178a:	09 c3       	rjmp	.+1554   	; 0x1d9e <__umoddi3+0xcd6>
    178c:	00 e0       	ldi	r16, 0x00	; 0
    178e:	a0 16       	cp	r10, r16
    1790:	00 e0       	ldi	r16, 0x00	; 0
    1792:	b0 06       	cpc	r11, r16
    1794:	01 e0       	ldi	r16, 0x01	; 1
    1796:	c0 06       	cpc	r12, r16
    1798:	00 e0       	ldi	r16, 0x00	; 0
    179a:	d0 06       	cpc	r13, r16
    179c:	88 f4       	brcc	.+34     	; 0x17c0 <__umoddi3+0x6f8>
    179e:	1f ef       	ldi	r17, 0xFF	; 255
    17a0:	a1 16       	cp	r10, r17
    17a2:	b1 04       	cpc	r11, r1
    17a4:	c1 04       	cpc	r12, r1
    17a6:	d1 04       	cpc	r13, r1
    17a8:	39 f0       	breq	.+14     	; 0x17b8 <__umoddi3+0x6f0>
    17aa:	30 f0       	brcs	.+12     	; 0x17b8 <__umoddi3+0x6f0>
    17ac:	28 e0       	ldi	r18, 0x08	; 8
    17ae:	e2 2e       	mov	r14, r18
    17b0:	f1 2c       	mov	r15, r1
    17b2:	01 2d       	mov	r16, r1
    17b4:	11 2d       	mov	r17, r1
    17b6:	18 c0       	rjmp	.+48     	; 0x17e8 <__umoddi3+0x720>
    17b8:	ee 24       	eor	r14, r14
    17ba:	ff 24       	eor	r15, r15
    17bc:	87 01       	movw	r16, r14
    17be:	14 c0       	rjmp	.+40     	; 0x17e8 <__umoddi3+0x720>
    17c0:	40 e0       	ldi	r20, 0x00	; 0
    17c2:	a4 16       	cp	r10, r20
    17c4:	40 e0       	ldi	r20, 0x00	; 0
    17c6:	b4 06       	cpc	r11, r20
    17c8:	40 e0       	ldi	r20, 0x00	; 0
    17ca:	c4 06       	cpc	r12, r20
    17cc:	41 e0       	ldi	r20, 0x01	; 1
    17ce:	d4 06       	cpc	r13, r20
    17d0:	30 f0       	brcs	.+12     	; 0x17de <__umoddi3+0x716>
    17d2:	98 e1       	ldi	r25, 0x18	; 24
    17d4:	e9 2e       	mov	r14, r25
    17d6:	f1 2c       	mov	r15, r1
    17d8:	01 2d       	mov	r16, r1
    17da:	11 2d       	mov	r17, r1
    17dc:	05 c0       	rjmp	.+10     	; 0x17e8 <__umoddi3+0x720>
    17de:	80 e1       	ldi	r24, 0x10	; 16
    17e0:	e8 2e       	mov	r14, r24
    17e2:	f1 2c       	mov	r15, r1
    17e4:	01 2d       	mov	r16, r1
    17e6:	11 2d       	mov	r17, r1
    17e8:	d6 01       	movw	r26, r12
    17ea:	c5 01       	movw	r24, r10
    17ec:	0e 2c       	mov	r0, r14
    17ee:	04 c0       	rjmp	.+8      	; 0x17f8 <__umoddi3+0x730>
    17f0:	b6 95       	lsr	r27
    17f2:	a7 95       	ror	r26
    17f4:	97 95       	ror	r25
    17f6:	87 95       	ror	r24
    17f8:	0a 94       	dec	r0
    17fa:	d2 f7       	brpl	.-12     	; 0x17f0 <__umoddi3+0x728>
    17fc:	88 57       	subi	r24, 0x78	; 120
    17fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1800:	dc 01       	movw	r26, r24
    1802:	2c 91       	ld	r18, X
    1804:	80 e2       	ldi	r24, 0x20	; 32
    1806:	90 e0       	ldi	r25, 0x00	; 0
    1808:	a0 e0       	ldi	r26, 0x00	; 0
    180a:	b0 e0       	ldi	r27, 0x00	; 0
    180c:	8e 19       	sub	r24, r14
    180e:	9f 09       	sbc	r25, r15
    1810:	a0 0b       	sbc	r26, r16
    1812:	b1 0b       	sbc	r27, r17
    1814:	82 1b       	sub	r24, r18
    1816:	91 09       	sbc	r25, r1
    1818:	a1 09       	sbc	r26, r1
    181a:	b1 09       	sbc	r27, r1
    181c:	00 97       	sbiw	r24, 0x00	; 0
    181e:	a1 05       	cpc	r26, r1
    1820:	b1 05       	cpc	r27, r1
    1822:	09 f0       	breq	.+2      	; 0x1826 <__umoddi3+0x75e>
    1824:	4f c0       	rjmp	.+158    	; 0x18c4 <__umoddi3+0x7fc>
    1826:	a6 14       	cp	r10, r6
    1828:	b7 04       	cpc	r11, r7
    182a:	c8 04       	cpc	r12, r8
    182c:	d9 04       	cpc	r13, r9
    182e:	58 f0       	brcs	.+22     	; 0x1846 <__umoddi3+0x77e>
    1830:	6c 96       	adiw	r28, 0x1c	; 28
    1832:	ec ac       	ldd	r14, Y+60	; 0x3c
    1834:	fd ac       	ldd	r15, Y+61	; 0x3d
    1836:	0e ad       	ldd	r16, Y+62	; 0x3e
    1838:	1f ad       	ldd	r17, Y+63	; 0x3f
    183a:	6c 97       	sbiw	r28, 0x1c	; 28
    183c:	e2 14       	cp	r14, r2
    183e:	f3 04       	cpc	r15, r3
    1840:	04 05       	cpc	r16, r4
    1842:	15 05       	cpc	r17, r5
    1844:	68 f1       	brcs	.+90     	; 0x18a0 <__umoddi3+0x7d8>
    1846:	6c 96       	adiw	r28, 0x1c	; 28
    1848:	ec ac       	ldd	r14, Y+60	; 0x3c
    184a:	fd ac       	ldd	r15, Y+61	; 0x3d
    184c:	0e ad       	ldd	r16, Y+62	; 0x3e
    184e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1850:	6c 97       	sbiw	r28, 0x1c	; 28
    1852:	e2 18       	sub	r14, r2
    1854:	f3 08       	sbc	r15, r3
    1856:	04 09       	sbc	r16, r4
    1858:	15 09       	sbc	r17, r5
    185a:	a4 01       	movw	r20, r8
    185c:	93 01       	movw	r18, r6
    185e:	2a 19       	sub	r18, r10
    1860:	3b 09       	sbc	r19, r11
    1862:	4c 09       	sbc	r20, r12
    1864:	5d 09       	sbc	r21, r13
    1866:	aa 24       	eor	r10, r10
    1868:	bb 24       	eor	r11, r11
    186a:	65 01       	movw	r12, r10
    186c:	6c 96       	adiw	r28, 0x1c	; 28
    186e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1870:	7d ad       	ldd	r23, Y+61	; 0x3d
    1872:	8e ad       	ldd	r24, Y+62	; 0x3e
    1874:	9f ad       	ldd	r25, Y+63	; 0x3f
    1876:	6c 97       	sbiw	r28, 0x1c	; 28
    1878:	6e 15       	cp	r22, r14
    187a:	7f 05       	cpc	r23, r15
    187c:	80 07       	cpc	r24, r16
    187e:	91 07       	cpc	r25, r17
    1880:	28 f4       	brcc	.+10     	; 0x188c <__umoddi3+0x7c4>
    1882:	b1 e0       	ldi	r27, 0x01	; 1
    1884:	ab 2e       	mov	r10, r27
    1886:	b1 2c       	mov	r11, r1
    1888:	c1 2c       	mov	r12, r1
    188a:	d1 2c       	mov	r13, r1
    188c:	da 01       	movw	r26, r20
    188e:	c9 01       	movw	r24, r18
    1890:	8a 19       	sub	r24, r10
    1892:	9b 09       	sbc	r25, r11
    1894:	ac 09       	sbc	r26, r12
    1896:	bd 09       	sbc	r27, r13
    1898:	8d ab       	std	Y+53, r24	; 0x35
    189a:	9e ab       	std	Y+54, r25	; 0x36
    189c:	af ab       	std	Y+55, r26	; 0x37
    189e:	b8 af       	std	Y+56, r27	; 0x38
    18a0:	e9 8a       	std	Y+17, r14	; 0x11
    18a2:	fa 8a       	std	Y+18, r15	; 0x12
    18a4:	0b 8b       	std	Y+19, r16	; 0x13
    18a6:	1c 8b       	std	Y+20, r17	; 0x14
    18a8:	6d a8       	ldd	r6, Y+53	; 0x35
    18aa:	7e a8       	ldd	r7, Y+54	; 0x36
    18ac:	8f a8       	ldd	r8, Y+55	; 0x37
    18ae:	98 ac       	ldd	r9, Y+56	; 0x38
    18b0:	6d 8a       	std	Y+21, r6	; 0x15
    18b2:	7e 8a       	std	Y+22, r7	; 0x16
    18b4:	8f 8a       	std	Y+23, r8	; 0x17
    18b6:	98 8e       	std	Y+24, r9	; 0x18
    18b8:	2e 2d       	mov	r18, r14
    18ba:	3a 89       	ldd	r19, Y+18	; 0x12
    18bc:	4b 89       	ldd	r20, Y+19	; 0x13
    18be:	5c 89       	ldd	r21, Y+20	; 0x14
    18c0:	6d a9       	ldd	r22, Y+53	; 0x35
    18c2:	6a c2       	rjmp	.+1236   	; 0x1d98 <__umoddi3+0xcd0>
    18c4:	67 96       	adiw	r28, 0x17	; 23
    18c6:	8f af       	std	Y+63, r24	; 0x3f
    18c8:	67 97       	sbiw	r28, 0x17	; 23
    18ca:	a6 01       	movw	r20, r12
    18cc:	95 01       	movw	r18, r10
    18ce:	08 2e       	mov	r0, r24
    18d0:	04 c0       	rjmp	.+8      	; 0x18da <__umoddi3+0x812>
    18d2:	22 0f       	add	r18, r18
    18d4:	33 1f       	adc	r19, r19
    18d6:	44 1f       	adc	r20, r20
    18d8:	55 1f       	adc	r21, r21
    18da:	0a 94       	dec	r0
    18dc:	d2 f7       	brpl	.-12     	; 0x18d2 <__umoddi3+0x80a>
    18de:	a0 e2       	ldi	r26, 0x20	; 32
    18e0:	aa 2e       	mov	r10, r26
    18e2:	a8 1a       	sub	r10, r24
    18e4:	66 96       	adiw	r28, 0x16	; 22
    18e6:	af ae       	std	Y+63, r10	; 0x3f
    18e8:	66 97       	sbiw	r28, 0x16	; 22
    18ea:	d2 01       	movw	r26, r4
    18ec:	c1 01       	movw	r24, r2
    18ee:	04 c0       	rjmp	.+8      	; 0x18f8 <__umoddi3+0x830>
    18f0:	b6 95       	lsr	r27
    18f2:	a7 95       	ror	r26
    18f4:	97 95       	ror	r25
    18f6:	87 95       	ror	r24
    18f8:	aa 94       	dec	r10
    18fa:	d2 f7       	brpl	.-12     	; 0x18f0 <__umoddi3+0x828>
    18fc:	6c 01       	movw	r12, r24
    18fe:	7d 01       	movw	r14, r26
    1900:	c2 2a       	or	r12, r18
    1902:	d3 2a       	or	r13, r19
    1904:	e4 2a       	or	r14, r20
    1906:	f5 2a       	or	r15, r21
    1908:	c9 a6       	std	Y+41, r12	; 0x29
    190a:	da a6       	std	Y+42, r13	; 0x2a
    190c:	eb a6       	std	Y+43, r14	; 0x2b
    190e:	fc a6       	std	Y+44, r15	; 0x2c
    1910:	82 01       	movw	r16, r4
    1912:	71 01       	movw	r14, r2
    1914:	67 96       	adiw	r28, 0x17	; 23
    1916:	0f ac       	ldd	r0, Y+63	; 0x3f
    1918:	67 97       	sbiw	r28, 0x17	; 23
    191a:	04 c0       	rjmp	.+8      	; 0x1924 <__umoddi3+0x85c>
    191c:	ee 0c       	add	r14, r14
    191e:	ff 1c       	adc	r15, r15
    1920:	00 1f       	adc	r16, r16
    1922:	11 1f       	adc	r17, r17
    1924:	0a 94       	dec	r0
    1926:	d2 f7       	brpl	.-12     	; 0x191c <__umoddi3+0x854>
    1928:	ed a2       	std	Y+37, r14	; 0x25
    192a:	fe a2       	std	Y+38, r15	; 0x26
    192c:	0f a3       	std	Y+39, r16	; 0x27
    192e:	18 a7       	std	Y+40, r17	; 0x28
    1930:	64 01       	movw	r12, r8
    1932:	53 01       	movw	r10, r6
    1934:	66 96       	adiw	r28, 0x16	; 22
    1936:	0f ac       	ldd	r0, Y+63	; 0x3f
    1938:	66 97       	sbiw	r28, 0x16	; 22
    193a:	04 c0       	rjmp	.+8      	; 0x1944 <__umoddi3+0x87c>
    193c:	d6 94       	lsr	r13
    193e:	c7 94       	ror	r12
    1940:	b7 94       	ror	r11
    1942:	a7 94       	ror	r10
    1944:	0a 94       	dec	r0
    1946:	d2 f7       	brpl	.-12     	; 0x193c <__umoddi3+0x874>
    1948:	a4 01       	movw	r20, r8
    194a:	93 01       	movw	r18, r6
    194c:	67 96       	adiw	r28, 0x17	; 23
    194e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1950:	67 97       	sbiw	r28, 0x17	; 23
    1952:	04 c0       	rjmp	.+8      	; 0x195c <__umoddi3+0x894>
    1954:	22 0f       	add	r18, r18
    1956:	33 1f       	adc	r19, r19
    1958:	44 1f       	adc	r20, r20
    195a:	55 1f       	adc	r21, r21
    195c:	0a 94       	dec	r0
    195e:	d2 f7       	brpl	.-12     	; 0x1954 <__umoddi3+0x88c>
    1960:	6c 96       	adiw	r28, 0x1c	; 28
    1962:	8c ad       	ldd	r24, Y+60	; 0x3c
    1964:	9d ad       	ldd	r25, Y+61	; 0x3d
    1966:	ae ad       	ldd	r26, Y+62	; 0x3e
    1968:	bf ad       	ldd	r27, Y+63	; 0x3f
    196a:	6c 97       	sbiw	r28, 0x1c	; 28
    196c:	66 96       	adiw	r28, 0x16	; 22
    196e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1970:	66 97       	sbiw	r28, 0x16	; 22
    1972:	04 c0       	rjmp	.+8      	; 0x197c <__umoddi3+0x8b4>
    1974:	b6 95       	lsr	r27
    1976:	a7 95       	ror	r26
    1978:	97 95       	ror	r25
    197a:	87 95       	ror	r24
    197c:	0a 94       	dec	r0
    197e:	d2 f7       	brpl	.-12     	; 0x1974 <__umoddi3+0x8ac>
    1980:	3c 01       	movw	r6, r24
    1982:	4d 01       	movw	r8, r26
    1984:	62 2a       	or	r6, r18
    1986:	73 2a       	or	r7, r19
    1988:	84 2a       	or	r8, r20
    198a:	95 2a       	or	r9, r21
    198c:	69 a2       	std	Y+33, r6	; 0x21
    198e:	7a a2       	std	Y+34, r7	; 0x22
    1990:	8b a2       	std	Y+35, r8	; 0x23
    1992:	9c a2       	std	Y+36, r9	; 0x24
    1994:	6c 96       	adiw	r28, 0x1c	; 28
    1996:	ec ac       	ldd	r14, Y+60	; 0x3c
    1998:	fd ac       	ldd	r15, Y+61	; 0x3d
    199a:	0e ad       	ldd	r16, Y+62	; 0x3e
    199c:	1f ad       	ldd	r17, Y+63	; 0x3f
    199e:	6c 97       	sbiw	r28, 0x1c	; 28
    19a0:	67 96       	adiw	r28, 0x17	; 23
    19a2:	0f ac       	ldd	r0, Y+63	; 0x3f
    19a4:	67 97       	sbiw	r28, 0x17	; 23
    19a6:	04 c0       	rjmp	.+8      	; 0x19b0 <__umoddi3+0x8e8>
    19a8:	ee 0c       	add	r14, r14
    19aa:	ff 1c       	adc	r15, r15
    19ac:	00 1f       	adc	r16, r16
    19ae:	11 1f       	adc	r17, r17
    19b0:	0a 94       	dec	r0
    19b2:	d2 f7       	brpl	.-12     	; 0x19a8 <__umoddi3+0x8e0>
    19b4:	ed 8e       	std	Y+29, r14	; 0x1d
    19b6:	fe 8e       	std	Y+30, r15	; 0x1e
    19b8:	0f 8f       	std	Y+31, r16	; 0x1f
    19ba:	18 a3       	std	Y+32, r17	; 0x20
    19bc:	49 a5       	ldd	r20, Y+41	; 0x29
    19be:	5a a5       	ldd	r21, Y+42	; 0x2a
    19c0:	6b a5       	ldd	r22, Y+43	; 0x2b
    19c2:	7c a5       	ldd	r23, Y+44	; 0x2c
    19c4:	3b 01       	movw	r6, r22
    19c6:	88 24       	eor	r8, r8
    19c8:	99 24       	eor	r9, r9
    19ca:	60 70       	andi	r22, 0x00	; 0
    19cc:	70 70       	andi	r23, 0x00	; 0
    19ce:	2d 96       	adiw	r28, 0x0d	; 13
    19d0:	4c af       	std	Y+60, r20	; 0x3c
    19d2:	5d af       	std	Y+61, r21	; 0x3d
    19d4:	6e af       	std	Y+62, r22	; 0x3e
    19d6:	7f af       	std	Y+63, r23	; 0x3f
    19d8:	2d 97       	sbiw	r28, 0x0d	; 13
    19da:	c6 01       	movw	r24, r12
    19dc:	b5 01       	movw	r22, r10
    19de:	a4 01       	movw	r20, r8
    19e0:	93 01       	movw	r18, r6
    19e2:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    19e6:	7b 01       	movw	r14, r22
    19e8:	8c 01       	movw	r16, r24
    19ea:	c6 01       	movw	r24, r12
    19ec:	b5 01       	movw	r22, r10
    19ee:	a4 01       	movw	r20, r8
    19f0:	93 01       	movw	r18, r6
    19f2:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    19f6:	c9 01       	movw	r24, r18
    19f8:	da 01       	movw	r26, r20
    19fa:	1c 01       	movw	r2, r24
    19fc:	2d 01       	movw	r4, r26
    19fe:	c2 01       	movw	r24, r4
    1a00:	b1 01       	movw	r22, r2
    1a02:	2d 96       	adiw	r28, 0x0d	; 13
    1a04:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a06:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a08:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a0a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a0c:	2d 97       	sbiw	r28, 0x0d	; 13
    1a0e:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    1a12:	9b 01       	movw	r18, r22
    1a14:	ac 01       	movw	r20, r24
    1a16:	87 01       	movw	r16, r14
    1a18:	ff 24       	eor	r15, r15
    1a1a:	ee 24       	eor	r14, r14
    1a1c:	a9 a0       	ldd	r10, Y+33	; 0x21
    1a1e:	ba a0       	ldd	r11, Y+34	; 0x22
    1a20:	cb a0       	ldd	r12, Y+35	; 0x23
    1a22:	dc a0       	ldd	r13, Y+36	; 0x24
    1a24:	c6 01       	movw	r24, r12
    1a26:	aa 27       	eor	r26, r26
    1a28:	bb 27       	eor	r27, r27
    1a2a:	57 01       	movw	r10, r14
    1a2c:	68 01       	movw	r12, r16
    1a2e:	a8 2a       	or	r10, r24
    1a30:	b9 2a       	or	r11, r25
    1a32:	ca 2a       	or	r12, r26
    1a34:	db 2a       	or	r13, r27
    1a36:	a2 16       	cp	r10, r18
    1a38:	b3 06       	cpc	r11, r19
    1a3a:	c4 06       	cpc	r12, r20
    1a3c:	d5 06       	cpc	r13, r21
    1a3e:	00 f5       	brcc	.+64     	; 0x1a80 <__umoddi3+0x9b8>
    1a40:	08 94       	sec
    1a42:	21 08       	sbc	r2, r1
    1a44:	31 08       	sbc	r3, r1
    1a46:	41 08       	sbc	r4, r1
    1a48:	51 08       	sbc	r5, r1
    1a4a:	e9 a4       	ldd	r14, Y+41	; 0x29
    1a4c:	fa a4       	ldd	r15, Y+42	; 0x2a
    1a4e:	0b a5       	ldd	r16, Y+43	; 0x2b
    1a50:	1c a5       	ldd	r17, Y+44	; 0x2c
    1a52:	ae 0c       	add	r10, r14
    1a54:	bf 1c       	adc	r11, r15
    1a56:	c0 1e       	adc	r12, r16
    1a58:	d1 1e       	adc	r13, r17
    1a5a:	ae 14       	cp	r10, r14
    1a5c:	bf 04       	cpc	r11, r15
    1a5e:	c0 06       	cpc	r12, r16
    1a60:	d1 06       	cpc	r13, r17
    1a62:	70 f0       	brcs	.+28     	; 0x1a80 <__umoddi3+0x9b8>
    1a64:	a2 16       	cp	r10, r18
    1a66:	b3 06       	cpc	r11, r19
    1a68:	c4 06       	cpc	r12, r20
    1a6a:	d5 06       	cpc	r13, r21
    1a6c:	48 f4       	brcc	.+18     	; 0x1a80 <__umoddi3+0x9b8>
    1a6e:	08 94       	sec
    1a70:	21 08       	sbc	r2, r1
    1a72:	31 08       	sbc	r3, r1
    1a74:	41 08       	sbc	r4, r1
    1a76:	51 08       	sbc	r5, r1
    1a78:	ae 0c       	add	r10, r14
    1a7a:	bf 1c       	adc	r11, r15
    1a7c:	c0 1e       	adc	r12, r16
    1a7e:	d1 1e       	adc	r13, r17
    1a80:	a2 1a       	sub	r10, r18
    1a82:	b3 0a       	sbc	r11, r19
    1a84:	c4 0a       	sbc	r12, r20
    1a86:	d5 0a       	sbc	r13, r21
    1a88:	c6 01       	movw	r24, r12
    1a8a:	b5 01       	movw	r22, r10
    1a8c:	a4 01       	movw	r20, r8
    1a8e:	93 01       	movw	r18, r6
    1a90:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    1a94:	7b 01       	movw	r14, r22
    1a96:	8c 01       	movw	r16, r24
    1a98:	c6 01       	movw	r24, r12
    1a9a:	b5 01       	movw	r22, r10
    1a9c:	a4 01       	movw	r20, r8
    1a9e:	93 01       	movw	r18, r6
    1aa0:	0e 94 41 30 	call	0x6082	; 0x6082 <__udivmodsi4>
    1aa4:	c9 01       	movw	r24, r18
    1aa6:	da 01       	movw	r26, r20
    1aa8:	3c 01       	movw	r6, r24
    1aaa:	4d 01       	movw	r8, r26
    1aac:	c4 01       	movw	r24, r8
    1aae:	b3 01       	movw	r22, r6
    1ab0:	2d 96       	adiw	r28, 0x0d	; 13
    1ab2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ab4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ab6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ab8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1aba:	2d 97       	sbiw	r28, 0x0d	; 13
    1abc:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    1ac0:	9b 01       	movw	r18, r22
    1ac2:	ac 01       	movw	r20, r24
    1ac4:	87 01       	movw	r16, r14
    1ac6:	ff 24       	eor	r15, r15
    1ac8:	ee 24       	eor	r14, r14
    1aca:	89 a1       	ldd	r24, Y+33	; 0x21
    1acc:	9a a1       	ldd	r25, Y+34	; 0x22
    1ace:	ab a1       	ldd	r26, Y+35	; 0x23
    1ad0:	bc a1       	ldd	r27, Y+36	; 0x24
    1ad2:	a0 70       	andi	r26, 0x00	; 0
    1ad4:	b0 70       	andi	r27, 0x00	; 0
    1ad6:	57 01       	movw	r10, r14
    1ad8:	68 01       	movw	r12, r16
    1ada:	a8 2a       	or	r10, r24
    1adc:	b9 2a       	or	r11, r25
    1ade:	ca 2a       	or	r12, r26
    1ae0:	db 2a       	or	r13, r27
    1ae2:	a2 16       	cp	r10, r18
    1ae4:	b3 06       	cpc	r11, r19
    1ae6:	c4 06       	cpc	r12, r20
    1ae8:	d5 06       	cpc	r13, r21
    1aea:	00 f5       	brcc	.+64     	; 0x1b2c <__umoddi3+0xa64>
    1aec:	08 94       	sec
    1aee:	61 08       	sbc	r6, r1
    1af0:	71 08       	sbc	r7, r1
    1af2:	81 08       	sbc	r8, r1
    1af4:	91 08       	sbc	r9, r1
    1af6:	69 a5       	ldd	r22, Y+41	; 0x29
    1af8:	7a a5       	ldd	r23, Y+42	; 0x2a
    1afa:	8b a5       	ldd	r24, Y+43	; 0x2b
    1afc:	9c a5       	ldd	r25, Y+44	; 0x2c
    1afe:	a6 0e       	add	r10, r22
    1b00:	b7 1e       	adc	r11, r23
    1b02:	c8 1e       	adc	r12, r24
    1b04:	d9 1e       	adc	r13, r25
    1b06:	a6 16       	cp	r10, r22
    1b08:	b7 06       	cpc	r11, r23
    1b0a:	c8 06       	cpc	r12, r24
    1b0c:	d9 06       	cpc	r13, r25
    1b0e:	70 f0       	brcs	.+28     	; 0x1b2c <__umoddi3+0xa64>
    1b10:	a2 16       	cp	r10, r18
    1b12:	b3 06       	cpc	r11, r19
    1b14:	c4 06       	cpc	r12, r20
    1b16:	d5 06       	cpc	r13, r21
    1b18:	48 f4       	brcc	.+18     	; 0x1b2c <__umoddi3+0xa64>
    1b1a:	08 94       	sec
    1b1c:	61 08       	sbc	r6, r1
    1b1e:	71 08       	sbc	r7, r1
    1b20:	81 08       	sbc	r8, r1
    1b22:	91 08       	sbc	r9, r1
    1b24:	a6 0e       	add	r10, r22
    1b26:	b7 1e       	adc	r11, r23
    1b28:	c8 1e       	adc	r12, r24
    1b2a:	d9 1e       	adc	r13, r25
    1b2c:	d6 01       	movw	r26, r12
    1b2e:	c5 01       	movw	r24, r10
    1b30:	82 1b       	sub	r24, r18
    1b32:	93 0b       	sbc	r25, r19
    1b34:	a4 0b       	sbc	r26, r20
    1b36:	b5 0b       	sbc	r27, r21
    1b38:	89 8f       	std	Y+25, r24	; 0x19
    1b3a:	9a 8f       	std	Y+26, r25	; 0x1a
    1b3c:	ab 8f       	std	Y+27, r26	; 0x1b
    1b3e:	bc 8f       	std	Y+28, r27	; 0x1c
    1b40:	d1 01       	movw	r26, r2
    1b42:	99 27       	eor	r25, r25
    1b44:	88 27       	eor	r24, r24
    1b46:	84 01       	movw	r16, r8
    1b48:	73 01       	movw	r14, r6
    1b4a:	e8 2a       	or	r14, r24
    1b4c:	f9 2a       	or	r15, r25
    1b4e:	0a 2b       	or	r16, r26
    1b50:	1b 2b       	or	r17, r27
    1b52:	4f ef       	ldi	r20, 0xFF	; 255
    1b54:	a4 2e       	mov	r10, r20
    1b56:	4f ef       	ldi	r20, 0xFF	; 255
    1b58:	b4 2e       	mov	r11, r20
    1b5a:	c1 2c       	mov	r12, r1
    1b5c:	d1 2c       	mov	r13, r1
    1b5e:	ae 20       	and	r10, r14
    1b60:	bf 20       	and	r11, r15
    1b62:	c0 22       	and	r12, r16
    1b64:	d1 22       	and	r13, r17
    1b66:	78 01       	movw	r14, r16
    1b68:	00 27       	eor	r16, r16
    1b6a:	11 27       	eor	r17, r17
    1b6c:	6d a0       	ldd	r6, Y+37	; 0x25
    1b6e:	7e a0       	ldd	r7, Y+38	; 0x26
    1b70:	8f a0       	ldd	r8, Y+39	; 0x27
    1b72:	98 a4       	ldd	r9, Y+40	; 0x28
    1b74:	4f ef       	ldi	r20, 0xFF	; 255
    1b76:	5f ef       	ldi	r21, 0xFF	; 255
    1b78:	60 e0       	ldi	r22, 0x00	; 0
    1b7a:	70 e0       	ldi	r23, 0x00	; 0
    1b7c:	64 22       	and	r6, r20
    1b7e:	75 22       	and	r7, r21
    1b80:	86 22       	and	r8, r22
    1b82:	97 22       	and	r9, r23
    1b84:	8d a1       	ldd	r24, Y+37	; 0x25
    1b86:	9e a1       	ldd	r25, Y+38	; 0x26
    1b88:	af a1       	ldd	r26, Y+39	; 0x27
    1b8a:	b8 a5       	ldd	r27, Y+40	; 0x28
    1b8c:	bd 01       	movw	r22, r26
    1b8e:	88 27       	eor	r24, r24
    1b90:	99 27       	eor	r25, r25
    1b92:	65 96       	adiw	r28, 0x15	; 21
    1b94:	6c af       	std	Y+60, r22	; 0x3c
    1b96:	7d af       	std	Y+61, r23	; 0x3d
    1b98:	8e af       	std	Y+62, r24	; 0x3e
    1b9a:	9f af       	std	Y+63, r25	; 0x3f
    1b9c:	65 97       	sbiw	r28, 0x15	; 21
    1b9e:	c6 01       	movw	r24, r12
    1ba0:	b5 01       	movw	r22, r10
    1ba2:	a4 01       	movw	r20, r8
    1ba4:	93 01       	movw	r18, r6
    1ba6:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    1baa:	61 96       	adiw	r28, 0x11	; 17
    1bac:	6c af       	std	Y+60, r22	; 0x3c
    1bae:	7d af       	std	Y+61, r23	; 0x3d
    1bb0:	8e af       	std	Y+62, r24	; 0x3e
    1bb2:	9f af       	std	Y+63, r25	; 0x3f
    1bb4:	61 97       	sbiw	r28, 0x11	; 17
    1bb6:	c6 01       	movw	r24, r12
    1bb8:	b5 01       	movw	r22, r10
    1bba:	65 96       	adiw	r28, 0x15	; 21
    1bbc:	2c ad       	ldd	r18, Y+60	; 0x3c
    1bbe:	3d ad       	ldd	r19, Y+61	; 0x3d
    1bc0:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bc2:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bc4:	65 97       	sbiw	r28, 0x15	; 21
    1bc6:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    1bca:	1b 01       	movw	r2, r22
    1bcc:	2c 01       	movw	r4, r24
    1bce:	c8 01       	movw	r24, r16
    1bd0:	b7 01       	movw	r22, r14
    1bd2:	a4 01       	movw	r20, r8
    1bd4:	93 01       	movw	r18, r6
    1bd6:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    1bda:	5b 01       	movw	r10, r22
    1bdc:	6c 01       	movw	r12, r24
    1bde:	c8 01       	movw	r24, r16
    1be0:	b7 01       	movw	r22, r14
    1be2:	65 96       	adiw	r28, 0x15	; 21
    1be4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1be6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1be8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bea:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bec:	65 97       	sbiw	r28, 0x15	; 21
    1bee:	0e 94 22 30 	call	0x6044	; 0x6044 <__mulsi3>
    1bf2:	7b 01       	movw	r14, r22
    1bf4:	8c 01       	movw	r16, r24
    1bf6:	a6 01       	movw	r20, r12
    1bf8:	95 01       	movw	r18, r10
    1bfa:	22 0d       	add	r18, r2
    1bfc:	33 1d       	adc	r19, r3
    1bfe:	44 1d       	adc	r20, r4
    1c00:	55 1d       	adc	r21, r5
    1c02:	61 96       	adiw	r28, 0x11	; 17
    1c04:	6c ac       	ldd	r6, Y+60	; 0x3c
    1c06:	7d ac       	ldd	r7, Y+61	; 0x3d
    1c08:	8e ac       	ldd	r8, Y+62	; 0x3e
    1c0a:	9f ac       	ldd	r9, Y+63	; 0x3f
    1c0c:	61 97       	sbiw	r28, 0x11	; 17
    1c0e:	c4 01       	movw	r24, r8
    1c10:	aa 27       	eor	r26, r26
    1c12:	bb 27       	eor	r27, r27
    1c14:	28 0f       	add	r18, r24
    1c16:	39 1f       	adc	r19, r25
    1c18:	4a 1f       	adc	r20, r26
    1c1a:	5b 1f       	adc	r21, r27
    1c1c:	2a 15       	cp	r18, r10
    1c1e:	3b 05       	cpc	r19, r11
    1c20:	4c 05       	cpc	r20, r12
    1c22:	5d 05       	cpc	r21, r13
    1c24:	48 f4       	brcc	.+18     	; 0x1c38 <__umoddi3+0xb70>
    1c26:	81 2c       	mov	r8, r1
    1c28:	91 2c       	mov	r9, r1
    1c2a:	e1 e0       	ldi	r30, 0x01	; 1
    1c2c:	ae 2e       	mov	r10, r30
    1c2e:	b1 2c       	mov	r11, r1
    1c30:	e8 0c       	add	r14, r8
    1c32:	f9 1c       	adc	r15, r9
    1c34:	0a 1d       	adc	r16, r10
    1c36:	1b 1d       	adc	r17, r11
    1c38:	ca 01       	movw	r24, r20
    1c3a:	aa 27       	eor	r26, r26
    1c3c:	bb 27       	eor	r27, r27
    1c3e:	57 01       	movw	r10, r14
    1c40:	68 01       	movw	r12, r16
    1c42:	a8 0e       	add	r10, r24
    1c44:	b9 1e       	adc	r11, r25
    1c46:	ca 1e       	adc	r12, r26
    1c48:	db 1e       	adc	r13, r27
    1c4a:	a9 01       	movw	r20, r18
    1c4c:	33 27       	eor	r19, r19
    1c4e:	22 27       	eor	r18, r18
    1c50:	61 96       	adiw	r28, 0x11	; 17
    1c52:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c54:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c56:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c58:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c5a:	61 97       	sbiw	r28, 0x11	; 17
    1c5c:	a0 70       	andi	r26, 0x00	; 0
    1c5e:	b0 70       	andi	r27, 0x00	; 0
    1c60:	28 0f       	add	r18, r24
    1c62:	39 1f       	adc	r19, r25
    1c64:	4a 1f       	adc	r20, r26
    1c66:	5b 1f       	adc	r21, r27
    1c68:	e9 8c       	ldd	r14, Y+25	; 0x19
    1c6a:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1c6c:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1c6e:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1c70:	ea 14       	cp	r14, r10
    1c72:	fb 04       	cpc	r15, r11
    1c74:	0c 05       	cpc	r16, r12
    1c76:	1d 05       	cpc	r17, r13
    1c78:	70 f0       	brcs	.+28     	; 0x1c96 <__umoddi3+0xbce>
    1c7a:	ae 14       	cp	r10, r14
    1c7c:	bf 04       	cpc	r11, r15
    1c7e:	c0 06       	cpc	r12, r16
    1c80:	d1 06       	cpc	r13, r17
    1c82:	69 f5       	brne	.+90     	; 0x1cde <__umoddi3+0xc16>
    1c84:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c86:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c88:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c8a:	98 a1       	ldd	r25, Y+32	; 0x20
    1c8c:	62 17       	cp	r22, r18
    1c8e:	73 07       	cpc	r23, r19
    1c90:	84 07       	cpc	r24, r20
    1c92:	95 07       	cpc	r25, r21
    1c94:	20 f5       	brcc	.+72     	; 0x1cde <__umoddi3+0xc16>
    1c96:	da 01       	movw	r26, r20
    1c98:	c9 01       	movw	r24, r18
    1c9a:	6d a0       	ldd	r6, Y+37	; 0x25
    1c9c:	7e a0       	ldd	r7, Y+38	; 0x26
    1c9e:	8f a0       	ldd	r8, Y+39	; 0x27
    1ca0:	98 a4       	ldd	r9, Y+40	; 0x28
    1ca2:	86 19       	sub	r24, r6
    1ca4:	97 09       	sbc	r25, r7
    1ca6:	a8 09       	sbc	r26, r8
    1ca8:	b9 09       	sbc	r27, r9
    1caa:	e9 a4       	ldd	r14, Y+41	; 0x29
    1cac:	fa a4       	ldd	r15, Y+42	; 0x2a
    1cae:	0b a5       	ldd	r16, Y+43	; 0x2b
    1cb0:	1c a5       	ldd	r17, Y+44	; 0x2c
    1cb2:	ae 18       	sub	r10, r14
    1cb4:	bf 08       	sbc	r11, r15
    1cb6:	c0 0a       	sbc	r12, r16
    1cb8:	d1 0a       	sbc	r13, r17
    1cba:	ee 24       	eor	r14, r14
    1cbc:	ff 24       	eor	r15, r15
    1cbe:	87 01       	movw	r16, r14
    1cc0:	28 17       	cp	r18, r24
    1cc2:	39 07       	cpc	r19, r25
    1cc4:	4a 07       	cpc	r20, r26
    1cc6:	5b 07       	cpc	r21, r27
    1cc8:	28 f4       	brcc	.+10     	; 0x1cd4 <__umoddi3+0xc0c>
    1cca:	21 e0       	ldi	r18, 0x01	; 1
    1ccc:	e2 2e       	mov	r14, r18
    1cce:	f1 2c       	mov	r15, r1
    1cd0:	01 2d       	mov	r16, r1
    1cd2:	11 2d       	mov	r17, r1
    1cd4:	ae 18       	sub	r10, r14
    1cd6:	bf 08       	sbc	r11, r15
    1cd8:	c0 0a       	sbc	r12, r16
    1cda:	d1 0a       	sbc	r13, r17
    1cdc:	02 c0       	rjmp	.+4      	; 0x1ce2 <__umoddi3+0xc1a>
    1cde:	da 01       	movw	r26, r20
    1ce0:	c9 01       	movw	r24, r18
    1ce2:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1ce4:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1ce6:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1ce8:	98 a0       	ldd	r9, Y+32	; 0x20
    1cea:	68 1a       	sub	r6, r24
    1cec:	79 0a       	sbc	r7, r25
    1cee:	8a 0a       	sbc	r8, r26
    1cf0:	9b 0a       	sbc	r9, r27
    1cf2:	49 8d       	ldd	r20, Y+25	; 0x19
    1cf4:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1cf6:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1cf8:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1cfa:	4a 19       	sub	r20, r10
    1cfc:	5b 09       	sbc	r21, r11
    1cfe:	6c 09       	sbc	r22, r12
    1d00:	7d 09       	sbc	r23, r13
    1d02:	5a 01       	movw	r10, r20
    1d04:	6b 01       	movw	r12, r22
    1d06:	22 24       	eor	r2, r2
    1d08:	33 24       	eor	r3, r3
    1d0a:	21 01       	movw	r4, r2
    1d0c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1d0e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1d10:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d12:	98 a1       	ldd	r25, Y+32	; 0x20
    1d14:	66 15       	cp	r22, r6
    1d16:	77 05       	cpc	r23, r7
    1d18:	88 05       	cpc	r24, r8
    1d1a:	99 05       	cpc	r25, r9
    1d1c:	28 f4       	brcc	.+10     	; 0x1d28 <__umoddi3+0xc60>
    1d1e:	81 e0       	ldi	r24, 0x01	; 1
    1d20:	28 2e       	mov	r2, r24
    1d22:	31 2c       	mov	r3, r1
    1d24:	41 2c       	mov	r4, r1
    1d26:	51 2c       	mov	r5, r1
    1d28:	86 01       	movw	r16, r12
    1d2a:	75 01       	movw	r14, r10
    1d2c:	e2 18       	sub	r14, r2
    1d2e:	f3 08       	sbc	r15, r3
    1d30:	04 09       	sbc	r16, r4
    1d32:	15 09       	sbc	r17, r5
    1d34:	a8 01       	movw	r20, r16
    1d36:	97 01       	movw	r18, r14
    1d38:	66 96       	adiw	r28, 0x16	; 22
    1d3a:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d3c:	66 97       	sbiw	r28, 0x16	; 22
    1d3e:	04 c0       	rjmp	.+8      	; 0x1d48 <__umoddi3+0xc80>
    1d40:	22 0f       	add	r18, r18
    1d42:	33 1f       	adc	r19, r19
    1d44:	44 1f       	adc	r20, r20
    1d46:	55 1f       	adc	r21, r21
    1d48:	0a 94       	dec	r0
    1d4a:	d2 f7       	brpl	.-12     	; 0x1d40 <__umoddi3+0xc78>
    1d4c:	d4 01       	movw	r26, r8
    1d4e:	c3 01       	movw	r24, r6
    1d50:	67 96       	adiw	r28, 0x17	; 23
    1d52:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d54:	67 97       	sbiw	r28, 0x17	; 23
    1d56:	04 c0       	rjmp	.+8      	; 0x1d60 <__umoddi3+0xc98>
    1d58:	b6 95       	lsr	r27
    1d5a:	a7 95       	ror	r26
    1d5c:	97 95       	ror	r25
    1d5e:	87 95       	ror	r24
    1d60:	0a 94       	dec	r0
    1d62:	d2 f7       	brpl	.-12     	; 0x1d58 <__umoddi3+0xc90>
    1d64:	28 2b       	or	r18, r24
    1d66:	39 2b       	or	r19, r25
    1d68:	4a 2b       	or	r20, r26
    1d6a:	5b 2b       	or	r21, r27
    1d6c:	29 8b       	std	Y+17, r18	; 0x11
    1d6e:	3a 8b       	std	Y+18, r19	; 0x12
    1d70:	4b 8b       	std	Y+19, r20	; 0x13
    1d72:	5c 8b       	std	Y+20, r21	; 0x14
    1d74:	67 96       	adiw	r28, 0x17	; 23
    1d76:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d78:	67 97       	sbiw	r28, 0x17	; 23
    1d7a:	04 c0       	rjmp	.+8      	; 0x1d84 <__umoddi3+0xcbc>
    1d7c:	16 95       	lsr	r17
    1d7e:	07 95       	ror	r16
    1d80:	f7 94       	ror	r15
    1d82:	e7 94       	ror	r14
    1d84:	0a 94       	dec	r0
    1d86:	d2 f7       	brpl	.-12     	; 0x1d7c <__umoddi3+0xcb4>
    1d88:	ed 8a       	std	Y+21, r14	; 0x15
    1d8a:	fe 8a       	std	Y+22, r15	; 0x16
    1d8c:	0f 8b       	std	Y+23, r16	; 0x17
    1d8e:	18 8f       	std	Y+24, r17	; 0x18
    1d90:	3a 89       	ldd	r19, Y+18	; 0x12
    1d92:	4b 89       	ldd	r20, Y+19	; 0x13
    1d94:	5c 89       	ldd	r21, Y+20	; 0x14
    1d96:	6e 2d       	mov	r22, r14
    1d98:	7e 89       	ldd	r23, Y+22	; 0x16
    1d9a:	8f 89       	ldd	r24, Y+23	; 0x17
    1d9c:	98 8d       	ldd	r25, Y+24	; 0x18
    1d9e:	c5 5a       	subi	r28, 0xA5	; 165
    1da0:	df 4f       	sbci	r29, 0xFF	; 255
    1da2:	e2 e1       	ldi	r30, 0x12	; 18
    1da4:	0c 94 7f 30 	jmp	0x60fe	; 0x60fe <__epilogue_restores__>

00001da8 <_fpadd_parts>:
    1da8:	a0 e0       	ldi	r26, 0x00	; 0
    1daa:	b0 e0       	ldi	r27, 0x00	; 0
    1dac:	ea ed       	ldi	r30, 0xDA	; 218
    1dae:	fe e0       	ldi	r31, 0x0E	; 14
    1db0:	0c 94 63 30 	jmp	0x60c6	; 0x60c6 <__prologue_saves__>
    1db4:	dc 01       	movw	r26, r24
    1db6:	2b 01       	movw	r4, r22
    1db8:	fa 01       	movw	r30, r20
    1dba:	9c 91       	ld	r25, X
    1dbc:	92 30       	cpi	r25, 0x02	; 2
    1dbe:	08 f4       	brcc	.+2      	; 0x1dc2 <_fpadd_parts+0x1a>
    1dc0:	39 c1       	rjmp	.+626    	; 0x2034 <_fpadd_parts+0x28c>
    1dc2:	eb 01       	movw	r28, r22
    1dc4:	88 81       	ld	r24, Y
    1dc6:	82 30       	cpi	r24, 0x02	; 2
    1dc8:	08 f4       	brcc	.+2      	; 0x1dcc <_fpadd_parts+0x24>
    1dca:	33 c1       	rjmp	.+614    	; 0x2032 <_fpadd_parts+0x28a>
    1dcc:	94 30       	cpi	r25, 0x04	; 4
    1dce:	69 f4       	brne	.+26     	; 0x1dea <_fpadd_parts+0x42>
    1dd0:	84 30       	cpi	r24, 0x04	; 4
    1dd2:	09 f0       	breq	.+2      	; 0x1dd6 <_fpadd_parts+0x2e>
    1dd4:	2f c1       	rjmp	.+606    	; 0x2034 <_fpadd_parts+0x28c>
    1dd6:	11 96       	adiw	r26, 0x01	; 1
    1dd8:	9c 91       	ld	r25, X
    1dda:	11 97       	sbiw	r26, 0x01	; 1
    1ddc:	89 81       	ldd	r24, Y+1	; 0x01
    1dde:	98 17       	cp	r25, r24
    1de0:	09 f4       	brne	.+2      	; 0x1de4 <_fpadd_parts+0x3c>
    1de2:	28 c1       	rjmp	.+592    	; 0x2034 <_fpadd_parts+0x28c>
    1de4:	a0 e8       	ldi	r26, 0x80	; 128
    1de6:	b0 e0       	ldi	r27, 0x00	; 0
    1de8:	25 c1       	rjmp	.+586    	; 0x2034 <_fpadd_parts+0x28c>
    1dea:	84 30       	cpi	r24, 0x04	; 4
    1dec:	09 f4       	brne	.+2      	; 0x1df0 <_fpadd_parts+0x48>
    1dee:	21 c1       	rjmp	.+578    	; 0x2032 <_fpadd_parts+0x28a>
    1df0:	82 30       	cpi	r24, 0x02	; 2
    1df2:	a9 f4       	brne	.+42     	; 0x1e1e <_fpadd_parts+0x76>
    1df4:	92 30       	cpi	r25, 0x02	; 2
    1df6:	09 f0       	breq	.+2      	; 0x1dfa <_fpadd_parts+0x52>
    1df8:	1d c1       	rjmp	.+570    	; 0x2034 <_fpadd_parts+0x28c>
    1dfa:	9a 01       	movw	r18, r20
    1dfc:	ad 01       	movw	r20, r26
    1dfe:	88 e0       	ldi	r24, 0x08	; 8
    1e00:	ea 01       	movw	r28, r20
    1e02:	09 90       	ld	r0, Y+
    1e04:	ae 01       	movw	r20, r28
    1e06:	e9 01       	movw	r28, r18
    1e08:	09 92       	st	Y+, r0
    1e0a:	9e 01       	movw	r18, r28
    1e0c:	81 50       	subi	r24, 0x01	; 1
    1e0e:	c1 f7       	brne	.-16     	; 0x1e00 <_fpadd_parts+0x58>
    1e10:	e2 01       	movw	r28, r4
    1e12:	89 81       	ldd	r24, Y+1	; 0x01
    1e14:	11 96       	adiw	r26, 0x01	; 1
    1e16:	9c 91       	ld	r25, X
    1e18:	89 23       	and	r24, r25
    1e1a:	81 83       	std	Z+1, r24	; 0x01
    1e1c:	08 c1       	rjmp	.+528    	; 0x202e <_fpadd_parts+0x286>
    1e1e:	92 30       	cpi	r25, 0x02	; 2
    1e20:	09 f4       	brne	.+2      	; 0x1e24 <_fpadd_parts+0x7c>
    1e22:	07 c1       	rjmp	.+526    	; 0x2032 <_fpadd_parts+0x28a>
    1e24:	12 96       	adiw	r26, 0x02	; 2
    1e26:	2d 90       	ld	r2, X+
    1e28:	3c 90       	ld	r3, X
    1e2a:	13 97       	sbiw	r26, 0x03	; 3
    1e2c:	eb 01       	movw	r28, r22
    1e2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e30:	9b 81       	ldd	r25, Y+3	; 0x03
    1e32:	14 96       	adiw	r26, 0x04	; 4
    1e34:	ad 90       	ld	r10, X+
    1e36:	bd 90       	ld	r11, X+
    1e38:	cd 90       	ld	r12, X+
    1e3a:	dc 90       	ld	r13, X
    1e3c:	17 97       	sbiw	r26, 0x07	; 7
    1e3e:	ec 80       	ldd	r14, Y+4	; 0x04
    1e40:	fd 80       	ldd	r15, Y+5	; 0x05
    1e42:	0e 81       	ldd	r16, Y+6	; 0x06
    1e44:	1f 81       	ldd	r17, Y+7	; 0x07
    1e46:	91 01       	movw	r18, r2
    1e48:	28 1b       	sub	r18, r24
    1e4a:	39 0b       	sbc	r19, r25
    1e4c:	b9 01       	movw	r22, r18
    1e4e:	37 ff       	sbrs	r19, 7
    1e50:	04 c0       	rjmp	.+8      	; 0x1e5a <_fpadd_parts+0xb2>
    1e52:	66 27       	eor	r22, r22
    1e54:	77 27       	eor	r23, r23
    1e56:	62 1b       	sub	r22, r18
    1e58:	73 0b       	sbc	r23, r19
    1e5a:	60 32       	cpi	r22, 0x20	; 32
    1e5c:	71 05       	cpc	r23, r1
    1e5e:	0c f0       	brlt	.+2      	; 0x1e62 <_fpadd_parts+0xba>
    1e60:	61 c0       	rjmp	.+194    	; 0x1f24 <_fpadd_parts+0x17c>
    1e62:	12 16       	cp	r1, r18
    1e64:	13 06       	cpc	r1, r19
    1e66:	6c f5       	brge	.+90     	; 0x1ec2 <_fpadd_parts+0x11a>
    1e68:	37 01       	movw	r6, r14
    1e6a:	48 01       	movw	r8, r16
    1e6c:	06 2e       	mov	r0, r22
    1e6e:	04 c0       	rjmp	.+8      	; 0x1e78 <_fpadd_parts+0xd0>
    1e70:	96 94       	lsr	r9
    1e72:	87 94       	ror	r8
    1e74:	77 94       	ror	r7
    1e76:	67 94       	ror	r6
    1e78:	0a 94       	dec	r0
    1e7a:	d2 f7       	brpl	.-12     	; 0x1e70 <_fpadd_parts+0xc8>
    1e7c:	21 e0       	ldi	r18, 0x01	; 1
    1e7e:	30 e0       	ldi	r19, 0x00	; 0
    1e80:	40 e0       	ldi	r20, 0x00	; 0
    1e82:	50 e0       	ldi	r21, 0x00	; 0
    1e84:	04 c0       	rjmp	.+8      	; 0x1e8e <_fpadd_parts+0xe6>
    1e86:	22 0f       	add	r18, r18
    1e88:	33 1f       	adc	r19, r19
    1e8a:	44 1f       	adc	r20, r20
    1e8c:	55 1f       	adc	r21, r21
    1e8e:	6a 95       	dec	r22
    1e90:	d2 f7       	brpl	.-12     	; 0x1e86 <_fpadd_parts+0xde>
    1e92:	21 50       	subi	r18, 0x01	; 1
    1e94:	30 40       	sbci	r19, 0x00	; 0
    1e96:	40 40       	sbci	r20, 0x00	; 0
    1e98:	50 40       	sbci	r21, 0x00	; 0
    1e9a:	2e 21       	and	r18, r14
    1e9c:	3f 21       	and	r19, r15
    1e9e:	40 23       	and	r20, r16
    1ea0:	51 23       	and	r21, r17
    1ea2:	21 15       	cp	r18, r1
    1ea4:	31 05       	cpc	r19, r1
    1ea6:	41 05       	cpc	r20, r1
    1ea8:	51 05       	cpc	r21, r1
    1eaa:	21 f0       	breq	.+8      	; 0x1eb4 <_fpadd_parts+0x10c>
    1eac:	21 e0       	ldi	r18, 0x01	; 1
    1eae:	30 e0       	ldi	r19, 0x00	; 0
    1eb0:	40 e0       	ldi	r20, 0x00	; 0
    1eb2:	50 e0       	ldi	r21, 0x00	; 0
    1eb4:	79 01       	movw	r14, r18
    1eb6:	8a 01       	movw	r16, r20
    1eb8:	e6 28       	or	r14, r6
    1eba:	f7 28       	or	r15, r7
    1ebc:	08 29       	or	r16, r8
    1ebe:	19 29       	or	r17, r9
    1ec0:	3c c0       	rjmp	.+120    	; 0x1f3a <_fpadd_parts+0x192>
    1ec2:	23 2b       	or	r18, r19
    1ec4:	d1 f1       	breq	.+116    	; 0x1f3a <_fpadd_parts+0x192>
    1ec6:	26 0e       	add	r2, r22
    1ec8:	37 1e       	adc	r3, r23
    1eca:	35 01       	movw	r6, r10
    1ecc:	46 01       	movw	r8, r12
    1ece:	06 2e       	mov	r0, r22
    1ed0:	04 c0       	rjmp	.+8      	; 0x1eda <_fpadd_parts+0x132>
    1ed2:	96 94       	lsr	r9
    1ed4:	87 94       	ror	r8
    1ed6:	77 94       	ror	r7
    1ed8:	67 94       	ror	r6
    1eda:	0a 94       	dec	r0
    1edc:	d2 f7       	brpl	.-12     	; 0x1ed2 <_fpadd_parts+0x12a>
    1ede:	21 e0       	ldi	r18, 0x01	; 1
    1ee0:	30 e0       	ldi	r19, 0x00	; 0
    1ee2:	40 e0       	ldi	r20, 0x00	; 0
    1ee4:	50 e0       	ldi	r21, 0x00	; 0
    1ee6:	04 c0       	rjmp	.+8      	; 0x1ef0 <_fpadd_parts+0x148>
    1ee8:	22 0f       	add	r18, r18
    1eea:	33 1f       	adc	r19, r19
    1eec:	44 1f       	adc	r20, r20
    1eee:	55 1f       	adc	r21, r21
    1ef0:	6a 95       	dec	r22
    1ef2:	d2 f7       	brpl	.-12     	; 0x1ee8 <_fpadd_parts+0x140>
    1ef4:	21 50       	subi	r18, 0x01	; 1
    1ef6:	30 40       	sbci	r19, 0x00	; 0
    1ef8:	40 40       	sbci	r20, 0x00	; 0
    1efa:	50 40       	sbci	r21, 0x00	; 0
    1efc:	2a 21       	and	r18, r10
    1efe:	3b 21       	and	r19, r11
    1f00:	4c 21       	and	r20, r12
    1f02:	5d 21       	and	r21, r13
    1f04:	21 15       	cp	r18, r1
    1f06:	31 05       	cpc	r19, r1
    1f08:	41 05       	cpc	r20, r1
    1f0a:	51 05       	cpc	r21, r1
    1f0c:	21 f0       	breq	.+8      	; 0x1f16 <_fpadd_parts+0x16e>
    1f0e:	21 e0       	ldi	r18, 0x01	; 1
    1f10:	30 e0       	ldi	r19, 0x00	; 0
    1f12:	40 e0       	ldi	r20, 0x00	; 0
    1f14:	50 e0       	ldi	r21, 0x00	; 0
    1f16:	59 01       	movw	r10, r18
    1f18:	6a 01       	movw	r12, r20
    1f1a:	a6 28       	or	r10, r6
    1f1c:	b7 28       	or	r11, r7
    1f1e:	c8 28       	or	r12, r8
    1f20:	d9 28       	or	r13, r9
    1f22:	0b c0       	rjmp	.+22     	; 0x1f3a <_fpadd_parts+0x192>
    1f24:	82 15       	cp	r24, r2
    1f26:	93 05       	cpc	r25, r3
    1f28:	2c f0       	brlt	.+10     	; 0x1f34 <_fpadd_parts+0x18c>
    1f2a:	1c 01       	movw	r2, r24
    1f2c:	aa 24       	eor	r10, r10
    1f2e:	bb 24       	eor	r11, r11
    1f30:	65 01       	movw	r12, r10
    1f32:	03 c0       	rjmp	.+6      	; 0x1f3a <_fpadd_parts+0x192>
    1f34:	ee 24       	eor	r14, r14
    1f36:	ff 24       	eor	r15, r15
    1f38:	87 01       	movw	r16, r14
    1f3a:	11 96       	adiw	r26, 0x01	; 1
    1f3c:	9c 91       	ld	r25, X
    1f3e:	d2 01       	movw	r26, r4
    1f40:	11 96       	adiw	r26, 0x01	; 1
    1f42:	8c 91       	ld	r24, X
    1f44:	98 17       	cp	r25, r24
    1f46:	09 f4       	brne	.+2      	; 0x1f4a <_fpadd_parts+0x1a2>
    1f48:	45 c0       	rjmp	.+138    	; 0x1fd4 <_fpadd_parts+0x22c>
    1f4a:	99 23       	and	r25, r25
    1f4c:	39 f0       	breq	.+14     	; 0x1f5c <_fpadd_parts+0x1b4>
    1f4e:	a8 01       	movw	r20, r16
    1f50:	97 01       	movw	r18, r14
    1f52:	2a 19       	sub	r18, r10
    1f54:	3b 09       	sbc	r19, r11
    1f56:	4c 09       	sbc	r20, r12
    1f58:	5d 09       	sbc	r21, r13
    1f5a:	06 c0       	rjmp	.+12     	; 0x1f68 <_fpadd_parts+0x1c0>
    1f5c:	a6 01       	movw	r20, r12
    1f5e:	95 01       	movw	r18, r10
    1f60:	2e 19       	sub	r18, r14
    1f62:	3f 09       	sbc	r19, r15
    1f64:	40 0b       	sbc	r20, r16
    1f66:	51 0b       	sbc	r21, r17
    1f68:	57 fd       	sbrc	r21, 7
    1f6a:	08 c0       	rjmp	.+16     	; 0x1f7c <_fpadd_parts+0x1d4>
    1f6c:	11 82       	std	Z+1, r1	; 0x01
    1f6e:	33 82       	std	Z+3, r3	; 0x03
    1f70:	22 82       	std	Z+2, r2	; 0x02
    1f72:	24 83       	std	Z+4, r18	; 0x04
    1f74:	35 83       	std	Z+5, r19	; 0x05
    1f76:	46 83       	std	Z+6, r20	; 0x06
    1f78:	57 83       	std	Z+7, r21	; 0x07
    1f7a:	1d c0       	rjmp	.+58     	; 0x1fb6 <_fpadd_parts+0x20e>
    1f7c:	81 e0       	ldi	r24, 0x01	; 1
    1f7e:	81 83       	std	Z+1, r24	; 0x01
    1f80:	33 82       	std	Z+3, r3	; 0x03
    1f82:	22 82       	std	Z+2, r2	; 0x02
    1f84:	88 27       	eor	r24, r24
    1f86:	99 27       	eor	r25, r25
    1f88:	dc 01       	movw	r26, r24
    1f8a:	82 1b       	sub	r24, r18
    1f8c:	93 0b       	sbc	r25, r19
    1f8e:	a4 0b       	sbc	r26, r20
    1f90:	b5 0b       	sbc	r27, r21
    1f92:	84 83       	std	Z+4, r24	; 0x04
    1f94:	95 83       	std	Z+5, r25	; 0x05
    1f96:	a6 83       	std	Z+6, r26	; 0x06
    1f98:	b7 83       	std	Z+7, r27	; 0x07
    1f9a:	0d c0       	rjmp	.+26     	; 0x1fb6 <_fpadd_parts+0x20e>
    1f9c:	22 0f       	add	r18, r18
    1f9e:	33 1f       	adc	r19, r19
    1fa0:	44 1f       	adc	r20, r20
    1fa2:	55 1f       	adc	r21, r21
    1fa4:	24 83       	std	Z+4, r18	; 0x04
    1fa6:	35 83       	std	Z+5, r19	; 0x05
    1fa8:	46 83       	std	Z+6, r20	; 0x06
    1faa:	57 83       	std	Z+7, r21	; 0x07
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	01 97       	sbiw	r24, 0x01	; 1
    1fb2:	93 83       	std	Z+3, r25	; 0x03
    1fb4:	82 83       	std	Z+2, r24	; 0x02
    1fb6:	24 81       	ldd	r18, Z+4	; 0x04
    1fb8:	35 81       	ldd	r19, Z+5	; 0x05
    1fba:	46 81       	ldd	r20, Z+6	; 0x06
    1fbc:	57 81       	ldd	r21, Z+7	; 0x07
    1fbe:	da 01       	movw	r26, r20
    1fc0:	c9 01       	movw	r24, r18
    1fc2:	01 97       	sbiw	r24, 0x01	; 1
    1fc4:	a1 09       	sbc	r26, r1
    1fc6:	b1 09       	sbc	r27, r1
    1fc8:	8f 5f       	subi	r24, 0xFF	; 255
    1fca:	9f 4f       	sbci	r25, 0xFF	; 255
    1fcc:	af 4f       	sbci	r26, 0xFF	; 255
    1fce:	bf 43       	sbci	r27, 0x3F	; 63
    1fd0:	28 f3       	brcs	.-54     	; 0x1f9c <_fpadd_parts+0x1f4>
    1fd2:	0b c0       	rjmp	.+22     	; 0x1fea <_fpadd_parts+0x242>
    1fd4:	91 83       	std	Z+1, r25	; 0x01
    1fd6:	33 82       	std	Z+3, r3	; 0x03
    1fd8:	22 82       	std	Z+2, r2	; 0x02
    1fda:	ea 0c       	add	r14, r10
    1fdc:	fb 1c       	adc	r15, r11
    1fde:	0c 1d       	adc	r16, r12
    1fe0:	1d 1d       	adc	r17, r13
    1fe2:	e4 82       	std	Z+4, r14	; 0x04
    1fe4:	f5 82       	std	Z+5, r15	; 0x05
    1fe6:	06 83       	std	Z+6, r16	; 0x06
    1fe8:	17 83       	std	Z+7, r17	; 0x07
    1fea:	83 e0       	ldi	r24, 0x03	; 3
    1fec:	80 83       	st	Z, r24
    1fee:	24 81       	ldd	r18, Z+4	; 0x04
    1ff0:	35 81       	ldd	r19, Z+5	; 0x05
    1ff2:	46 81       	ldd	r20, Z+6	; 0x06
    1ff4:	57 81       	ldd	r21, Z+7	; 0x07
    1ff6:	57 ff       	sbrs	r21, 7
    1ff8:	1a c0       	rjmp	.+52     	; 0x202e <_fpadd_parts+0x286>
    1ffa:	c9 01       	movw	r24, r18
    1ffc:	aa 27       	eor	r26, r26
    1ffe:	97 fd       	sbrc	r25, 7
    2000:	a0 95       	com	r26
    2002:	ba 2f       	mov	r27, r26
    2004:	81 70       	andi	r24, 0x01	; 1
    2006:	90 70       	andi	r25, 0x00	; 0
    2008:	a0 70       	andi	r26, 0x00	; 0
    200a:	b0 70       	andi	r27, 0x00	; 0
    200c:	56 95       	lsr	r21
    200e:	47 95       	ror	r20
    2010:	37 95       	ror	r19
    2012:	27 95       	ror	r18
    2014:	82 2b       	or	r24, r18
    2016:	93 2b       	or	r25, r19
    2018:	a4 2b       	or	r26, r20
    201a:	b5 2b       	or	r27, r21
    201c:	84 83       	std	Z+4, r24	; 0x04
    201e:	95 83       	std	Z+5, r25	; 0x05
    2020:	a6 83       	std	Z+6, r26	; 0x06
    2022:	b7 83       	std	Z+7, r27	; 0x07
    2024:	82 81       	ldd	r24, Z+2	; 0x02
    2026:	93 81       	ldd	r25, Z+3	; 0x03
    2028:	01 96       	adiw	r24, 0x01	; 1
    202a:	93 83       	std	Z+3, r25	; 0x03
    202c:	82 83       	std	Z+2, r24	; 0x02
    202e:	df 01       	movw	r26, r30
    2030:	01 c0       	rjmp	.+2      	; 0x2034 <_fpadd_parts+0x28c>
    2032:	d2 01       	movw	r26, r4
    2034:	cd 01       	movw	r24, r26
    2036:	cd b7       	in	r28, 0x3d	; 61
    2038:	de b7       	in	r29, 0x3e	; 62
    203a:	e2 e1       	ldi	r30, 0x12	; 18
    203c:	0c 94 7f 30 	jmp	0x60fe	; 0x60fe <__epilogue_restores__>

00002040 <__subsf3>:
    2040:	a0 e2       	ldi	r26, 0x20	; 32
    2042:	b0 e0       	ldi	r27, 0x00	; 0
    2044:	e6 e2       	ldi	r30, 0x26	; 38
    2046:	f0 e1       	ldi	r31, 0x10	; 16
    2048:	0c 94 6f 30 	jmp	0x60de	; 0x60de <__prologue_saves__+0x18>
    204c:	69 83       	std	Y+1, r22	; 0x01
    204e:	7a 83       	std	Y+2, r23	; 0x02
    2050:	8b 83       	std	Y+3, r24	; 0x03
    2052:	9c 83       	std	Y+4, r25	; 0x04
    2054:	2d 83       	std	Y+5, r18	; 0x05
    2056:	3e 83       	std	Y+6, r19	; 0x06
    2058:	4f 83       	std	Y+7, r20	; 0x07
    205a:	58 87       	std	Y+8, r21	; 0x08
    205c:	e9 e0       	ldi	r30, 0x09	; 9
    205e:	ee 2e       	mov	r14, r30
    2060:	f1 2c       	mov	r15, r1
    2062:	ec 0e       	add	r14, r28
    2064:	fd 1e       	adc	r15, r29
    2066:	ce 01       	movw	r24, r28
    2068:	01 96       	adiw	r24, 0x01	; 1
    206a:	b7 01       	movw	r22, r14
    206c:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2070:	8e 01       	movw	r16, r28
    2072:	0f 5e       	subi	r16, 0xEF	; 239
    2074:	1f 4f       	sbci	r17, 0xFF	; 255
    2076:	ce 01       	movw	r24, r28
    2078:	05 96       	adiw	r24, 0x05	; 5
    207a:	b8 01       	movw	r22, r16
    207c:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2080:	8a 89       	ldd	r24, Y+18	; 0x12
    2082:	91 e0       	ldi	r25, 0x01	; 1
    2084:	89 27       	eor	r24, r25
    2086:	8a 8b       	std	Y+18, r24	; 0x12
    2088:	c7 01       	movw	r24, r14
    208a:	b8 01       	movw	r22, r16
    208c:	ae 01       	movw	r20, r28
    208e:	47 5e       	subi	r20, 0xE7	; 231
    2090:	5f 4f       	sbci	r21, 0xFF	; 255
    2092:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <_fpadd_parts>
    2096:	0e 94 08 13 	call	0x2610	; 0x2610 <__pack_f>
    209a:	a0 96       	adiw	r28, 0x20	; 32
    209c:	e6 e0       	ldi	r30, 0x06	; 6
    209e:	0c 94 8b 30 	jmp	0x6116	; 0x6116 <__epilogue_restores__+0x18>

000020a2 <__addsf3>:
    20a2:	a0 e2       	ldi	r26, 0x20	; 32
    20a4:	b0 e0       	ldi	r27, 0x00	; 0
    20a6:	e7 e5       	ldi	r30, 0x57	; 87
    20a8:	f0 e1       	ldi	r31, 0x10	; 16
    20aa:	0c 94 6f 30 	jmp	0x60de	; 0x60de <__prologue_saves__+0x18>
    20ae:	69 83       	std	Y+1, r22	; 0x01
    20b0:	7a 83       	std	Y+2, r23	; 0x02
    20b2:	8b 83       	std	Y+3, r24	; 0x03
    20b4:	9c 83       	std	Y+4, r25	; 0x04
    20b6:	2d 83       	std	Y+5, r18	; 0x05
    20b8:	3e 83       	std	Y+6, r19	; 0x06
    20ba:	4f 83       	std	Y+7, r20	; 0x07
    20bc:	58 87       	std	Y+8, r21	; 0x08
    20be:	f9 e0       	ldi	r31, 0x09	; 9
    20c0:	ef 2e       	mov	r14, r31
    20c2:	f1 2c       	mov	r15, r1
    20c4:	ec 0e       	add	r14, r28
    20c6:	fd 1e       	adc	r15, r29
    20c8:	ce 01       	movw	r24, r28
    20ca:	01 96       	adiw	r24, 0x01	; 1
    20cc:	b7 01       	movw	r22, r14
    20ce:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    20d2:	8e 01       	movw	r16, r28
    20d4:	0f 5e       	subi	r16, 0xEF	; 239
    20d6:	1f 4f       	sbci	r17, 0xFF	; 255
    20d8:	ce 01       	movw	r24, r28
    20da:	05 96       	adiw	r24, 0x05	; 5
    20dc:	b8 01       	movw	r22, r16
    20de:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    20e2:	c7 01       	movw	r24, r14
    20e4:	b8 01       	movw	r22, r16
    20e6:	ae 01       	movw	r20, r28
    20e8:	47 5e       	subi	r20, 0xE7	; 231
    20ea:	5f 4f       	sbci	r21, 0xFF	; 255
    20ec:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <_fpadd_parts>
    20f0:	0e 94 08 13 	call	0x2610	; 0x2610 <__pack_f>
    20f4:	a0 96       	adiw	r28, 0x20	; 32
    20f6:	e6 e0       	ldi	r30, 0x06	; 6
    20f8:	0c 94 8b 30 	jmp	0x6116	; 0x6116 <__epilogue_restores__+0x18>

000020fc <__mulsf3>:
    20fc:	a0 e2       	ldi	r26, 0x20	; 32
    20fe:	b0 e0       	ldi	r27, 0x00	; 0
    2100:	e4 e8       	ldi	r30, 0x84	; 132
    2102:	f0 e1       	ldi	r31, 0x10	; 16
    2104:	0c 94 63 30 	jmp	0x60c6	; 0x60c6 <__prologue_saves__>
    2108:	69 83       	std	Y+1, r22	; 0x01
    210a:	7a 83       	std	Y+2, r23	; 0x02
    210c:	8b 83       	std	Y+3, r24	; 0x03
    210e:	9c 83       	std	Y+4, r25	; 0x04
    2110:	2d 83       	std	Y+5, r18	; 0x05
    2112:	3e 83       	std	Y+6, r19	; 0x06
    2114:	4f 83       	std	Y+7, r20	; 0x07
    2116:	58 87       	std	Y+8, r21	; 0x08
    2118:	ce 01       	movw	r24, r28
    211a:	01 96       	adiw	r24, 0x01	; 1
    211c:	be 01       	movw	r22, r28
    211e:	67 5f       	subi	r22, 0xF7	; 247
    2120:	7f 4f       	sbci	r23, 0xFF	; 255
    2122:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2126:	ce 01       	movw	r24, r28
    2128:	05 96       	adiw	r24, 0x05	; 5
    212a:	be 01       	movw	r22, r28
    212c:	6f 5e       	subi	r22, 0xEF	; 239
    212e:	7f 4f       	sbci	r23, 0xFF	; 255
    2130:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2134:	99 85       	ldd	r25, Y+9	; 0x09
    2136:	92 30       	cpi	r25, 0x02	; 2
    2138:	88 f0       	brcs	.+34     	; 0x215c <__mulsf3+0x60>
    213a:	89 89       	ldd	r24, Y+17	; 0x11
    213c:	82 30       	cpi	r24, 0x02	; 2
    213e:	c8 f0       	brcs	.+50     	; 0x2172 <__mulsf3+0x76>
    2140:	94 30       	cpi	r25, 0x04	; 4
    2142:	19 f4       	brne	.+6      	; 0x214a <__mulsf3+0x4e>
    2144:	82 30       	cpi	r24, 0x02	; 2
    2146:	51 f4       	brne	.+20     	; 0x215c <__mulsf3+0x60>
    2148:	04 c0       	rjmp	.+8      	; 0x2152 <__mulsf3+0x56>
    214a:	84 30       	cpi	r24, 0x04	; 4
    214c:	29 f4       	brne	.+10     	; 0x2158 <__mulsf3+0x5c>
    214e:	92 30       	cpi	r25, 0x02	; 2
    2150:	81 f4       	brne	.+32     	; 0x2172 <__mulsf3+0x76>
    2152:	80 e8       	ldi	r24, 0x80	; 128
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	c6 c0       	rjmp	.+396    	; 0x22e4 <__mulsf3+0x1e8>
    2158:	92 30       	cpi	r25, 0x02	; 2
    215a:	49 f4       	brne	.+18     	; 0x216e <__mulsf3+0x72>
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2160:	8a 89       	ldd	r24, Y+18	; 0x12
    2162:	98 13       	cpse	r25, r24
    2164:	21 e0       	ldi	r18, 0x01	; 1
    2166:	2a 87       	std	Y+10, r18	; 0x0a
    2168:	ce 01       	movw	r24, r28
    216a:	09 96       	adiw	r24, 0x09	; 9
    216c:	bb c0       	rjmp	.+374    	; 0x22e4 <__mulsf3+0x1e8>
    216e:	82 30       	cpi	r24, 0x02	; 2
    2170:	49 f4       	brne	.+18     	; 0x2184 <__mulsf3+0x88>
    2172:	20 e0       	ldi	r18, 0x00	; 0
    2174:	9a 85       	ldd	r25, Y+10	; 0x0a
    2176:	8a 89       	ldd	r24, Y+18	; 0x12
    2178:	98 13       	cpse	r25, r24
    217a:	21 e0       	ldi	r18, 0x01	; 1
    217c:	2a 8b       	std	Y+18, r18	; 0x12
    217e:	ce 01       	movw	r24, r28
    2180:	41 96       	adiw	r24, 0x11	; 17
    2182:	b0 c0       	rjmp	.+352    	; 0x22e4 <__mulsf3+0x1e8>
    2184:	2d 84       	ldd	r2, Y+13	; 0x0d
    2186:	3e 84       	ldd	r3, Y+14	; 0x0e
    2188:	4f 84       	ldd	r4, Y+15	; 0x0f
    218a:	58 88       	ldd	r5, Y+16	; 0x10
    218c:	6d 88       	ldd	r6, Y+21	; 0x15
    218e:	7e 88       	ldd	r7, Y+22	; 0x16
    2190:	8f 88       	ldd	r8, Y+23	; 0x17
    2192:	98 8c       	ldd	r9, Y+24	; 0x18
    2194:	ee 24       	eor	r14, r14
    2196:	ff 24       	eor	r15, r15
    2198:	87 01       	movw	r16, r14
    219a:	aa 24       	eor	r10, r10
    219c:	bb 24       	eor	r11, r11
    219e:	65 01       	movw	r12, r10
    21a0:	40 e0       	ldi	r20, 0x00	; 0
    21a2:	50 e0       	ldi	r21, 0x00	; 0
    21a4:	60 e0       	ldi	r22, 0x00	; 0
    21a6:	70 e0       	ldi	r23, 0x00	; 0
    21a8:	e0 e0       	ldi	r30, 0x00	; 0
    21aa:	f0 e0       	ldi	r31, 0x00	; 0
    21ac:	c1 01       	movw	r24, r2
    21ae:	81 70       	andi	r24, 0x01	; 1
    21b0:	90 70       	andi	r25, 0x00	; 0
    21b2:	89 2b       	or	r24, r25
    21b4:	e9 f0       	breq	.+58     	; 0x21f0 <__mulsf3+0xf4>
    21b6:	e6 0c       	add	r14, r6
    21b8:	f7 1c       	adc	r15, r7
    21ba:	08 1d       	adc	r16, r8
    21bc:	19 1d       	adc	r17, r9
    21be:	9a 01       	movw	r18, r20
    21c0:	ab 01       	movw	r20, r22
    21c2:	2a 0d       	add	r18, r10
    21c4:	3b 1d       	adc	r19, r11
    21c6:	4c 1d       	adc	r20, r12
    21c8:	5d 1d       	adc	r21, r13
    21ca:	80 e0       	ldi	r24, 0x00	; 0
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	a0 e0       	ldi	r26, 0x00	; 0
    21d0:	b0 e0       	ldi	r27, 0x00	; 0
    21d2:	e6 14       	cp	r14, r6
    21d4:	f7 04       	cpc	r15, r7
    21d6:	08 05       	cpc	r16, r8
    21d8:	19 05       	cpc	r17, r9
    21da:	20 f4       	brcc	.+8      	; 0x21e4 <__mulsf3+0xe8>
    21dc:	81 e0       	ldi	r24, 0x01	; 1
    21de:	90 e0       	ldi	r25, 0x00	; 0
    21e0:	a0 e0       	ldi	r26, 0x00	; 0
    21e2:	b0 e0       	ldi	r27, 0x00	; 0
    21e4:	ba 01       	movw	r22, r20
    21e6:	a9 01       	movw	r20, r18
    21e8:	48 0f       	add	r20, r24
    21ea:	59 1f       	adc	r21, r25
    21ec:	6a 1f       	adc	r22, r26
    21ee:	7b 1f       	adc	r23, r27
    21f0:	aa 0c       	add	r10, r10
    21f2:	bb 1c       	adc	r11, r11
    21f4:	cc 1c       	adc	r12, r12
    21f6:	dd 1c       	adc	r13, r13
    21f8:	97 fe       	sbrs	r9, 7
    21fa:	08 c0       	rjmp	.+16     	; 0x220c <__mulsf3+0x110>
    21fc:	81 e0       	ldi	r24, 0x01	; 1
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	a0 e0       	ldi	r26, 0x00	; 0
    2202:	b0 e0       	ldi	r27, 0x00	; 0
    2204:	a8 2a       	or	r10, r24
    2206:	b9 2a       	or	r11, r25
    2208:	ca 2a       	or	r12, r26
    220a:	db 2a       	or	r13, r27
    220c:	31 96       	adiw	r30, 0x01	; 1
    220e:	e0 32       	cpi	r30, 0x20	; 32
    2210:	f1 05       	cpc	r31, r1
    2212:	49 f0       	breq	.+18     	; 0x2226 <__mulsf3+0x12a>
    2214:	66 0c       	add	r6, r6
    2216:	77 1c       	adc	r7, r7
    2218:	88 1c       	adc	r8, r8
    221a:	99 1c       	adc	r9, r9
    221c:	56 94       	lsr	r5
    221e:	47 94       	ror	r4
    2220:	37 94       	ror	r3
    2222:	27 94       	ror	r2
    2224:	c3 cf       	rjmp	.-122    	; 0x21ac <__mulsf3+0xb0>
    2226:	fa 85       	ldd	r31, Y+10	; 0x0a
    2228:	ea 89       	ldd	r30, Y+18	; 0x12
    222a:	2b 89       	ldd	r18, Y+19	; 0x13
    222c:	3c 89       	ldd	r19, Y+20	; 0x14
    222e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2230:	9c 85       	ldd	r25, Y+12	; 0x0c
    2232:	28 0f       	add	r18, r24
    2234:	39 1f       	adc	r19, r25
    2236:	2e 5f       	subi	r18, 0xFE	; 254
    2238:	3f 4f       	sbci	r19, 0xFF	; 255
    223a:	17 c0       	rjmp	.+46     	; 0x226a <__mulsf3+0x16e>
    223c:	ca 01       	movw	r24, r20
    223e:	81 70       	andi	r24, 0x01	; 1
    2240:	90 70       	andi	r25, 0x00	; 0
    2242:	89 2b       	or	r24, r25
    2244:	61 f0       	breq	.+24     	; 0x225e <__mulsf3+0x162>
    2246:	16 95       	lsr	r17
    2248:	07 95       	ror	r16
    224a:	f7 94       	ror	r15
    224c:	e7 94       	ror	r14
    224e:	80 e0       	ldi	r24, 0x00	; 0
    2250:	90 e0       	ldi	r25, 0x00	; 0
    2252:	a0 e0       	ldi	r26, 0x00	; 0
    2254:	b0 e8       	ldi	r27, 0x80	; 128
    2256:	e8 2a       	or	r14, r24
    2258:	f9 2a       	or	r15, r25
    225a:	0a 2b       	or	r16, r26
    225c:	1b 2b       	or	r17, r27
    225e:	76 95       	lsr	r23
    2260:	67 95       	ror	r22
    2262:	57 95       	ror	r21
    2264:	47 95       	ror	r20
    2266:	2f 5f       	subi	r18, 0xFF	; 255
    2268:	3f 4f       	sbci	r19, 0xFF	; 255
    226a:	77 fd       	sbrc	r23, 7
    226c:	e7 cf       	rjmp	.-50     	; 0x223c <__mulsf3+0x140>
    226e:	0c c0       	rjmp	.+24     	; 0x2288 <__mulsf3+0x18c>
    2270:	44 0f       	add	r20, r20
    2272:	55 1f       	adc	r21, r21
    2274:	66 1f       	adc	r22, r22
    2276:	77 1f       	adc	r23, r23
    2278:	17 fd       	sbrc	r17, 7
    227a:	41 60       	ori	r20, 0x01	; 1
    227c:	ee 0c       	add	r14, r14
    227e:	ff 1c       	adc	r15, r15
    2280:	00 1f       	adc	r16, r16
    2282:	11 1f       	adc	r17, r17
    2284:	21 50       	subi	r18, 0x01	; 1
    2286:	30 40       	sbci	r19, 0x00	; 0
    2288:	40 30       	cpi	r20, 0x00	; 0
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	59 07       	cpc	r21, r25
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	69 07       	cpc	r22, r25
    2292:	90 e4       	ldi	r25, 0x40	; 64
    2294:	79 07       	cpc	r23, r25
    2296:	60 f3       	brcs	.-40     	; 0x2270 <__mulsf3+0x174>
    2298:	2b 8f       	std	Y+27, r18	; 0x1b
    229a:	3c 8f       	std	Y+28, r19	; 0x1c
    229c:	db 01       	movw	r26, r22
    229e:	ca 01       	movw	r24, r20
    22a0:	8f 77       	andi	r24, 0x7F	; 127
    22a2:	90 70       	andi	r25, 0x00	; 0
    22a4:	a0 70       	andi	r26, 0x00	; 0
    22a6:	b0 70       	andi	r27, 0x00	; 0
    22a8:	80 34       	cpi	r24, 0x40	; 64
    22aa:	91 05       	cpc	r25, r1
    22ac:	a1 05       	cpc	r26, r1
    22ae:	b1 05       	cpc	r27, r1
    22b0:	61 f4       	brne	.+24     	; 0x22ca <__mulsf3+0x1ce>
    22b2:	47 fd       	sbrc	r20, 7
    22b4:	0a c0       	rjmp	.+20     	; 0x22ca <__mulsf3+0x1ce>
    22b6:	e1 14       	cp	r14, r1
    22b8:	f1 04       	cpc	r15, r1
    22ba:	01 05       	cpc	r16, r1
    22bc:	11 05       	cpc	r17, r1
    22be:	29 f0       	breq	.+10     	; 0x22ca <__mulsf3+0x1ce>
    22c0:	40 5c       	subi	r20, 0xC0	; 192
    22c2:	5f 4f       	sbci	r21, 0xFF	; 255
    22c4:	6f 4f       	sbci	r22, 0xFF	; 255
    22c6:	7f 4f       	sbci	r23, 0xFF	; 255
    22c8:	40 78       	andi	r20, 0x80	; 128
    22ca:	1a 8e       	std	Y+26, r1	; 0x1a
    22cc:	fe 17       	cp	r31, r30
    22ce:	11 f0       	breq	.+4      	; 0x22d4 <__mulsf3+0x1d8>
    22d0:	81 e0       	ldi	r24, 0x01	; 1
    22d2:	8a 8f       	std	Y+26, r24	; 0x1a
    22d4:	4d 8f       	std	Y+29, r20	; 0x1d
    22d6:	5e 8f       	std	Y+30, r21	; 0x1e
    22d8:	6f 8f       	std	Y+31, r22	; 0x1f
    22da:	78 a3       	std	Y+32, r23	; 0x20
    22dc:	83 e0       	ldi	r24, 0x03	; 3
    22de:	89 8f       	std	Y+25, r24	; 0x19
    22e0:	ce 01       	movw	r24, r28
    22e2:	49 96       	adiw	r24, 0x19	; 25
    22e4:	0e 94 08 13 	call	0x2610	; 0x2610 <__pack_f>
    22e8:	a0 96       	adiw	r28, 0x20	; 32
    22ea:	e2 e1       	ldi	r30, 0x12	; 18
    22ec:	0c 94 7f 30 	jmp	0x60fe	; 0x60fe <__epilogue_restores__>

000022f0 <__divsf3>:
    22f0:	a8 e1       	ldi	r26, 0x18	; 24
    22f2:	b0 e0       	ldi	r27, 0x00	; 0
    22f4:	ee e7       	ldi	r30, 0x7E	; 126
    22f6:	f1 e1       	ldi	r31, 0x11	; 17
    22f8:	0c 94 6b 30 	jmp	0x60d6	; 0x60d6 <__prologue_saves__+0x10>
    22fc:	69 83       	std	Y+1, r22	; 0x01
    22fe:	7a 83       	std	Y+2, r23	; 0x02
    2300:	8b 83       	std	Y+3, r24	; 0x03
    2302:	9c 83       	std	Y+4, r25	; 0x04
    2304:	2d 83       	std	Y+5, r18	; 0x05
    2306:	3e 83       	std	Y+6, r19	; 0x06
    2308:	4f 83       	std	Y+7, r20	; 0x07
    230a:	58 87       	std	Y+8, r21	; 0x08
    230c:	b9 e0       	ldi	r27, 0x09	; 9
    230e:	eb 2e       	mov	r14, r27
    2310:	f1 2c       	mov	r15, r1
    2312:	ec 0e       	add	r14, r28
    2314:	fd 1e       	adc	r15, r29
    2316:	ce 01       	movw	r24, r28
    2318:	01 96       	adiw	r24, 0x01	; 1
    231a:	b7 01       	movw	r22, r14
    231c:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2320:	8e 01       	movw	r16, r28
    2322:	0f 5e       	subi	r16, 0xEF	; 239
    2324:	1f 4f       	sbci	r17, 0xFF	; 255
    2326:	ce 01       	movw	r24, r28
    2328:	05 96       	adiw	r24, 0x05	; 5
    232a:	b8 01       	movw	r22, r16
    232c:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2330:	29 85       	ldd	r18, Y+9	; 0x09
    2332:	22 30       	cpi	r18, 0x02	; 2
    2334:	08 f4       	brcc	.+2      	; 0x2338 <__divsf3+0x48>
    2336:	7e c0       	rjmp	.+252    	; 0x2434 <__divsf3+0x144>
    2338:	39 89       	ldd	r19, Y+17	; 0x11
    233a:	32 30       	cpi	r19, 0x02	; 2
    233c:	10 f4       	brcc	.+4      	; 0x2342 <__divsf3+0x52>
    233e:	b8 01       	movw	r22, r16
    2340:	7c c0       	rjmp	.+248    	; 0x243a <__divsf3+0x14a>
    2342:	8a 85       	ldd	r24, Y+10	; 0x0a
    2344:	9a 89       	ldd	r25, Y+18	; 0x12
    2346:	89 27       	eor	r24, r25
    2348:	8a 87       	std	Y+10, r24	; 0x0a
    234a:	24 30       	cpi	r18, 0x04	; 4
    234c:	11 f0       	breq	.+4      	; 0x2352 <__divsf3+0x62>
    234e:	22 30       	cpi	r18, 0x02	; 2
    2350:	31 f4       	brne	.+12     	; 0x235e <__divsf3+0x6e>
    2352:	23 17       	cp	r18, r19
    2354:	09 f0       	breq	.+2      	; 0x2358 <__divsf3+0x68>
    2356:	6e c0       	rjmp	.+220    	; 0x2434 <__divsf3+0x144>
    2358:	60 e8       	ldi	r22, 0x80	; 128
    235a:	70 e0       	ldi	r23, 0x00	; 0
    235c:	6e c0       	rjmp	.+220    	; 0x243a <__divsf3+0x14a>
    235e:	34 30       	cpi	r19, 0x04	; 4
    2360:	39 f4       	brne	.+14     	; 0x2370 <__divsf3+0x80>
    2362:	1d 86       	std	Y+13, r1	; 0x0d
    2364:	1e 86       	std	Y+14, r1	; 0x0e
    2366:	1f 86       	std	Y+15, r1	; 0x0f
    2368:	18 8a       	std	Y+16, r1	; 0x10
    236a:	1c 86       	std	Y+12, r1	; 0x0c
    236c:	1b 86       	std	Y+11, r1	; 0x0b
    236e:	04 c0       	rjmp	.+8      	; 0x2378 <__divsf3+0x88>
    2370:	32 30       	cpi	r19, 0x02	; 2
    2372:	21 f4       	brne	.+8      	; 0x237c <__divsf3+0x8c>
    2374:	84 e0       	ldi	r24, 0x04	; 4
    2376:	89 87       	std	Y+9, r24	; 0x09
    2378:	b7 01       	movw	r22, r14
    237a:	5f c0       	rjmp	.+190    	; 0x243a <__divsf3+0x14a>
    237c:	2b 85       	ldd	r18, Y+11	; 0x0b
    237e:	3c 85       	ldd	r19, Y+12	; 0x0c
    2380:	8b 89       	ldd	r24, Y+19	; 0x13
    2382:	9c 89       	ldd	r25, Y+20	; 0x14
    2384:	28 1b       	sub	r18, r24
    2386:	39 0b       	sbc	r19, r25
    2388:	3c 87       	std	Y+12, r19	; 0x0c
    238a:	2b 87       	std	Y+11, r18	; 0x0b
    238c:	ed 84       	ldd	r14, Y+13	; 0x0d
    238e:	fe 84       	ldd	r15, Y+14	; 0x0e
    2390:	0f 85       	ldd	r16, Y+15	; 0x0f
    2392:	18 89       	ldd	r17, Y+16	; 0x10
    2394:	ad 88       	ldd	r10, Y+21	; 0x15
    2396:	be 88       	ldd	r11, Y+22	; 0x16
    2398:	cf 88       	ldd	r12, Y+23	; 0x17
    239a:	d8 8c       	ldd	r13, Y+24	; 0x18
    239c:	ea 14       	cp	r14, r10
    239e:	fb 04       	cpc	r15, r11
    23a0:	0c 05       	cpc	r16, r12
    23a2:	1d 05       	cpc	r17, r13
    23a4:	40 f4       	brcc	.+16     	; 0x23b6 <__divsf3+0xc6>
    23a6:	ee 0c       	add	r14, r14
    23a8:	ff 1c       	adc	r15, r15
    23aa:	00 1f       	adc	r16, r16
    23ac:	11 1f       	adc	r17, r17
    23ae:	21 50       	subi	r18, 0x01	; 1
    23b0:	30 40       	sbci	r19, 0x00	; 0
    23b2:	3c 87       	std	Y+12, r19	; 0x0c
    23b4:	2b 87       	std	Y+11, r18	; 0x0b
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	40 e0       	ldi	r20, 0x00	; 0
    23bc:	50 e0       	ldi	r21, 0x00	; 0
    23be:	80 e0       	ldi	r24, 0x00	; 0
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	a0 e0       	ldi	r26, 0x00	; 0
    23c4:	b0 e4       	ldi	r27, 0x40	; 64
    23c6:	60 e0       	ldi	r22, 0x00	; 0
    23c8:	70 e0       	ldi	r23, 0x00	; 0
    23ca:	ea 14       	cp	r14, r10
    23cc:	fb 04       	cpc	r15, r11
    23ce:	0c 05       	cpc	r16, r12
    23d0:	1d 05       	cpc	r17, r13
    23d2:	40 f0       	brcs	.+16     	; 0x23e4 <__divsf3+0xf4>
    23d4:	28 2b       	or	r18, r24
    23d6:	39 2b       	or	r19, r25
    23d8:	4a 2b       	or	r20, r26
    23da:	5b 2b       	or	r21, r27
    23dc:	ea 18       	sub	r14, r10
    23de:	fb 08       	sbc	r15, r11
    23e0:	0c 09       	sbc	r16, r12
    23e2:	1d 09       	sbc	r17, r13
    23e4:	b6 95       	lsr	r27
    23e6:	a7 95       	ror	r26
    23e8:	97 95       	ror	r25
    23ea:	87 95       	ror	r24
    23ec:	ee 0c       	add	r14, r14
    23ee:	ff 1c       	adc	r15, r15
    23f0:	00 1f       	adc	r16, r16
    23f2:	11 1f       	adc	r17, r17
    23f4:	6f 5f       	subi	r22, 0xFF	; 255
    23f6:	7f 4f       	sbci	r23, 0xFF	; 255
    23f8:	6f 31       	cpi	r22, 0x1F	; 31
    23fa:	71 05       	cpc	r23, r1
    23fc:	31 f7       	brne	.-52     	; 0x23ca <__divsf3+0xda>
    23fe:	da 01       	movw	r26, r20
    2400:	c9 01       	movw	r24, r18
    2402:	8f 77       	andi	r24, 0x7F	; 127
    2404:	90 70       	andi	r25, 0x00	; 0
    2406:	a0 70       	andi	r26, 0x00	; 0
    2408:	b0 70       	andi	r27, 0x00	; 0
    240a:	80 34       	cpi	r24, 0x40	; 64
    240c:	91 05       	cpc	r25, r1
    240e:	a1 05       	cpc	r26, r1
    2410:	b1 05       	cpc	r27, r1
    2412:	61 f4       	brne	.+24     	; 0x242c <__divsf3+0x13c>
    2414:	27 fd       	sbrc	r18, 7
    2416:	0a c0       	rjmp	.+20     	; 0x242c <__divsf3+0x13c>
    2418:	e1 14       	cp	r14, r1
    241a:	f1 04       	cpc	r15, r1
    241c:	01 05       	cpc	r16, r1
    241e:	11 05       	cpc	r17, r1
    2420:	29 f0       	breq	.+10     	; 0x242c <__divsf3+0x13c>
    2422:	20 5c       	subi	r18, 0xC0	; 192
    2424:	3f 4f       	sbci	r19, 0xFF	; 255
    2426:	4f 4f       	sbci	r20, 0xFF	; 255
    2428:	5f 4f       	sbci	r21, 0xFF	; 255
    242a:	20 78       	andi	r18, 0x80	; 128
    242c:	2d 87       	std	Y+13, r18	; 0x0d
    242e:	3e 87       	std	Y+14, r19	; 0x0e
    2430:	4f 87       	std	Y+15, r20	; 0x0f
    2432:	58 8b       	std	Y+16, r21	; 0x10
    2434:	be 01       	movw	r22, r28
    2436:	67 5f       	subi	r22, 0xF7	; 247
    2438:	7f 4f       	sbci	r23, 0xFF	; 255
    243a:	cb 01       	movw	r24, r22
    243c:	0e 94 08 13 	call	0x2610	; 0x2610 <__pack_f>
    2440:	68 96       	adiw	r28, 0x18	; 24
    2442:	ea e0       	ldi	r30, 0x0A	; 10
    2444:	0c 94 87 30 	jmp	0x610e	; 0x610e <__epilogue_restores__+0x10>

00002448 <__gtsf2>:
    2448:	a8 e1       	ldi	r26, 0x18	; 24
    244a:	b0 e0       	ldi	r27, 0x00	; 0
    244c:	ea e2       	ldi	r30, 0x2A	; 42
    244e:	f2 e1       	ldi	r31, 0x12	; 18
    2450:	0c 94 6f 30 	jmp	0x60de	; 0x60de <__prologue_saves__+0x18>
    2454:	69 83       	std	Y+1, r22	; 0x01
    2456:	7a 83       	std	Y+2, r23	; 0x02
    2458:	8b 83       	std	Y+3, r24	; 0x03
    245a:	9c 83       	std	Y+4, r25	; 0x04
    245c:	2d 83       	std	Y+5, r18	; 0x05
    245e:	3e 83       	std	Y+6, r19	; 0x06
    2460:	4f 83       	std	Y+7, r20	; 0x07
    2462:	58 87       	std	Y+8, r21	; 0x08
    2464:	89 e0       	ldi	r24, 0x09	; 9
    2466:	e8 2e       	mov	r14, r24
    2468:	f1 2c       	mov	r15, r1
    246a:	ec 0e       	add	r14, r28
    246c:	fd 1e       	adc	r15, r29
    246e:	ce 01       	movw	r24, r28
    2470:	01 96       	adiw	r24, 0x01	; 1
    2472:	b7 01       	movw	r22, r14
    2474:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2478:	8e 01       	movw	r16, r28
    247a:	0f 5e       	subi	r16, 0xEF	; 239
    247c:	1f 4f       	sbci	r17, 0xFF	; 255
    247e:	ce 01       	movw	r24, r28
    2480:	05 96       	adiw	r24, 0x05	; 5
    2482:	b8 01       	movw	r22, r16
    2484:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2488:	89 85       	ldd	r24, Y+9	; 0x09
    248a:	82 30       	cpi	r24, 0x02	; 2
    248c:	40 f0       	brcs	.+16     	; 0x249e <__gtsf2+0x56>
    248e:	89 89       	ldd	r24, Y+17	; 0x11
    2490:	82 30       	cpi	r24, 0x02	; 2
    2492:	28 f0       	brcs	.+10     	; 0x249e <__gtsf2+0x56>
    2494:	c7 01       	movw	r24, r14
    2496:	b8 01       	movw	r22, r16
    2498:	0e 94 55 14 	call	0x28aa	; 0x28aa <__fpcmp_parts_f>
    249c:	01 c0       	rjmp	.+2      	; 0x24a0 <__gtsf2+0x58>
    249e:	8f ef       	ldi	r24, 0xFF	; 255
    24a0:	68 96       	adiw	r28, 0x18	; 24
    24a2:	e6 e0       	ldi	r30, 0x06	; 6
    24a4:	0c 94 8b 30 	jmp	0x6116	; 0x6116 <__epilogue_restores__+0x18>

000024a8 <__gesf2>:
    24a8:	a8 e1       	ldi	r26, 0x18	; 24
    24aa:	b0 e0       	ldi	r27, 0x00	; 0
    24ac:	ea e5       	ldi	r30, 0x5A	; 90
    24ae:	f2 e1       	ldi	r31, 0x12	; 18
    24b0:	0c 94 6f 30 	jmp	0x60de	; 0x60de <__prologue_saves__+0x18>
    24b4:	69 83       	std	Y+1, r22	; 0x01
    24b6:	7a 83       	std	Y+2, r23	; 0x02
    24b8:	8b 83       	std	Y+3, r24	; 0x03
    24ba:	9c 83       	std	Y+4, r25	; 0x04
    24bc:	2d 83       	std	Y+5, r18	; 0x05
    24be:	3e 83       	std	Y+6, r19	; 0x06
    24c0:	4f 83       	std	Y+7, r20	; 0x07
    24c2:	58 87       	std	Y+8, r21	; 0x08
    24c4:	89 e0       	ldi	r24, 0x09	; 9
    24c6:	e8 2e       	mov	r14, r24
    24c8:	f1 2c       	mov	r15, r1
    24ca:	ec 0e       	add	r14, r28
    24cc:	fd 1e       	adc	r15, r29
    24ce:	ce 01       	movw	r24, r28
    24d0:	01 96       	adiw	r24, 0x01	; 1
    24d2:	b7 01       	movw	r22, r14
    24d4:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    24d8:	8e 01       	movw	r16, r28
    24da:	0f 5e       	subi	r16, 0xEF	; 239
    24dc:	1f 4f       	sbci	r17, 0xFF	; 255
    24de:	ce 01       	movw	r24, r28
    24e0:	05 96       	adiw	r24, 0x05	; 5
    24e2:	b8 01       	movw	r22, r16
    24e4:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    24e8:	89 85       	ldd	r24, Y+9	; 0x09
    24ea:	82 30       	cpi	r24, 0x02	; 2
    24ec:	40 f0       	brcs	.+16     	; 0x24fe <__gesf2+0x56>
    24ee:	89 89       	ldd	r24, Y+17	; 0x11
    24f0:	82 30       	cpi	r24, 0x02	; 2
    24f2:	28 f0       	brcs	.+10     	; 0x24fe <__gesf2+0x56>
    24f4:	c7 01       	movw	r24, r14
    24f6:	b8 01       	movw	r22, r16
    24f8:	0e 94 55 14 	call	0x28aa	; 0x28aa <__fpcmp_parts_f>
    24fc:	01 c0       	rjmp	.+2      	; 0x2500 <__gesf2+0x58>
    24fe:	8f ef       	ldi	r24, 0xFF	; 255
    2500:	68 96       	adiw	r28, 0x18	; 24
    2502:	e6 e0       	ldi	r30, 0x06	; 6
    2504:	0c 94 8b 30 	jmp	0x6116	; 0x6116 <__epilogue_restores__+0x18>

00002508 <__ltsf2>:
    2508:	a8 e1       	ldi	r26, 0x18	; 24
    250a:	b0 e0       	ldi	r27, 0x00	; 0
    250c:	ea e8       	ldi	r30, 0x8A	; 138
    250e:	f2 e1       	ldi	r31, 0x12	; 18
    2510:	0c 94 6f 30 	jmp	0x60de	; 0x60de <__prologue_saves__+0x18>
    2514:	69 83       	std	Y+1, r22	; 0x01
    2516:	7a 83       	std	Y+2, r23	; 0x02
    2518:	8b 83       	std	Y+3, r24	; 0x03
    251a:	9c 83       	std	Y+4, r25	; 0x04
    251c:	2d 83       	std	Y+5, r18	; 0x05
    251e:	3e 83       	std	Y+6, r19	; 0x06
    2520:	4f 83       	std	Y+7, r20	; 0x07
    2522:	58 87       	std	Y+8, r21	; 0x08
    2524:	89 e0       	ldi	r24, 0x09	; 9
    2526:	e8 2e       	mov	r14, r24
    2528:	f1 2c       	mov	r15, r1
    252a:	ec 0e       	add	r14, r28
    252c:	fd 1e       	adc	r15, r29
    252e:	ce 01       	movw	r24, r28
    2530:	01 96       	adiw	r24, 0x01	; 1
    2532:	b7 01       	movw	r22, r14
    2534:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2538:	8e 01       	movw	r16, r28
    253a:	0f 5e       	subi	r16, 0xEF	; 239
    253c:	1f 4f       	sbci	r17, 0xFF	; 255
    253e:	ce 01       	movw	r24, r28
    2540:	05 96       	adiw	r24, 0x05	; 5
    2542:	b8 01       	movw	r22, r16
    2544:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    2548:	89 85       	ldd	r24, Y+9	; 0x09
    254a:	82 30       	cpi	r24, 0x02	; 2
    254c:	40 f0       	brcs	.+16     	; 0x255e <__ltsf2+0x56>
    254e:	89 89       	ldd	r24, Y+17	; 0x11
    2550:	82 30       	cpi	r24, 0x02	; 2
    2552:	28 f0       	brcs	.+10     	; 0x255e <__ltsf2+0x56>
    2554:	c7 01       	movw	r24, r14
    2556:	b8 01       	movw	r22, r16
    2558:	0e 94 55 14 	call	0x28aa	; 0x28aa <__fpcmp_parts_f>
    255c:	01 c0       	rjmp	.+2      	; 0x2560 <__ltsf2+0x58>
    255e:	81 e0       	ldi	r24, 0x01	; 1
    2560:	68 96       	adiw	r28, 0x18	; 24
    2562:	e6 e0       	ldi	r30, 0x06	; 6
    2564:	0c 94 8b 30 	jmp	0x6116	; 0x6116 <__epilogue_restores__+0x18>

00002568 <__fixsfsi>:
    2568:	ac e0       	ldi	r26, 0x0C	; 12
    256a:	b0 e0       	ldi	r27, 0x00	; 0
    256c:	ea eb       	ldi	r30, 0xBA	; 186
    256e:	f2 e1       	ldi	r31, 0x12	; 18
    2570:	0c 94 73 30 	jmp	0x60e6	; 0x60e6 <__prologue_saves__+0x20>
    2574:	69 83       	std	Y+1, r22	; 0x01
    2576:	7a 83       	std	Y+2, r23	; 0x02
    2578:	8b 83       	std	Y+3, r24	; 0x03
    257a:	9c 83       	std	Y+4, r25	; 0x04
    257c:	ce 01       	movw	r24, r28
    257e:	01 96       	adiw	r24, 0x01	; 1
    2580:	be 01       	movw	r22, r28
    2582:	6b 5f       	subi	r22, 0xFB	; 251
    2584:	7f 4f       	sbci	r23, 0xFF	; 255
    2586:	0e 94 dd 13 	call	0x27ba	; 0x27ba <__unpack_f>
    258a:	8d 81       	ldd	r24, Y+5	; 0x05
    258c:	82 30       	cpi	r24, 0x02	; 2
    258e:	61 f1       	breq	.+88     	; 0x25e8 <__fixsfsi+0x80>
    2590:	82 30       	cpi	r24, 0x02	; 2
    2592:	50 f1       	brcs	.+84     	; 0x25e8 <__fixsfsi+0x80>
    2594:	84 30       	cpi	r24, 0x04	; 4
    2596:	21 f4       	brne	.+8      	; 0x25a0 <__fixsfsi+0x38>
    2598:	8e 81       	ldd	r24, Y+6	; 0x06
    259a:	88 23       	and	r24, r24
    259c:	51 f1       	breq	.+84     	; 0x25f2 <__fixsfsi+0x8a>
    259e:	2e c0       	rjmp	.+92     	; 0x25fc <__fixsfsi+0x94>
    25a0:	2f 81       	ldd	r18, Y+7	; 0x07
    25a2:	38 85       	ldd	r19, Y+8	; 0x08
    25a4:	37 fd       	sbrc	r19, 7
    25a6:	20 c0       	rjmp	.+64     	; 0x25e8 <__fixsfsi+0x80>
    25a8:	6e 81       	ldd	r22, Y+6	; 0x06
    25aa:	2f 31       	cpi	r18, 0x1F	; 31
    25ac:	31 05       	cpc	r19, r1
    25ae:	1c f0       	brlt	.+6      	; 0x25b6 <__fixsfsi+0x4e>
    25b0:	66 23       	and	r22, r22
    25b2:	f9 f0       	breq	.+62     	; 0x25f2 <__fixsfsi+0x8a>
    25b4:	23 c0       	rjmp	.+70     	; 0x25fc <__fixsfsi+0x94>
    25b6:	8e e1       	ldi	r24, 0x1E	; 30
    25b8:	90 e0       	ldi	r25, 0x00	; 0
    25ba:	82 1b       	sub	r24, r18
    25bc:	93 0b       	sbc	r25, r19
    25be:	29 85       	ldd	r18, Y+9	; 0x09
    25c0:	3a 85       	ldd	r19, Y+10	; 0x0a
    25c2:	4b 85       	ldd	r20, Y+11	; 0x0b
    25c4:	5c 85       	ldd	r21, Y+12	; 0x0c
    25c6:	04 c0       	rjmp	.+8      	; 0x25d0 <__fixsfsi+0x68>
    25c8:	56 95       	lsr	r21
    25ca:	47 95       	ror	r20
    25cc:	37 95       	ror	r19
    25ce:	27 95       	ror	r18
    25d0:	8a 95       	dec	r24
    25d2:	d2 f7       	brpl	.-12     	; 0x25c8 <__fixsfsi+0x60>
    25d4:	66 23       	and	r22, r22
    25d6:	b1 f0       	breq	.+44     	; 0x2604 <__fixsfsi+0x9c>
    25d8:	50 95       	com	r21
    25da:	40 95       	com	r20
    25dc:	30 95       	com	r19
    25de:	21 95       	neg	r18
    25e0:	3f 4f       	sbci	r19, 0xFF	; 255
    25e2:	4f 4f       	sbci	r20, 0xFF	; 255
    25e4:	5f 4f       	sbci	r21, 0xFF	; 255
    25e6:	0e c0       	rjmp	.+28     	; 0x2604 <__fixsfsi+0x9c>
    25e8:	20 e0       	ldi	r18, 0x00	; 0
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	40 e0       	ldi	r20, 0x00	; 0
    25ee:	50 e0       	ldi	r21, 0x00	; 0
    25f0:	09 c0       	rjmp	.+18     	; 0x2604 <__fixsfsi+0x9c>
    25f2:	2f ef       	ldi	r18, 0xFF	; 255
    25f4:	3f ef       	ldi	r19, 0xFF	; 255
    25f6:	4f ef       	ldi	r20, 0xFF	; 255
    25f8:	5f e7       	ldi	r21, 0x7F	; 127
    25fa:	04 c0       	rjmp	.+8      	; 0x2604 <__fixsfsi+0x9c>
    25fc:	20 e0       	ldi	r18, 0x00	; 0
    25fe:	30 e0       	ldi	r19, 0x00	; 0
    2600:	40 e0       	ldi	r20, 0x00	; 0
    2602:	50 e8       	ldi	r21, 0x80	; 128
    2604:	b9 01       	movw	r22, r18
    2606:	ca 01       	movw	r24, r20
    2608:	2c 96       	adiw	r28, 0x0c	; 12
    260a:	e2 e0       	ldi	r30, 0x02	; 2
    260c:	0c 94 8f 30 	jmp	0x611e	; 0x611e <__epilogue_restores__+0x20>

00002610 <__pack_f>:
    2610:	df 92       	push	r13
    2612:	ef 92       	push	r14
    2614:	ff 92       	push	r15
    2616:	0f 93       	push	r16
    2618:	1f 93       	push	r17
    261a:	fc 01       	movw	r30, r24
    261c:	e4 80       	ldd	r14, Z+4	; 0x04
    261e:	f5 80       	ldd	r15, Z+5	; 0x05
    2620:	06 81       	ldd	r16, Z+6	; 0x06
    2622:	17 81       	ldd	r17, Z+7	; 0x07
    2624:	d1 80       	ldd	r13, Z+1	; 0x01
    2626:	80 81       	ld	r24, Z
    2628:	82 30       	cpi	r24, 0x02	; 2
    262a:	48 f4       	brcc	.+18     	; 0x263e <__pack_f+0x2e>
    262c:	80 e0       	ldi	r24, 0x00	; 0
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	a0 e1       	ldi	r26, 0x10	; 16
    2632:	b0 e0       	ldi	r27, 0x00	; 0
    2634:	e8 2a       	or	r14, r24
    2636:	f9 2a       	or	r15, r25
    2638:	0a 2b       	or	r16, r26
    263a:	1b 2b       	or	r17, r27
    263c:	a5 c0       	rjmp	.+330    	; 0x2788 <__pack_f+0x178>
    263e:	84 30       	cpi	r24, 0x04	; 4
    2640:	09 f4       	brne	.+2      	; 0x2644 <__pack_f+0x34>
    2642:	9f c0       	rjmp	.+318    	; 0x2782 <__pack_f+0x172>
    2644:	82 30       	cpi	r24, 0x02	; 2
    2646:	21 f4       	brne	.+8      	; 0x2650 <__pack_f+0x40>
    2648:	ee 24       	eor	r14, r14
    264a:	ff 24       	eor	r15, r15
    264c:	87 01       	movw	r16, r14
    264e:	05 c0       	rjmp	.+10     	; 0x265a <__pack_f+0x4a>
    2650:	e1 14       	cp	r14, r1
    2652:	f1 04       	cpc	r15, r1
    2654:	01 05       	cpc	r16, r1
    2656:	11 05       	cpc	r17, r1
    2658:	19 f4       	brne	.+6      	; 0x2660 <__pack_f+0x50>
    265a:	e0 e0       	ldi	r30, 0x00	; 0
    265c:	f0 e0       	ldi	r31, 0x00	; 0
    265e:	96 c0       	rjmp	.+300    	; 0x278c <__pack_f+0x17c>
    2660:	62 81       	ldd	r22, Z+2	; 0x02
    2662:	73 81       	ldd	r23, Z+3	; 0x03
    2664:	9f ef       	ldi	r25, 0xFF	; 255
    2666:	62 38       	cpi	r22, 0x82	; 130
    2668:	79 07       	cpc	r23, r25
    266a:	0c f0       	brlt	.+2      	; 0x266e <__pack_f+0x5e>
    266c:	5b c0       	rjmp	.+182    	; 0x2724 <__pack_f+0x114>
    266e:	22 e8       	ldi	r18, 0x82	; 130
    2670:	3f ef       	ldi	r19, 0xFF	; 255
    2672:	26 1b       	sub	r18, r22
    2674:	37 0b       	sbc	r19, r23
    2676:	2a 31       	cpi	r18, 0x1A	; 26
    2678:	31 05       	cpc	r19, r1
    267a:	2c f0       	brlt	.+10     	; 0x2686 <__pack_f+0x76>
    267c:	20 e0       	ldi	r18, 0x00	; 0
    267e:	30 e0       	ldi	r19, 0x00	; 0
    2680:	40 e0       	ldi	r20, 0x00	; 0
    2682:	50 e0       	ldi	r21, 0x00	; 0
    2684:	2a c0       	rjmp	.+84     	; 0x26da <__pack_f+0xca>
    2686:	b8 01       	movw	r22, r16
    2688:	a7 01       	movw	r20, r14
    268a:	02 2e       	mov	r0, r18
    268c:	04 c0       	rjmp	.+8      	; 0x2696 <__pack_f+0x86>
    268e:	76 95       	lsr	r23
    2690:	67 95       	ror	r22
    2692:	57 95       	ror	r21
    2694:	47 95       	ror	r20
    2696:	0a 94       	dec	r0
    2698:	d2 f7       	brpl	.-12     	; 0x268e <__pack_f+0x7e>
    269a:	81 e0       	ldi	r24, 0x01	; 1
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	a0 e0       	ldi	r26, 0x00	; 0
    26a0:	b0 e0       	ldi	r27, 0x00	; 0
    26a2:	04 c0       	rjmp	.+8      	; 0x26ac <__pack_f+0x9c>
    26a4:	88 0f       	add	r24, r24
    26a6:	99 1f       	adc	r25, r25
    26a8:	aa 1f       	adc	r26, r26
    26aa:	bb 1f       	adc	r27, r27
    26ac:	2a 95       	dec	r18
    26ae:	d2 f7       	brpl	.-12     	; 0x26a4 <__pack_f+0x94>
    26b0:	01 97       	sbiw	r24, 0x01	; 1
    26b2:	a1 09       	sbc	r26, r1
    26b4:	b1 09       	sbc	r27, r1
    26b6:	8e 21       	and	r24, r14
    26b8:	9f 21       	and	r25, r15
    26ba:	a0 23       	and	r26, r16
    26bc:	b1 23       	and	r27, r17
    26be:	00 97       	sbiw	r24, 0x00	; 0
    26c0:	a1 05       	cpc	r26, r1
    26c2:	b1 05       	cpc	r27, r1
    26c4:	21 f0       	breq	.+8      	; 0x26ce <__pack_f+0xbe>
    26c6:	81 e0       	ldi	r24, 0x01	; 1
    26c8:	90 e0       	ldi	r25, 0x00	; 0
    26ca:	a0 e0       	ldi	r26, 0x00	; 0
    26cc:	b0 e0       	ldi	r27, 0x00	; 0
    26ce:	9a 01       	movw	r18, r20
    26d0:	ab 01       	movw	r20, r22
    26d2:	28 2b       	or	r18, r24
    26d4:	39 2b       	or	r19, r25
    26d6:	4a 2b       	or	r20, r26
    26d8:	5b 2b       	or	r21, r27
    26da:	da 01       	movw	r26, r20
    26dc:	c9 01       	movw	r24, r18
    26de:	8f 77       	andi	r24, 0x7F	; 127
    26e0:	90 70       	andi	r25, 0x00	; 0
    26e2:	a0 70       	andi	r26, 0x00	; 0
    26e4:	b0 70       	andi	r27, 0x00	; 0
    26e6:	80 34       	cpi	r24, 0x40	; 64
    26e8:	91 05       	cpc	r25, r1
    26ea:	a1 05       	cpc	r26, r1
    26ec:	b1 05       	cpc	r27, r1
    26ee:	39 f4       	brne	.+14     	; 0x26fe <__pack_f+0xee>
    26f0:	27 ff       	sbrs	r18, 7
    26f2:	09 c0       	rjmp	.+18     	; 0x2706 <__pack_f+0xf6>
    26f4:	20 5c       	subi	r18, 0xC0	; 192
    26f6:	3f 4f       	sbci	r19, 0xFF	; 255
    26f8:	4f 4f       	sbci	r20, 0xFF	; 255
    26fa:	5f 4f       	sbci	r21, 0xFF	; 255
    26fc:	04 c0       	rjmp	.+8      	; 0x2706 <__pack_f+0xf6>
    26fe:	21 5c       	subi	r18, 0xC1	; 193
    2700:	3f 4f       	sbci	r19, 0xFF	; 255
    2702:	4f 4f       	sbci	r20, 0xFF	; 255
    2704:	5f 4f       	sbci	r21, 0xFF	; 255
    2706:	e0 e0       	ldi	r30, 0x00	; 0
    2708:	f0 e0       	ldi	r31, 0x00	; 0
    270a:	20 30       	cpi	r18, 0x00	; 0
    270c:	a0 e0       	ldi	r26, 0x00	; 0
    270e:	3a 07       	cpc	r19, r26
    2710:	a0 e0       	ldi	r26, 0x00	; 0
    2712:	4a 07       	cpc	r20, r26
    2714:	a0 e4       	ldi	r26, 0x40	; 64
    2716:	5a 07       	cpc	r21, r26
    2718:	10 f0       	brcs	.+4      	; 0x271e <__pack_f+0x10e>
    271a:	e1 e0       	ldi	r30, 0x01	; 1
    271c:	f0 e0       	ldi	r31, 0x00	; 0
    271e:	79 01       	movw	r14, r18
    2720:	8a 01       	movw	r16, r20
    2722:	27 c0       	rjmp	.+78     	; 0x2772 <__pack_f+0x162>
    2724:	60 38       	cpi	r22, 0x80	; 128
    2726:	71 05       	cpc	r23, r1
    2728:	64 f5       	brge	.+88     	; 0x2782 <__pack_f+0x172>
    272a:	fb 01       	movw	r30, r22
    272c:	e1 58       	subi	r30, 0x81	; 129
    272e:	ff 4f       	sbci	r31, 0xFF	; 255
    2730:	d8 01       	movw	r26, r16
    2732:	c7 01       	movw	r24, r14
    2734:	8f 77       	andi	r24, 0x7F	; 127
    2736:	90 70       	andi	r25, 0x00	; 0
    2738:	a0 70       	andi	r26, 0x00	; 0
    273a:	b0 70       	andi	r27, 0x00	; 0
    273c:	80 34       	cpi	r24, 0x40	; 64
    273e:	91 05       	cpc	r25, r1
    2740:	a1 05       	cpc	r26, r1
    2742:	b1 05       	cpc	r27, r1
    2744:	39 f4       	brne	.+14     	; 0x2754 <__pack_f+0x144>
    2746:	e7 fe       	sbrs	r14, 7
    2748:	0d c0       	rjmp	.+26     	; 0x2764 <__pack_f+0x154>
    274a:	80 e4       	ldi	r24, 0x40	; 64
    274c:	90 e0       	ldi	r25, 0x00	; 0
    274e:	a0 e0       	ldi	r26, 0x00	; 0
    2750:	b0 e0       	ldi	r27, 0x00	; 0
    2752:	04 c0       	rjmp	.+8      	; 0x275c <__pack_f+0x14c>
    2754:	8f e3       	ldi	r24, 0x3F	; 63
    2756:	90 e0       	ldi	r25, 0x00	; 0
    2758:	a0 e0       	ldi	r26, 0x00	; 0
    275a:	b0 e0       	ldi	r27, 0x00	; 0
    275c:	e8 0e       	add	r14, r24
    275e:	f9 1e       	adc	r15, r25
    2760:	0a 1f       	adc	r16, r26
    2762:	1b 1f       	adc	r17, r27
    2764:	17 ff       	sbrs	r17, 7
    2766:	05 c0       	rjmp	.+10     	; 0x2772 <__pack_f+0x162>
    2768:	16 95       	lsr	r17
    276a:	07 95       	ror	r16
    276c:	f7 94       	ror	r15
    276e:	e7 94       	ror	r14
    2770:	31 96       	adiw	r30, 0x01	; 1
    2772:	87 e0       	ldi	r24, 0x07	; 7
    2774:	16 95       	lsr	r17
    2776:	07 95       	ror	r16
    2778:	f7 94       	ror	r15
    277a:	e7 94       	ror	r14
    277c:	8a 95       	dec	r24
    277e:	d1 f7       	brne	.-12     	; 0x2774 <__pack_f+0x164>
    2780:	05 c0       	rjmp	.+10     	; 0x278c <__pack_f+0x17c>
    2782:	ee 24       	eor	r14, r14
    2784:	ff 24       	eor	r15, r15
    2786:	87 01       	movw	r16, r14
    2788:	ef ef       	ldi	r30, 0xFF	; 255
    278a:	f0 e0       	ldi	r31, 0x00	; 0
    278c:	6e 2f       	mov	r22, r30
    278e:	67 95       	ror	r22
    2790:	66 27       	eor	r22, r22
    2792:	67 95       	ror	r22
    2794:	90 2f       	mov	r25, r16
    2796:	9f 77       	andi	r25, 0x7F	; 127
    2798:	d7 94       	ror	r13
    279a:	dd 24       	eor	r13, r13
    279c:	d7 94       	ror	r13
    279e:	8e 2f       	mov	r24, r30
    27a0:	86 95       	lsr	r24
    27a2:	49 2f       	mov	r20, r25
    27a4:	46 2b       	or	r20, r22
    27a6:	58 2f       	mov	r21, r24
    27a8:	5d 29       	or	r21, r13
    27aa:	b7 01       	movw	r22, r14
    27ac:	ca 01       	movw	r24, r20
    27ae:	1f 91       	pop	r17
    27b0:	0f 91       	pop	r16
    27b2:	ff 90       	pop	r15
    27b4:	ef 90       	pop	r14
    27b6:	df 90       	pop	r13
    27b8:	08 95       	ret

000027ba <__unpack_f>:
    27ba:	fc 01       	movw	r30, r24
    27bc:	db 01       	movw	r26, r22
    27be:	40 81       	ld	r20, Z
    27c0:	51 81       	ldd	r21, Z+1	; 0x01
    27c2:	22 81       	ldd	r18, Z+2	; 0x02
    27c4:	62 2f       	mov	r22, r18
    27c6:	6f 77       	andi	r22, 0x7F	; 127
    27c8:	70 e0       	ldi	r23, 0x00	; 0
    27ca:	22 1f       	adc	r18, r18
    27cc:	22 27       	eor	r18, r18
    27ce:	22 1f       	adc	r18, r18
    27d0:	93 81       	ldd	r25, Z+3	; 0x03
    27d2:	89 2f       	mov	r24, r25
    27d4:	88 0f       	add	r24, r24
    27d6:	82 2b       	or	r24, r18
    27d8:	28 2f       	mov	r18, r24
    27da:	30 e0       	ldi	r19, 0x00	; 0
    27dc:	99 1f       	adc	r25, r25
    27de:	99 27       	eor	r25, r25
    27e0:	99 1f       	adc	r25, r25
    27e2:	11 96       	adiw	r26, 0x01	; 1
    27e4:	9c 93       	st	X, r25
    27e6:	11 97       	sbiw	r26, 0x01	; 1
    27e8:	21 15       	cp	r18, r1
    27ea:	31 05       	cpc	r19, r1
    27ec:	a9 f5       	brne	.+106    	; 0x2858 <__unpack_f+0x9e>
    27ee:	41 15       	cp	r20, r1
    27f0:	51 05       	cpc	r21, r1
    27f2:	61 05       	cpc	r22, r1
    27f4:	71 05       	cpc	r23, r1
    27f6:	11 f4       	brne	.+4      	; 0x27fc <__unpack_f+0x42>
    27f8:	82 e0       	ldi	r24, 0x02	; 2
    27fa:	37 c0       	rjmp	.+110    	; 0x286a <__unpack_f+0xb0>
    27fc:	82 e8       	ldi	r24, 0x82	; 130
    27fe:	9f ef       	ldi	r25, 0xFF	; 255
    2800:	13 96       	adiw	r26, 0x03	; 3
    2802:	9c 93       	st	X, r25
    2804:	8e 93       	st	-X, r24
    2806:	12 97       	sbiw	r26, 0x02	; 2
    2808:	9a 01       	movw	r18, r20
    280a:	ab 01       	movw	r20, r22
    280c:	67 e0       	ldi	r22, 0x07	; 7
    280e:	22 0f       	add	r18, r18
    2810:	33 1f       	adc	r19, r19
    2812:	44 1f       	adc	r20, r20
    2814:	55 1f       	adc	r21, r21
    2816:	6a 95       	dec	r22
    2818:	d1 f7       	brne	.-12     	; 0x280e <__unpack_f+0x54>
    281a:	83 e0       	ldi	r24, 0x03	; 3
    281c:	8c 93       	st	X, r24
    281e:	0d c0       	rjmp	.+26     	; 0x283a <__unpack_f+0x80>
    2820:	22 0f       	add	r18, r18
    2822:	33 1f       	adc	r19, r19
    2824:	44 1f       	adc	r20, r20
    2826:	55 1f       	adc	r21, r21
    2828:	12 96       	adiw	r26, 0x02	; 2
    282a:	8d 91       	ld	r24, X+
    282c:	9c 91       	ld	r25, X
    282e:	13 97       	sbiw	r26, 0x03	; 3
    2830:	01 97       	sbiw	r24, 0x01	; 1
    2832:	13 96       	adiw	r26, 0x03	; 3
    2834:	9c 93       	st	X, r25
    2836:	8e 93       	st	-X, r24
    2838:	12 97       	sbiw	r26, 0x02	; 2
    283a:	20 30       	cpi	r18, 0x00	; 0
    283c:	80 e0       	ldi	r24, 0x00	; 0
    283e:	38 07       	cpc	r19, r24
    2840:	80 e0       	ldi	r24, 0x00	; 0
    2842:	48 07       	cpc	r20, r24
    2844:	80 e4       	ldi	r24, 0x40	; 64
    2846:	58 07       	cpc	r21, r24
    2848:	58 f3       	brcs	.-42     	; 0x2820 <__unpack_f+0x66>
    284a:	14 96       	adiw	r26, 0x04	; 4
    284c:	2d 93       	st	X+, r18
    284e:	3d 93       	st	X+, r19
    2850:	4d 93       	st	X+, r20
    2852:	5c 93       	st	X, r21
    2854:	17 97       	sbiw	r26, 0x07	; 7
    2856:	08 95       	ret
    2858:	2f 3f       	cpi	r18, 0xFF	; 255
    285a:	31 05       	cpc	r19, r1
    285c:	79 f4       	brne	.+30     	; 0x287c <__unpack_f+0xc2>
    285e:	41 15       	cp	r20, r1
    2860:	51 05       	cpc	r21, r1
    2862:	61 05       	cpc	r22, r1
    2864:	71 05       	cpc	r23, r1
    2866:	19 f4       	brne	.+6      	; 0x286e <__unpack_f+0xb4>
    2868:	84 e0       	ldi	r24, 0x04	; 4
    286a:	8c 93       	st	X, r24
    286c:	08 95       	ret
    286e:	64 ff       	sbrs	r22, 4
    2870:	03 c0       	rjmp	.+6      	; 0x2878 <__unpack_f+0xbe>
    2872:	81 e0       	ldi	r24, 0x01	; 1
    2874:	8c 93       	st	X, r24
    2876:	12 c0       	rjmp	.+36     	; 0x289c <__unpack_f+0xe2>
    2878:	1c 92       	st	X, r1
    287a:	10 c0       	rjmp	.+32     	; 0x289c <__unpack_f+0xe2>
    287c:	2f 57       	subi	r18, 0x7F	; 127
    287e:	30 40       	sbci	r19, 0x00	; 0
    2880:	13 96       	adiw	r26, 0x03	; 3
    2882:	3c 93       	st	X, r19
    2884:	2e 93       	st	-X, r18
    2886:	12 97       	sbiw	r26, 0x02	; 2
    2888:	83 e0       	ldi	r24, 0x03	; 3
    288a:	8c 93       	st	X, r24
    288c:	87 e0       	ldi	r24, 0x07	; 7
    288e:	44 0f       	add	r20, r20
    2890:	55 1f       	adc	r21, r21
    2892:	66 1f       	adc	r22, r22
    2894:	77 1f       	adc	r23, r23
    2896:	8a 95       	dec	r24
    2898:	d1 f7       	brne	.-12     	; 0x288e <__unpack_f+0xd4>
    289a:	70 64       	ori	r23, 0x40	; 64
    289c:	14 96       	adiw	r26, 0x04	; 4
    289e:	4d 93       	st	X+, r20
    28a0:	5d 93       	st	X+, r21
    28a2:	6d 93       	st	X+, r22
    28a4:	7c 93       	st	X, r23
    28a6:	17 97       	sbiw	r26, 0x07	; 7
    28a8:	08 95       	ret

000028aa <__fpcmp_parts_f>:
    28aa:	1f 93       	push	r17
    28ac:	dc 01       	movw	r26, r24
    28ae:	fb 01       	movw	r30, r22
    28b0:	9c 91       	ld	r25, X
    28b2:	92 30       	cpi	r25, 0x02	; 2
    28b4:	08 f4       	brcc	.+2      	; 0x28b8 <__fpcmp_parts_f+0xe>
    28b6:	47 c0       	rjmp	.+142    	; 0x2946 <__fpcmp_parts_f+0x9c>
    28b8:	80 81       	ld	r24, Z
    28ba:	82 30       	cpi	r24, 0x02	; 2
    28bc:	08 f4       	brcc	.+2      	; 0x28c0 <__fpcmp_parts_f+0x16>
    28be:	43 c0       	rjmp	.+134    	; 0x2946 <__fpcmp_parts_f+0x9c>
    28c0:	94 30       	cpi	r25, 0x04	; 4
    28c2:	51 f4       	brne	.+20     	; 0x28d8 <__fpcmp_parts_f+0x2e>
    28c4:	11 96       	adiw	r26, 0x01	; 1
    28c6:	1c 91       	ld	r17, X
    28c8:	84 30       	cpi	r24, 0x04	; 4
    28ca:	99 f5       	brne	.+102    	; 0x2932 <__fpcmp_parts_f+0x88>
    28cc:	81 81       	ldd	r24, Z+1	; 0x01
    28ce:	68 2f       	mov	r22, r24
    28d0:	70 e0       	ldi	r23, 0x00	; 0
    28d2:	61 1b       	sub	r22, r17
    28d4:	71 09       	sbc	r23, r1
    28d6:	3f c0       	rjmp	.+126    	; 0x2956 <__fpcmp_parts_f+0xac>
    28d8:	84 30       	cpi	r24, 0x04	; 4
    28da:	21 f0       	breq	.+8      	; 0x28e4 <__fpcmp_parts_f+0x3a>
    28dc:	92 30       	cpi	r25, 0x02	; 2
    28de:	31 f4       	brne	.+12     	; 0x28ec <__fpcmp_parts_f+0x42>
    28e0:	82 30       	cpi	r24, 0x02	; 2
    28e2:	b9 f1       	breq	.+110    	; 0x2952 <__fpcmp_parts_f+0xa8>
    28e4:	81 81       	ldd	r24, Z+1	; 0x01
    28e6:	88 23       	and	r24, r24
    28e8:	89 f1       	breq	.+98     	; 0x294c <__fpcmp_parts_f+0xa2>
    28ea:	2d c0       	rjmp	.+90     	; 0x2946 <__fpcmp_parts_f+0x9c>
    28ec:	11 96       	adiw	r26, 0x01	; 1
    28ee:	1c 91       	ld	r17, X
    28f0:	11 97       	sbiw	r26, 0x01	; 1
    28f2:	82 30       	cpi	r24, 0x02	; 2
    28f4:	f1 f0       	breq	.+60     	; 0x2932 <__fpcmp_parts_f+0x88>
    28f6:	81 81       	ldd	r24, Z+1	; 0x01
    28f8:	18 17       	cp	r17, r24
    28fa:	d9 f4       	brne	.+54     	; 0x2932 <__fpcmp_parts_f+0x88>
    28fc:	12 96       	adiw	r26, 0x02	; 2
    28fe:	2d 91       	ld	r18, X+
    2900:	3c 91       	ld	r19, X
    2902:	13 97       	sbiw	r26, 0x03	; 3
    2904:	82 81       	ldd	r24, Z+2	; 0x02
    2906:	93 81       	ldd	r25, Z+3	; 0x03
    2908:	82 17       	cp	r24, r18
    290a:	93 07       	cpc	r25, r19
    290c:	94 f0       	brlt	.+36     	; 0x2932 <__fpcmp_parts_f+0x88>
    290e:	28 17       	cp	r18, r24
    2910:	39 07       	cpc	r19, r25
    2912:	bc f0       	brlt	.+46     	; 0x2942 <__fpcmp_parts_f+0x98>
    2914:	14 96       	adiw	r26, 0x04	; 4
    2916:	8d 91       	ld	r24, X+
    2918:	9d 91       	ld	r25, X+
    291a:	0d 90       	ld	r0, X+
    291c:	bc 91       	ld	r27, X
    291e:	a0 2d       	mov	r26, r0
    2920:	24 81       	ldd	r18, Z+4	; 0x04
    2922:	35 81       	ldd	r19, Z+5	; 0x05
    2924:	46 81       	ldd	r20, Z+6	; 0x06
    2926:	57 81       	ldd	r21, Z+7	; 0x07
    2928:	28 17       	cp	r18, r24
    292a:	39 07       	cpc	r19, r25
    292c:	4a 07       	cpc	r20, r26
    292e:	5b 07       	cpc	r21, r27
    2930:	18 f4       	brcc	.+6      	; 0x2938 <__fpcmp_parts_f+0x8e>
    2932:	11 23       	and	r17, r17
    2934:	41 f0       	breq	.+16     	; 0x2946 <__fpcmp_parts_f+0x9c>
    2936:	0a c0       	rjmp	.+20     	; 0x294c <__fpcmp_parts_f+0xa2>
    2938:	82 17       	cp	r24, r18
    293a:	93 07       	cpc	r25, r19
    293c:	a4 07       	cpc	r26, r20
    293e:	b5 07       	cpc	r27, r21
    2940:	40 f4       	brcc	.+16     	; 0x2952 <__fpcmp_parts_f+0xa8>
    2942:	11 23       	and	r17, r17
    2944:	19 f0       	breq	.+6      	; 0x294c <__fpcmp_parts_f+0xa2>
    2946:	61 e0       	ldi	r22, 0x01	; 1
    2948:	70 e0       	ldi	r23, 0x00	; 0
    294a:	05 c0       	rjmp	.+10     	; 0x2956 <__fpcmp_parts_f+0xac>
    294c:	6f ef       	ldi	r22, 0xFF	; 255
    294e:	7f ef       	ldi	r23, 0xFF	; 255
    2950:	02 c0       	rjmp	.+4      	; 0x2956 <__fpcmp_parts_f+0xac>
    2952:	60 e0       	ldi	r22, 0x00	; 0
    2954:	70 e0       	ldi	r23, 0x00	; 0
    2956:	cb 01       	movw	r24, r22
    2958:	1f 91       	pop	r17
    295a:	08 95       	ret

0000295c <DIO_VidSetPinDirection>:
#include"../LIB/STD_TYPES.h"
#include"../LIB/BIT_MATH.h"
#include"DIO_private.h"
#include"DIO_interface.h"

void DIO_VidSetPinDirection (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Dir ) {
    295c:	df 93       	push	r29
    295e:	cf 93       	push	r28
    2960:	cd b7       	in	r28, 0x3d	; 61
    2962:	de b7       	in	r29, 0x3e	; 62
    2964:	27 97       	sbiw	r28, 0x07	; 7
    2966:	0f b6       	in	r0, 0x3f	; 63
    2968:	f8 94       	cli
    296a:	de bf       	out	0x3e, r29	; 62
    296c:	0f be       	out	0x3f, r0	; 63
    296e:	cd bf       	out	0x3d, r28	; 61
    2970:	89 83       	std	Y+1, r24	; 0x01
    2972:	6a 83       	std	Y+2, r22	; 0x02
    2974:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Dir ){
    2976:	8b 81       	ldd	r24, Y+3	; 0x03
    2978:	81 30       	cpi	r24, 0x01	; 1
    297a:	09 f0       	breq	.+2      	; 0x297e <DIO_VidSetPinDirection+0x22>
    297c:	6f c0       	rjmp	.+222    	; 0x2a5c <DIO_VidSetPinDirection+0x100>
		switch (Copy_U8Port){
    297e:	89 81       	ldd	r24, Y+1	; 0x01
    2980:	28 2f       	mov	r18, r24
    2982:	30 e0       	ldi	r19, 0x00	; 0
    2984:	3f 83       	std	Y+7, r19	; 0x07
    2986:	2e 83       	std	Y+6, r18	; 0x06
    2988:	8e 81       	ldd	r24, Y+6	; 0x06
    298a:	9f 81       	ldd	r25, Y+7	; 0x07
    298c:	81 30       	cpi	r24, 0x01	; 1
    298e:	91 05       	cpc	r25, r1
    2990:	49 f1       	breq	.+82     	; 0x29e4 <DIO_VidSetPinDirection+0x88>
    2992:	2e 81       	ldd	r18, Y+6	; 0x06
    2994:	3f 81       	ldd	r19, Y+7	; 0x07
    2996:	22 30       	cpi	r18, 0x02	; 2
    2998:	31 05       	cpc	r19, r1
    299a:	2c f4       	brge	.+10     	; 0x29a6 <DIO_VidSetPinDirection+0x4a>
    299c:	8e 81       	ldd	r24, Y+6	; 0x06
    299e:	9f 81       	ldd	r25, Y+7	; 0x07
    29a0:	00 97       	sbiw	r24, 0x00	; 0
    29a2:	61 f0       	breq	.+24     	; 0x29bc <DIO_VidSetPinDirection+0x60>
    29a4:	d2 c0       	rjmp	.+420    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
    29a6:	2e 81       	ldd	r18, Y+6	; 0x06
    29a8:	3f 81       	ldd	r19, Y+7	; 0x07
    29aa:	22 30       	cpi	r18, 0x02	; 2
    29ac:	31 05       	cpc	r19, r1
    29ae:	71 f1       	breq	.+92     	; 0x2a0c <DIO_VidSetPinDirection+0xb0>
    29b0:	8e 81       	ldd	r24, Y+6	; 0x06
    29b2:	9f 81       	ldd	r25, Y+7	; 0x07
    29b4:	83 30       	cpi	r24, 0x03	; 3
    29b6:	91 05       	cpc	r25, r1
    29b8:	e9 f1       	breq	.+122    	; 0x2a34 <DIO_VidSetPinDirection+0xd8>
    29ba:	c7 c0       	rjmp	.+398    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    SET_BIT(DDRA,Copy_U8Pin);
    29bc:	aa e3       	ldi	r26, 0x3A	; 58
    29be:	b0 e0       	ldi	r27, 0x00	; 0
    29c0:	ea e3       	ldi	r30, 0x3A	; 58
    29c2:	f0 e0       	ldi	r31, 0x00	; 0
    29c4:	80 81       	ld	r24, Z
    29c6:	48 2f       	mov	r20, r24
    29c8:	8a 81       	ldd	r24, Y+2	; 0x02
    29ca:	28 2f       	mov	r18, r24
    29cc:	30 e0       	ldi	r19, 0x00	; 0
    29ce:	81 e0       	ldi	r24, 0x01	; 1
    29d0:	90 e0       	ldi	r25, 0x00	; 0
    29d2:	02 2e       	mov	r0, r18
    29d4:	02 c0       	rjmp	.+4      	; 0x29da <DIO_VidSetPinDirection+0x7e>
    29d6:	88 0f       	add	r24, r24
    29d8:	99 1f       	adc	r25, r25
    29da:	0a 94       	dec	r0
    29dc:	e2 f7       	brpl	.-8      	; 0x29d6 <DIO_VidSetPinDirection+0x7a>
    29de:	84 2b       	or	r24, r20
    29e0:	8c 93       	st	X, r24
    29e2:	b3 c0       	rjmp	.+358    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(DDRB,Copy_U8Pin);
    29e4:	a7 e3       	ldi	r26, 0x37	; 55
    29e6:	b0 e0       	ldi	r27, 0x00	; 0
    29e8:	e7 e3       	ldi	r30, 0x37	; 55
    29ea:	f0 e0       	ldi	r31, 0x00	; 0
    29ec:	80 81       	ld	r24, Z
    29ee:	48 2f       	mov	r20, r24
    29f0:	8a 81       	ldd	r24, Y+2	; 0x02
    29f2:	28 2f       	mov	r18, r24
    29f4:	30 e0       	ldi	r19, 0x00	; 0
    29f6:	81 e0       	ldi	r24, 0x01	; 1
    29f8:	90 e0       	ldi	r25, 0x00	; 0
    29fa:	02 2e       	mov	r0, r18
    29fc:	02 c0       	rjmp	.+4      	; 0x2a02 <DIO_VidSetPinDirection+0xa6>
    29fe:	88 0f       	add	r24, r24
    2a00:	99 1f       	adc	r25, r25
    2a02:	0a 94       	dec	r0
    2a04:	e2 f7       	brpl	.-8      	; 0x29fe <DIO_VidSetPinDirection+0xa2>
    2a06:	84 2b       	or	r24, r20
    2a08:	8c 93       	st	X, r24
    2a0a:	9f c0       	rjmp	.+318    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(DDRC,Copy_U8Pin);
    2a0c:	a4 e3       	ldi	r26, 0x34	; 52
    2a0e:	b0 e0       	ldi	r27, 0x00	; 0
    2a10:	e4 e3       	ldi	r30, 0x34	; 52
    2a12:	f0 e0       	ldi	r31, 0x00	; 0
    2a14:	80 81       	ld	r24, Z
    2a16:	48 2f       	mov	r20, r24
    2a18:	8a 81       	ldd	r24, Y+2	; 0x02
    2a1a:	28 2f       	mov	r18, r24
    2a1c:	30 e0       	ldi	r19, 0x00	; 0
    2a1e:	81 e0       	ldi	r24, 0x01	; 1
    2a20:	90 e0       	ldi	r25, 0x00	; 0
    2a22:	02 2e       	mov	r0, r18
    2a24:	02 c0       	rjmp	.+4      	; 0x2a2a <DIO_VidSetPinDirection+0xce>
    2a26:	88 0f       	add	r24, r24
    2a28:	99 1f       	adc	r25, r25
    2a2a:	0a 94       	dec	r0
    2a2c:	e2 f7       	brpl	.-8      	; 0x2a26 <DIO_VidSetPinDirection+0xca>
    2a2e:	84 2b       	or	r24, r20
    2a30:	8c 93       	st	X, r24
    2a32:	8b c0       	rjmp	.+278    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(DDRD,Copy_U8Pin);
    2a34:	a1 e3       	ldi	r26, 0x31	; 49
    2a36:	b0 e0       	ldi	r27, 0x00	; 0
    2a38:	e1 e3       	ldi	r30, 0x31	; 49
    2a3a:	f0 e0       	ldi	r31, 0x00	; 0
    2a3c:	80 81       	ld	r24, Z
    2a3e:	48 2f       	mov	r20, r24
    2a40:	8a 81       	ldd	r24, Y+2	; 0x02
    2a42:	28 2f       	mov	r18, r24
    2a44:	30 e0       	ldi	r19, 0x00	; 0
    2a46:	81 e0       	ldi	r24, 0x01	; 1
    2a48:	90 e0       	ldi	r25, 0x00	; 0
    2a4a:	02 2e       	mov	r0, r18
    2a4c:	02 c0       	rjmp	.+4      	; 0x2a52 <DIO_VidSetPinDirection+0xf6>
    2a4e:	88 0f       	add	r24, r24
    2a50:	99 1f       	adc	r25, r25
    2a52:	0a 94       	dec	r0
    2a54:	e2 f7       	brpl	.-8      	; 0x2a4e <DIO_VidSetPinDirection+0xf2>
    2a56:	84 2b       	or	r24, r20
    2a58:	8c 93       	st	X, r24
    2a5a:	77 c0       	rjmp	.+238    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Dir ) {
    2a5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2a5e:	88 23       	and	r24, r24
    2a60:	09 f0       	breq	.+2      	; 0x2a64 <DIO_VidSetPinDirection+0x108>
    2a62:	73 c0       	rjmp	.+230    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
		switch (Copy_U8Port){
    2a64:	89 81       	ldd	r24, Y+1	; 0x01
    2a66:	28 2f       	mov	r18, r24
    2a68:	30 e0       	ldi	r19, 0x00	; 0
    2a6a:	3d 83       	std	Y+5, r19	; 0x05
    2a6c:	2c 83       	std	Y+4, r18	; 0x04
    2a6e:	8c 81       	ldd	r24, Y+4	; 0x04
    2a70:	9d 81       	ldd	r25, Y+5	; 0x05
    2a72:	81 30       	cpi	r24, 0x01	; 1
    2a74:	91 05       	cpc	r25, r1
    2a76:	59 f1       	breq	.+86     	; 0x2ace <DIO_VidSetPinDirection+0x172>
    2a78:	2c 81       	ldd	r18, Y+4	; 0x04
    2a7a:	3d 81       	ldd	r19, Y+5	; 0x05
    2a7c:	22 30       	cpi	r18, 0x02	; 2
    2a7e:	31 05       	cpc	r19, r1
    2a80:	2c f4       	brge	.+10     	; 0x2a8c <DIO_VidSetPinDirection+0x130>
    2a82:	8c 81       	ldd	r24, Y+4	; 0x04
    2a84:	9d 81       	ldd	r25, Y+5	; 0x05
    2a86:	00 97       	sbiw	r24, 0x00	; 0
    2a88:	69 f0       	breq	.+26     	; 0x2aa4 <DIO_VidSetPinDirection+0x148>
    2a8a:	5f c0       	rjmp	.+190    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
    2a8c:	2c 81       	ldd	r18, Y+4	; 0x04
    2a8e:	3d 81       	ldd	r19, Y+5	; 0x05
    2a90:	22 30       	cpi	r18, 0x02	; 2
    2a92:	31 05       	cpc	r19, r1
    2a94:	89 f1       	breq	.+98     	; 0x2af8 <DIO_VidSetPinDirection+0x19c>
    2a96:	8c 81       	ldd	r24, Y+4	; 0x04
    2a98:	9d 81       	ldd	r25, Y+5	; 0x05
    2a9a:	83 30       	cpi	r24, 0x03	; 3
    2a9c:	91 05       	cpc	r25, r1
    2a9e:	09 f4       	brne	.+2      	; 0x2aa2 <DIO_VidSetPinDirection+0x146>
    2aa0:	40 c0       	rjmp	.+128    	; 0x2b22 <DIO_VidSetPinDirection+0x1c6>
    2aa2:	53 c0       	rjmp	.+166    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    CLR_BIT(DDRA,Copy_U8Pin);
    2aa4:	aa e3       	ldi	r26, 0x3A	; 58
    2aa6:	b0 e0       	ldi	r27, 0x00	; 0
    2aa8:	ea e3       	ldi	r30, 0x3A	; 58
    2aaa:	f0 e0       	ldi	r31, 0x00	; 0
    2aac:	80 81       	ld	r24, Z
    2aae:	48 2f       	mov	r20, r24
    2ab0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ab2:	28 2f       	mov	r18, r24
    2ab4:	30 e0       	ldi	r19, 0x00	; 0
    2ab6:	81 e0       	ldi	r24, 0x01	; 1
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	02 2e       	mov	r0, r18
    2abc:	02 c0       	rjmp	.+4      	; 0x2ac2 <DIO_VidSetPinDirection+0x166>
    2abe:	88 0f       	add	r24, r24
    2ac0:	99 1f       	adc	r25, r25
    2ac2:	0a 94       	dec	r0
    2ac4:	e2 f7       	brpl	.-8      	; 0x2abe <DIO_VidSetPinDirection+0x162>
    2ac6:	80 95       	com	r24
    2ac8:	84 23       	and	r24, r20
    2aca:	8c 93       	st	X, r24
    2acc:	3e c0       	rjmp	.+124    	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(DDRB,Copy_U8Pin);
    2ace:	a7 e3       	ldi	r26, 0x37	; 55
    2ad0:	b0 e0       	ldi	r27, 0x00	; 0
    2ad2:	e7 e3       	ldi	r30, 0x37	; 55
    2ad4:	f0 e0       	ldi	r31, 0x00	; 0
    2ad6:	80 81       	ld	r24, Z
    2ad8:	48 2f       	mov	r20, r24
    2ada:	8a 81       	ldd	r24, Y+2	; 0x02
    2adc:	28 2f       	mov	r18, r24
    2ade:	30 e0       	ldi	r19, 0x00	; 0
    2ae0:	81 e0       	ldi	r24, 0x01	; 1
    2ae2:	90 e0       	ldi	r25, 0x00	; 0
    2ae4:	02 2e       	mov	r0, r18
    2ae6:	02 c0       	rjmp	.+4      	; 0x2aec <DIO_VidSetPinDirection+0x190>
    2ae8:	88 0f       	add	r24, r24
    2aea:	99 1f       	adc	r25, r25
    2aec:	0a 94       	dec	r0
    2aee:	e2 f7       	brpl	.-8      	; 0x2ae8 <DIO_VidSetPinDirection+0x18c>
    2af0:	80 95       	com	r24
    2af2:	84 23       	and	r24, r20
    2af4:	8c 93       	st	X, r24
    2af6:	29 c0       	rjmp	.+82     	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(DDRC,Copy_U8Pin);
    2af8:	a4 e3       	ldi	r26, 0x34	; 52
    2afa:	b0 e0       	ldi	r27, 0x00	; 0
    2afc:	e4 e3       	ldi	r30, 0x34	; 52
    2afe:	f0 e0       	ldi	r31, 0x00	; 0
    2b00:	80 81       	ld	r24, Z
    2b02:	48 2f       	mov	r20, r24
    2b04:	8a 81       	ldd	r24, Y+2	; 0x02
    2b06:	28 2f       	mov	r18, r24
    2b08:	30 e0       	ldi	r19, 0x00	; 0
    2b0a:	81 e0       	ldi	r24, 0x01	; 1
    2b0c:	90 e0       	ldi	r25, 0x00	; 0
    2b0e:	02 2e       	mov	r0, r18
    2b10:	02 c0       	rjmp	.+4      	; 0x2b16 <DIO_VidSetPinDirection+0x1ba>
    2b12:	88 0f       	add	r24, r24
    2b14:	99 1f       	adc	r25, r25
    2b16:	0a 94       	dec	r0
    2b18:	e2 f7       	brpl	.-8      	; 0x2b12 <DIO_VidSetPinDirection+0x1b6>
    2b1a:	80 95       	com	r24
    2b1c:	84 23       	and	r24, r20
    2b1e:	8c 93       	st	X, r24
    2b20:	14 c0       	rjmp	.+40     	; 0x2b4a <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(DDRD,Copy_U8Pin);
    2b22:	a1 e3       	ldi	r26, 0x31	; 49
    2b24:	b0 e0       	ldi	r27, 0x00	; 0
    2b26:	e1 e3       	ldi	r30, 0x31	; 49
    2b28:	f0 e0       	ldi	r31, 0x00	; 0
    2b2a:	80 81       	ld	r24, Z
    2b2c:	48 2f       	mov	r20, r24
    2b2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b30:	28 2f       	mov	r18, r24
    2b32:	30 e0       	ldi	r19, 0x00	; 0
    2b34:	81 e0       	ldi	r24, 0x01	; 1
    2b36:	90 e0       	ldi	r25, 0x00	; 0
    2b38:	02 2e       	mov	r0, r18
    2b3a:	02 c0       	rjmp	.+4      	; 0x2b40 <DIO_VidSetPinDirection+0x1e4>
    2b3c:	88 0f       	add	r24, r24
    2b3e:	99 1f       	adc	r25, r25
    2b40:	0a 94       	dec	r0
    2b42:	e2 f7       	brpl	.-8      	; 0x2b3c <DIO_VidSetPinDirection+0x1e0>
    2b44:	80 95       	com	r24
    2b46:	84 23       	and	r24, r20
    2b48:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if 
}//end FUNC DIO_VidSetPinDirection
    2b4a:	27 96       	adiw	r28, 0x07	; 7
    2b4c:	0f b6       	in	r0, 0x3f	; 63
    2b4e:	f8 94       	cli
    2b50:	de bf       	out	0x3e, r29	; 62
    2b52:	0f be       	out	0x3f, r0	; 63
    2b54:	cd bf       	out	0x3d, r28	; 61
    2b56:	cf 91       	pop	r28
    2b58:	df 91       	pop	r29
    2b5a:	08 95       	ret

00002b5c <DIO_VidSetPortDirection>:
void DIO_VidSetPortDirection (u8 Copy_U8Port , u8 Copy_U8Dir ) {
    2b5c:	df 93       	push	r29
    2b5e:	cf 93       	push	r28
    2b60:	00 d0       	rcall	.+0      	; 0x2b62 <DIO_VidSetPortDirection+0x6>
    2b62:	00 d0       	rcall	.+0      	; 0x2b64 <DIO_VidSetPortDirection+0x8>
    2b64:	cd b7       	in	r28, 0x3d	; 61
    2b66:	de b7       	in	r29, 0x3e	; 62
    2b68:	89 83       	std	Y+1, r24	; 0x01
    2b6a:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2b6c:	89 81       	ldd	r24, Y+1	; 0x01
    2b6e:	28 2f       	mov	r18, r24
    2b70:	30 e0       	ldi	r19, 0x00	; 0
    2b72:	3c 83       	std	Y+4, r19	; 0x04
    2b74:	2b 83       	std	Y+3, r18	; 0x03
    2b76:	8b 81       	ldd	r24, Y+3	; 0x03
    2b78:	9c 81       	ldd	r25, Y+4	; 0x04
    2b7a:	81 30       	cpi	r24, 0x01	; 1
    2b7c:	91 05       	cpc	r25, r1
    2b7e:	d1 f0       	breq	.+52     	; 0x2bb4 <DIO_VidSetPortDirection+0x58>
    2b80:	2b 81       	ldd	r18, Y+3	; 0x03
    2b82:	3c 81       	ldd	r19, Y+4	; 0x04
    2b84:	22 30       	cpi	r18, 0x02	; 2
    2b86:	31 05       	cpc	r19, r1
    2b88:	2c f4       	brge	.+10     	; 0x2b94 <DIO_VidSetPortDirection+0x38>
    2b8a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b8c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b8e:	00 97       	sbiw	r24, 0x00	; 0
    2b90:	61 f0       	breq	.+24     	; 0x2baa <DIO_VidSetPortDirection+0x4e>
    2b92:	1e c0       	rjmp	.+60     	; 0x2bd0 <DIO_VidSetPortDirection+0x74>
    2b94:	2b 81       	ldd	r18, Y+3	; 0x03
    2b96:	3c 81       	ldd	r19, Y+4	; 0x04
    2b98:	22 30       	cpi	r18, 0x02	; 2
    2b9a:	31 05       	cpc	r19, r1
    2b9c:	81 f0       	breq	.+32     	; 0x2bbe <DIO_VidSetPortDirection+0x62>
    2b9e:	8b 81       	ldd	r24, Y+3	; 0x03
    2ba0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ba2:	83 30       	cpi	r24, 0x03	; 3
    2ba4:	91 05       	cpc	r25, r1
    2ba6:	81 f0       	breq	.+32     	; 0x2bc8 <DIO_VidSetPortDirection+0x6c>
    2ba8:	13 c0       	rjmp	.+38     	; 0x2bd0 <DIO_VidSetPortDirection+0x74>
		case 0 : 
			DDRA = Copy_U8Dir ;
    2baa:	ea e3       	ldi	r30, 0x3A	; 58
    2bac:	f0 e0       	ldi	r31, 0x00	; 0
    2bae:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb0:	80 83       	st	Z, r24
    2bb2:	0e c0       	rjmp	.+28     	; 0x2bd0 <DIO_VidSetPortDirection+0x74>
			break ;  
		case 1 : 
			DDRB = Copy_U8Dir ;
    2bb4:	e7 e3       	ldi	r30, 0x37	; 55
    2bb6:	f0 e0       	ldi	r31, 0x00	; 0
    2bb8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bba:	80 83       	st	Z, r24
    2bbc:	09 c0       	rjmp	.+18     	; 0x2bd0 <DIO_VidSetPortDirection+0x74>
			break ;			
		case 2 : 
			DDRC = Copy_U8Dir ;
    2bbe:	e4 e3       	ldi	r30, 0x34	; 52
    2bc0:	f0 e0       	ldi	r31, 0x00	; 0
    2bc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2bc4:	80 83       	st	Z, r24
    2bc6:	04 c0       	rjmp	.+8      	; 0x2bd0 <DIO_VidSetPortDirection+0x74>
			break ;  
		case 3 : 
			DDRD = Copy_U8Dir ;
    2bc8:	e1 e3       	ldi	r30, 0x31	; 49
    2bca:	f0 e0       	ldi	r31, 0x00	; 0
    2bcc:	8a 81       	ldd	r24, Y+2	; 0x02
    2bce:	80 83       	st	Z, r24
			break ; 
		}//end switch
}// end FUNC DIO_VidSetPortDirection
    2bd0:	0f 90       	pop	r0
    2bd2:	0f 90       	pop	r0
    2bd4:	0f 90       	pop	r0
    2bd6:	0f 90       	pop	r0
    2bd8:	cf 91       	pop	r28
    2bda:	df 91       	pop	r29
    2bdc:	08 95       	ret

00002bde <DIO_VidSetPinValue>:
void DIO_VidSetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Val ) {
    2bde:	df 93       	push	r29
    2be0:	cf 93       	push	r28
    2be2:	cd b7       	in	r28, 0x3d	; 61
    2be4:	de b7       	in	r29, 0x3e	; 62
    2be6:	27 97       	sbiw	r28, 0x07	; 7
    2be8:	0f b6       	in	r0, 0x3f	; 63
    2bea:	f8 94       	cli
    2bec:	de bf       	out	0x3e, r29	; 62
    2bee:	0f be       	out	0x3f, r0	; 63
    2bf0:	cd bf       	out	0x3d, r28	; 61
    2bf2:	89 83       	std	Y+1, r24	; 0x01
    2bf4:	6a 83       	std	Y+2, r22	; 0x02
    2bf6:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Val ){
    2bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bfa:	81 30       	cpi	r24, 0x01	; 1
    2bfc:	09 f0       	breq	.+2      	; 0x2c00 <DIO_VidSetPinValue+0x22>
    2bfe:	6f c0       	rjmp	.+222    	; 0x2cde <DIO_VidSetPinValue+0x100>
		switch (Copy_U8Port){
    2c00:	89 81       	ldd	r24, Y+1	; 0x01
    2c02:	28 2f       	mov	r18, r24
    2c04:	30 e0       	ldi	r19, 0x00	; 0
    2c06:	3f 83       	std	Y+7, r19	; 0x07
    2c08:	2e 83       	std	Y+6, r18	; 0x06
    2c0a:	8e 81       	ldd	r24, Y+6	; 0x06
    2c0c:	9f 81       	ldd	r25, Y+7	; 0x07
    2c0e:	81 30       	cpi	r24, 0x01	; 1
    2c10:	91 05       	cpc	r25, r1
    2c12:	49 f1       	breq	.+82     	; 0x2c66 <DIO_VidSetPinValue+0x88>
    2c14:	2e 81       	ldd	r18, Y+6	; 0x06
    2c16:	3f 81       	ldd	r19, Y+7	; 0x07
    2c18:	22 30       	cpi	r18, 0x02	; 2
    2c1a:	31 05       	cpc	r19, r1
    2c1c:	2c f4       	brge	.+10     	; 0x2c28 <DIO_VidSetPinValue+0x4a>
    2c1e:	8e 81       	ldd	r24, Y+6	; 0x06
    2c20:	9f 81       	ldd	r25, Y+7	; 0x07
    2c22:	00 97       	sbiw	r24, 0x00	; 0
    2c24:	61 f0       	breq	.+24     	; 0x2c3e <DIO_VidSetPinValue+0x60>
    2c26:	d2 c0       	rjmp	.+420    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
    2c28:	2e 81       	ldd	r18, Y+6	; 0x06
    2c2a:	3f 81       	ldd	r19, Y+7	; 0x07
    2c2c:	22 30       	cpi	r18, 0x02	; 2
    2c2e:	31 05       	cpc	r19, r1
    2c30:	71 f1       	breq	.+92     	; 0x2c8e <DIO_VidSetPinValue+0xb0>
    2c32:	8e 81       	ldd	r24, Y+6	; 0x06
    2c34:	9f 81       	ldd	r25, Y+7	; 0x07
    2c36:	83 30       	cpi	r24, 0x03	; 3
    2c38:	91 05       	cpc	r25, r1
    2c3a:	e9 f1       	breq	.+122    	; 0x2cb6 <DIO_VidSetPinValue+0xd8>
    2c3c:	c7 c0       	rjmp	.+398    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    SET_BIT(PORTA,Copy_U8Pin);
    2c3e:	ab e3       	ldi	r26, 0x3B	; 59
    2c40:	b0 e0       	ldi	r27, 0x00	; 0
    2c42:	eb e3       	ldi	r30, 0x3B	; 59
    2c44:	f0 e0       	ldi	r31, 0x00	; 0
    2c46:	80 81       	ld	r24, Z
    2c48:	48 2f       	mov	r20, r24
    2c4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c4c:	28 2f       	mov	r18, r24
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	81 e0       	ldi	r24, 0x01	; 1
    2c52:	90 e0       	ldi	r25, 0x00	; 0
    2c54:	02 2e       	mov	r0, r18
    2c56:	02 c0       	rjmp	.+4      	; 0x2c5c <DIO_VidSetPinValue+0x7e>
    2c58:	88 0f       	add	r24, r24
    2c5a:	99 1f       	adc	r25, r25
    2c5c:	0a 94       	dec	r0
    2c5e:	e2 f7       	brpl	.-8      	; 0x2c58 <DIO_VidSetPinValue+0x7a>
    2c60:	84 2b       	or	r24, r20
    2c62:	8c 93       	st	X, r24
    2c64:	b3 c0       	rjmp	.+358    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(PORTB,Copy_U8Pin);
    2c66:	a8 e3       	ldi	r26, 0x38	; 56
    2c68:	b0 e0       	ldi	r27, 0x00	; 0
    2c6a:	e8 e3       	ldi	r30, 0x38	; 56
    2c6c:	f0 e0       	ldi	r31, 0x00	; 0
    2c6e:	80 81       	ld	r24, Z
    2c70:	48 2f       	mov	r20, r24
    2c72:	8a 81       	ldd	r24, Y+2	; 0x02
    2c74:	28 2f       	mov	r18, r24
    2c76:	30 e0       	ldi	r19, 0x00	; 0
    2c78:	81 e0       	ldi	r24, 0x01	; 1
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	02 2e       	mov	r0, r18
    2c7e:	02 c0       	rjmp	.+4      	; 0x2c84 <DIO_VidSetPinValue+0xa6>
    2c80:	88 0f       	add	r24, r24
    2c82:	99 1f       	adc	r25, r25
    2c84:	0a 94       	dec	r0
    2c86:	e2 f7       	brpl	.-8      	; 0x2c80 <DIO_VidSetPinValue+0xa2>
    2c88:	84 2b       	or	r24, r20
    2c8a:	8c 93       	st	X, r24
    2c8c:	9f c0       	rjmp	.+318    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(PORTC,Copy_U8Pin);
    2c8e:	a5 e3       	ldi	r26, 0x35	; 53
    2c90:	b0 e0       	ldi	r27, 0x00	; 0
    2c92:	e5 e3       	ldi	r30, 0x35	; 53
    2c94:	f0 e0       	ldi	r31, 0x00	; 0
    2c96:	80 81       	ld	r24, Z
    2c98:	48 2f       	mov	r20, r24
    2c9a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c9c:	28 2f       	mov	r18, r24
    2c9e:	30 e0       	ldi	r19, 0x00	; 0
    2ca0:	81 e0       	ldi	r24, 0x01	; 1
    2ca2:	90 e0       	ldi	r25, 0x00	; 0
    2ca4:	02 2e       	mov	r0, r18
    2ca6:	02 c0       	rjmp	.+4      	; 0x2cac <DIO_VidSetPinValue+0xce>
    2ca8:	88 0f       	add	r24, r24
    2caa:	99 1f       	adc	r25, r25
    2cac:	0a 94       	dec	r0
    2cae:	e2 f7       	brpl	.-8      	; 0x2ca8 <DIO_VidSetPinValue+0xca>
    2cb0:	84 2b       	or	r24, r20
    2cb2:	8c 93       	st	X, r24
    2cb4:	8b c0       	rjmp	.+278    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(PORTD,Copy_U8Pin);
    2cb6:	a2 e3       	ldi	r26, 0x32	; 50
    2cb8:	b0 e0       	ldi	r27, 0x00	; 0
    2cba:	e2 e3       	ldi	r30, 0x32	; 50
    2cbc:	f0 e0       	ldi	r31, 0x00	; 0
    2cbe:	80 81       	ld	r24, Z
    2cc0:	48 2f       	mov	r20, r24
    2cc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc4:	28 2f       	mov	r18, r24
    2cc6:	30 e0       	ldi	r19, 0x00	; 0
    2cc8:	81 e0       	ldi	r24, 0x01	; 1
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	02 2e       	mov	r0, r18
    2cce:	02 c0       	rjmp	.+4      	; 0x2cd4 <DIO_VidSetPinValue+0xf6>
    2cd0:	88 0f       	add	r24, r24
    2cd2:	99 1f       	adc	r25, r25
    2cd4:	0a 94       	dec	r0
    2cd6:	e2 f7       	brpl	.-8      	; 0x2cd0 <DIO_VidSetPinValue+0xf2>
    2cd8:	84 2b       	or	r24, r20
    2cda:	8c 93       	st	X, r24
    2cdc:	77 c0       	rjmp	.+238    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Val){
    2cde:	8b 81       	ldd	r24, Y+3	; 0x03
    2ce0:	88 23       	and	r24, r24
    2ce2:	09 f0       	breq	.+2      	; 0x2ce6 <DIO_VidSetPinValue+0x108>
    2ce4:	73 c0       	rjmp	.+230    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
		switch (Copy_U8Port){
    2ce6:	89 81       	ldd	r24, Y+1	; 0x01
    2ce8:	28 2f       	mov	r18, r24
    2cea:	30 e0       	ldi	r19, 0x00	; 0
    2cec:	3d 83       	std	Y+5, r19	; 0x05
    2cee:	2c 83       	std	Y+4, r18	; 0x04
    2cf0:	8c 81       	ldd	r24, Y+4	; 0x04
    2cf2:	9d 81       	ldd	r25, Y+5	; 0x05
    2cf4:	81 30       	cpi	r24, 0x01	; 1
    2cf6:	91 05       	cpc	r25, r1
    2cf8:	59 f1       	breq	.+86     	; 0x2d50 <DIO_VidSetPinValue+0x172>
    2cfa:	2c 81       	ldd	r18, Y+4	; 0x04
    2cfc:	3d 81       	ldd	r19, Y+5	; 0x05
    2cfe:	22 30       	cpi	r18, 0x02	; 2
    2d00:	31 05       	cpc	r19, r1
    2d02:	2c f4       	brge	.+10     	; 0x2d0e <DIO_VidSetPinValue+0x130>
    2d04:	8c 81       	ldd	r24, Y+4	; 0x04
    2d06:	9d 81       	ldd	r25, Y+5	; 0x05
    2d08:	00 97       	sbiw	r24, 0x00	; 0
    2d0a:	69 f0       	breq	.+26     	; 0x2d26 <DIO_VidSetPinValue+0x148>
    2d0c:	5f c0       	rjmp	.+190    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
    2d0e:	2c 81       	ldd	r18, Y+4	; 0x04
    2d10:	3d 81       	ldd	r19, Y+5	; 0x05
    2d12:	22 30       	cpi	r18, 0x02	; 2
    2d14:	31 05       	cpc	r19, r1
    2d16:	89 f1       	breq	.+98     	; 0x2d7a <DIO_VidSetPinValue+0x19c>
    2d18:	8c 81       	ldd	r24, Y+4	; 0x04
    2d1a:	9d 81       	ldd	r25, Y+5	; 0x05
    2d1c:	83 30       	cpi	r24, 0x03	; 3
    2d1e:	91 05       	cpc	r25, r1
    2d20:	09 f4       	brne	.+2      	; 0x2d24 <DIO_VidSetPinValue+0x146>
    2d22:	40 c0       	rjmp	.+128    	; 0x2da4 <DIO_VidSetPinValue+0x1c6>
    2d24:	53 c0       	rjmp	.+166    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    CLR_BIT(PORTA,Copy_U8Pin);
    2d26:	ab e3       	ldi	r26, 0x3B	; 59
    2d28:	b0 e0       	ldi	r27, 0x00	; 0
    2d2a:	eb e3       	ldi	r30, 0x3B	; 59
    2d2c:	f0 e0       	ldi	r31, 0x00	; 0
    2d2e:	80 81       	ld	r24, Z
    2d30:	48 2f       	mov	r20, r24
    2d32:	8a 81       	ldd	r24, Y+2	; 0x02
    2d34:	28 2f       	mov	r18, r24
    2d36:	30 e0       	ldi	r19, 0x00	; 0
    2d38:	81 e0       	ldi	r24, 0x01	; 1
    2d3a:	90 e0       	ldi	r25, 0x00	; 0
    2d3c:	02 2e       	mov	r0, r18
    2d3e:	02 c0       	rjmp	.+4      	; 0x2d44 <DIO_VidSetPinValue+0x166>
    2d40:	88 0f       	add	r24, r24
    2d42:	99 1f       	adc	r25, r25
    2d44:	0a 94       	dec	r0
    2d46:	e2 f7       	brpl	.-8      	; 0x2d40 <DIO_VidSetPinValue+0x162>
    2d48:	80 95       	com	r24
    2d4a:	84 23       	and	r24, r20
    2d4c:	8c 93       	st	X, r24
    2d4e:	3e c0       	rjmp	.+124    	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(PORTB,Copy_U8Pin);
    2d50:	a8 e3       	ldi	r26, 0x38	; 56
    2d52:	b0 e0       	ldi	r27, 0x00	; 0
    2d54:	e8 e3       	ldi	r30, 0x38	; 56
    2d56:	f0 e0       	ldi	r31, 0x00	; 0
    2d58:	80 81       	ld	r24, Z
    2d5a:	48 2f       	mov	r20, r24
    2d5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2d5e:	28 2f       	mov	r18, r24
    2d60:	30 e0       	ldi	r19, 0x00	; 0
    2d62:	81 e0       	ldi	r24, 0x01	; 1
    2d64:	90 e0       	ldi	r25, 0x00	; 0
    2d66:	02 2e       	mov	r0, r18
    2d68:	02 c0       	rjmp	.+4      	; 0x2d6e <DIO_VidSetPinValue+0x190>
    2d6a:	88 0f       	add	r24, r24
    2d6c:	99 1f       	adc	r25, r25
    2d6e:	0a 94       	dec	r0
    2d70:	e2 f7       	brpl	.-8      	; 0x2d6a <DIO_VidSetPinValue+0x18c>
    2d72:	80 95       	com	r24
    2d74:	84 23       	and	r24, r20
    2d76:	8c 93       	st	X, r24
    2d78:	29 c0       	rjmp	.+82     	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(PORTC,Copy_U8Pin);
    2d7a:	a5 e3       	ldi	r26, 0x35	; 53
    2d7c:	b0 e0       	ldi	r27, 0x00	; 0
    2d7e:	e5 e3       	ldi	r30, 0x35	; 53
    2d80:	f0 e0       	ldi	r31, 0x00	; 0
    2d82:	80 81       	ld	r24, Z
    2d84:	48 2f       	mov	r20, r24
    2d86:	8a 81       	ldd	r24, Y+2	; 0x02
    2d88:	28 2f       	mov	r18, r24
    2d8a:	30 e0       	ldi	r19, 0x00	; 0
    2d8c:	81 e0       	ldi	r24, 0x01	; 1
    2d8e:	90 e0       	ldi	r25, 0x00	; 0
    2d90:	02 2e       	mov	r0, r18
    2d92:	02 c0       	rjmp	.+4      	; 0x2d98 <DIO_VidSetPinValue+0x1ba>
    2d94:	88 0f       	add	r24, r24
    2d96:	99 1f       	adc	r25, r25
    2d98:	0a 94       	dec	r0
    2d9a:	e2 f7       	brpl	.-8      	; 0x2d94 <DIO_VidSetPinValue+0x1b6>
    2d9c:	80 95       	com	r24
    2d9e:	84 23       	and	r24, r20
    2da0:	8c 93       	st	X, r24
    2da2:	14 c0       	rjmp	.+40     	; 0x2dcc <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(PORTD,Copy_U8Pin);
    2da4:	a2 e3       	ldi	r26, 0x32	; 50
    2da6:	b0 e0       	ldi	r27, 0x00	; 0
    2da8:	e2 e3       	ldi	r30, 0x32	; 50
    2daa:	f0 e0       	ldi	r31, 0x00	; 0
    2dac:	80 81       	ld	r24, Z
    2dae:	48 2f       	mov	r20, r24
    2db0:	8a 81       	ldd	r24, Y+2	; 0x02
    2db2:	28 2f       	mov	r18, r24
    2db4:	30 e0       	ldi	r19, 0x00	; 0
    2db6:	81 e0       	ldi	r24, 0x01	; 1
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	02 2e       	mov	r0, r18
    2dbc:	02 c0       	rjmp	.+4      	; 0x2dc2 <DIO_VidSetPinValue+0x1e4>
    2dbe:	88 0f       	add	r24, r24
    2dc0:	99 1f       	adc	r25, r25
    2dc2:	0a 94       	dec	r0
    2dc4:	e2 f7       	brpl	.-8      	; 0x2dbe <DIO_VidSetPinValue+0x1e0>
    2dc6:	80 95       	com	r24
    2dc8:	84 23       	and	r24, r20
    2dca:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if
}// end FUNC DIO_VidSetPinValue
    2dcc:	27 96       	adiw	r28, 0x07	; 7
    2dce:	0f b6       	in	r0, 0x3f	; 63
    2dd0:	f8 94       	cli
    2dd2:	de bf       	out	0x3e, r29	; 62
    2dd4:	0f be       	out	0x3f, r0	; 63
    2dd6:	cd bf       	out	0x3d, r28	; 61
    2dd8:	cf 91       	pop	r28
    2dda:	df 91       	pop	r29
    2ddc:	08 95       	ret

00002dde <DIO_VidSetPortValue>:
void DIO_VidSetPortValue (u8 Copy_U8Port , u8 Copy_U8Val ) {
    2dde:	df 93       	push	r29
    2de0:	cf 93       	push	r28
    2de2:	00 d0       	rcall	.+0      	; 0x2de4 <DIO_VidSetPortValue+0x6>
    2de4:	00 d0       	rcall	.+0      	; 0x2de6 <DIO_VidSetPortValue+0x8>
    2de6:	cd b7       	in	r28, 0x3d	; 61
    2de8:	de b7       	in	r29, 0x3e	; 62
    2dea:	89 83       	std	Y+1, r24	; 0x01
    2dec:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2dee:	89 81       	ldd	r24, Y+1	; 0x01
    2df0:	28 2f       	mov	r18, r24
    2df2:	30 e0       	ldi	r19, 0x00	; 0
    2df4:	3c 83       	std	Y+4, r19	; 0x04
    2df6:	2b 83       	std	Y+3, r18	; 0x03
    2df8:	8b 81       	ldd	r24, Y+3	; 0x03
    2dfa:	9c 81       	ldd	r25, Y+4	; 0x04
    2dfc:	81 30       	cpi	r24, 0x01	; 1
    2dfe:	91 05       	cpc	r25, r1
    2e00:	d1 f0       	breq	.+52     	; 0x2e36 <DIO_VidSetPortValue+0x58>
    2e02:	2b 81       	ldd	r18, Y+3	; 0x03
    2e04:	3c 81       	ldd	r19, Y+4	; 0x04
    2e06:	22 30       	cpi	r18, 0x02	; 2
    2e08:	31 05       	cpc	r19, r1
    2e0a:	2c f4       	brge	.+10     	; 0x2e16 <DIO_VidSetPortValue+0x38>
    2e0c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e0e:	9c 81       	ldd	r25, Y+4	; 0x04
    2e10:	00 97       	sbiw	r24, 0x00	; 0
    2e12:	61 f0       	breq	.+24     	; 0x2e2c <DIO_VidSetPortValue+0x4e>
    2e14:	1e c0       	rjmp	.+60     	; 0x2e52 <DIO_VidSetPortValue+0x74>
    2e16:	2b 81       	ldd	r18, Y+3	; 0x03
    2e18:	3c 81       	ldd	r19, Y+4	; 0x04
    2e1a:	22 30       	cpi	r18, 0x02	; 2
    2e1c:	31 05       	cpc	r19, r1
    2e1e:	81 f0       	breq	.+32     	; 0x2e40 <DIO_VidSetPortValue+0x62>
    2e20:	8b 81       	ldd	r24, Y+3	; 0x03
    2e22:	9c 81       	ldd	r25, Y+4	; 0x04
    2e24:	83 30       	cpi	r24, 0x03	; 3
    2e26:	91 05       	cpc	r25, r1
    2e28:	81 f0       	breq	.+32     	; 0x2e4a <DIO_VidSetPortValue+0x6c>
    2e2a:	13 c0       	rjmp	.+38     	; 0x2e52 <DIO_VidSetPortValue+0x74>
		case 0 : 
			PORTA = Copy_U8Val ;
    2e2c:	eb e3       	ldi	r30, 0x3B	; 59
    2e2e:	f0 e0       	ldi	r31, 0x00	; 0
    2e30:	8a 81       	ldd	r24, Y+2	; 0x02
    2e32:	80 83       	st	Z, r24
    2e34:	0e c0       	rjmp	.+28     	; 0x2e52 <DIO_VidSetPortValue+0x74>
			break ;  
		case 1 : 
			PORTB = Copy_U8Val ;
    2e36:	e8 e3       	ldi	r30, 0x38	; 56
    2e38:	f0 e0       	ldi	r31, 0x00	; 0
    2e3a:	8a 81       	ldd	r24, Y+2	; 0x02
    2e3c:	80 83       	st	Z, r24
    2e3e:	09 c0       	rjmp	.+18     	; 0x2e52 <DIO_VidSetPortValue+0x74>
			break ;			
		case 2 : 
			PORTC = Copy_U8Val ;
    2e40:	e5 e3       	ldi	r30, 0x35	; 53
    2e42:	f0 e0       	ldi	r31, 0x00	; 0
    2e44:	8a 81       	ldd	r24, Y+2	; 0x02
    2e46:	80 83       	st	Z, r24
    2e48:	04 c0       	rjmp	.+8      	; 0x2e52 <DIO_VidSetPortValue+0x74>
			break ;  
		case 3 : 
			PORTD = Copy_U8Val ;
    2e4a:	e2 e3       	ldi	r30, 0x32	; 50
    2e4c:	f0 e0       	ldi	r31, 0x00	; 0
    2e4e:	8a 81       	ldd	r24, Y+2	; 0x02
    2e50:	80 83       	st	Z, r24
			break ; 
		}//end switch
}//end FUNC DIO_VidSetPortValue
    2e52:	0f 90       	pop	r0
    2e54:	0f 90       	pop	r0
    2e56:	0f 90       	pop	r0
    2e58:	0f 90       	pop	r0
    2e5a:	cf 91       	pop	r28
    2e5c:	df 91       	pop	r29
    2e5e:	08 95       	ret

00002e60 <DIO_VidTogglePinValue>:
void DIO_VidTogglePinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    2e60:	df 93       	push	r29
    2e62:	cf 93       	push	r28
    2e64:	00 d0       	rcall	.+0      	; 0x2e66 <DIO_VidTogglePinValue+0x6>
    2e66:	00 d0       	rcall	.+0      	; 0x2e68 <DIO_VidTogglePinValue+0x8>
    2e68:	cd b7       	in	r28, 0x3d	; 61
    2e6a:	de b7       	in	r29, 0x3e	; 62
    2e6c:	89 83       	std	Y+1, r24	; 0x01
    2e6e:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    2e70:	89 81       	ldd	r24, Y+1	; 0x01
    2e72:	28 2f       	mov	r18, r24
    2e74:	30 e0       	ldi	r19, 0x00	; 0
    2e76:	3c 83       	std	Y+4, r19	; 0x04
    2e78:	2b 83       	std	Y+3, r18	; 0x03
    2e7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2e7c:	9c 81       	ldd	r25, Y+4	; 0x04
    2e7e:	81 30       	cpi	r24, 0x01	; 1
    2e80:	91 05       	cpc	r25, r1
    2e82:	49 f1       	breq	.+82     	; 0x2ed6 <DIO_VidTogglePinValue+0x76>
    2e84:	2b 81       	ldd	r18, Y+3	; 0x03
    2e86:	3c 81       	ldd	r19, Y+4	; 0x04
    2e88:	22 30       	cpi	r18, 0x02	; 2
    2e8a:	31 05       	cpc	r19, r1
    2e8c:	2c f4       	brge	.+10     	; 0x2e98 <DIO_VidTogglePinValue+0x38>
    2e8e:	8b 81       	ldd	r24, Y+3	; 0x03
    2e90:	9c 81       	ldd	r25, Y+4	; 0x04
    2e92:	00 97       	sbiw	r24, 0x00	; 0
    2e94:	61 f0       	breq	.+24     	; 0x2eae <DIO_VidTogglePinValue+0x4e>
    2e96:	5a c0       	rjmp	.+180    	; 0x2f4c <DIO_VidTogglePinValue+0xec>
    2e98:	2b 81       	ldd	r18, Y+3	; 0x03
    2e9a:	3c 81       	ldd	r19, Y+4	; 0x04
    2e9c:	22 30       	cpi	r18, 0x02	; 2
    2e9e:	31 05       	cpc	r19, r1
    2ea0:	71 f1       	breq	.+92     	; 0x2efe <DIO_VidTogglePinValue+0x9e>
    2ea2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ea4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ea6:	83 30       	cpi	r24, 0x03	; 3
    2ea8:	91 05       	cpc	r25, r1
    2eaa:	e9 f1       	breq	.+122    	; 0x2f26 <DIO_VidTogglePinValue+0xc6>
    2eac:	4f c0       	rjmp	.+158    	; 0x2f4c <DIO_VidTogglePinValue+0xec>
		case 0 : 
		    TOGGLE_BIT( PORTA , Copy_U8Pin ) ;
    2eae:	ab e3       	ldi	r26, 0x3B	; 59
    2eb0:	b0 e0       	ldi	r27, 0x00	; 0
    2eb2:	eb e3       	ldi	r30, 0x3B	; 59
    2eb4:	f0 e0       	ldi	r31, 0x00	; 0
    2eb6:	80 81       	ld	r24, Z
    2eb8:	48 2f       	mov	r20, r24
    2eba:	8a 81       	ldd	r24, Y+2	; 0x02
    2ebc:	28 2f       	mov	r18, r24
    2ebe:	30 e0       	ldi	r19, 0x00	; 0
    2ec0:	81 e0       	ldi	r24, 0x01	; 1
    2ec2:	90 e0       	ldi	r25, 0x00	; 0
    2ec4:	02 2e       	mov	r0, r18
    2ec6:	02 c0       	rjmp	.+4      	; 0x2ecc <DIO_VidTogglePinValue+0x6c>
    2ec8:	88 0f       	add	r24, r24
    2eca:	99 1f       	adc	r25, r25
    2ecc:	0a 94       	dec	r0
    2ece:	e2 f7       	brpl	.-8      	; 0x2ec8 <DIO_VidTogglePinValue+0x68>
    2ed0:	84 27       	eor	r24, r20
    2ed2:	8c 93       	st	X, r24
    2ed4:	3b c0       	rjmp	.+118    	; 0x2f4c <DIO_VidTogglePinValue+0xec>
			break ;  
		case 1 : 
			TOGGLE_BIT( PORTB , Copy_U8Pin ) ;
    2ed6:	a8 e3       	ldi	r26, 0x38	; 56
    2ed8:	b0 e0       	ldi	r27, 0x00	; 0
    2eda:	e8 e3       	ldi	r30, 0x38	; 56
    2edc:	f0 e0       	ldi	r31, 0x00	; 0
    2ede:	80 81       	ld	r24, Z
    2ee0:	48 2f       	mov	r20, r24
    2ee2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ee4:	28 2f       	mov	r18, r24
    2ee6:	30 e0       	ldi	r19, 0x00	; 0
    2ee8:	81 e0       	ldi	r24, 0x01	; 1
    2eea:	90 e0       	ldi	r25, 0x00	; 0
    2eec:	02 2e       	mov	r0, r18
    2eee:	02 c0       	rjmp	.+4      	; 0x2ef4 <DIO_VidTogglePinValue+0x94>
    2ef0:	88 0f       	add	r24, r24
    2ef2:	99 1f       	adc	r25, r25
    2ef4:	0a 94       	dec	r0
    2ef6:	e2 f7       	brpl	.-8      	; 0x2ef0 <DIO_VidTogglePinValue+0x90>
    2ef8:	84 27       	eor	r24, r20
    2efa:	8c 93       	st	X, r24
    2efc:	27 c0       	rjmp	.+78     	; 0x2f4c <DIO_VidTogglePinValue+0xec>
			break ;			
		case 2 : 
			TOGGLE_BIT( PORTC , Copy_U8Pin ) ;
    2efe:	a5 e3       	ldi	r26, 0x35	; 53
    2f00:	b0 e0       	ldi	r27, 0x00	; 0
    2f02:	e5 e3       	ldi	r30, 0x35	; 53
    2f04:	f0 e0       	ldi	r31, 0x00	; 0
    2f06:	80 81       	ld	r24, Z
    2f08:	48 2f       	mov	r20, r24
    2f0a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f0c:	28 2f       	mov	r18, r24
    2f0e:	30 e0       	ldi	r19, 0x00	; 0
    2f10:	81 e0       	ldi	r24, 0x01	; 1
    2f12:	90 e0       	ldi	r25, 0x00	; 0
    2f14:	02 2e       	mov	r0, r18
    2f16:	02 c0       	rjmp	.+4      	; 0x2f1c <DIO_VidTogglePinValue+0xbc>
    2f18:	88 0f       	add	r24, r24
    2f1a:	99 1f       	adc	r25, r25
    2f1c:	0a 94       	dec	r0
    2f1e:	e2 f7       	brpl	.-8      	; 0x2f18 <DIO_VidTogglePinValue+0xb8>
    2f20:	84 27       	eor	r24, r20
    2f22:	8c 93       	st	X, r24
    2f24:	13 c0       	rjmp	.+38     	; 0x2f4c <DIO_VidTogglePinValue+0xec>
			break ;  
		case 3 : 
			TOGGLE_BIT( PORTD , Copy_U8Pin ) ;
    2f26:	a2 e3       	ldi	r26, 0x32	; 50
    2f28:	b0 e0       	ldi	r27, 0x00	; 0
    2f2a:	e2 e3       	ldi	r30, 0x32	; 50
    2f2c:	f0 e0       	ldi	r31, 0x00	; 0
    2f2e:	80 81       	ld	r24, Z
    2f30:	48 2f       	mov	r20, r24
    2f32:	8a 81       	ldd	r24, Y+2	; 0x02
    2f34:	28 2f       	mov	r18, r24
    2f36:	30 e0       	ldi	r19, 0x00	; 0
    2f38:	81 e0       	ldi	r24, 0x01	; 1
    2f3a:	90 e0       	ldi	r25, 0x00	; 0
    2f3c:	02 2e       	mov	r0, r18
    2f3e:	02 c0       	rjmp	.+4      	; 0x2f44 <DIO_VidTogglePinValue+0xe4>
    2f40:	88 0f       	add	r24, r24
    2f42:	99 1f       	adc	r25, r25
    2f44:	0a 94       	dec	r0
    2f46:	e2 f7       	brpl	.-8      	; 0x2f40 <DIO_VidTogglePinValue+0xe0>
    2f48:	84 27       	eor	r24, r20
    2f4a:	8c 93       	st	X, r24
			break ; 
	}//end switch
}//end FUNC DIO_VidTogglePinValue
    2f4c:	0f 90       	pop	r0
    2f4e:	0f 90       	pop	r0
    2f50:	0f 90       	pop	r0
    2f52:	0f 90       	pop	r0
    2f54:	cf 91       	pop	r28
    2f56:	df 91       	pop	r29
    2f58:	08 95       	ret

00002f5a <DIO_U8GetPinValue>:
u8 DIO_U8GetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    2f5a:	df 93       	push	r29
    2f5c:	cf 93       	push	r28
    2f5e:	00 d0       	rcall	.+0      	; 0x2f60 <DIO_U8GetPinValue+0x6>
    2f60:	00 d0       	rcall	.+0      	; 0x2f62 <DIO_U8GetPinValue+0x8>
    2f62:	00 d0       	rcall	.+0      	; 0x2f64 <DIO_U8GetPinValue+0xa>
    2f64:	cd b7       	in	r28, 0x3d	; 61
    2f66:	de b7       	in	r29, 0x3e	; 62
    2f68:	89 83       	std	Y+1, r24	; 0x01
    2f6a:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    2f6c:	89 81       	ldd	r24, Y+1	; 0x01
    2f6e:	28 2f       	mov	r18, r24
    2f70:	30 e0       	ldi	r19, 0x00	; 0
    2f72:	3d 83       	std	Y+5, r19	; 0x05
    2f74:	2c 83       	std	Y+4, r18	; 0x04
    2f76:	4c 81       	ldd	r20, Y+4	; 0x04
    2f78:	5d 81       	ldd	r21, Y+5	; 0x05
    2f7a:	41 30       	cpi	r20, 0x01	; 1
    2f7c:	51 05       	cpc	r21, r1
    2f7e:	49 f1       	breq	.+82     	; 0x2fd2 <DIO_U8GetPinValue+0x78>
    2f80:	8c 81       	ldd	r24, Y+4	; 0x04
    2f82:	9d 81       	ldd	r25, Y+5	; 0x05
    2f84:	82 30       	cpi	r24, 0x02	; 2
    2f86:	91 05       	cpc	r25, r1
    2f88:	34 f4       	brge	.+12     	; 0x2f96 <DIO_U8GetPinValue+0x3c>
    2f8a:	2c 81       	ldd	r18, Y+4	; 0x04
    2f8c:	3d 81       	ldd	r19, Y+5	; 0x05
    2f8e:	21 15       	cp	r18, r1
    2f90:	31 05       	cpc	r19, r1
    2f92:	61 f0       	breq	.+24     	; 0x2fac <DIO_U8GetPinValue+0x52>
    2f94:	57 c0       	rjmp	.+174    	; 0x3044 <DIO_U8GetPinValue+0xea>
    2f96:	4c 81       	ldd	r20, Y+4	; 0x04
    2f98:	5d 81       	ldd	r21, Y+5	; 0x05
    2f9a:	42 30       	cpi	r20, 0x02	; 2
    2f9c:	51 05       	cpc	r21, r1
    2f9e:	61 f1       	breq	.+88     	; 0x2ff8 <DIO_U8GetPinValue+0x9e>
    2fa0:	8c 81       	ldd	r24, Y+4	; 0x04
    2fa2:	9d 81       	ldd	r25, Y+5	; 0x05
    2fa4:	83 30       	cpi	r24, 0x03	; 3
    2fa6:	91 05       	cpc	r25, r1
    2fa8:	d1 f1       	breq	.+116    	; 0x301e <DIO_U8GetPinValue+0xc4>
    2faa:	4c c0       	rjmp	.+152    	; 0x3044 <DIO_U8GetPinValue+0xea>
		case 0 : 
		   return GET_BIT( PINA , Copy_U8Pin ) ;
    2fac:	e9 e3       	ldi	r30, 0x39	; 57
    2fae:	f0 e0       	ldi	r31, 0x00	; 0
    2fb0:	80 81       	ld	r24, Z
    2fb2:	28 2f       	mov	r18, r24
    2fb4:	30 e0       	ldi	r19, 0x00	; 0
    2fb6:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb8:	88 2f       	mov	r24, r24
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	a9 01       	movw	r20, r18
    2fbe:	02 c0       	rjmp	.+4      	; 0x2fc4 <DIO_U8GetPinValue+0x6a>
    2fc0:	55 95       	asr	r21
    2fc2:	47 95       	ror	r20
    2fc4:	8a 95       	dec	r24
    2fc6:	e2 f7       	brpl	.-8      	; 0x2fc0 <DIO_U8GetPinValue+0x66>
    2fc8:	ca 01       	movw	r24, r20
    2fca:	58 2f       	mov	r21, r24
    2fcc:	51 70       	andi	r21, 0x01	; 1
    2fce:	5b 83       	std	Y+3, r21	; 0x03
    2fd0:	3a c0       	rjmp	.+116    	; 0x3046 <DIO_U8GetPinValue+0xec>
		case 1 : 
			return GET_BIT( PINB , Copy_U8Pin ) ;
    2fd2:	e6 e3       	ldi	r30, 0x36	; 54
    2fd4:	f0 e0       	ldi	r31, 0x00	; 0
    2fd6:	80 81       	ld	r24, Z
    2fd8:	28 2f       	mov	r18, r24
    2fda:	30 e0       	ldi	r19, 0x00	; 0
    2fdc:	8a 81       	ldd	r24, Y+2	; 0x02
    2fde:	88 2f       	mov	r24, r24
    2fe0:	90 e0       	ldi	r25, 0x00	; 0
    2fe2:	a9 01       	movw	r20, r18
    2fe4:	02 c0       	rjmp	.+4      	; 0x2fea <DIO_U8GetPinValue+0x90>
    2fe6:	55 95       	asr	r21
    2fe8:	47 95       	ror	r20
    2fea:	8a 95       	dec	r24
    2fec:	e2 f7       	brpl	.-8      	; 0x2fe6 <DIO_U8GetPinValue+0x8c>
    2fee:	ca 01       	movw	r24, r20
    2ff0:	58 2f       	mov	r21, r24
    2ff2:	51 70       	andi	r21, 0x01	; 1
    2ff4:	5b 83       	std	Y+3, r21	; 0x03
    2ff6:	27 c0       	rjmp	.+78     	; 0x3046 <DIO_U8GetPinValue+0xec>
		case 2 : 
			return GET_BIT( PINC , Copy_U8Pin ) ;
    2ff8:	e3 e3       	ldi	r30, 0x33	; 51
    2ffa:	f0 e0       	ldi	r31, 0x00	; 0
    2ffc:	80 81       	ld	r24, Z
    2ffe:	28 2f       	mov	r18, r24
    3000:	30 e0       	ldi	r19, 0x00	; 0
    3002:	8a 81       	ldd	r24, Y+2	; 0x02
    3004:	88 2f       	mov	r24, r24
    3006:	90 e0       	ldi	r25, 0x00	; 0
    3008:	a9 01       	movw	r20, r18
    300a:	02 c0       	rjmp	.+4      	; 0x3010 <DIO_U8GetPinValue+0xb6>
    300c:	55 95       	asr	r21
    300e:	47 95       	ror	r20
    3010:	8a 95       	dec	r24
    3012:	e2 f7       	brpl	.-8      	; 0x300c <DIO_U8GetPinValue+0xb2>
    3014:	ca 01       	movw	r24, r20
    3016:	58 2f       	mov	r21, r24
    3018:	51 70       	andi	r21, 0x01	; 1
    301a:	5b 83       	std	Y+3, r21	; 0x03
    301c:	14 c0       	rjmp	.+40     	; 0x3046 <DIO_U8GetPinValue+0xec>
		case 3 : 
			return GET_BIT( PIND , Copy_U8Pin ) ;
    301e:	e0 e3       	ldi	r30, 0x30	; 48
    3020:	f0 e0       	ldi	r31, 0x00	; 0
    3022:	80 81       	ld	r24, Z
    3024:	28 2f       	mov	r18, r24
    3026:	30 e0       	ldi	r19, 0x00	; 0
    3028:	8a 81       	ldd	r24, Y+2	; 0x02
    302a:	88 2f       	mov	r24, r24
    302c:	90 e0       	ldi	r25, 0x00	; 0
    302e:	a9 01       	movw	r20, r18
    3030:	02 c0       	rjmp	.+4      	; 0x3036 <DIO_U8GetPinValue+0xdc>
    3032:	55 95       	asr	r21
    3034:	47 95       	ror	r20
    3036:	8a 95       	dec	r24
    3038:	e2 f7       	brpl	.-8      	; 0x3032 <DIO_U8GetPinValue+0xd8>
    303a:	ca 01       	movw	r24, r20
    303c:	58 2f       	mov	r21, r24
    303e:	51 70       	andi	r21, 0x01	; 1
    3040:	5b 83       	std	Y+3, r21	; 0x03
    3042:	01 c0       	rjmp	.+2      	; 0x3046 <DIO_U8GetPinValue+0xec>
    3044:	02 c0       	rjmp	.+4      	; 0x304a <DIO_U8GetPinValue+0xf0>
	}//end switch	
}//end FUNC DIO_VidU8PinValue 
    3046:	8b 81       	ldd	r24, Y+3	; 0x03
    3048:	8e 83       	std	Y+6, r24	; 0x06
    304a:	8e 81       	ldd	r24, Y+6	; 0x06
    304c:	26 96       	adiw	r28, 0x06	; 6
    304e:	0f b6       	in	r0, 0x3f	; 63
    3050:	f8 94       	cli
    3052:	de bf       	out	0x3e, r29	; 62
    3054:	0f be       	out	0x3f, r0	; 63
    3056:	cd bf       	out	0x3d, r28	; 61
    3058:	cf 91       	pop	r28
    305a:	df 91       	pop	r29
    305c:	08 95       	ret

0000305e <KeyPad_VidInit>:
#include"KeyPad_Private.h"


#ifdef KEYPAD_4_4

void KeyPad_VidInit(void){
    305e:	df 93       	push	r29
    3060:	cf 93       	push	r28
    3062:	cd b7       	in	r28, 0x3d	; 61
    3064:	de b7       	in	r29, 0x3e	; 62

	/*to define first 4 pins as inputs for rows
	and second 4 pins as output for columns*/
	DIO_VidSetPortDirection( KEYPAD_PORT , 0xf0 ) ;
    3066:	82 e0       	ldi	r24, 0x02	; 2
    3068:	90 e0       	ldi	r25, 0x00	; 0
    306a:	60 ef       	ldi	r22, 0xF0	; 240
    306c:	70 e0       	ldi	r23, 0x00	; 0
    306e:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <DIO_VidSetPortDirection>

	/*to active Pull_up_resistor for 4 pins input for rows
	and output high on columns*/
	DIO_VidSetPortValue( KEYPAD_PORT , 0xff );
    3072:	82 e0       	ldi	r24, 0x02	; 2
    3074:	90 e0       	ldi	r25, 0x00	; 0
    3076:	6f ef       	ldi	r22, 0xFF	; 255
    3078:	70 e0       	ldi	r23, 0x00	; 0
    307a:	0e 94 ef 16 	call	0x2dde	; 0x2dde <DIO_VidSetPortValue>
     }
    307e:	cf 91       	pop	r28
    3080:	df 91       	pop	r29
    3082:	08 95       	ret

00003084 <KeyPad_U8Num>:
	}
#endif


#ifdef KEYPAD_4_4
u8 KeyPad_U8Num(u8 Copy_num){
    3084:	df 93       	push	r29
    3086:	cf 93       	push	r28
    3088:	00 d0       	rcall	.+0      	; 0x308a <KeyPad_U8Num+0x6>
    308a:	00 d0       	rcall	.+0      	; 0x308c <KeyPad_U8Num+0x8>
    308c:	cd b7       	in	r28, 0x3d	; 61
    308e:	de b7       	in	r29, 0x3e	; 62
    3090:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_num){
    3092:	89 81       	ldd	r24, Y+1	; 0x01
    3094:	28 2f       	mov	r18, r24
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	3c 83       	std	Y+4, r19	; 0x04
    309a:	2b 83       	std	Y+3, r18	; 0x03
    309c:	8b 81       	ldd	r24, Y+3	; 0x03
    309e:	9c 81       	ldd	r25, Y+4	; 0x04
    30a0:	87 30       	cpi	r24, 0x07	; 7
    30a2:	91 05       	cpc	r25, r1
    30a4:	09 f4       	brne	.+2      	; 0x30a8 <KeyPad_U8Num+0x24>
    30a6:	6f c0       	rjmp	.+222    	; 0x3186 <KeyPad_U8Num+0x102>
    30a8:	2b 81       	ldd	r18, Y+3	; 0x03
    30aa:	3c 81       	ldd	r19, Y+4	; 0x04
    30ac:	28 30       	cpi	r18, 0x08	; 8
    30ae:	31 05       	cpc	r19, r1
    30b0:	54 f5       	brge	.+84     	; 0x3106 <KeyPad_U8Num+0x82>
    30b2:	8b 81       	ldd	r24, Y+3	; 0x03
    30b4:	9c 81       	ldd	r25, Y+4	; 0x04
    30b6:	83 30       	cpi	r24, 0x03	; 3
    30b8:	91 05       	cpc	r25, r1
    30ba:	09 f4       	brne	.+2      	; 0x30be <KeyPad_U8Num+0x3a>
    30bc:	58 c0       	rjmp	.+176    	; 0x316e <KeyPad_U8Num+0xea>
    30be:	2b 81       	ldd	r18, Y+3	; 0x03
    30c0:	3c 81       	ldd	r19, Y+4	; 0x04
    30c2:	24 30       	cpi	r18, 0x04	; 4
    30c4:	31 05       	cpc	r19, r1
    30c6:	94 f4       	brge	.+36     	; 0x30ec <KeyPad_U8Num+0x68>
    30c8:	8b 81       	ldd	r24, Y+3	; 0x03
    30ca:	9c 81       	ldd	r25, Y+4	; 0x04
    30cc:	81 30       	cpi	r24, 0x01	; 1
    30ce:	91 05       	cpc	r25, r1
    30d0:	09 f4       	brne	.+2      	; 0x30d4 <KeyPad_U8Num+0x50>
    30d2:	47 c0       	rjmp	.+142    	; 0x3162 <KeyPad_U8Num+0xde>
    30d4:	2b 81       	ldd	r18, Y+3	; 0x03
    30d6:	3c 81       	ldd	r19, Y+4	; 0x04
    30d8:	22 30       	cpi	r18, 0x02	; 2
    30da:	31 05       	cpc	r19, r1
    30dc:	0c f0       	brlt	.+2      	; 0x30e0 <KeyPad_U8Num+0x5c>
    30de:	44 c0       	rjmp	.+136    	; 0x3168 <KeyPad_U8Num+0xe4>
    30e0:	8b 81       	ldd	r24, Y+3	; 0x03
    30e2:	9c 81       	ldd	r25, Y+4	; 0x04
    30e4:	00 97       	sbiw	r24, 0x00	; 0
    30e6:	09 f4       	brne	.+2      	; 0x30ea <KeyPad_U8Num+0x66>
    30e8:	39 c0       	rjmp	.+114    	; 0x315c <KeyPad_U8Num+0xd8>
    30ea:	69 c0       	rjmp	.+210    	; 0x31be <KeyPad_U8Num+0x13a>
    30ec:	2b 81       	ldd	r18, Y+3	; 0x03
    30ee:	3c 81       	ldd	r19, Y+4	; 0x04
    30f0:	25 30       	cpi	r18, 0x05	; 5
    30f2:	31 05       	cpc	r19, r1
    30f4:	09 f4       	brne	.+2      	; 0x30f8 <KeyPad_U8Num+0x74>
    30f6:	41 c0       	rjmp	.+130    	; 0x317a <KeyPad_U8Num+0xf6>
    30f8:	8b 81       	ldd	r24, Y+3	; 0x03
    30fa:	9c 81       	ldd	r25, Y+4	; 0x04
    30fc:	86 30       	cpi	r24, 0x06	; 6
    30fe:	91 05       	cpc	r25, r1
    3100:	0c f0       	brlt	.+2      	; 0x3104 <KeyPad_U8Num+0x80>
    3102:	3e c0       	rjmp	.+124    	; 0x3180 <KeyPad_U8Num+0xfc>
    3104:	37 c0       	rjmp	.+110    	; 0x3174 <KeyPad_U8Num+0xf0>
    3106:	2b 81       	ldd	r18, Y+3	; 0x03
    3108:	3c 81       	ldd	r19, Y+4	; 0x04
    310a:	2b 30       	cpi	r18, 0x0B	; 11
    310c:	31 05       	cpc	r19, r1
    310e:	09 f4       	brne	.+2      	; 0x3112 <KeyPad_U8Num+0x8e>
    3110:	46 c0       	rjmp	.+140    	; 0x319e <KeyPad_U8Num+0x11a>
    3112:	8b 81       	ldd	r24, Y+3	; 0x03
    3114:	9c 81       	ldd	r25, Y+4	; 0x04
    3116:	8c 30       	cpi	r24, 0x0C	; 12
    3118:	91 05       	cpc	r25, r1
    311a:	5c f4       	brge	.+22     	; 0x3132 <KeyPad_U8Num+0xae>
    311c:	2b 81       	ldd	r18, Y+3	; 0x03
    311e:	3c 81       	ldd	r19, Y+4	; 0x04
    3120:	29 30       	cpi	r18, 0x09	; 9
    3122:	31 05       	cpc	r19, r1
    3124:	b1 f1       	breq	.+108    	; 0x3192 <KeyPad_U8Num+0x10e>
    3126:	8b 81       	ldd	r24, Y+3	; 0x03
    3128:	9c 81       	ldd	r25, Y+4	; 0x04
    312a:	8a 30       	cpi	r24, 0x0A	; 10
    312c:	91 05       	cpc	r25, r1
    312e:	a4 f5       	brge	.+104    	; 0x3198 <KeyPad_U8Num+0x114>
    3130:	2d c0       	rjmp	.+90     	; 0x318c <KeyPad_U8Num+0x108>
    3132:	2b 81       	ldd	r18, Y+3	; 0x03
    3134:	3c 81       	ldd	r19, Y+4	; 0x04
    3136:	2d 30       	cpi	r18, 0x0D	; 13
    3138:	31 05       	cpc	r19, r1
    313a:	c9 f1       	breq	.+114    	; 0x31ae <KeyPad_U8Num+0x12a>
    313c:	8b 81       	ldd	r24, Y+3	; 0x03
    313e:	9c 81       	ldd	r25, Y+4	; 0x04
    3140:	8d 30       	cpi	r24, 0x0D	; 13
    3142:	91 05       	cpc	r25, r1
    3144:	7c f1       	brlt	.+94     	; 0x31a4 <KeyPad_U8Num+0x120>
    3146:	2b 81       	ldd	r18, Y+3	; 0x03
    3148:	3c 81       	ldd	r19, Y+4	; 0x04
    314a:	2e 30       	cpi	r18, 0x0E	; 14
    314c:	31 05       	cpc	r19, r1
    314e:	89 f1       	breq	.+98     	; 0x31b2 <KeyPad_U8Num+0x12e>
    3150:	8b 81       	ldd	r24, Y+3	; 0x03
    3152:	9c 81       	ldd	r25, Y+4	; 0x04
    3154:	8f 30       	cpi	r24, 0x0F	; 15
    3156:	91 05       	cpc	r25, r1
    3158:	79 f1       	breq	.+94     	; 0x31b8 <KeyPad_U8Num+0x134>
    315a:	31 c0       	rjmp	.+98     	; 0x31be <KeyPad_U8Num+0x13a>
	case 0 : return 7 ;
    315c:	97 e0       	ldi	r25, 0x07	; 7
    315e:	9a 83       	std	Y+2, r25	; 0x02
    3160:	30 c0       	rjmp	.+96     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 1 : return 8 ;
    3162:	28 e0       	ldi	r18, 0x08	; 8
    3164:	2a 83       	std	Y+2, r18	; 0x02
    3166:	2d c0       	rjmp	.+90     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 2 : return 9 ;
    3168:	39 e0       	ldi	r19, 0x09	; 9
    316a:	3a 83       	std	Y+2, r19	; 0x02
    316c:	2a c0       	rjmp	.+84     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 3 : return '/' ;
    316e:	8f e2       	ldi	r24, 0x2F	; 47
    3170:	8a 83       	std	Y+2, r24	; 0x02
    3172:	27 c0       	rjmp	.+78     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 4 : return 4 ;
    3174:	94 e0       	ldi	r25, 0x04	; 4
    3176:	9a 83       	std	Y+2, r25	; 0x02
    3178:	24 c0       	rjmp	.+72     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 5 : return 5 ;
    317a:	25 e0       	ldi	r18, 0x05	; 5
    317c:	2a 83       	std	Y+2, r18	; 0x02
    317e:	21 c0       	rjmp	.+66     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 6 : return 6 ;
    3180:	36 e0       	ldi	r19, 0x06	; 6
    3182:	3a 83       	std	Y+2, r19	; 0x02
    3184:	1e c0       	rjmp	.+60     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 7 : return '*' ;
    3186:	8a e2       	ldi	r24, 0x2A	; 42
    3188:	8a 83       	std	Y+2, r24	; 0x02
    318a:	1b c0       	rjmp	.+54     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 8 : return 1 ;
    318c:	91 e0       	ldi	r25, 0x01	; 1
    318e:	9a 83       	std	Y+2, r25	; 0x02
    3190:	18 c0       	rjmp	.+48     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 9 : return 2 ;
    3192:	22 e0       	ldi	r18, 0x02	; 2
    3194:	2a 83       	std	Y+2, r18	; 0x02
    3196:	15 c0       	rjmp	.+42     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 10 : return 3 ;
    3198:	33 e0       	ldi	r19, 0x03	; 3
    319a:	3a 83       	std	Y+2, r19	; 0x02
    319c:	12 c0       	rjmp	.+36     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 11 : return '-' ;
    319e:	8d e2       	ldi	r24, 0x2D	; 45
    31a0:	8a 83       	std	Y+2, r24	; 0x02
    31a2:	0f c0       	rjmp	.+30     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 12 : LCD_VidClear() ; return 12 ;
    31a4:	0e 94 b0 23 	call	0x4760	; 0x4760 <LCD_VidClear>
    31a8:	9c e0       	ldi	r25, 0x0C	; 12
    31aa:	9a 83       	std	Y+2, r25	; 0x02
    31ac:	0a c0       	rjmp	.+20     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 13 : return 0 ;
    31ae:	1a 82       	std	Y+2, r1	; 0x02
    31b0:	08 c0       	rjmp	.+16     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 14 : return '=' ;
    31b2:	2d e3       	ldi	r18, 0x3D	; 61
    31b4:	2a 83       	std	Y+2, r18	; 0x02
    31b6:	05 c0       	rjmp	.+10     	; 0x31c2 <KeyPad_U8Num+0x13e>
	case 15 : return '+' ;
    31b8:	3b e2       	ldi	r19, 0x2B	; 43
    31ba:	3a 83       	std	Y+2, r19	; 0x02
    31bc:	02 c0       	rjmp	.+4      	; 0x31c2 <KeyPad_U8Num+0x13e>
	default : return Copy_num ;
    31be:	89 81       	ldd	r24, Y+1	; 0x01
    31c0:	8a 83       	std	Y+2, r24	; 0x02
    31c2:	8a 81       	ldd	r24, Y+2	; 0x02
	}
}
    31c4:	0f 90       	pop	r0
    31c6:	0f 90       	pop	r0
    31c8:	0f 90       	pop	r0
    31ca:	0f 90       	pop	r0
    31cc:	cf 91       	pop	r28
    31ce:	df 91       	pop	r29
    31d0:	08 95       	ret

000031d2 <KeyPad_U8GetNUM>:
#endif


u8 KeyPad_U8GetNUM (void){
    31d2:	df 93       	push	r29
    31d4:	cf 93       	push	r28
    31d6:	cd b7       	in	r28, 0x3d	; 61
    31d8:	de b7       	in	r29, 0x3e	; 62
    31da:	62 97       	sbiw	r28, 0x12	; 18
    31dc:	0f b6       	in	r0, 0x3f	; 63
    31de:	f8 94       	cli
    31e0:	de bf       	out	0x3e, r29	; 62
    31e2:	0f be       	out	0x3f, r0	; 63
    31e4:	cd bf       	out	0x3d, r28	; 61
	u8 local_key = 50 ;
    31e6:	82 e3       	ldi	r24, 0x32	; 50
    31e8:	8a 8b       	std	Y+18, r24	; 0x12
	for (u8 C=0 ; C<KEYPAD_NUM_COL ; C++){
    31ea:	19 8a       	std	Y+17, r1	; 0x11
    31ec:	bd c0       	rjmp	.+378    	; 0x3368 <KeyPad_U8GetNUM+0x196>
		DIO_VidSetPinValue( KEYPAD_PORT , C+KEYPAD_NUM_COL , LOW ) ;
    31ee:	89 89       	ldd	r24, Y+17	; 0x11
    31f0:	88 2f       	mov	r24, r24
    31f2:	90 e0       	ldi	r25, 0x00	; 0
    31f4:	9c 01       	movw	r18, r24
    31f6:	2c 5f       	subi	r18, 0xFC	; 252
    31f8:	3f 4f       	sbci	r19, 0xFF	; 255
    31fa:	82 e0       	ldi	r24, 0x02	; 2
    31fc:	90 e0       	ldi	r25, 0x00	; 0
    31fe:	b9 01       	movw	r22, r18
    3200:	40 e0       	ldi	r20, 0x00	; 0
    3202:	50 e0       	ldi	r21, 0x00	; 0
    3204:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
		for (u8 R=0 ; R<KEYPAD_NUM_ROW ; R++){
    3208:	18 8a       	std	Y+16, r1	; 0x10
    320a:	9a c0       	rjmp	.+308    	; 0x3340 <KeyPad_U8GetNUM+0x16e>
			u8 pressed = DIO_U8GetPinValue(KEYPAD_PORT,R);
    320c:	88 89       	ldd	r24, Y+16	; 0x10
    320e:	28 2f       	mov	r18, r24
    3210:	30 e0       	ldi	r19, 0x00	; 0
    3212:	82 e0       	ldi	r24, 0x02	; 2
    3214:	90 e0       	ldi	r25, 0x00	; 0
    3216:	b9 01       	movw	r22, r18
    3218:	0e 94 ad 17 	call	0x2f5a	; 0x2f5a <DIO_U8GetPinValue>
    321c:	8f 87       	std	Y+15, r24	; 0x0f
			if (LOW == pressed )
    321e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3220:	88 23       	and	r24, r24
    3222:	09 f0       	breq	.+2      	; 0x3226 <KeyPad_U8GetNUM+0x54>
    3224:	8a c0       	rjmp	.+276    	; 0x333a <KeyPad_U8GetNUM+0x168>
			{
				local_key = (KEYPAD_NUM_ROW*R)+C ;
    3226:	88 89       	ldd	r24, Y+16	; 0x10
    3228:	88 2f       	mov	r24, r24
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	88 0f       	add	r24, r24
    322e:	99 1f       	adc	r25, r25
    3230:	88 0f       	add	r24, r24
    3232:	99 1f       	adc	r25, r25
    3234:	98 2f       	mov	r25, r24
    3236:	89 89       	ldd	r24, Y+17	; 0x11
    3238:	89 0f       	add	r24, r25
    323a:	8a 8b       	std	Y+18, r24	; 0x12
    323c:	09 c0       	rjmp	.+18     	; 0x3250 <KeyPad_U8GetNUM+0x7e>
				while(LOW == pressed)
				{
				    pressed = DIO_U8GetPinValue(KEYPAD_PORT,R) ;
    323e:	88 89       	ldd	r24, Y+16	; 0x10
    3240:	28 2f       	mov	r18, r24
    3242:	30 e0       	ldi	r19, 0x00	; 0
    3244:	82 e0       	ldi	r24, 0x02	; 2
    3246:	90 e0       	ldi	r25, 0x00	; 0
    3248:	b9 01       	movw	r22, r18
    324a:	0e 94 ad 17 	call	0x2f5a	; 0x2f5a <DIO_U8GetPinValue>
    324e:	8f 87       	std	Y+15, r24	; 0x0f
		for (u8 R=0 ; R<KEYPAD_NUM_ROW ; R++){
			u8 pressed = DIO_U8GetPinValue(KEYPAD_PORT,R);
			if (LOW == pressed )
			{
				local_key = (KEYPAD_NUM_ROW*R)+C ;
				while(LOW == pressed)
    3250:	8f 85       	ldd	r24, Y+15	; 0x0f
    3252:	88 23       	and	r24, r24
    3254:	a1 f3       	breq	.-24     	; 0x323e <KeyPad_U8GetNUM+0x6c>
    3256:	80 e0       	ldi	r24, 0x00	; 0
    3258:	90 e0       	ldi	r25, 0x00	; 0
    325a:	a0 ea       	ldi	r26, 0xA0	; 160
    325c:	b0 e4       	ldi	r27, 0x40	; 64
    325e:	8b 87       	std	Y+11, r24	; 0x0b
    3260:	9c 87       	std	Y+12, r25	; 0x0c
    3262:	ad 87       	std	Y+13, r26	; 0x0d
    3264:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3266:	6b 85       	ldd	r22, Y+11	; 0x0b
    3268:	7c 85       	ldd	r23, Y+12	; 0x0c
    326a:	8d 85       	ldd	r24, Y+13	; 0x0d
    326c:	9e 85       	ldd	r25, Y+14	; 0x0e
    326e:	20 e0       	ldi	r18, 0x00	; 0
    3270:	30 e0       	ldi	r19, 0x00	; 0
    3272:	4a ef       	ldi	r20, 0xFA	; 250
    3274:	54 e4       	ldi	r21, 0x44	; 68
    3276:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    327a:	dc 01       	movw	r26, r24
    327c:	cb 01       	movw	r24, r22
    327e:	8f 83       	std	Y+7, r24	; 0x07
    3280:	98 87       	std	Y+8, r25	; 0x08
    3282:	a9 87       	std	Y+9, r26	; 0x09
    3284:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3286:	6f 81       	ldd	r22, Y+7	; 0x07
    3288:	78 85       	ldd	r23, Y+8	; 0x08
    328a:	89 85       	ldd	r24, Y+9	; 0x09
    328c:	9a 85       	ldd	r25, Y+10	; 0x0a
    328e:	20 e0       	ldi	r18, 0x00	; 0
    3290:	30 e0       	ldi	r19, 0x00	; 0
    3292:	40 e8       	ldi	r20, 0x80	; 128
    3294:	5f e3       	ldi	r21, 0x3F	; 63
    3296:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    329a:	88 23       	and	r24, r24
    329c:	2c f4       	brge	.+10     	; 0x32a8 <KeyPad_U8GetNUM+0xd6>
		__ticks = 1;
    329e:	81 e0       	ldi	r24, 0x01	; 1
    32a0:	90 e0       	ldi	r25, 0x00	; 0
    32a2:	9e 83       	std	Y+6, r25	; 0x06
    32a4:	8d 83       	std	Y+5, r24	; 0x05
    32a6:	3f c0       	rjmp	.+126    	; 0x3326 <KeyPad_U8GetNUM+0x154>
	else if (__tmp > 65535)
    32a8:	6f 81       	ldd	r22, Y+7	; 0x07
    32aa:	78 85       	ldd	r23, Y+8	; 0x08
    32ac:	89 85       	ldd	r24, Y+9	; 0x09
    32ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    32b0:	20 e0       	ldi	r18, 0x00	; 0
    32b2:	3f ef       	ldi	r19, 0xFF	; 255
    32b4:	4f e7       	ldi	r20, 0x7F	; 127
    32b6:	57 e4       	ldi	r21, 0x47	; 71
    32b8:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    32bc:	18 16       	cp	r1, r24
    32be:	4c f5       	brge	.+82     	; 0x3312 <KeyPad_U8GetNUM+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    32c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    32c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    32c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	40 e2       	ldi	r20, 0x20	; 32
    32ce:	51 e4       	ldi	r21, 0x41	; 65
    32d0:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    32d4:	dc 01       	movw	r26, r24
    32d6:	cb 01       	movw	r24, r22
    32d8:	bc 01       	movw	r22, r24
    32da:	cd 01       	movw	r24, r26
    32dc:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    32e0:	dc 01       	movw	r26, r24
    32e2:	cb 01       	movw	r24, r22
    32e4:	9e 83       	std	Y+6, r25	; 0x06
    32e6:	8d 83       	std	Y+5, r24	; 0x05
    32e8:	0f c0       	rjmp	.+30     	; 0x3308 <KeyPad_U8GetNUM+0x136>
    32ea:	88 ec       	ldi	r24, 0xC8	; 200
    32ec:	90 e0       	ldi	r25, 0x00	; 0
    32ee:	9c 83       	std	Y+4, r25	; 0x04
    32f0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    32f2:	8b 81       	ldd	r24, Y+3	; 0x03
    32f4:	9c 81       	ldd	r25, Y+4	; 0x04
    32f6:	01 97       	sbiw	r24, 0x01	; 1
    32f8:	f1 f7       	brne	.-4      	; 0x32f6 <KeyPad_U8GetNUM+0x124>
    32fa:	9c 83       	std	Y+4, r25	; 0x04
    32fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32fe:	8d 81       	ldd	r24, Y+5	; 0x05
    3300:	9e 81       	ldd	r25, Y+6	; 0x06
    3302:	01 97       	sbiw	r24, 0x01	; 1
    3304:	9e 83       	std	Y+6, r25	; 0x06
    3306:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3308:	8d 81       	ldd	r24, Y+5	; 0x05
    330a:	9e 81       	ldd	r25, Y+6	; 0x06
    330c:	00 97       	sbiw	r24, 0x00	; 0
    330e:	69 f7       	brne	.-38     	; 0x32ea <KeyPad_U8GetNUM+0x118>
    3310:	14 c0       	rjmp	.+40     	; 0x333a <KeyPad_U8GetNUM+0x168>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3312:	6f 81       	ldd	r22, Y+7	; 0x07
    3314:	78 85       	ldd	r23, Y+8	; 0x08
    3316:	89 85       	ldd	r24, Y+9	; 0x09
    3318:	9a 85       	ldd	r25, Y+10	; 0x0a
    331a:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    331e:	dc 01       	movw	r26, r24
    3320:	cb 01       	movw	r24, r22
    3322:	9e 83       	std	Y+6, r25	; 0x06
    3324:	8d 83       	std	Y+5, r24	; 0x05
    3326:	8d 81       	ldd	r24, Y+5	; 0x05
    3328:	9e 81       	ldd	r25, Y+6	; 0x06
    332a:	9a 83       	std	Y+2, r25	; 0x02
    332c:	89 83       	std	Y+1, r24	; 0x01
    332e:	89 81       	ldd	r24, Y+1	; 0x01
    3330:	9a 81       	ldd	r25, Y+2	; 0x02
    3332:	01 97       	sbiw	r24, 0x01	; 1
    3334:	f1 f7       	brne	.-4      	; 0x3332 <KeyPad_U8GetNUM+0x160>
    3336:	9a 83       	std	Y+2, r25	; 0x02
    3338:	89 83       	std	Y+1, r24	; 0x01

u8 KeyPad_U8GetNUM (void){
	u8 local_key = 50 ;
	for (u8 C=0 ; C<KEYPAD_NUM_COL ; C++){
		DIO_VidSetPinValue( KEYPAD_PORT , C+KEYPAD_NUM_COL , LOW ) ;
		for (u8 R=0 ; R<KEYPAD_NUM_ROW ; R++){
    333a:	88 89       	ldd	r24, Y+16	; 0x10
    333c:	8f 5f       	subi	r24, 0xFF	; 255
    333e:	88 8b       	std	Y+16, r24	; 0x10
    3340:	88 89       	ldd	r24, Y+16	; 0x10
    3342:	84 30       	cpi	r24, 0x04	; 4
    3344:	08 f4       	brcc	.+2      	; 0x3348 <KeyPad_U8GetNUM+0x176>
    3346:	62 cf       	rjmp	.-316    	; 0x320c <KeyPad_U8GetNUM+0x3a>
				    pressed = DIO_U8GetPinValue(KEYPAD_PORT,R) ;
				}//end while loop
				_delay_ms(5);
			}//end if loop
		}//end 1st for loop
	DIO_VidSetPinValue( KEYPAD_PORT , C+KEYPAD_NUM_COL , HIGH );
    3348:	89 89       	ldd	r24, Y+17	; 0x11
    334a:	88 2f       	mov	r24, r24
    334c:	90 e0       	ldi	r25, 0x00	; 0
    334e:	9c 01       	movw	r18, r24
    3350:	2c 5f       	subi	r18, 0xFC	; 252
    3352:	3f 4f       	sbci	r19, 0xFF	; 255
    3354:	82 e0       	ldi	r24, 0x02	; 2
    3356:	90 e0       	ldi	r25, 0x00	; 0
    3358:	b9 01       	movw	r22, r18
    335a:	41 e0       	ldi	r20, 0x01	; 1
    335c:	50 e0       	ldi	r21, 0x00	; 0
    335e:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
#endif


u8 KeyPad_U8GetNUM (void){
	u8 local_key = 50 ;
	for (u8 C=0 ; C<KEYPAD_NUM_COL ; C++){
    3362:	89 89       	ldd	r24, Y+17	; 0x11
    3364:	8f 5f       	subi	r24, 0xFF	; 255
    3366:	89 8b       	std	Y+17, r24	; 0x11
    3368:	89 89       	ldd	r24, Y+17	; 0x11
    336a:	84 30       	cpi	r24, 0x04	; 4
    336c:	08 f4       	brcc	.+2      	; 0x3370 <KeyPad_U8GetNUM+0x19e>
    336e:	3f cf       	rjmp	.-386    	; 0x31ee <KeyPad_U8GetNUM+0x1c>
			}//end if loop
		}//end 1st for loop
	DIO_VidSetPinValue( KEYPAD_PORT , C+KEYPAD_NUM_COL , HIGH );
	}//end 2nd for loop
#ifdef KEYPAD_4_4
     local_key = KeyPad_U8Num( local_key ) ;
    3370:	8a 89       	ldd	r24, Y+18	; 0x12
    3372:	0e 94 42 18 	call	0x3084	; 0x3084 <KeyPad_U8Num>
    3376:	8a 8b       	std	Y+18, r24	; 0x12
#endif
	return local_key ;
    3378:	8a 89       	ldd	r24, Y+18	; 0x12
}//end FUNC KeyPad_U8GetNUM
    337a:	62 96       	adiw	r28, 0x12	; 18
    337c:	0f b6       	in	r0, 0x3f	; 63
    337e:	f8 94       	cli
    3380:	de bf       	out	0x3e, r29	; 62
    3382:	0f be       	out	0x3f, r0	; 63
    3384:	cd bf       	out	0x3d, r28	; 61
    3386:	cf 91       	pop	r28
    3388:	df 91       	pop	r29
    338a:	08 95       	ret

0000338c <LCD_VidSendCommend>:
#include"LCD_cfg.h"
#include"LCD_private.h" 
#include<avr/delay.h>


void LCD_VidSendCommend(u8 Copy_U8Commend){
    338c:	df 93       	push	r29
    338e:	cf 93       	push	r28
    3390:	cd b7       	in	r28, 0x3d	; 61
    3392:	de b7       	in	r29, 0x3e	; 62
    3394:	6d 97       	sbiw	r28, 0x1d	; 29
    3396:	0f b6       	in	r0, 0x3f	; 63
    3398:	f8 94       	cli
    339a:	de bf       	out	0x3e, r29	; 62
    339c:	0f be       	out	0x3f, r0	; 63
    339e:	cd bf       	out	0x3d, r28	; 61
    33a0:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT

/**************to disable RS *** *********************/
	DIO_VidSetPinValue(CONTROL_PORT,RS,LOW);
    33a2:	81 e0       	ldi	r24, 0x01	; 1
    33a4:	60 e0       	ldi	r22, 0x00	; 0
    33a6:	40 e0       	ldi	r20, 0x00	; 0
    33a8:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
/******to out the value of commend on data port *****/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Commend);
    33ac:	80 e0       	ldi	r24, 0x00	; 0
    33ae:	6d 8d       	ldd	r22, Y+29	; 0x1d
    33b0:	0e 94 ef 16 	call	0x2dde	; 0x2dde <DIO_VidSetPortValue>
/*************to make pulse for enable **************/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    33b4:	81 e0       	ldi	r24, 0x01	; 1
    33b6:	61 e0       	ldi	r22, 0x01	; 1
    33b8:	41 e0       	ldi	r20, 0x01	; 1
    33ba:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
    33be:	80 e0       	ldi	r24, 0x00	; 0
    33c0:	90 e0       	ldi	r25, 0x00	; 0
    33c2:	a0 e8       	ldi	r26, 0x80	; 128
    33c4:	bf e3       	ldi	r27, 0x3F	; 63
    33c6:	89 8f       	std	Y+25, r24	; 0x19
    33c8:	9a 8f       	std	Y+26, r25	; 0x1a
    33ca:	ab 8f       	std	Y+27, r26	; 0x1b
    33cc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33ce:	69 8d       	ldd	r22, Y+25	; 0x19
    33d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    33d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    33d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    33d6:	20 e0       	ldi	r18, 0x00	; 0
    33d8:	30 e0       	ldi	r19, 0x00	; 0
    33da:	4a ef       	ldi	r20, 0xFA	; 250
    33dc:	54 e4       	ldi	r21, 0x44	; 68
    33de:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    33e2:	dc 01       	movw	r26, r24
    33e4:	cb 01       	movw	r24, r22
    33e6:	8d 8b       	std	Y+21, r24	; 0x15
    33e8:	9e 8b       	std	Y+22, r25	; 0x16
    33ea:	af 8b       	std	Y+23, r26	; 0x17
    33ec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    33ee:	6d 89       	ldd	r22, Y+21	; 0x15
    33f0:	7e 89       	ldd	r23, Y+22	; 0x16
    33f2:	8f 89       	ldd	r24, Y+23	; 0x17
    33f4:	98 8d       	ldd	r25, Y+24	; 0x18
    33f6:	20 e0       	ldi	r18, 0x00	; 0
    33f8:	30 e0       	ldi	r19, 0x00	; 0
    33fa:	40 e8       	ldi	r20, 0x80	; 128
    33fc:	5f e3       	ldi	r21, 0x3F	; 63
    33fe:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3402:	88 23       	and	r24, r24
    3404:	2c f4       	brge	.+10     	; 0x3410 <LCD_VidSendCommend+0x84>
		__ticks = 1;
    3406:	81 e0       	ldi	r24, 0x01	; 1
    3408:	90 e0       	ldi	r25, 0x00	; 0
    340a:	9c 8b       	std	Y+20, r25	; 0x14
    340c:	8b 8b       	std	Y+19, r24	; 0x13
    340e:	3f c0       	rjmp	.+126    	; 0x348e <LCD_VidSendCommend+0x102>
	else if (__tmp > 65535)
    3410:	6d 89       	ldd	r22, Y+21	; 0x15
    3412:	7e 89       	ldd	r23, Y+22	; 0x16
    3414:	8f 89       	ldd	r24, Y+23	; 0x17
    3416:	98 8d       	ldd	r25, Y+24	; 0x18
    3418:	20 e0       	ldi	r18, 0x00	; 0
    341a:	3f ef       	ldi	r19, 0xFF	; 255
    341c:	4f e7       	ldi	r20, 0x7F	; 127
    341e:	57 e4       	ldi	r21, 0x47	; 71
    3420:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3424:	18 16       	cp	r1, r24
    3426:	4c f5       	brge	.+82     	; 0x347a <LCD_VidSendCommend+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3428:	69 8d       	ldd	r22, Y+25	; 0x19
    342a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    342c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    342e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3430:	20 e0       	ldi	r18, 0x00	; 0
    3432:	30 e0       	ldi	r19, 0x00	; 0
    3434:	40 e2       	ldi	r20, 0x20	; 32
    3436:	51 e4       	ldi	r21, 0x41	; 65
    3438:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    343c:	dc 01       	movw	r26, r24
    343e:	cb 01       	movw	r24, r22
    3440:	bc 01       	movw	r22, r24
    3442:	cd 01       	movw	r24, r26
    3444:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3448:	dc 01       	movw	r26, r24
    344a:	cb 01       	movw	r24, r22
    344c:	9c 8b       	std	Y+20, r25	; 0x14
    344e:	8b 8b       	std	Y+19, r24	; 0x13
    3450:	0f c0       	rjmp	.+30     	; 0x3470 <LCD_VidSendCommend+0xe4>
    3452:	88 ec       	ldi	r24, 0xC8	; 200
    3454:	90 e0       	ldi	r25, 0x00	; 0
    3456:	9a 8b       	std	Y+18, r25	; 0x12
    3458:	89 8b       	std	Y+17, r24	; 0x11
    345a:	89 89       	ldd	r24, Y+17	; 0x11
    345c:	9a 89       	ldd	r25, Y+18	; 0x12
    345e:	01 97       	sbiw	r24, 0x01	; 1
    3460:	f1 f7       	brne	.-4      	; 0x345e <LCD_VidSendCommend+0xd2>
    3462:	9a 8b       	std	Y+18, r25	; 0x12
    3464:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3466:	8b 89       	ldd	r24, Y+19	; 0x13
    3468:	9c 89       	ldd	r25, Y+20	; 0x14
    346a:	01 97       	sbiw	r24, 0x01	; 1
    346c:	9c 8b       	std	Y+20, r25	; 0x14
    346e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3470:	8b 89       	ldd	r24, Y+19	; 0x13
    3472:	9c 89       	ldd	r25, Y+20	; 0x14
    3474:	00 97       	sbiw	r24, 0x00	; 0
    3476:	69 f7       	brne	.-38     	; 0x3452 <LCD_VidSendCommend+0xc6>
    3478:	14 c0       	rjmp	.+40     	; 0x34a2 <LCD_VidSendCommend+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    347a:	6d 89       	ldd	r22, Y+21	; 0x15
    347c:	7e 89       	ldd	r23, Y+22	; 0x16
    347e:	8f 89       	ldd	r24, Y+23	; 0x17
    3480:	98 8d       	ldd	r25, Y+24	; 0x18
    3482:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3486:	dc 01       	movw	r26, r24
    3488:	cb 01       	movw	r24, r22
    348a:	9c 8b       	std	Y+20, r25	; 0x14
    348c:	8b 8b       	std	Y+19, r24	; 0x13
    348e:	8b 89       	ldd	r24, Y+19	; 0x13
    3490:	9c 89       	ldd	r25, Y+20	; 0x14
    3492:	98 8b       	std	Y+16, r25	; 0x10
    3494:	8f 87       	std	Y+15, r24	; 0x0f
    3496:	8f 85       	ldd	r24, Y+15	; 0x0f
    3498:	98 89       	ldd	r25, Y+16	; 0x10
    349a:	01 97       	sbiw	r24, 0x01	; 1
    349c:	f1 f7       	brne	.-4      	; 0x349a <LCD_VidSendCommend+0x10e>
    349e:	98 8b       	std	Y+16, r25	; 0x10
    34a0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    34a2:	81 e0       	ldi	r24, 0x01	; 1
    34a4:	61 e0       	ldi	r22, 0x01	; 1
    34a6:	40 e0       	ldi	r20, 0x00	; 0
    34a8:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
    34ac:	80 e0       	ldi	r24, 0x00	; 0
    34ae:	90 e0       	ldi	r25, 0x00	; 0
    34b0:	a0 e0       	ldi	r26, 0x00	; 0
    34b2:	b0 e4       	ldi	r27, 0x40	; 64
    34b4:	8b 87       	std	Y+11, r24	; 0x0b
    34b6:	9c 87       	std	Y+12, r25	; 0x0c
    34b8:	ad 87       	std	Y+13, r26	; 0x0d
    34ba:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    34be:	7c 85       	ldd	r23, Y+12	; 0x0c
    34c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    34c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    34c4:	20 e0       	ldi	r18, 0x00	; 0
    34c6:	30 e0       	ldi	r19, 0x00	; 0
    34c8:	4a ef       	ldi	r20, 0xFA	; 250
    34ca:	54 e4       	ldi	r21, 0x44	; 68
    34cc:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    34d0:	dc 01       	movw	r26, r24
    34d2:	cb 01       	movw	r24, r22
    34d4:	8f 83       	std	Y+7, r24	; 0x07
    34d6:	98 87       	std	Y+8, r25	; 0x08
    34d8:	a9 87       	std	Y+9, r26	; 0x09
    34da:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    34dc:	6f 81       	ldd	r22, Y+7	; 0x07
    34de:	78 85       	ldd	r23, Y+8	; 0x08
    34e0:	89 85       	ldd	r24, Y+9	; 0x09
    34e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    34e4:	20 e0       	ldi	r18, 0x00	; 0
    34e6:	30 e0       	ldi	r19, 0x00	; 0
    34e8:	40 e8       	ldi	r20, 0x80	; 128
    34ea:	5f e3       	ldi	r21, 0x3F	; 63
    34ec:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    34f0:	88 23       	and	r24, r24
    34f2:	2c f4       	brge	.+10     	; 0x34fe <LCD_VidSendCommend+0x172>
		__ticks = 1;
    34f4:	81 e0       	ldi	r24, 0x01	; 1
    34f6:	90 e0       	ldi	r25, 0x00	; 0
    34f8:	9e 83       	std	Y+6, r25	; 0x06
    34fa:	8d 83       	std	Y+5, r24	; 0x05
    34fc:	3f c0       	rjmp	.+126    	; 0x357c <LCD_VidSendCommend+0x1f0>
	else if (__tmp > 65535)
    34fe:	6f 81       	ldd	r22, Y+7	; 0x07
    3500:	78 85       	ldd	r23, Y+8	; 0x08
    3502:	89 85       	ldd	r24, Y+9	; 0x09
    3504:	9a 85       	ldd	r25, Y+10	; 0x0a
    3506:	20 e0       	ldi	r18, 0x00	; 0
    3508:	3f ef       	ldi	r19, 0xFF	; 255
    350a:	4f e7       	ldi	r20, 0x7F	; 127
    350c:	57 e4       	ldi	r21, 0x47	; 71
    350e:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3512:	18 16       	cp	r1, r24
    3514:	4c f5       	brge	.+82     	; 0x3568 <LCD_VidSendCommend+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3516:	6b 85       	ldd	r22, Y+11	; 0x0b
    3518:	7c 85       	ldd	r23, Y+12	; 0x0c
    351a:	8d 85       	ldd	r24, Y+13	; 0x0d
    351c:	9e 85       	ldd	r25, Y+14	; 0x0e
    351e:	20 e0       	ldi	r18, 0x00	; 0
    3520:	30 e0       	ldi	r19, 0x00	; 0
    3522:	40 e2       	ldi	r20, 0x20	; 32
    3524:	51 e4       	ldi	r21, 0x41	; 65
    3526:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    352a:	dc 01       	movw	r26, r24
    352c:	cb 01       	movw	r24, r22
    352e:	bc 01       	movw	r22, r24
    3530:	cd 01       	movw	r24, r26
    3532:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3536:	dc 01       	movw	r26, r24
    3538:	cb 01       	movw	r24, r22
    353a:	9e 83       	std	Y+6, r25	; 0x06
    353c:	8d 83       	std	Y+5, r24	; 0x05
    353e:	0f c0       	rjmp	.+30     	; 0x355e <LCD_VidSendCommend+0x1d2>
    3540:	88 ec       	ldi	r24, 0xC8	; 200
    3542:	90 e0       	ldi	r25, 0x00	; 0
    3544:	9c 83       	std	Y+4, r25	; 0x04
    3546:	8b 83       	std	Y+3, r24	; 0x03
    3548:	8b 81       	ldd	r24, Y+3	; 0x03
    354a:	9c 81       	ldd	r25, Y+4	; 0x04
    354c:	01 97       	sbiw	r24, 0x01	; 1
    354e:	f1 f7       	brne	.-4      	; 0x354c <LCD_VidSendCommend+0x1c0>
    3550:	9c 83       	std	Y+4, r25	; 0x04
    3552:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3554:	8d 81       	ldd	r24, Y+5	; 0x05
    3556:	9e 81       	ldd	r25, Y+6	; 0x06
    3558:	01 97       	sbiw	r24, 0x01	; 1
    355a:	9e 83       	std	Y+6, r25	; 0x06
    355c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    355e:	8d 81       	ldd	r24, Y+5	; 0x05
    3560:	9e 81       	ldd	r25, Y+6	; 0x06
    3562:	00 97       	sbiw	r24, 0x00	; 0
    3564:	69 f7       	brne	.-38     	; 0x3540 <LCD_VidSendCommend+0x1b4>
    3566:	14 c0       	rjmp	.+40     	; 0x3590 <LCD_VidSendCommend+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3568:	6f 81       	ldd	r22, Y+7	; 0x07
    356a:	78 85       	ldd	r23, Y+8	; 0x08
    356c:	89 85       	ldd	r24, Y+9	; 0x09
    356e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3570:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3574:	dc 01       	movw	r26, r24
    3576:	cb 01       	movw	r24, r22
    3578:	9e 83       	std	Y+6, r25	; 0x06
    357a:	8d 83       	std	Y+5, r24	; 0x05
    357c:	8d 81       	ldd	r24, Y+5	; 0x05
    357e:	9e 81       	ldd	r25, Y+6	; 0x06
    3580:	9a 83       	std	Y+2, r25	; 0x02
    3582:	89 83       	std	Y+1, r24	; 0x01
    3584:	89 81       	ldd	r24, Y+1	; 0x01
    3586:	9a 81       	ldd	r25, Y+2	; 0x02
    3588:	01 97       	sbiw	r24, 0x01	; 1
    358a:	f1 f7       	brne	.-4      	; 0x3588 <LCD_VidSendCommend+0x1fc>
    358c:	9a 83       	std	Y+2, r25	; 0x02
    358e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
	_delay_ms(2);

#endif
}
    3590:	6d 96       	adiw	r28, 0x1d	; 29
    3592:	0f b6       	in	r0, 0x3f	; 63
    3594:	f8 94       	cli
    3596:	de bf       	out	0x3e, r29	; 62
    3598:	0f be       	out	0x3f, r0	; 63
    359a:	cd bf       	out	0x3d, r28	; 61
    359c:	cf 91       	pop	r28
    359e:	df 91       	pop	r29
    35a0:	08 95       	ret

000035a2 <LCD_VidInit>:



void LCD_VidInit (void) {
    35a2:	0f 93       	push	r16
    35a4:	1f 93       	push	r17
    35a6:	df 93       	push	r29
    35a8:	cf 93       	push	r28
    35aa:	cd b7       	in	r28, 0x3d	; 61
    35ac:	de b7       	in	r29, 0x3e	; 62
    35ae:	c4 56       	subi	r28, 0x64	; 100
    35b0:	d0 40       	sbci	r29, 0x00	; 0
    35b2:	0f b6       	in	r0, 0x3f	; 63
    35b4:	f8 94       	cli
    35b6:	de bf       	out	0x3e, r29	; 62
    35b8:	0f be       	out	0x3f, r0	; 63
    35ba:	cd bf       	out	0x3d, r28	; 61

#ifdef EIGHT_BIT

/****to define CONTROL PORT as OUTPUT PINS******/
	DIO_VidSetPinDirection(CONTROL_PORT,RS,HIGH);
    35bc:	81 e0       	ldi	r24, 0x01	; 1
    35be:	60 e0       	ldi	r22, 0x00	; 0
    35c0:	41 e0       	ldi	r20, 0x01	; 1
    35c2:	0e 94 ae 14 	call	0x295c	; 0x295c <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(CONTROL_PORT,E,HIGH);
    35c6:	81 e0       	ldi	r24, 0x01	; 1
    35c8:	61 e0       	ldi	r22, 0x01	; 1
    35ca:	41 e0       	ldi	r20, 0x01	; 1
    35cc:	0e 94 ae 14 	call	0x295c	; 0x295c <DIO_VidSetPinDirection>
/****to define DATA PORT as OUTPUT PINS********/
	DIO_VidSetPortDirection(DATA_PORT,0xff);
    35d0:	80 e0       	ldi	r24, 0x00	; 0
    35d2:	6f ef       	ldi	r22, 0xFF	; 255
    35d4:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <DIO_VidSetPortDirection>
    35d8:	fe 01       	movw	r30, r28
    35da:	ef 59       	subi	r30, 0x9F	; 159
    35dc:	ff 4f       	sbci	r31, 0xFF	; 255
    35de:	80 e0       	ldi	r24, 0x00	; 0
    35e0:	90 e0       	ldi	r25, 0x00	; 0
    35e2:	a0 e2       	ldi	r26, 0x20	; 32
    35e4:	b2 e4       	ldi	r27, 0x42	; 66
    35e6:	80 83       	st	Z, r24
    35e8:	91 83       	std	Z+1, r25	; 0x01
    35ea:	a2 83       	std	Z+2, r26	; 0x02
    35ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35ee:	8e 01       	movw	r16, r28
    35f0:	03 5a       	subi	r16, 0xA3	; 163
    35f2:	1f 4f       	sbci	r17, 0xFF	; 255
    35f4:	fe 01       	movw	r30, r28
    35f6:	ef 59       	subi	r30, 0x9F	; 159
    35f8:	ff 4f       	sbci	r31, 0xFF	; 255
    35fa:	60 81       	ld	r22, Z
    35fc:	71 81       	ldd	r23, Z+1	; 0x01
    35fe:	82 81       	ldd	r24, Z+2	; 0x02
    3600:	93 81       	ldd	r25, Z+3	; 0x03
    3602:	20 e0       	ldi	r18, 0x00	; 0
    3604:	30 e0       	ldi	r19, 0x00	; 0
    3606:	4a ef       	ldi	r20, 0xFA	; 250
    3608:	54 e4       	ldi	r21, 0x44	; 68
    360a:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    360e:	dc 01       	movw	r26, r24
    3610:	cb 01       	movw	r24, r22
    3612:	f8 01       	movw	r30, r16
    3614:	80 83       	st	Z, r24
    3616:	91 83       	std	Z+1, r25	; 0x01
    3618:	a2 83       	std	Z+2, r26	; 0x02
    361a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    361c:	fe 01       	movw	r30, r28
    361e:	e3 5a       	subi	r30, 0xA3	; 163
    3620:	ff 4f       	sbci	r31, 0xFF	; 255
    3622:	60 81       	ld	r22, Z
    3624:	71 81       	ldd	r23, Z+1	; 0x01
    3626:	82 81       	ldd	r24, Z+2	; 0x02
    3628:	93 81       	ldd	r25, Z+3	; 0x03
    362a:	20 e0       	ldi	r18, 0x00	; 0
    362c:	30 e0       	ldi	r19, 0x00	; 0
    362e:	40 e8       	ldi	r20, 0x80	; 128
    3630:	5f e3       	ldi	r21, 0x3F	; 63
    3632:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3636:	88 23       	and	r24, r24
    3638:	44 f4       	brge	.+16     	; 0x364a <LCD_VidInit+0xa8>
		__ticks = 1;
    363a:	fe 01       	movw	r30, r28
    363c:	e5 5a       	subi	r30, 0xA5	; 165
    363e:	ff 4f       	sbci	r31, 0xFF	; 255
    3640:	81 e0       	ldi	r24, 0x01	; 1
    3642:	90 e0       	ldi	r25, 0x00	; 0
    3644:	91 83       	std	Z+1, r25	; 0x01
    3646:	80 83       	st	Z, r24
    3648:	64 c0       	rjmp	.+200    	; 0x3712 <LCD_VidInit+0x170>
	else if (__tmp > 65535)
    364a:	fe 01       	movw	r30, r28
    364c:	e3 5a       	subi	r30, 0xA3	; 163
    364e:	ff 4f       	sbci	r31, 0xFF	; 255
    3650:	60 81       	ld	r22, Z
    3652:	71 81       	ldd	r23, Z+1	; 0x01
    3654:	82 81       	ldd	r24, Z+2	; 0x02
    3656:	93 81       	ldd	r25, Z+3	; 0x03
    3658:	20 e0       	ldi	r18, 0x00	; 0
    365a:	3f ef       	ldi	r19, 0xFF	; 255
    365c:	4f e7       	ldi	r20, 0x7F	; 127
    365e:	57 e4       	ldi	r21, 0x47	; 71
    3660:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3664:	18 16       	cp	r1, r24
    3666:	0c f0       	brlt	.+2      	; 0x366a <LCD_VidInit+0xc8>
    3668:	43 c0       	rjmp	.+134    	; 0x36f0 <LCD_VidInit+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    366a:	fe 01       	movw	r30, r28
    366c:	ef 59       	subi	r30, 0x9F	; 159
    366e:	ff 4f       	sbci	r31, 0xFF	; 255
    3670:	60 81       	ld	r22, Z
    3672:	71 81       	ldd	r23, Z+1	; 0x01
    3674:	82 81       	ldd	r24, Z+2	; 0x02
    3676:	93 81       	ldd	r25, Z+3	; 0x03
    3678:	20 e0       	ldi	r18, 0x00	; 0
    367a:	30 e0       	ldi	r19, 0x00	; 0
    367c:	40 e2       	ldi	r20, 0x20	; 32
    367e:	51 e4       	ldi	r21, 0x41	; 65
    3680:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3684:	dc 01       	movw	r26, r24
    3686:	cb 01       	movw	r24, r22
    3688:	8e 01       	movw	r16, r28
    368a:	05 5a       	subi	r16, 0xA5	; 165
    368c:	1f 4f       	sbci	r17, 0xFF	; 255
    368e:	bc 01       	movw	r22, r24
    3690:	cd 01       	movw	r24, r26
    3692:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3696:	dc 01       	movw	r26, r24
    3698:	cb 01       	movw	r24, r22
    369a:	f8 01       	movw	r30, r16
    369c:	91 83       	std	Z+1, r25	; 0x01
    369e:	80 83       	st	Z, r24
    36a0:	1f c0       	rjmp	.+62     	; 0x36e0 <LCD_VidInit+0x13e>
    36a2:	fe 01       	movw	r30, r28
    36a4:	e7 5a       	subi	r30, 0xA7	; 167
    36a6:	ff 4f       	sbci	r31, 0xFF	; 255
    36a8:	88 ec       	ldi	r24, 0xC8	; 200
    36aa:	90 e0       	ldi	r25, 0x00	; 0
    36ac:	91 83       	std	Z+1, r25	; 0x01
    36ae:	80 83       	st	Z, r24
    36b0:	fe 01       	movw	r30, r28
    36b2:	e7 5a       	subi	r30, 0xA7	; 167
    36b4:	ff 4f       	sbci	r31, 0xFF	; 255
    36b6:	80 81       	ld	r24, Z
    36b8:	91 81       	ldd	r25, Z+1	; 0x01
    36ba:	01 97       	sbiw	r24, 0x01	; 1
    36bc:	f1 f7       	brne	.-4      	; 0x36ba <LCD_VidInit+0x118>
    36be:	fe 01       	movw	r30, r28
    36c0:	e7 5a       	subi	r30, 0xA7	; 167
    36c2:	ff 4f       	sbci	r31, 0xFF	; 255
    36c4:	91 83       	std	Z+1, r25	; 0x01
    36c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36c8:	de 01       	movw	r26, r28
    36ca:	a5 5a       	subi	r26, 0xA5	; 165
    36cc:	bf 4f       	sbci	r27, 0xFF	; 255
    36ce:	fe 01       	movw	r30, r28
    36d0:	e5 5a       	subi	r30, 0xA5	; 165
    36d2:	ff 4f       	sbci	r31, 0xFF	; 255
    36d4:	80 81       	ld	r24, Z
    36d6:	91 81       	ldd	r25, Z+1	; 0x01
    36d8:	01 97       	sbiw	r24, 0x01	; 1
    36da:	11 96       	adiw	r26, 0x01	; 1
    36dc:	9c 93       	st	X, r25
    36de:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36e0:	fe 01       	movw	r30, r28
    36e2:	e5 5a       	subi	r30, 0xA5	; 165
    36e4:	ff 4f       	sbci	r31, 0xFF	; 255
    36e6:	80 81       	ld	r24, Z
    36e8:	91 81       	ldd	r25, Z+1	; 0x01
    36ea:	00 97       	sbiw	r24, 0x00	; 0
    36ec:	d1 f6       	brne	.-76     	; 0x36a2 <LCD_VidInit+0x100>
    36ee:	27 c0       	rjmp	.+78     	; 0x373e <LCD_VidInit+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36f0:	8e 01       	movw	r16, r28
    36f2:	05 5a       	subi	r16, 0xA5	; 165
    36f4:	1f 4f       	sbci	r17, 0xFF	; 255
    36f6:	fe 01       	movw	r30, r28
    36f8:	e3 5a       	subi	r30, 0xA3	; 163
    36fa:	ff 4f       	sbci	r31, 0xFF	; 255
    36fc:	60 81       	ld	r22, Z
    36fe:	71 81       	ldd	r23, Z+1	; 0x01
    3700:	82 81       	ldd	r24, Z+2	; 0x02
    3702:	93 81       	ldd	r25, Z+3	; 0x03
    3704:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3708:	dc 01       	movw	r26, r24
    370a:	cb 01       	movw	r24, r22
    370c:	f8 01       	movw	r30, r16
    370e:	91 83       	std	Z+1, r25	; 0x01
    3710:	80 83       	st	Z, r24
    3712:	de 01       	movw	r26, r28
    3714:	a9 5a       	subi	r26, 0xA9	; 169
    3716:	bf 4f       	sbci	r27, 0xFF	; 255
    3718:	fe 01       	movw	r30, r28
    371a:	e5 5a       	subi	r30, 0xA5	; 165
    371c:	ff 4f       	sbci	r31, 0xFF	; 255
    371e:	80 81       	ld	r24, Z
    3720:	91 81       	ldd	r25, Z+1	; 0x01
    3722:	8d 93       	st	X+, r24
    3724:	9c 93       	st	X, r25
    3726:	fe 01       	movw	r30, r28
    3728:	e9 5a       	subi	r30, 0xA9	; 169
    372a:	ff 4f       	sbci	r31, 0xFF	; 255
    372c:	80 81       	ld	r24, Z
    372e:	91 81       	ldd	r25, Z+1	; 0x01
    3730:	01 97       	sbiw	r24, 0x01	; 1
    3732:	f1 f7       	brne	.-4      	; 0x3730 <LCD_VidInit+0x18e>
    3734:	fe 01       	movw	r30, r28
    3736:	e9 5a       	subi	r30, 0xA9	; 169
    3738:	ff 4f       	sbci	r31, 0xFF	; 255
    373a:	91 83       	std	Z+1, r25	; 0x01
    373c:	80 83       	st	Z, r24
/******to initialize LCD after power***********/
	_delay_ms(40);
	//send function set commend
	LCD_VidSendCommend (FUNC_SET);
    373e:	8c e3       	ldi	r24, 0x3C	; 60
    3740:	0e 94 c6 19 	call	0x338c	; 0x338c <LCD_VidSendCommend>
    3744:	fe 01       	movw	r30, r28
    3746:	ed 5a       	subi	r30, 0xAD	; 173
    3748:	ff 4f       	sbci	r31, 0xFF	; 255
    374a:	80 e0       	ldi	r24, 0x00	; 0
    374c:	90 e0       	ldi	r25, 0x00	; 0
    374e:	a0 e2       	ldi	r26, 0x20	; 32
    3750:	b2 e4       	ldi	r27, 0x42	; 66
    3752:	80 83       	st	Z, r24
    3754:	91 83       	std	Z+1, r25	; 0x01
    3756:	a2 83       	std	Z+2, r26	; 0x02
    3758:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    375a:	8e 01       	movw	r16, r28
    375c:	01 5b       	subi	r16, 0xB1	; 177
    375e:	1f 4f       	sbci	r17, 0xFF	; 255
    3760:	fe 01       	movw	r30, r28
    3762:	ed 5a       	subi	r30, 0xAD	; 173
    3764:	ff 4f       	sbci	r31, 0xFF	; 255
    3766:	60 81       	ld	r22, Z
    3768:	71 81       	ldd	r23, Z+1	; 0x01
    376a:	82 81       	ldd	r24, Z+2	; 0x02
    376c:	93 81       	ldd	r25, Z+3	; 0x03
    376e:	2b ea       	ldi	r18, 0xAB	; 171
    3770:	3a ea       	ldi	r19, 0xAA	; 170
    3772:	4a e2       	ldi	r20, 0x2A	; 42
    3774:	50 e4       	ldi	r21, 0x40	; 64
    3776:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    377a:	dc 01       	movw	r26, r24
    377c:	cb 01       	movw	r24, r22
    377e:	f8 01       	movw	r30, r16
    3780:	80 83       	st	Z, r24
    3782:	91 83       	std	Z+1, r25	; 0x01
    3784:	a2 83       	std	Z+2, r26	; 0x02
    3786:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3788:	fe 01       	movw	r30, r28
    378a:	e1 5b       	subi	r30, 0xB1	; 177
    378c:	ff 4f       	sbci	r31, 0xFF	; 255
    378e:	60 81       	ld	r22, Z
    3790:	71 81       	ldd	r23, Z+1	; 0x01
    3792:	82 81       	ldd	r24, Z+2	; 0x02
    3794:	93 81       	ldd	r25, Z+3	; 0x03
    3796:	20 e0       	ldi	r18, 0x00	; 0
    3798:	30 e0       	ldi	r19, 0x00	; 0
    379a:	40 e8       	ldi	r20, 0x80	; 128
    379c:	5f e3       	ldi	r21, 0x3F	; 63
    379e:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    37a2:	88 23       	and	r24, r24
    37a4:	34 f4       	brge	.+12     	; 0x37b2 <LCD_VidInit+0x210>
		__ticks = 1;
    37a6:	fe 01       	movw	r30, r28
    37a8:	e2 5b       	subi	r30, 0xB2	; 178
    37aa:	ff 4f       	sbci	r31, 0xFF	; 255
    37ac:	81 e0       	ldi	r24, 0x01	; 1
    37ae:	80 83       	st	Z, r24
    37b0:	e0 c0       	rjmp	.+448    	; 0x3972 <LCD_VidInit+0x3d0>
	else if (__tmp > 255)
    37b2:	fe 01       	movw	r30, r28
    37b4:	e1 5b       	subi	r30, 0xB1	; 177
    37b6:	ff 4f       	sbci	r31, 0xFF	; 255
    37b8:	60 81       	ld	r22, Z
    37ba:	71 81       	ldd	r23, Z+1	; 0x01
    37bc:	82 81       	ldd	r24, Z+2	; 0x02
    37be:	93 81       	ldd	r25, Z+3	; 0x03
    37c0:	20 e0       	ldi	r18, 0x00	; 0
    37c2:	30 e0       	ldi	r19, 0x00	; 0
    37c4:	4f e7       	ldi	r20, 0x7F	; 127
    37c6:	53 e4       	ldi	r21, 0x43	; 67
    37c8:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    37cc:	18 16       	cp	r1, r24
    37ce:	0c f0       	brlt	.+2      	; 0x37d2 <LCD_VidInit+0x230>
    37d0:	c0 c0       	rjmp	.+384    	; 0x3952 <LCD_VidInit+0x3b0>
	{
		_delay_ms(__us / 1000.0);
    37d2:	fe 01       	movw	r30, r28
    37d4:	ed 5a       	subi	r30, 0xAD	; 173
    37d6:	ff 4f       	sbci	r31, 0xFF	; 255
    37d8:	60 81       	ld	r22, Z
    37da:	71 81       	ldd	r23, Z+1	; 0x01
    37dc:	82 81       	ldd	r24, Z+2	; 0x02
    37de:	93 81       	ldd	r25, Z+3	; 0x03
    37e0:	20 e0       	ldi	r18, 0x00	; 0
    37e2:	30 e0       	ldi	r19, 0x00	; 0
    37e4:	4a e7       	ldi	r20, 0x7A	; 122
    37e6:	54 e4       	ldi	r21, 0x44	; 68
    37e8:	0e 94 78 11 	call	0x22f0	; 0x22f0 <__divsf3>
    37ec:	dc 01       	movw	r26, r24
    37ee:	cb 01       	movw	r24, r22
    37f0:	fe 01       	movw	r30, r28
    37f2:	e6 5b       	subi	r30, 0xB6	; 182
    37f4:	ff 4f       	sbci	r31, 0xFF	; 255
    37f6:	80 83       	st	Z, r24
    37f8:	91 83       	std	Z+1, r25	; 0x01
    37fa:	a2 83       	std	Z+2, r26	; 0x02
    37fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37fe:	8e 01       	movw	r16, r28
    3800:	0a 5b       	subi	r16, 0xBA	; 186
    3802:	1f 4f       	sbci	r17, 0xFF	; 255
    3804:	fe 01       	movw	r30, r28
    3806:	e6 5b       	subi	r30, 0xB6	; 182
    3808:	ff 4f       	sbci	r31, 0xFF	; 255
    380a:	60 81       	ld	r22, Z
    380c:	71 81       	ldd	r23, Z+1	; 0x01
    380e:	82 81       	ldd	r24, Z+2	; 0x02
    3810:	93 81       	ldd	r25, Z+3	; 0x03
    3812:	20 e0       	ldi	r18, 0x00	; 0
    3814:	30 e0       	ldi	r19, 0x00	; 0
    3816:	4a ef       	ldi	r20, 0xFA	; 250
    3818:	54 e4       	ldi	r21, 0x44	; 68
    381a:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    381e:	dc 01       	movw	r26, r24
    3820:	cb 01       	movw	r24, r22
    3822:	f8 01       	movw	r30, r16
    3824:	80 83       	st	Z, r24
    3826:	91 83       	std	Z+1, r25	; 0x01
    3828:	a2 83       	std	Z+2, r26	; 0x02
    382a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    382c:	fe 01       	movw	r30, r28
    382e:	ea 5b       	subi	r30, 0xBA	; 186
    3830:	ff 4f       	sbci	r31, 0xFF	; 255
    3832:	60 81       	ld	r22, Z
    3834:	71 81       	ldd	r23, Z+1	; 0x01
    3836:	82 81       	ldd	r24, Z+2	; 0x02
    3838:	93 81       	ldd	r25, Z+3	; 0x03
    383a:	20 e0       	ldi	r18, 0x00	; 0
    383c:	30 e0       	ldi	r19, 0x00	; 0
    383e:	40 e8       	ldi	r20, 0x80	; 128
    3840:	5f e3       	ldi	r21, 0x3F	; 63
    3842:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3846:	88 23       	and	r24, r24
    3848:	44 f4       	brge	.+16     	; 0x385a <LCD_VidInit+0x2b8>
		__ticks = 1;
    384a:	fe 01       	movw	r30, r28
    384c:	ec 5b       	subi	r30, 0xBC	; 188
    384e:	ff 4f       	sbci	r31, 0xFF	; 255
    3850:	81 e0       	ldi	r24, 0x01	; 1
    3852:	90 e0       	ldi	r25, 0x00	; 0
    3854:	91 83       	std	Z+1, r25	; 0x01
    3856:	80 83       	st	Z, r24
    3858:	64 c0       	rjmp	.+200    	; 0x3922 <LCD_VidInit+0x380>
	else if (__tmp > 65535)
    385a:	fe 01       	movw	r30, r28
    385c:	ea 5b       	subi	r30, 0xBA	; 186
    385e:	ff 4f       	sbci	r31, 0xFF	; 255
    3860:	60 81       	ld	r22, Z
    3862:	71 81       	ldd	r23, Z+1	; 0x01
    3864:	82 81       	ldd	r24, Z+2	; 0x02
    3866:	93 81       	ldd	r25, Z+3	; 0x03
    3868:	20 e0       	ldi	r18, 0x00	; 0
    386a:	3f ef       	ldi	r19, 0xFF	; 255
    386c:	4f e7       	ldi	r20, 0x7F	; 127
    386e:	57 e4       	ldi	r21, 0x47	; 71
    3870:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3874:	18 16       	cp	r1, r24
    3876:	0c f0       	brlt	.+2      	; 0x387a <LCD_VidInit+0x2d8>
    3878:	43 c0       	rjmp	.+134    	; 0x3900 <LCD_VidInit+0x35e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    387a:	fe 01       	movw	r30, r28
    387c:	e6 5b       	subi	r30, 0xB6	; 182
    387e:	ff 4f       	sbci	r31, 0xFF	; 255
    3880:	60 81       	ld	r22, Z
    3882:	71 81       	ldd	r23, Z+1	; 0x01
    3884:	82 81       	ldd	r24, Z+2	; 0x02
    3886:	93 81       	ldd	r25, Z+3	; 0x03
    3888:	20 e0       	ldi	r18, 0x00	; 0
    388a:	30 e0       	ldi	r19, 0x00	; 0
    388c:	40 e2       	ldi	r20, 0x20	; 32
    388e:	51 e4       	ldi	r21, 0x41	; 65
    3890:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3894:	dc 01       	movw	r26, r24
    3896:	cb 01       	movw	r24, r22
    3898:	8e 01       	movw	r16, r28
    389a:	0c 5b       	subi	r16, 0xBC	; 188
    389c:	1f 4f       	sbci	r17, 0xFF	; 255
    389e:	bc 01       	movw	r22, r24
    38a0:	cd 01       	movw	r24, r26
    38a2:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    38a6:	dc 01       	movw	r26, r24
    38a8:	cb 01       	movw	r24, r22
    38aa:	f8 01       	movw	r30, r16
    38ac:	91 83       	std	Z+1, r25	; 0x01
    38ae:	80 83       	st	Z, r24
    38b0:	1f c0       	rjmp	.+62     	; 0x38f0 <LCD_VidInit+0x34e>
    38b2:	fe 01       	movw	r30, r28
    38b4:	ee 5b       	subi	r30, 0xBE	; 190
    38b6:	ff 4f       	sbci	r31, 0xFF	; 255
    38b8:	88 ec       	ldi	r24, 0xC8	; 200
    38ba:	90 e0       	ldi	r25, 0x00	; 0
    38bc:	91 83       	std	Z+1, r25	; 0x01
    38be:	80 83       	st	Z, r24
    38c0:	fe 01       	movw	r30, r28
    38c2:	ee 5b       	subi	r30, 0xBE	; 190
    38c4:	ff 4f       	sbci	r31, 0xFF	; 255
    38c6:	80 81       	ld	r24, Z
    38c8:	91 81       	ldd	r25, Z+1	; 0x01
    38ca:	01 97       	sbiw	r24, 0x01	; 1
    38cc:	f1 f7       	brne	.-4      	; 0x38ca <LCD_VidInit+0x328>
    38ce:	fe 01       	movw	r30, r28
    38d0:	ee 5b       	subi	r30, 0xBE	; 190
    38d2:	ff 4f       	sbci	r31, 0xFF	; 255
    38d4:	91 83       	std	Z+1, r25	; 0x01
    38d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38d8:	de 01       	movw	r26, r28
    38da:	ac 5b       	subi	r26, 0xBC	; 188
    38dc:	bf 4f       	sbci	r27, 0xFF	; 255
    38de:	fe 01       	movw	r30, r28
    38e0:	ec 5b       	subi	r30, 0xBC	; 188
    38e2:	ff 4f       	sbci	r31, 0xFF	; 255
    38e4:	80 81       	ld	r24, Z
    38e6:	91 81       	ldd	r25, Z+1	; 0x01
    38e8:	01 97       	sbiw	r24, 0x01	; 1
    38ea:	11 96       	adiw	r26, 0x01	; 1
    38ec:	9c 93       	st	X, r25
    38ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38f0:	fe 01       	movw	r30, r28
    38f2:	ec 5b       	subi	r30, 0xBC	; 188
    38f4:	ff 4f       	sbci	r31, 0xFF	; 255
    38f6:	80 81       	ld	r24, Z
    38f8:	91 81       	ldd	r25, Z+1	; 0x01
    38fa:	00 97       	sbiw	r24, 0x00	; 0
    38fc:	d1 f6       	brne	.-76     	; 0x38b2 <LCD_VidInit+0x310>
    38fe:	42 c0       	rjmp	.+132    	; 0x3984 <LCD_VidInit+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3900:	8e 01       	movw	r16, r28
    3902:	0c 5b       	subi	r16, 0xBC	; 188
    3904:	1f 4f       	sbci	r17, 0xFF	; 255
    3906:	fe 01       	movw	r30, r28
    3908:	ea 5b       	subi	r30, 0xBA	; 186
    390a:	ff 4f       	sbci	r31, 0xFF	; 255
    390c:	60 81       	ld	r22, Z
    390e:	71 81       	ldd	r23, Z+1	; 0x01
    3910:	82 81       	ldd	r24, Z+2	; 0x02
    3912:	93 81       	ldd	r25, Z+3	; 0x03
    3914:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3918:	dc 01       	movw	r26, r24
    391a:	cb 01       	movw	r24, r22
    391c:	f8 01       	movw	r30, r16
    391e:	91 83       	std	Z+1, r25	; 0x01
    3920:	80 83       	st	Z, r24
    3922:	de 01       	movw	r26, r28
    3924:	a0 5c       	subi	r26, 0xC0	; 192
    3926:	bf 4f       	sbci	r27, 0xFF	; 255
    3928:	fe 01       	movw	r30, r28
    392a:	ec 5b       	subi	r30, 0xBC	; 188
    392c:	ff 4f       	sbci	r31, 0xFF	; 255
    392e:	80 81       	ld	r24, Z
    3930:	91 81       	ldd	r25, Z+1	; 0x01
    3932:	11 96       	adiw	r26, 0x01	; 1
    3934:	9c 93       	st	X, r25
    3936:	8e 93       	st	-X, r24
    3938:	fe 01       	movw	r30, r28
    393a:	e0 5c       	subi	r30, 0xC0	; 192
    393c:	ff 4f       	sbci	r31, 0xFF	; 255
    393e:	80 81       	ld	r24, Z
    3940:	91 81       	ldd	r25, Z+1	; 0x01
    3942:	01 97       	sbiw	r24, 0x01	; 1
    3944:	f1 f7       	brne	.-4      	; 0x3942 <LCD_VidInit+0x3a0>
    3946:	fe 01       	movw	r30, r28
    3948:	e0 5c       	subi	r30, 0xC0	; 192
    394a:	ff 4f       	sbci	r31, 0xFF	; 255
    394c:	91 83       	std	Z+1, r25	; 0x01
    394e:	80 83       	st	Z, r24
    3950:	19 c0       	rjmp	.+50     	; 0x3984 <LCD_VidInit+0x3e2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3952:	8e 01       	movw	r16, r28
    3954:	02 5b       	subi	r16, 0xB2	; 178
    3956:	1f 4f       	sbci	r17, 0xFF	; 255
    3958:	fe 01       	movw	r30, r28
    395a:	e1 5b       	subi	r30, 0xB1	; 177
    395c:	ff 4f       	sbci	r31, 0xFF	; 255
    395e:	60 81       	ld	r22, Z
    3960:	71 81       	ldd	r23, Z+1	; 0x01
    3962:	82 81       	ldd	r24, Z+2	; 0x02
    3964:	93 81       	ldd	r25, Z+3	; 0x03
    3966:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    396a:	dc 01       	movw	r26, r24
    396c:	cb 01       	movw	r24, r22
    396e:	f8 01       	movw	r30, r16
    3970:	80 83       	st	Z, r24
    3972:	fe 01       	movw	r30, r28
    3974:	e2 5b       	subi	r30, 0xB2	; 178
    3976:	ff 4f       	sbci	r31, 0xFF	; 255
    3978:	80 81       	ld	r24, Z
    397a:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    397c:	8f ad       	ldd	r24, Y+63	; 0x3f
    397e:	8a 95       	dec	r24
    3980:	f1 f7       	brne	.-4      	; 0x397e <LCD_VidInit+0x3dc>
    3982:	8f af       	std	Y+63, r24	; 0x3f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Display_ON & Cursor_OFF Command
	LCD_VidSendCommend(DISPLAY_ON_CURSOR_OFF);
    3984:	8c e0       	ldi	r24, 0x0C	; 12
    3986:	0e 94 c6 19 	call	0x338c	; 0x338c <LCD_VidSendCommend>
    398a:	80 e0       	ldi	r24, 0x00	; 0
    398c:	90 e0       	ldi	r25, 0x00	; 0
    398e:	a0 e2       	ldi	r26, 0x20	; 32
    3990:	b2 e4       	ldi	r27, 0x42	; 66
    3992:	8b af       	std	Y+59, r24	; 0x3b
    3994:	9c af       	std	Y+60, r25	; 0x3c
    3996:	ad af       	std	Y+61, r26	; 0x3d
    3998:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    399a:	6b ad       	ldd	r22, Y+59	; 0x3b
    399c:	7c ad       	ldd	r23, Y+60	; 0x3c
    399e:	8d ad       	ldd	r24, Y+61	; 0x3d
    39a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    39a2:	2b ea       	ldi	r18, 0xAB	; 171
    39a4:	3a ea       	ldi	r19, 0xAA	; 170
    39a6:	4a e2       	ldi	r20, 0x2A	; 42
    39a8:	50 e4       	ldi	r21, 0x40	; 64
    39aa:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    39ae:	dc 01       	movw	r26, r24
    39b0:	cb 01       	movw	r24, r22
    39b2:	8f ab       	std	Y+55, r24	; 0x37
    39b4:	98 af       	std	Y+56, r25	; 0x38
    39b6:	a9 af       	std	Y+57, r26	; 0x39
    39b8:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    39ba:	6f a9       	ldd	r22, Y+55	; 0x37
    39bc:	78 ad       	ldd	r23, Y+56	; 0x38
    39be:	89 ad       	ldd	r24, Y+57	; 0x39
    39c0:	9a ad       	ldd	r25, Y+58	; 0x3a
    39c2:	20 e0       	ldi	r18, 0x00	; 0
    39c4:	30 e0       	ldi	r19, 0x00	; 0
    39c6:	40 e8       	ldi	r20, 0x80	; 128
    39c8:	5f e3       	ldi	r21, 0x3F	; 63
    39ca:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    39ce:	88 23       	and	r24, r24
    39d0:	1c f4       	brge	.+6      	; 0x39d8 <LCD_VidInit+0x436>
		__ticks = 1;
    39d2:	81 e0       	ldi	r24, 0x01	; 1
    39d4:	8e ab       	std	Y+54, r24	; 0x36
    39d6:	91 c0       	rjmp	.+290    	; 0x3afa <LCD_VidInit+0x558>
	else if (__tmp > 255)
    39d8:	6f a9       	ldd	r22, Y+55	; 0x37
    39da:	78 ad       	ldd	r23, Y+56	; 0x38
    39dc:	89 ad       	ldd	r24, Y+57	; 0x39
    39de:	9a ad       	ldd	r25, Y+58	; 0x3a
    39e0:	20 e0       	ldi	r18, 0x00	; 0
    39e2:	30 e0       	ldi	r19, 0x00	; 0
    39e4:	4f e7       	ldi	r20, 0x7F	; 127
    39e6:	53 e4       	ldi	r21, 0x43	; 67
    39e8:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    39ec:	18 16       	cp	r1, r24
    39ee:	0c f0       	brlt	.+2      	; 0x39f2 <LCD_VidInit+0x450>
    39f0:	7b c0       	rjmp	.+246    	; 0x3ae8 <LCD_VidInit+0x546>
	{
		_delay_ms(__us / 1000.0);
    39f2:	6b ad       	ldd	r22, Y+59	; 0x3b
    39f4:	7c ad       	ldd	r23, Y+60	; 0x3c
    39f6:	8d ad       	ldd	r24, Y+61	; 0x3d
    39f8:	9e ad       	ldd	r25, Y+62	; 0x3e
    39fa:	20 e0       	ldi	r18, 0x00	; 0
    39fc:	30 e0       	ldi	r19, 0x00	; 0
    39fe:	4a e7       	ldi	r20, 0x7A	; 122
    3a00:	54 e4       	ldi	r21, 0x44	; 68
    3a02:	0e 94 78 11 	call	0x22f0	; 0x22f0 <__divsf3>
    3a06:	dc 01       	movw	r26, r24
    3a08:	cb 01       	movw	r24, r22
    3a0a:	8a ab       	std	Y+50, r24	; 0x32
    3a0c:	9b ab       	std	Y+51, r25	; 0x33
    3a0e:	ac ab       	std	Y+52, r26	; 0x34
    3a10:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a12:	6a a9       	ldd	r22, Y+50	; 0x32
    3a14:	7b a9       	ldd	r23, Y+51	; 0x33
    3a16:	8c a9       	ldd	r24, Y+52	; 0x34
    3a18:	9d a9       	ldd	r25, Y+53	; 0x35
    3a1a:	20 e0       	ldi	r18, 0x00	; 0
    3a1c:	30 e0       	ldi	r19, 0x00	; 0
    3a1e:	4a ef       	ldi	r20, 0xFA	; 250
    3a20:	54 e4       	ldi	r21, 0x44	; 68
    3a22:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3a26:	dc 01       	movw	r26, r24
    3a28:	cb 01       	movw	r24, r22
    3a2a:	8e a7       	std	Y+46, r24	; 0x2e
    3a2c:	9f a7       	std	Y+47, r25	; 0x2f
    3a2e:	a8 ab       	std	Y+48, r26	; 0x30
    3a30:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    3a32:	6e a5       	ldd	r22, Y+46	; 0x2e
    3a34:	7f a5       	ldd	r23, Y+47	; 0x2f
    3a36:	88 a9       	ldd	r24, Y+48	; 0x30
    3a38:	99 a9       	ldd	r25, Y+49	; 0x31
    3a3a:	20 e0       	ldi	r18, 0x00	; 0
    3a3c:	30 e0       	ldi	r19, 0x00	; 0
    3a3e:	40 e8       	ldi	r20, 0x80	; 128
    3a40:	5f e3       	ldi	r21, 0x3F	; 63
    3a42:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3a46:	88 23       	and	r24, r24
    3a48:	2c f4       	brge	.+10     	; 0x3a54 <LCD_VidInit+0x4b2>
		__ticks = 1;
    3a4a:	81 e0       	ldi	r24, 0x01	; 1
    3a4c:	90 e0       	ldi	r25, 0x00	; 0
    3a4e:	9d a7       	std	Y+45, r25	; 0x2d
    3a50:	8c a7       	std	Y+44, r24	; 0x2c
    3a52:	3f c0       	rjmp	.+126    	; 0x3ad2 <LCD_VidInit+0x530>
	else if (__tmp > 65535)
    3a54:	6e a5       	ldd	r22, Y+46	; 0x2e
    3a56:	7f a5       	ldd	r23, Y+47	; 0x2f
    3a58:	88 a9       	ldd	r24, Y+48	; 0x30
    3a5a:	99 a9       	ldd	r25, Y+49	; 0x31
    3a5c:	20 e0       	ldi	r18, 0x00	; 0
    3a5e:	3f ef       	ldi	r19, 0xFF	; 255
    3a60:	4f e7       	ldi	r20, 0x7F	; 127
    3a62:	57 e4       	ldi	r21, 0x47	; 71
    3a64:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3a68:	18 16       	cp	r1, r24
    3a6a:	4c f5       	brge	.+82     	; 0x3abe <LCD_VidInit+0x51c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a6c:	6a a9       	ldd	r22, Y+50	; 0x32
    3a6e:	7b a9       	ldd	r23, Y+51	; 0x33
    3a70:	8c a9       	ldd	r24, Y+52	; 0x34
    3a72:	9d a9       	ldd	r25, Y+53	; 0x35
    3a74:	20 e0       	ldi	r18, 0x00	; 0
    3a76:	30 e0       	ldi	r19, 0x00	; 0
    3a78:	40 e2       	ldi	r20, 0x20	; 32
    3a7a:	51 e4       	ldi	r21, 0x41	; 65
    3a7c:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3a80:	dc 01       	movw	r26, r24
    3a82:	cb 01       	movw	r24, r22
    3a84:	bc 01       	movw	r22, r24
    3a86:	cd 01       	movw	r24, r26
    3a88:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3a8c:	dc 01       	movw	r26, r24
    3a8e:	cb 01       	movw	r24, r22
    3a90:	9d a7       	std	Y+45, r25	; 0x2d
    3a92:	8c a7       	std	Y+44, r24	; 0x2c
    3a94:	0f c0       	rjmp	.+30     	; 0x3ab4 <LCD_VidInit+0x512>
    3a96:	88 ec       	ldi	r24, 0xC8	; 200
    3a98:	90 e0       	ldi	r25, 0x00	; 0
    3a9a:	9b a7       	std	Y+43, r25	; 0x2b
    3a9c:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3a9e:	8a a5       	ldd	r24, Y+42	; 0x2a
    3aa0:	9b a5       	ldd	r25, Y+43	; 0x2b
    3aa2:	01 97       	sbiw	r24, 0x01	; 1
    3aa4:	f1 f7       	brne	.-4      	; 0x3aa2 <LCD_VidInit+0x500>
    3aa6:	9b a7       	std	Y+43, r25	; 0x2b
    3aa8:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3aaa:	8c a5       	ldd	r24, Y+44	; 0x2c
    3aac:	9d a5       	ldd	r25, Y+45	; 0x2d
    3aae:	01 97       	sbiw	r24, 0x01	; 1
    3ab0:	9d a7       	std	Y+45, r25	; 0x2d
    3ab2:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ab4:	8c a5       	ldd	r24, Y+44	; 0x2c
    3ab6:	9d a5       	ldd	r25, Y+45	; 0x2d
    3ab8:	00 97       	sbiw	r24, 0x00	; 0
    3aba:	69 f7       	brne	.-38     	; 0x3a96 <LCD_VidInit+0x4f4>
    3abc:	24 c0       	rjmp	.+72     	; 0x3b06 <LCD_VidInit+0x564>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3abe:	6e a5       	ldd	r22, Y+46	; 0x2e
    3ac0:	7f a5       	ldd	r23, Y+47	; 0x2f
    3ac2:	88 a9       	ldd	r24, Y+48	; 0x30
    3ac4:	99 a9       	ldd	r25, Y+49	; 0x31
    3ac6:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3aca:	dc 01       	movw	r26, r24
    3acc:	cb 01       	movw	r24, r22
    3ace:	9d a7       	std	Y+45, r25	; 0x2d
    3ad0:	8c a7       	std	Y+44, r24	; 0x2c
    3ad2:	8c a5       	ldd	r24, Y+44	; 0x2c
    3ad4:	9d a5       	ldd	r25, Y+45	; 0x2d
    3ad6:	99 a7       	std	Y+41, r25	; 0x29
    3ad8:	88 a7       	std	Y+40, r24	; 0x28
    3ada:	88 a5       	ldd	r24, Y+40	; 0x28
    3adc:	99 a5       	ldd	r25, Y+41	; 0x29
    3ade:	01 97       	sbiw	r24, 0x01	; 1
    3ae0:	f1 f7       	brne	.-4      	; 0x3ade <LCD_VidInit+0x53c>
    3ae2:	99 a7       	std	Y+41, r25	; 0x29
    3ae4:	88 a7       	std	Y+40, r24	; 0x28
    3ae6:	0f c0       	rjmp	.+30     	; 0x3b06 <LCD_VidInit+0x564>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3ae8:	6f a9       	ldd	r22, Y+55	; 0x37
    3aea:	78 ad       	ldd	r23, Y+56	; 0x38
    3aec:	89 ad       	ldd	r24, Y+57	; 0x39
    3aee:	9a ad       	ldd	r25, Y+58	; 0x3a
    3af0:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3af4:	dc 01       	movw	r26, r24
    3af6:	cb 01       	movw	r24, r22
    3af8:	8e ab       	std	Y+54, r24	; 0x36
    3afa:	8e a9       	ldd	r24, Y+54	; 0x36
    3afc:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3afe:	8f a1       	ldd	r24, Y+39	; 0x27
    3b00:	8a 95       	dec	r24
    3b02:	f1 f7       	brne	.-4      	; 0x3b00 <LCD_VidInit+0x55e>
    3b04:	8f a3       	std	Y+39, r24	; 0x27
	// Delay for more than 39 us
	_delay_us(40);
	// Send Entry Mode Set Command
	LCD_VidSendCommend(ENTERY_MODE);
    3b06:	86 e0       	ldi	r24, 0x06	; 6
    3b08:	0e 94 c6 19 	call	0x338c	; 0x338c <LCD_VidSendCommend>
    3b0c:	80 e0       	ldi	r24, 0x00	; 0
    3b0e:	90 e0       	ldi	r25, 0x00	; 0
    3b10:	a0 e2       	ldi	r26, 0x20	; 32
    3b12:	b2 e4       	ldi	r27, 0x42	; 66
    3b14:	8b a3       	std	Y+35, r24	; 0x23
    3b16:	9c a3       	std	Y+36, r25	; 0x24
    3b18:	ad a3       	std	Y+37, r26	; 0x25
    3b1a:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3b1c:	6b a1       	ldd	r22, Y+35	; 0x23
    3b1e:	7c a1       	ldd	r23, Y+36	; 0x24
    3b20:	8d a1       	ldd	r24, Y+37	; 0x25
    3b22:	9e a1       	ldd	r25, Y+38	; 0x26
    3b24:	2b ea       	ldi	r18, 0xAB	; 171
    3b26:	3a ea       	ldi	r19, 0xAA	; 170
    3b28:	4a e2       	ldi	r20, 0x2A	; 42
    3b2a:	50 e4       	ldi	r21, 0x40	; 64
    3b2c:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3b30:	dc 01       	movw	r26, r24
    3b32:	cb 01       	movw	r24, r22
    3b34:	8f 8f       	std	Y+31, r24	; 0x1f
    3b36:	98 a3       	std	Y+32, r25	; 0x20
    3b38:	a9 a3       	std	Y+33, r26	; 0x21
    3b3a:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    3b3c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3b3e:	78 a1       	ldd	r23, Y+32	; 0x20
    3b40:	89 a1       	ldd	r24, Y+33	; 0x21
    3b42:	9a a1       	ldd	r25, Y+34	; 0x22
    3b44:	20 e0       	ldi	r18, 0x00	; 0
    3b46:	30 e0       	ldi	r19, 0x00	; 0
    3b48:	40 e8       	ldi	r20, 0x80	; 128
    3b4a:	5f e3       	ldi	r21, 0x3F	; 63
    3b4c:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3b50:	88 23       	and	r24, r24
    3b52:	1c f4       	brge	.+6      	; 0x3b5a <LCD_VidInit+0x5b8>
		__ticks = 1;
    3b54:	81 e0       	ldi	r24, 0x01	; 1
    3b56:	8e 8f       	std	Y+30, r24	; 0x1e
    3b58:	91 c0       	rjmp	.+290    	; 0x3c7c <LCD_VidInit+0x6da>
	else if (__tmp > 255)
    3b5a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3b5c:	78 a1       	ldd	r23, Y+32	; 0x20
    3b5e:	89 a1       	ldd	r24, Y+33	; 0x21
    3b60:	9a a1       	ldd	r25, Y+34	; 0x22
    3b62:	20 e0       	ldi	r18, 0x00	; 0
    3b64:	30 e0       	ldi	r19, 0x00	; 0
    3b66:	4f e7       	ldi	r20, 0x7F	; 127
    3b68:	53 e4       	ldi	r21, 0x43	; 67
    3b6a:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3b6e:	18 16       	cp	r1, r24
    3b70:	0c f0       	brlt	.+2      	; 0x3b74 <LCD_VidInit+0x5d2>
    3b72:	7b c0       	rjmp	.+246    	; 0x3c6a <LCD_VidInit+0x6c8>
	{
		_delay_ms(__us / 1000.0);
    3b74:	6b a1       	ldd	r22, Y+35	; 0x23
    3b76:	7c a1       	ldd	r23, Y+36	; 0x24
    3b78:	8d a1       	ldd	r24, Y+37	; 0x25
    3b7a:	9e a1       	ldd	r25, Y+38	; 0x26
    3b7c:	20 e0       	ldi	r18, 0x00	; 0
    3b7e:	30 e0       	ldi	r19, 0x00	; 0
    3b80:	4a e7       	ldi	r20, 0x7A	; 122
    3b82:	54 e4       	ldi	r21, 0x44	; 68
    3b84:	0e 94 78 11 	call	0x22f0	; 0x22f0 <__divsf3>
    3b88:	dc 01       	movw	r26, r24
    3b8a:	cb 01       	movw	r24, r22
    3b8c:	8a 8f       	std	Y+26, r24	; 0x1a
    3b8e:	9b 8f       	std	Y+27, r25	; 0x1b
    3b90:	ac 8f       	std	Y+28, r26	; 0x1c
    3b92:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b94:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3b96:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3b98:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3b9a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3b9c:	20 e0       	ldi	r18, 0x00	; 0
    3b9e:	30 e0       	ldi	r19, 0x00	; 0
    3ba0:	4a ef       	ldi	r20, 0xFA	; 250
    3ba2:	54 e4       	ldi	r21, 0x44	; 68
    3ba4:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3ba8:	dc 01       	movw	r26, r24
    3baa:	cb 01       	movw	r24, r22
    3bac:	8e 8b       	std	Y+22, r24	; 0x16
    3bae:	9f 8b       	std	Y+23, r25	; 0x17
    3bb0:	a8 8f       	std	Y+24, r26	; 0x18
    3bb2:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    3bb4:	6e 89       	ldd	r22, Y+22	; 0x16
    3bb6:	7f 89       	ldd	r23, Y+23	; 0x17
    3bb8:	88 8d       	ldd	r24, Y+24	; 0x18
    3bba:	99 8d       	ldd	r25, Y+25	; 0x19
    3bbc:	20 e0       	ldi	r18, 0x00	; 0
    3bbe:	30 e0       	ldi	r19, 0x00	; 0
    3bc0:	40 e8       	ldi	r20, 0x80	; 128
    3bc2:	5f e3       	ldi	r21, 0x3F	; 63
    3bc4:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3bc8:	88 23       	and	r24, r24
    3bca:	2c f4       	brge	.+10     	; 0x3bd6 <LCD_VidInit+0x634>
		__ticks = 1;
    3bcc:	81 e0       	ldi	r24, 0x01	; 1
    3bce:	90 e0       	ldi	r25, 0x00	; 0
    3bd0:	9d 8b       	std	Y+21, r25	; 0x15
    3bd2:	8c 8b       	std	Y+20, r24	; 0x14
    3bd4:	3f c0       	rjmp	.+126    	; 0x3c54 <LCD_VidInit+0x6b2>
	else if (__tmp > 65535)
    3bd6:	6e 89       	ldd	r22, Y+22	; 0x16
    3bd8:	7f 89       	ldd	r23, Y+23	; 0x17
    3bda:	88 8d       	ldd	r24, Y+24	; 0x18
    3bdc:	99 8d       	ldd	r25, Y+25	; 0x19
    3bde:	20 e0       	ldi	r18, 0x00	; 0
    3be0:	3f ef       	ldi	r19, 0xFF	; 255
    3be2:	4f e7       	ldi	r20, 0x7F	; 127
    3be4:	57 e4       	ldi	r21, 0x47	; 71
    3be6:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3bea:	18 16       	cp	r1, r24
    3bec:	4c f5       	brge	.+82     	; 0x3c40 <LCD_VidInit+0x69e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bee:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3bf0:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3bf2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3bf4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3bf6:	20 e0       	ldi	r18, 0x00	; 0
    3bf8:	30 e0       	ldi	r19, 0x00	; 0
    3bfa:	40 e2       	ldi	r20, 0x20	; 32
    3bfc:	51 e4       	ldi	r21, 0x41	; 65
    3bfe:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3c02:	dc 01       	movw	r26, r24
    3c04:	cb 01       	movw	r24, r22
    3c06:	bc 01       	movw	r22, r24
    3c08:	cd 01       	movw	r24, r26
    3c0a:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3c0e:	dc 01       	movw	r26, r24
    3c10:	cb 01       	movw	r24, r22
    3c12:	9d 8b       	std	Y+21, r25	; 0x15
    3c14:	8c 8b       	std	Y+20, r24	; 0x14
    3c16:	0f c0       	rjmp	.+30     	; 0x3c36 <LCD_VidInit+0x694>
    3c18:	88 ec       	ldi	r24, 0xC8	; 200
    3c1a:	90 e0       	ldi	r25, 0x00	; 0
    3c1c:	9b 8b       	std	Y+19, r25	; 0x13
    3c1e:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3c20:	8a 89       	ldd	r24, Y+18	; 0x12
    3c22:	9b 89       	ldd	r25, Y+19	; 0x13
    3c24:	01 97       	sbiw	r24, 0x01	; 1
    3c26:	f1 f7       	brne	.-4      	; 0x3c24 <LCD_VidInit+0x682>
    3c28:	9b 8b       	std	Y+19, r25	; 0x13
    3c2a:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c2c:	8c 89       	ldd	r24, Y+20	; 0x14
    3c2e:	9d 89       	ldd	r25, Y+21	; 0x15
    3c30:	01 97       	sbiw	r24, 0x01	; 1
    3c32:	9d 8b       	std	Y+21, r25	; 0x15
    3c34:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c36:	8c 89       	ldd	r24, Y+20	; 0x14
    3c38:	9d 89       	ldd	r25, Y+21	; 0x15
    3c3a:	00 97       	sbiw	r24, 0x00	; 0
    3c3c:	69 f7       	brne	.-38     	; 0x3c18 <LCD_VidInit+0x676>
    3c3e:	24 c0       	rjmp	.+72     	; 0x3c88 <LCD_VidInit+0x6e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c40:	6e 89       	ldd	r22, Y+22	; 0x16
    3c42:	7f 89       	ldd	r23, Y+23	; 0x17
    3c44:	88 8d       	ldd	r24, Y+24	; 0x18
    3c46:	99 8d       	ldd	r25, Y+25	; 0x19
    3c48:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3c4c:	dc 01       	movw	r26, r24
    3c4e:	cb 01       	movw	r24, r22
    3c50:	9d 8b       	std	Y+21, r25	; 0x15
    3c52:	8c 8b       	std	Y+20, r24	; 0x14
    3c54:	8c 89       	ldd	r24, Y+20	; 0x14
    3c56:	9d 89       	ldd	r25, Y+21	; 0x15
    3c58:	99 8b       	std	Y+17, r25	; 0x11
    3c5a:	88 8b       	std	Y+16, r24	; 0x10
    3c5c:	88 89       	ldd	r24, Y+16	; 0x10
    3c5e:	99 89       	ldd	r25, Y+17	; 0x11
    3c60:	01 97       	sbiw	r24, 0x01	; 1
    3c62:	f1 f7       	brne	.-4      	; 0x3c60 <LCD_VidInit+0x6be>
    3c64:	99 8b       	std	Y+17, r25	; 0x11
    3c66:	88 8b       	std	Y+16, r24	; 0x10
    3c68:	0f c0       	rjmp	.+30     	; 0x3c88 <LCD_VidInit+0x6e6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3c6a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3c6c:	78 a1       	ldd	r23, Y+32	; 0x20
    3c6e:	89 a1       	ldd	r24, Y+33	; 0x21
    3c70:	9a a1       	ldd	r25, Y+34	; 0x22
    3c72:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3c76:	dc 01       	movw	r26, r24
    3c78:	cb 01       	movw	r24, r22
    3c7a:	8e 8f       	std	Y+30, r24	; 0x1e
    3c7c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3c7e:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3c80:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c82:	8a 95       	dec	r24
    3c84:	f1 f7       	brne	.-4      	; 0x3c82 <LCD_VidInit+0x6e0>
    3c86:	8f 87       	std	Y+15, r24	; 0x0f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
    3c88:	81 e0       	ldi	r24, 0x01	; 1
    3c8a:	0e 94 c6 19 	call	0x338c	; 0x338c <LCD_VidSendCommend>
    3c8e:	80 e0       	ldi	r24, 0x00	; 0
    3c90:	90 e0       	ldi	r25, 0x00	; 0
    3c92:	a0 e0       	ldi	r26, 0x00	; 0
    3c94:	b0 e4       	ldi	r27, 0x40	; 64
    3c96:	8b 87       	std	Y+11, r24	; 0x0b
    3c98:	9c 87       	std	Y+12, r25	; 0x0c
    3c9a:	ad 87       	std	Y+13, r26	; 0x0d
    3c9c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c9e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ca0:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ca2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ca4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ca6:	20 e0       	ldi	r18, 0x00	; 0
    3ca8:	30 e0       	ldi	r19, 0x00	; 0
    3caa:	4a ef       	ldi	r20, 0xFA	; 250
    3cac:	54 e4       	ldi	r21, 0x44	; 68
    3cae:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3cb2:	dc 01       	movw	r26, r24
    3cb4:	cb 01       	movw	r24, r22
    3cb6:	8f 83       	std	Y+7, r24	; 0x07
    3cb8:	98 87       	std	Y+8, r25	; 0x08
    3cba:	a9 87       	std	Y+9, r26	; 0x09
    3cbc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3cbe:	6f 81       	ldd	r22, Y+7	; 0x07
    3cc0:	78 85       	ldd	r23, Y+8	; 0x08
    3cc2:	89 85       	ldd	r24, Y+9	; 0x09
    3cc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cc6:	20 e0       	ldi	r18, 0x00	; 0
    3cc8:	30 e0       	ldi	r19, 0x00	; 0
    3cca:	40 e8       	ldi	r20, 0x80	; 128
    3ccc:	5f e3       	ldi	r21, 0x3F	; 63
    3cce:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3cd2:	88 23       	and	r24, r24
    3cd4:	2c f4       	brge	.+10     	; 0x3ce0 <LCD_VidInit+0x73e>
		__ticks = 1;
    3cd6:	81 e0       	ldi	r24, 0x01	; 1
    3cd8:	90 e0       	ldi	r25, 0x00	; 0
    3cda:	9e 83       	std	Y+6, r25	; 0x06
    3cdc:	8d 83       	std	Y+5, r24	; 0x05
    3cde:	3f c0       	rjmp	.+126    	; 0x3d5e <LCD_VidInit+0x7bc>
	else if (__tmp > 65535)
    3ce0:	6f 81       	ldd	r22, Y+7	; 0x07
    3ce2:	78 85       	ldd	r23, Y+8	; 0x08
    3ce4:	89 85       	ldd	r24, Y+9	; 0x09
    3ce6:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ce8:	20 e0       	ldi	r18, 0x00	; 0
    3cea:	3f ef       	ldi	r19, 0xFF	; 255
    3cec:	4f e7       	ldi	r20, 0x7F	; 127
    3cee:	57 e4       	ldi	r21, 0x47	; 71
    3cf0:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3cf4:	18 16       	cp	r1, r24
    3cf6:	4c f5       	brge	.+82     	; 0x3d4a <LCD_VidInit+0x7a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cf8:	6b 85       	ldd	r22, Y+11	; 0x0b
    3cfa:	7c 85       	ldd	r23, Y+12	; 0x0c
    3cfc:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cfe:	9e 85       	ldd	r25, Y+14	; 0x0e
    3d00:	20 e0       	ldi	r18, 0x00	; 0
    3d02:	30 e0       	ldi	r19, 0x00	; 0
    3d04:	40 e2       	ldi	r20, 0x20	; 32
    3d06:	51 e4       	ldi	r21, 0x41	; 65
    3d08:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3d0c:	dc 01       	movw	r26, r24
    3d0e:	cb 01       	movw	r24, r22
    3d10:	bc 01       	movw	r22, r24
    3d12:	cd 01       	movw	r24, r26
    3d14:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3d18:	dc 01       	movw	r26, r24
    3d1a:	cb 01       	movw	r24, r22
    3d1c:	9e 83       	std	Y+6, r25	; 0x06
    3d1e:	8d 83       	std	Y+5, r24	; 0x05
    3d20:	0f c0       	rjmp	.+30     	; 0x3d40 <LCD_VidInit+0x79e>
    3d22:	88 ec       	ldi	r24, 0xC8	; 200
    3d24:	90 e0       	ldi	r25, 0x00	; 0
    3d26:	9c 83       	std	Y+4, r25	; 0x04
    3d28:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3d2a:	8b 81       	ldd	r24, Y+3	; 0x03
    3d2c:	9c 81       	ldd	r25, Y+4	; 0x04
    3d2e:	01 97       	sbiw	r24, 0x01	; 1
    3d30:	f1 f7       	brne	.-4      	; 0x3d2e <LCD_VidInit+0x78c>
    3d32:	9c 83       	std	Y+4, r25	; 0x04
    3d34:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d36:	8d 81       	ldd	r24, Y+5	; 0x05
    3d38:	9e 81       	ldd	r25, Y+6	; 0x06
    3d3a:	01 97       	sbiw	r24, 0x01	; 1
    3d3c:	9e 83       	std	Y+6, r25	; 0x06
    3d3e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d40:	8d 81       	ldd	r24, Y+5	; 0x05
    3d42:	9e 81       	ldd	r25, Y+6	; 0x06
    3d44:	00 97       	sbiw	r24, 0x00	; 0
    3d46:	69 f7       	brne	.-38     	; 0x3d22 <LCD_VidInit+0x780>
    3d48:	14 c0       	rjmp	.+40     	; 0x3d72 <LCD_VidInit+0x7d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d4a:	6f 81       	ldd	r22, Y+7	; 0x07
    3d4c:	78 85       	ldd	r23, Y+8	; 0x08
    3d4e:	89 85       	ldd	r24, Y+9	; 0x09
    3d50:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d52:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3d56:	dc 01       	movw	r26, r24
    3d58:	cb 01       	movw	r24, r22
    3d5a:	9e 83       	std	Y+6, r25	; 0x06
    3d5c:	8d 83       	std	Y+5, r24	; 0x05
    3d5e:	8d 81       	ldd	r24, Y+5	; 0x05
    3d60:	9e 81       	ldd	r25, Y+6	; 0x06
    3d62:	9a 83       	std	Y+2, r25	; 0x02
    3d64:	89 83       	std	Y+1, r24	; 0x01
    3d66:	89 81       	ldd	r24, Y+1	; 0x01
    3d68:	9a 81       	ldd	r25, Y+2	; 0x02
    3d6a:	01 97       	sbiw	r24, 0x01	; 1
    3d6c:	f1 f7       	brne	.-4      	; 0x3d6a <LCD_VidInit+0x7c8>
    3d6e:	9a 83       	std	Y+2, r25	; 0x02
    3d70:	89 83       	std	Y+1, r24	; 0x01
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
	// Delay for more than 1.53 ms
	_delay_ms(2);
#endif
}
    3d72:	cc 59       	subi	r28, 0x9C	; 156
    3d74:	df 4f       	sbci	r29, 0xFF	; 255
    3d76:	0f b6       	in	r0, 0x3f	; 63
    3d78:	f8 94       	cli
    3d7a:	de bf       	out	0x3e, r29	; 62
    3d7c:	0f be       	out	0x3f, r0	; 63
    3d7e:	cd bf       	out	0x3d, r28	; 61
    3d80:	cf 91       	pop	r28
    3d82:	df 91       	pop	r29
    3d84:	1f 91       	pop	r17
    3d86:	0f 91       	pop	r16
    3d88:	08 95       	ret

00003d8a <LCD_VidSendChar>:

void LCD_VidSendChar(u8 Copy_U8Char){
    3d8a:	df 93       	push	r29
    3d8c:	cf 93       	push	r28
    3d8e:	cd b7       	in	r28, 0x3d	; 61
    3d90:	de b7       	in	r29, 0x3e	; 62
    3d92:	6d 97       	sbiw	r28, 0x1d	; 29
    3d94:	0f b6       	in	r0, 0x3f	; 63
    3d96:	f8 94       	cli
    3d98:	de bf       	out	0x3e, r29	; 62
    3d9a:	0f be       	out	0x3f, r0	; 63
    3d9c:	cd bf       	out	0x3d, r28	; 61
    3d9e:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT
	/******* to define RS / RW ***********/
	DIO_VidSetPinValue(CONTROL_PORT,RS,HIGH);
    3da0:	81 e0       	ldi	r24, 0x01	; 1
    3da2:	60 e0       	ldi	r22, 0x00	; 0
    3da4:	41 e0       	ldi	r20, 0x01	; 1
    3da6:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
	/*to define value of character on port*/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Char);
    3daa:	80 e0       	ldi	r24, 0x00	; 0
    3dac:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3dae:	0e 94 ef 16 	call	0x2dde	; 0x2dde <DIO_VidSetPortValue>
	/*********to make enable pulse*********/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    3db2:	81 e0       	ldi	r24, 0x01	; 1
    3db4:	61 e0       	ldi	r22, 0x01	; 1
    3db6:	41 e0       	ldi	r20, 0x01	; 1
    3db8:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
    3dbc:	80 e0       	ldi	r24, 0x00	; 0
    3dbe:	90 e0       	ldi	r25, 0x00	; 0
    3dc0:	a0 e8       	ldi	r26, 0x80	; 128
    3dc2:	bf e3       	ldi	r27, 0x3F	; 63
    3dc4:	89 8f       	std	Y+25, r24	; 0x19
    3dc6:	9a 8f       	std	Y+26, r25	; 0x1a
    3dc8:	ab 8f       	std	Y+27, r26	; 0x1b
    3dca:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dcc:	69 8d       	ldd	r22, Y+25	; 0x19
    3dce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3dd0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3dd2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3dd4:	20 e0       	ldi	r18, 0x00	; 0
    3dd6:	30 e0       	ldi	r19, 0x00	; 0
    3dd8:	4a ef       	ldi	r20, 0xFA	; 250
    3dda:	54 e4       	ldi	r21, 0x44	; 68
    3ddc:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3de0:	dc 01       	movw	r26, r24
    3de2:	cb 01       	movw	r24, r22
    3de4:	8d 8b       	std	Y+21, r24	; 0x15
    3de6:	9e 8b       	std	Y+22, r25	; 0x16
    3de8:	af 8b       	std	Y+23, r26	; 0x17
    3dea:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3dec:	6d 89       	ldd	r22, Y+21	; 0x15
    3dee:	7e 89       	ldd	r23, Y+22	; 0x16
    3df0:	8f 89       	ldd	r24, Y+23	; 0x17
    3df2:	98 8d       	ldd	r25, Y+24	; 0x18
    3df4:	20 e0       	ldi	r18, 0x00	; 0
    3df6:	30 e0       	ldi	r19, 0x00	; 0
    3df8:	40 e8       	ldi	r20, 0x80	; 128
    3dfa:	5f e3       	ldi	r21, 0x3F	; 63
    3dfc:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3e00:	88 23       	and	r24, r24
    3e02:	2c f4       	brge	.+10     	; 0x3e0e <LCD_VidSendChar+0x84>
		__ticks = 1;
    3e04:	81 e0       	ldi	r24, 0x01	; 1
    3e06:	90 e0       	ldi	r25, 0x00	; 0
    3e08:	9c 8b       	std	Y+20, r25	; 0x14
    3e0a:	8b 8b       	std	Y+19, r24	; 0x13
    3e0c:	3f c0       	rjmp	.+126    	; 0x3e8c <LCD_VidSendChar+0x102>
	else if (__tmp > 65535)
    3e0e:	6d 89       	ldd	r22, Y+21	; 0x15
    3e10:	7e 89       	ldd	r23, Y+22	; 0x16
    3e12:	8f 89       	ldd	r24, Y+23	; 0x17
    3e14:	98 8d       	ldd	r25, Y+24	; 0x18
    3e16:	20 e0       	ldi	r18, 0x00	; 0
    3e18:	3f ef       	ldi	r19, 0xFF	; 255
    3e1a:	4f e7       	ldi	r20, 0x7F	; 127
    3e1c:	57 e4       	ldi	r21, 0x47	; 71
    3e1e:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3e22:	18 16       	cp	r1, r24
    3e24:	4c f5       	brge	.+82     	; 0x3e78 <LCD_VidSendChar+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e26:	69 8d       	ldd	r22, Y+25	; 0x19
    3e28:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3e2a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3e2c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3e2e:	20 e0       	ldi	r18, 0x00	; 0
    3e30:	30 e0       	ldi	r19, 0x00	; 0
    3e32:	40 e2       	ldi	r20, 0x20	; 32
    3e34:	51 e4       	ldi	r21, 0x41	; 65
    3e36:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3e3a:	dc 01       	movw	r26, r24
    3e3c:	cb 01       	movw	r24, r22
    3e3e:	bc 01       	movw	r22, r24
    3e40:	cd 01       	movw	r24, r26
    3e42:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3e46:	dc 01       	movw	r26, r24
    3e48:	cb 01       	movw	r24, r22
    3e4a:	9c 8b       	std	Y+20, r25	; 0x14
    3e4c:	8b 8b       	std	Y+19, r24	; 0x13
    3e4e:	0f c0       	rjmp	.+30     	; 0x3e6e <LCD_VidSendChar+0xe4>
    3e50:	88 ec       	ldi	r24, 0xC8	; 200
    3e52:	90 e0       	ldi	r25, 0x00	; 0
    3e54:	9a 8b       	std	Y+18, r25	; 0x12
    3e56:	89 8b       	std	Y+17, r24	; 0x11
    3e58:	89 89       	ldd	r24, Y+17	; 0x11
    3e5a:	9a 89       	ldd	r25, Y+18	; 0x12
    3e5c:	01 97       	sbiw	r24, 0x01	; 1
    3e5e:	f1 f7       	brne	.-4      	; 0x3e5c <LCD_VidSendChar+0xd2>
    3e60:	9a 8b       	std	Y+18, r25	; 0x12
    3e62:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e64:	8b 89       	ldd	r24, Y+19	; 0x13
    3e66:	9c 89       	ldd	r25, Y+20	; 0x14
    3e68:	01 97       	sbiw	r24, 0x01	; 1
    3e6a:	9c 8b       	std	Y+20, r25	; 0x14
    3e6c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e6e:	8b 89       	ldd	r24, Y+19	; 0x13
    3e70:	9c 89       	ldd	r25, Y+20	; 0x14
    3e72:	00 97       	sbiw	r24, 0x00	; 0
    3e74:	69 f7       	brne	.-38     	; 0x3e50 <LCD_VidSendChar+0xc6>
    3e76:	14 c0       	rjmp	.+40     	; 0x3ea0 <LCD_VidSendChar+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e78:	6d 89       	ldd	r22, Y+21	; 0x15
    3e7a:	7e 89       	ldd	r23, Y+22	; 0x16
    3e7c:	8f 89       	ldd	r24, Y+23	; 0x17
    3e7e:	98 8d       	ldd	r25, Y+24	; 0x18
    3e80:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3e84:	dc 01       	movw	r26, r24
    3e86:	cb 01       	movw	r24, r22
    3e88:	9c 8b       	std	Y+20, r25	; 0x14
    3e8a:	8b 8b       	std	Y+19, r24	; 0x13
    3e8c:	8b 89       	ldd	r24, Y+19	; 0x13
    3e8e:	9c 89       	ldd	r25, Y+20	; 0x14
    3e90:	98 8b       	std	Y+16, r25	; 0x10
    3e92:	8f 87       	std	Y+15, r24	; 0x0f
    3e94:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e96:	98 89       	ldd	r25, Y+16	; 0x10
    3e98:	01 97       	sbiw	r24, 0x01	; 1
    3e9a:	f1 f7       	brne	.-4      	; 0x3e98 <LCD_VidSendChar+0x10e>
    3e9c:	98 8b       	std	Y+16, r25	; 0x10
    3e9e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    3ea0:	81 e0       	ldi	r24, 0x01	; 1
    3ea2:	61 e0       	ldi	r22, 0x01	; 1
    3ea4:	40 e0       	ldi	r20, 0x00	; 0
    3ea6:	0e 94 ef 15 	call	0x2bde	; 0x2bde <DIO_VidSetPinValue>
    3eaa:	80 e0       	ldi	r24, 0x00	; 0
    3eac:	90 e0       	ldi	r25, 0x00	; 0
    3eae:	a0 e0       	ldi	r26, 0x00	; 0
    3eb0:	b0 e4       	ldi	r27, 0x40	; 64
    3eb2:	8b 87       	std	Y+11, r24	; 0x0b
    3eb4:	9c 87       	std	Y+12, r25	; 0x0c
    3eb6:	ad 87       	std	Y+13, r26	; 0x0d
    3eb8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3eba:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ebc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ebe:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ec0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ec2:	20 e0       	ldi	r18, 0x00	; 0
    3ec4:	30 e0       	ldi	r19, 0x00	; 0
    3ec6:	4a ef       	ldi	r20, 0xFA	; 250
    3ec8:	54 e4       	ldi	r21, 0x44	; 68
    3eca:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3ece:	dc 01       	movw	r26, r24
    3ed0:	cb 01       	movw	r24, r22
    3ed2:	8f 83       	std	Y+7, r24	; 0x07
    3ed4:	98 87       	std	Y+8, r25	; 0x08
    3ed6:	a9 87       	std	Y+9, r26	; 0x09
    3ed8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3eda:	6f 81       	ldd	r22, Y+7	; 0x07
    3edc:	78 85       	ldd	r23, Y+8	; 0x08
    3ede:	89 85       	ldd	r24, Y+9	; 0x09
    3ee0:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ee2:	20 e0       	ldi	r18, 0x00	; 0
    3ee4:	30 e0       	ldi	r19, 0x00	; 0
    3ee6:	40 e8       	ldi	r20, 0x80	; 128
    3ee8:	5f e3       	ldi	r21, 0x3F	; 63
    3eea:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    3eee:	88 23       	and	r24, r24
    3ef0:	2c f4       	brge	.+10     	; 0x3efc <LCD_VidSendChar+0x172>
		__ticks = 1;
    3ef2:	81 e0       	ldi	r24, 0x01	; 1
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	9e 83       	std	Y+6, r25	; 0x06
    3ef8:	8d 83       	std	Y+5, r24	; 0x05
    3efa:	3f c0       	rjmp	.+126    	; 0x3f7a <LCD_VidSendChar+0x1f0>
	else if (__tmp > 65535)
    3efc:	6f 81       	ldd	r22, Y+7	; 0x07
    3efe:	78 85       	ldd	r23, Y+8	; 0x08
    3f00:	89 85       	ldd	r24, Y+9	; 0x09
    3f02:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f04:	20 e0       	ldi	r18, 0x00	; 0
    3f06:	3f ef       	ldi	r19, 0xFF	; 255
    3f08:	4f e7       	ldi	r20, 0x7F	; 127
    3f0a:	57 e4       	ldi	r21, 0x47	; 71
    3f0c:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    3f10:	18 16       	cp	r1, r24
    3f12:	4c f5       	brge	.+82     	; 0x3f66 <LCD_VidSendChar+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f14:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f16:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f18:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f1a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f1c:	20 e0       	ldi	r18, 0x00	; 0
    3f1e:	30 e0       	ldi	r19, 0x00	; 0
    3f20:	40 e2       	ldi	r20, 0x20	; 32
    3f22:	51 e4       	ldi	r21, 0x41	; 65
    3f24:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    3f28:	dc 01       	movw	r26, r24
    3f2a:	cb 01       	movw	r24, r22
    3f2c:	bc 01       	movw	r22, r24
    3f2e:	cd 01       	movw	r24, r26
    3f30:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3f34:	dc 01       	movw	r26, r24
    3f36:	cb 01       	movw	r24, r22
    3f38:	9e 83       	std	Y+6, r25	; 0x06
    3f3a:	8d 83       	std	Y+5, r24	; 0x05
    3f3c:	0f c0       	rjmp	.+30     	; 0x3f5c <LCD_VidSendChar+0x1d2>
    3f3e:	88 ec       	ldi	r24, 0xC8	; 200
    3f40:	90 e0       	ldi	r25, 0x00	; 0
    3f42:	9c 83       	std	Y+4, r25	; 0x04
    3f44:	8b 83       	std	Y+3, r24	; 0x03
    3f46:	8b 81       	ldd	r24, Y+3	; 0x03
    3f48:	9c 81       	ldd	r25, Y+4	; 0x04
    3f4a:	01 97       	sbiw	r24, 0x01	; 1
    3f4c:	f1 f7       	brne	.-4      	; 0x3f4a <LCD_VidSendChar+0x1c0>
    3f4e:	9c 83       	std	Y+4, r25	; 0x04
    3f50:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f52:	8d 81       	ldd	r24, Y+5	; 0x05
    3f54:	9e 81       	ldd	r25, Y+6	; 0x06
    3f56:	01 97       	sbiw	r24, 0x01	; 1
    3f58:	9e 83       	std	Y+6, r25	; 0x06
    3f5a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f5c:	8d 81       	ldd	r24, Y+5	; 0x05
    3f5e:	9e 81       	ldd	r25, Y+6	; 0x06
    3f60:	00 97       	sbiw	r24, 0x00	; 0
    3f62:	69 f7       	brne	.-38     	; 0x3f3e <LCD_VidSendChar+0x1b4>
    3f64:	14 c0       	rjmp	.+40     	; 0x3f8e <LCD_VidSendChar+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f66:	6f 81       	ldd	r22, Y+7	; 0x07
    3f68:	78 85       	ldd	r23, Y+8	; 0x08
    3f6a:	89 85       	ldd	r24, Y+9	; 0x09
    3f6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f6e:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3f72:	dc 01       	movw	r26, r24
    3f74:	cb 01       	movw	r24, r22
    3f76:	9e 83       	std	Y+6, r25	; 0x06
    3f78:	8d 83       	std	Y+5, r24	; 0x05
    3f7a:	8d 81       	ldd	r24, Y+5	; 0x05
    3f7c:	9e 81       	ldd	r25, Y+6	; 0x06
    3f7e:	9a 83       	std	Y+2, r25	; 0x02
    3f80:	89 83       	std	Y+1, r24	; 0x01
    3f82:	89 81       	ldd	r24, Y+1	; 0x01
    3f84:	9a 81       	ldd	r25, Y+2	; 0x02
    3f86:	01 97       	sbiw	r24, 0x01	; 1
    3f88:	f1 f7       	brne	.-4      	; 0x3f86 <LCD_VidSendChar+0x1fc>
    3f8a:	9a 83       	std	Y+2, r25	; 0x02
    3f8c:	89 83       	std	Y+1, r24	; 0x01
		DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
		_delay_ms(2);

#endif

}
    3f8e:	6d 96       	adiw	r28, 0x1d	; 29
    3f90:	0f b6       	in	r0, 0x3f	; 63
    3f92:	f8 94       	cli
    3f94:	de bf       	out	0x3e, r29	; 62
    3f96:	0f be       	out	0x3f, r0	; 63
    3f98:	cd bf       	out	0x3d, r28	; 61
    3f9a:	cf 91       	pop	r28
    3f9c:	df 91       	pop	r29
    3f9e:	08 95       	ret

00003fa0 <LCD_VidSendString>:

void LCD_VidSendString(u8 Copy_U8String[] ){
    3fa0:	df 93       	push	r29
    3fa2:	cf 93       	push	r28
    3fa4:	cd b7       	in	r28, 0x3d	; 61
    3fa6:	de b7       	in	r29, 0x3e	; 62
    3fa8:	6b 97       	sbiw	r28, 0x1b	; 27
    3faa:	0f b6       	in	r0, 0x3f	; 63
    3fac:	f8 94       	cli
    3fae:	de bf       	out	0x3e, r29	; 62
    3fb0:	0f be       	out	0x3f, r0	; 63
    3fb2:	cd bf       	out	0x3d, r28	; 61
    3fb4:	9b 8f       	std	Y+27, r25	; 0x1b
    3fb6:	8a 8f       	std	Y+26, r24	; 0x1a
	u8 i=0;
    3fb8:	19 8e       	std	Y+25, r1	; 0x19
    3fba:	d2 c0       	rjmp	.+420    	; 0x4160 <LCD_VidSendString+0x1c0>
	while( Copy_U8String[i] != '\0' ){
		if (15 == i){
    3fbc:	89 8d       	ldd	r24, Y+25	; 0x19
    3fbe:	8f 30       	cpi	r24, 0x0F	; 15
    3fc0:	19 f4       	brne	.+6      	; 0x3fc8 <LCD_VidSendString+0x28>
			LCD_VidSendCommend(LINE_2_START);
    3fc2:	80 ec       	ldi	r24, 0xC0	; 192
    3fc4:	0e 94 c6 19 	call	0x338c	; 0x338c <LCD_VidSendCommend>
		}
		LCD_VidSendChar(Copy_U8String[i]);
    3fc8:	89 8d       	ldd	r24, Y+25	; 0x19
    3fca:	28 2f       	mov	r18, r24
    3fcc:	30 e0       	ldi	r19, 0x00	; 0
    3fce:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3fd0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3fd2:	fc 01       	movw	r30, r24
    3fd4:	e2 0f       	add	r30, r18
    3fd6:	f3 1f       	adc	r31, r19
    3fd8:	80 81       	ld	r24, Z
    3fda:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
    3fde:	80 e0       	ldi	r24, 0x00	; 0
    3fe0:	90 e0       	ldi	r25, 0x00	; 0
    3fe2:	a0 e8       	ldi	r26, 0x80	; 128
    3fe4:	bf e3       	ldi	r27, 0x3F	; 63
    3fe6:	8d 8b       	std	Y+21, r24	; 0x15
    3fe8:	9e 8b       	std	Y+22, r25	; 0x16
    3fea:	af 8b       	std	Y+23, r26	; 0x17
    3fec:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3fee:	6d 89       	ldd	r22, Y+21	; 0x15
    3ff0:	7e 89       	ldd	r23, Y+22	; 0x16
    3ff2:	8f 89       	ldd	r24, Y+23	; 0x17
    3ff4:	98 8d       	ldd	r25, Y+24	; 0x18
    3ff6:	2b ea       	ldi	r18, 0xAB	; 171
    3ff8:	3a ea       	ldi	r19, 0xAA	; 170
    3ffa:	4a e2       	ldi	r20, 0x2A	; 42
    3ffc:	50 e4       	ldi	r21, 0x40	; 64
    3ffe:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    4002:	dc 01       	movw	r26, r24
    4004:	cb 01       	movw	r24, r22
    4006:	89 8b       	std	Y+17, r24	; 0x11
    4008:	9a 8b       	std	Y+18, r25	; 0x12
    400a:	ab 8b       	std	Y+19, r26	; 0x13
    400c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    400e:	69 89       	ldd	r22, Y+17	; 0x11
    4010:	7a 89       	ldd	r23, Y+18	; 0x12
    4012:	8b 89       	ldd	r24, Y+19	; 0x13
    4014:	9c 89       	ldd	r25, Y+20	; 0x14
    4016:	20 e0       	ldi	r18, 0x00	; 0
    4018:	30 e0       	ldi	r19, 0x00	; 0
    401a:	40 e8       	ldi	r20, 0x80	; 128
    401c:	5f e3       	ldi	r21, 0x3F	; 63
    401e:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    4022:	88 23       	and	r24, r24
    4024:	1c f4       	brge	.+6      	; 0x402c <LCD_VidSendString+0x8c>
		__ticks = 1;
    4026:	81 e0       	ldi	r24, 0x01	; 1
    4028:	88 8b       	std	Y+16, r24	; 0x10
    402a:	91 c0       	rjmp	.+290    	; 0x414e <LCD_VidSendString+0x1ae>
	else if (__tmp > 255)
    402c:	69 89       	ldd	r22, Y+17	; 0x11
    402e:	7a 89       	ldd	r23, Y+18	; 0x12
    4030:	8b 89       	ldd	r24, Y+19	; 0x13
    4032:	9c 89       	ldd	r25, Y+20	; 0x14
    4034:	20 e0       	ldi	r18, 0x00	; 0
    4036:	30 e0       	ldi	r19, 0x00	; 0
    4038:	4f e7       	ldi	r20, 0x7F	; 127
    403a:	53 e4       	ldi	r21, 0x43	; 67
    403c:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    4040:	18 16       	cp	r1, r24
    4042:	0c f0       	brlt	.+2      	; 0x4046 <LCD_VidSendString+0xa6>
    4044:	7b c0       	rjmp	.+246    	; 0x413c <LCD_VidSendString+0x19c>
	{
		_delay_ms(__us / 1000.0);
    4046:	6d 89       	ldd	r22, Y+21	; 0x15
    4048:	7e 89       	ldd	r23, Y+22	; 0x16
    404a:	8f 89       	ldd	r24, Y+23	; 0x17
    404c:	98 8d       	ldd	r25, Y+24	; 0x18
    404e:	20 e0       	ldi	r18, 0x00	; 0
    4050:	30 e0       	ldi	r19, 0x00	; 0
    4052:	4a e7       	ldi	r20, 0x7A	; 122
    4054:	54 e4       	ldi	r21, 0x44	; 68
    4056:	0e 94 78 11 	call	0x22f0	; 0x22f0 <__divsf3>
    405a:	dc 01       	movw	r26, r24
    405c:	cb 01       	movw	r24, r22
    405e:	8c 87       	std	Y+12, r24	; 0x0c
    4060:	9d 87       	std	Y+13, r25	; 0x0d
    4062:	ae 87       	std	Y+14, r26	; 0x0e
    4064:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4066:	6c 85       	ldd	r22, Y+12	; 0x0c
    4068:	7d 85       	ldd	r23, Y+13	; 0x0d
    406a:	8e 85       	ldd	r24, Y+14	; 0x0e
    406c:	9f 85       	ldd	r25, Y+15	; 0x0f
    406e:	20 e0       	ldi	r18, 0x00	; 0
    4070:	30 e0       	ldi	r19, 0x00	; 0
    4072:	4a ef       	ldi	r20, 0xFA	; 250
    4074:	54 e4       	ldi	r21, 0x44	; 68
    4076:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    407a:	dc 01       	movw	r26, r24
    407c:	cb 01       	movw	r24, r22
    407e:	88 87       	std	Y+8, r24	; 0x08
    4080:	99 87       	std	Y+9, r25	; 0x09
    4082:	aa 87       	std	Y+10, r26	; 0x0a
    4084:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    4086:	68 85       	ldd	r22, Y+8	; 0x08
    4088:	79 85       	ldd	r23, Y+9	; 0x09
    408a:	8a 85       	ldd	r24, Y+10	; 0x0a
    408c:	9b 85       	ldd	r25, Y+11	; 0x0b
    408e:	20 e0       	ldi	r18, 0x00	; 0
    4090:	30 e0       	ldi	r19, 0x00	; 0
    4092:	40 e8       	ldi	r20, 0x80	; 128
    4094:	5f e3       	ldi	r21, 0x3F	; 63
    4096:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    409a:	88 23       	and	r24, r24
    409c:	2c f4       	brge	.+10     	; 0x40a8 <LCD_VidSendString+0x108>
		__ticks = 1;
    409e:	81 e0       	ldi	r24, 0x01	; 1
    40a0:	90 e0       	ldi	r25, 0x00	; 0
    40a2:	9f 83       	std	Y+7, r25	; 0x07
    40a4:	8e 83       	std	Y+6, r24	; 0x06
    40a6:	3f c0       	rjmp	.+126    	; 0x4126 <LCD_VidSendString+0x186>
	else if (__tmp > 65535)
    40a8:	68 85       	ldd	r22, Y+8	; 0x08
    40aa:	79 85       	ldd	r23, Y+9	; 0x09
    40ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    40ae:	9b 85       	ldd	r25, Y+11	; 0x0b
    40b0:	20 e0       	ldi	r18, 0x00	; 0
    40b2:	3f ef       	ldi	r19, 0xFF	; 255
    40b4:	4f e7       	ldi	r20, 0x7F	; 127
    40b6:	57 e4       	ldi	r21, 0x47	; 71
    40b8:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    40bc:	18 16       	cp	r1, r24
    40be:	4c f5       	brge	.+82     	; 0x4112 <LCD_VidSendString+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40c0:	6c 85       	ldd	r22, Y+12	; 0x0c
    40c2:	7d 85       	ldd	r23, Y+13	; 0x0d
    40c4:	8e 85       	ldd	r24, Y+14	; 0x0e
    40c6:	9f 85       	ldd	r25, Y+15	; 0x0f
    40c8:	20 e0       	ldi	r18, 0x00	; 0
    40ca:	30 e0       	ldi	r19, 0x00	; 0
    40cc:	40 e2       	ldi	r20, 0x20	; 32
    40ce:	51 e4       	ldi	r21, 0x41	; 65
    40d0:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    40d4:	dc 01       	movw	r26, r24
    40d6:	cb 01       	movw	r24, r22
    40d8:	bc 01       	movw	r22, r24
    40da:	cd 01       	movw	r24, r26
    40dc:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    40e0:	dc 01       	movw	r26, r24
    40e2:	cb 01       	movw	r24, r22
    40e4:	9f 83       	std	Y+7, r25	; 0x07
    40e6:	8e 83       	std	Y+6, r24	; 0x06
    40e8:	0f c0       	rjmp	.+30     	; 0x4108 <LCD_VidSendString+0x168>
    40ea:	88 ec       	ldi	r24, 0xC8	; 200
    40ec:	90 e0       	ldi	r25, 0x00	; 0
    40ee:	9d 83       	std	Y+5, r25	; 0x05
    40f0:	8c 83       	std	Y+4, r24	; 0x04
    40f2:	8c 81       	ldd	r24, Y+4	; 0x04
    40f4:	9d 81       	ldd	r25, Y+5	; 0x05
    40f6:	01 97       	sbiw	r24, 0x01	; 1
    40f8:	f1 f7       	brne	.-4      	; 0x40f6 <LCD_VidSendString+0x156>
    40fa:	9d 83       	std	Y+5, r25	; 0x05
    40fc:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40fe:	8e 81       	ldd	r24, Y+6	; 0x06
    4100:	9f 81       	ldd	r25, Y+7	; 0x07
    4102:	01 97       	sbiw	r24, 0x01	; 1
    4104:	9f 83       	std	Y+7, r25	; 0x07
    4106:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4108:	8e 81       	ldd	r24, Y+6	; 0x06
    410a:	9f 81       	ldd	r25, Y+7	; 0x07
    410c:	00 97       	sbiw	r24, 0x00	; 0
    410e:	69 f7       	brne	.-38     	; 0x40ea <LCD_VidSendString+0x14a>
    4110:	24 c0       	rjmp	.+72     	; 0x415a <LCD_VidSendString+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4112:	68 85       	ldd	r22, Y+8	; 0x08
    4114:	79 85       	ldd	r23, Y+9	; 0x09
    4116:	8a 85       	ldd	r24, Y+10	; 0x0a
    4118:	9b 85       	ldd	r25, Y+11	; 0x0b
    411a:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    411e:	dc 01       	movw	r26, r24
    4120:	cb 01       	movw	r24, r22
    4122:	9f 83       	std	Y+7, r25	; 0x07
    4124:	8e 83       	std	Y+6, r24	; 0x06
    4126:	8e 81       	ldd	r24, Y+6	; 0x06
    4128:	9f 81       	ldd	r25, Y+7	; 0x07
    412a:	9b 83       	std	Y+3, r25	; 0x03
    412c:	8a 83       	std	Y+2, r24	; 0x02
    412e:	8a 81       	ldd	r24, Y+2	; 0x02
    4130:	9b 81       	ldd	r25, Y+3	; 0x03
    4132:	01 97       	sbiw	r24, 0x01	; 1
    4134:	f1 f7       	brne	.-4      	; 0x4132 <LCD_VidSendString+0x192>
    4136:	9b 83       	std	Y+3, r25	; 0x03
    4138:	8a 83       	std	Y+2, r24	; 0x02
    413a:	0f c0       	rjmp	.+30     	; 0x415a <LCD_VidSendString+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    413c:	69 89       	ldd	r22, Y+17	; 0x11
    413e:	7a 89       	ldd	r23, Y+18	; 0x12
    4140:	8b 89       	ldd	r24, Y+19	; 0x13
    4142:	9c 89       	ldd	r25, Y+20	; 0x14
    4144:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    4148:	dc 01       	movw	r26, r24
    414a:	cb 01       	movw	r24, r22
    414c:	88 8b       	std	Y+16, r24	; 0x10
    414e:	88 89       	ldd	r24, Y+16	; 0x10
    4150:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4152:	89 81       	ldd	r24, Y+1	; 0x01
    4154:	8a 95       	dec	r24
    4156:	f1 f7       	brne	.-4      	; 0x4154 <LCD_VidSendString+0x1b4>
    4158:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(1);
		i++;
    415a:	89 8d       	ldd	r24, Y+25	; 0x19
    415c:	8f 5f       	subi	r24, 0xFF	; 255
    415e:	89 8f       	std	Y+25, r24	; 0x19

}

void LCD_VidSendString(u8 Copy_U8String[] ){
	u8 i=0;
	while( Copy_U8String[i] != '\0' ){
    4160:	89 8d       	ldd	r24, Y+25	; 0x19
    4162:	28 2f       	mov	r18, r24
    4164:	30 e0       	ldi	r19, 0x00	; 0
    4166:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4168:	9b 8d       	ldd	r25, Y+27	; 0x1b
    416a:	fc 01       	movw	r30, r24
    416c:	e2 0f       	add	r30, r18
    416e:	f3 1f       	adc	r31, r19
    4170:	80 81       	ld	r24, Z
    4172:	88 23       	and	r24, r24
    4174:	09 f0       	breq	.+2      	; 0x4178 <LCD_VidSendString+0x1d8>
    4176:	22 cf       	rjmp	.-444    	; 0x3fbc <LCD_VidSendString+0x1c>
		}
		LCD_VidSendChar(Copy_U8String[i]);
		_delay_us(1);
		i++;
	}//end while
}//end FUNC LCD_VidSendString
    4178:	6b 96       	adiw	r28, 0x1b	; 27
    417a:	0f b6       	in	r0, 0x3f	; 63
    417c:	f8 94       	cli
    417e:	de bf       	out	0x3e, r29	; 62
    4180:	0f be       	out	0x3f, r0	; 63
    4182:	cd bf       	out	0x3d, r28	; 61
    4184:	cf 91       	pop	r28
    4186:	df 91       	pop	r29
    4188:	08 95       	ret

0000418a <LCD_U32Pow>:

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
    418a:	df 93       	push	r29
    418c:	cf 93       	push	r28
    418e:	00 d0       	rcall	.+0      	; 0x4190 <LCD_U32Pow+0x6>
    4190:	00 d0       	rcall	.+0      	; 0x4192 <LCD_U32Pow+0x8>
    4192:	cd b7       	in	r28, 0x3d	; 61
    4194:	de b7       	in	r29, 0x3e	; 62
    4196:	8b 83       	std	Y+3, r24	; 0x03
    4198:	6c 83       	std	Y+4, r22	; 0x04
  u32 local_res = 1 ;
    419a:	81 e0       	ldi	r24, 0x01	; 1
    419c:	90 e0       	ldi	r25, 0x00	; 0
    419e:	9a 83       	std	Y+2, r25	; 0x02
    41a0:	89 83       	std	Y+1, r24	; 0x01
    41a2:	12 c0       	rjmp	.+36     	; 0x41c8 <LCD_U32Pow+0x3e>
  while (Copy_U8Bow >0 ){
	  local_res *= Copy_U8Base ;
    41a4:	8b 81       	ldd	r24, Y+3	; 0x03
    41a6:	28 2f       	mov	r18, r24
    41a8:	30 e0       	ldi	r19, 0x00	; 0
    41aa:	89 81       	ldd	r24, Y+1	; 0x01
    41ac:	9a 81       	ldd	r25, Y+2	; 0x02
    41ae:	ac 01       	movw	r20, r24
    41b0:	42 9f       	mul	r20, r18
    41b2:	c0 01       	movw	r24, r0
    41b4:	43 9f       	mul	r20, r19
    41b6:	90 0d       	add	r25, r0
    41b8:	52 9f       	mul	r21, r18
    41ba:	90 0d       	add	r25, r0
    41bc:	11 24       	eor	r1, r1
    41be:	9a 83       	std	Y+2, r25	; 0x02
    41c0:	89 83       	std	Y+1, r24	; 0x01
	  Copy_U8Bow--;
    41c2:	8c 81       	ldd	r24, Y+4	; 0x04
    41c4:	81 50       	subi	r24, 0x01	; 1
    41c6:	8c 83       	std	Y+4, r24	; 0x04
	}//end while
}//end FUNC LCD_VidSendString

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
  u32 local_res = 1 ;
  while (Copy_U8Bow >0 ){
    41c8:	8c 81       	ldd	r24, Y+4	; 0x04
    41ca:	88 23       	and	r24, r24
    41cc:	59 f7       	brne	.-42     	; 0x41a4 <LCD_U32Pow+0x1a>
	  local_res *= Copy_U8Base ;
	  Copy_U8Bow--;
  }
  return  local_res ;
    41ce:	89 81       	ldd	r24, Y+1	; 0x01
    41d0:	9a 81       	ldd	r25, Y+2	; 0x02
}
    41d2:	0f 90       	pop	r0
    41d4:	0f 90       	pop	r0
    41d6:	0f 90       	pop	r0
    41d8:	0f 90       	pop	r0
    41da:	cf 91       	pop	r28
    41dc:	df 91       	pop	r29
    41de:	08 95       	ret

000041e0 <LCD_VidPrintVar>:

void LCD_VidPrintVar(u64 Copy_U8Var){
    41e0:	2f 92       	push	r2
    41e2:	3f 92       	push	r3
    41e4:	4f 92       	push	r4
    41e6:	5f 92       	push	r5
    41e8:	6f 92       	push	r6
    41ea:	7f 92       	push	r7
    41ec:	8f 92       	push	r8
    41ee:	9f 92       	push	r9
    41f0:	af 92       	push	r10
    41f2:	bf 92       	push	r11
    41f4:	cf 92       	push	r12
    41f6:	df 92       	push	r13
    41f8:	ef 92       	push	r14
    41fa:	ff 92       	push	r15
    41fc:	0f 93       	push	r16
    41fe:	1f 93       	push	r17
    4200:	df 93       	push	r29
    4202:	cf 93       	push	r28
    4204:	cd b7       	in	r28, 0x3d	; 61
    4206:	de b7       	in	r29, 0x3e	; 62
    4208:	c5 54       	subi	r28, 0x45	; 69
    420a:	d0 40       	sbci	r29, 0x00	; 0
    420c:	0f b6       	in	r0, 0x3f	; 63
    420e:	f8 94       	cli
    4210:	de bf       	out	0x3e, r29	; 62
    4212:	0f be       	out	0x3f, r0	; 63
    4214:	cd bf       	out	0x3d, r28	; 61
    4216:	2b 87       	std	Y+11, r18	; 0x0b
    4218:	3c 87       	std	Y+12, r19	; 0x0c
    421a:	4d 87       	std	Y+13, r20	; 0x0d
    421c:	5e 87       	std	Y+14, r21	; 0x0e
    421e:	6f 87       	std	Y+15, r22	; 0x0f
    4220:	78 8b       	std	Y+16, r23	; 0x10
    4222:	89 8b       	std	Y+17, r24	; 0x11
    4224:	9a 8b       	std	Y+18, r25	; 0x12
    u64 local_num = 0 ;
    4226:	1b 82       	std	Y+3, r1	; 0x03
    4228:	1c 82       	std	Y+4, r1	; 0x04
    422a:	1d 82       	std	Y+5, r1	; 0x05
    422c:	1e 82       	std	Y+6, r1	; 0x06
    422e:	1f 82       	std	Y+7, r1	; 0x07
    4230:	18 86       	std	Y+8, r1	; 0x08
    4232:	19 86       	std	Y+9, r1	; 0x09
    4234:	1a 86       	std	Y+10, r1	; 0x0a
    u8 i = 0 ;
    4236:	1a 82       	std	Y+2, r1	; 0x02
    // to check if it 0
	if (0 == Copy_U8Var){
    4238:	8b 85       	ldd	r24, Y+11	; 0x0b
    423a:	9c 85       	ldd	r25, Y+12	; 0x0c
    423c:	89 2b       	or	r24, r25
    423e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4240:	89 2b       	or	r24, r25
    4242:	9e 85       	ldd	r25, Y+14	; 0x0e
    4244:	89 2b       	or	r24, r25
    4246:	9f 85       	ldd	r25, Y+15	; 0x0f
    4248:	89 2b       	or	r24, r25
    424a:	98 89       	ldd	r25, Y+16	; 0x10
    424c:	89 2b       	or	r24, r25
    424e:	99 89       	ldd	r25, Y+17	; 0x11
    4250:	89 2b       	or	r24, r25
    4252:	9a 89       	ldd	r25, Y+18	; 0x12
    4254:	89 2b       	or	r24, r25
    4256:	88 23       	and	r24, r24
    4258:	39 f4       	brne	.+14     	; 0x4268 <LCD_VidPrintVar+0x88>
		LCD_VidSendChar('0');
    425a:	80 e3       	ldi	r24, 0x30	; 48
    425c:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
    4260:	41 c2       	rjmp	.+1154   	; 0x46e4 <LCD_VidPrintVar+0x504>
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
		i++ ;
    4262:	8a 81       	ldd	r24, Y+2	; 0x02
    4264:	8f 5f       	subi	r24, 0xFF	; 255
    4266:	8a 83       	std	Y+2, r24	; 0x02
		LCD_VidSendChar('0');
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
    4268:	8a e0       	ldi	r24, 0x0A	; 10
    426a:	6a 81       	ldd	r22, Y+2	; 0x02
    426c:	0e 94 c5 20 	call	0x418a	; 0x418a <LCD_U32Pow>
    4270:	1c 01       	movw	r2, r24
    4272:	44 24       	eor	r4, r4
    4274:	55 24       	eor	r5, r5
    4276:	66 24       	eor	r6, r6
    4278:	77 24       	eor	r7, r7
    427a:	43 01       	movw	r8, r6
    427c:	2b 85       	ldd	r18, Y+11	; 0x0b
    427e:	3c 85       	ldd	r19, Y+12	; 0x0c
    4280:	4d 85       	ldd	r20, Y+13	; 0x0d
    4282:	5e 85       	ldd	r21, Y+14	; 0x0e
    4284:	6f 85       	ldd	r22, Y+15	; 0x0f
    4286:	78 89       	ldd	r23, Y+16	; 0x10
    4288:	89 89       	ldd	r24, Y+17	; 0x11
    428a:	9a 89       	ldd	r25, Y+18	; 0x12
    428c:	a2 2c       	mov	r10, r2
    428e:	b3 2c       	mov	r11, r3
    4290:	c4 2c       	mov	r12, r4
    4292:	d5 2c       	mov	r13, r5
    4294:	e6 2c       	mov	r14, r6
    4296:	f7 2c       	mov	r15, r7
    4298:	08 2d       	mov	r16, r8
    429a:	19 2d       	mov	r17, r9
    429c:	0e 94 ef 01 	call	0x3de	; 0x3de <__udivdi3>
    42a0:	a2 2e       	mov	r10, r18
    42a2:	b3 2e       	mov	r11, r19
    42a4:	c4 2e       	mov	r12, r20
    42a6:	d5 2e       	mov	r13, r21
    42a8:	e6 2e       	mov	r14, r22
    42aa:	f7 2e       	mov	r15, r23
    42ac:	08 2f       	mov	r16, r24
    42ae:	19 2f       	mov	r17, r25
    42b0:	2a 2d       	mov	r18, r10
    42b2:	3b 2d       	mov	r19, r11
    42b4:	4c 2d       	mov	r20, r12
    42b6:	5d 2d       	mov	r21, r13
    42b8:	6e 2d       	mov	r22, r14
    42ba:	7f 2d       	mov	r23, r15
    42bc:	80 2f       	mov	r24, r16
    42be:	91 2f       	mov	r25, r17
    42c0:	e2 2f       	mov	r30, r18
    42c2:	e3 2b       	or	r30, r19
    42c4:	e4 2b       	or	r30, r20
    42c6:	e5 2b       	or	r30, r21
    42c8:	e6 2b       	or	r30, r22
    42ca:	e7 2b       	or	r30, r23
    42cc:	e8 2b       	or	r30, r24
    42ce:	e9 2b       	or	r30, r25
    42d0:	ee 23       	and	r30, r30
    42d2:	39 f6       	brne	.-114    	; 0x4262 <LCD_VidPrintVar+0x82>
		i++ ;
	}

	s8 copy_i = i-1 ;
    42d4:	8a 81       	ldd	r24, Y+2	; 0x02
    42d6:	81 50       	subi	r24, 0x01	; 1
    42d8:	89 83       	std	Y+1, r24	; 0x01
    42da:	9a c1       	rjmp	.+820    	; 0x4610 <LCD_VidPrintVar+0x430>

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
		local_num += (Copy_U8Var % 10) * ( LCD_U32Pow(10,copy_i) ) ;
    42dc:	ab 84       	ldd	r10, Y+11	; 0x0b
    42de:	bc 84       	ldd	r11, Y+12	; 0x0c
    42e0:	cd 84       	ldd	r12, Y+13	; 0x0d
    42e2:	de 84       	ldd	r13, Y+14	; 0x0e
    42e4:	ef 84       	ldd	r14, Y+15	; 0x0f
    42e6:	f8 88       	ldd	r15, Y+16	; 0x10
    42e8:	09 89       	ldd	r16, Y+17	; 0x11
    42ea:	1a 89       	ldd	r17, Y+18	; 0x12
    42ec:	2a 2d       	mov	r18, r10
    42ee:	3b 2d       	mov	r19, r11
    42f0:	4c 2d       	mov	r20, r12
    42f2:	5d 2d       	mov	r21, r13
    42f4:	6e 2d       	mov	r22, r14
    42f6:	7f 2d       	mov	r23, r15
    42f8:	80 2f       	mov	r24, r16
    42fa:	91 2f       	mov	r25, r17
    42fc:	0f 2e       	mov	r0, r31
    42fe:	fa e0       	ldi	r31, 0x0A	; 10
    4300:	af 2e       	mov	r10, r31
    4302:	f0 2d       	mov	r31, r0
    4304:	bb 24       	eor	r11, r11
    4306:	cc 24       	eor	r12, r12
    4308:	dd 24       	eor	r13, r13
    430a:	ee 24       	eor	r14, r14
    430c:	ff 24       	eor	r15, r15
    430e:	00 e0       	ldi	r16, 0x00	; 0
    4310:	10 e0       	ldi	r17, 0x00	; 0
    4312:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__umoddi3>
    4316:	a2 2e       	mov	r10, r18
    4318:	b3 2e       	mov	r11, r19
    431a:	c4 2e       	mov	r12, r20
    431c:	d5 2e       	mov	r13, r21
    431e:	e6 2e       	mov	r14, r22
    4320:	f7 2e       	mov	r15, r23
    4322:	08 2f       	mov	r16, r24
    4324:	19 2f       	mov	r17, r25
    4326:	2a 2c       	mov	r2, r10
    4328:	3b 2c       	mov	r3, r11
    432a:	4c 2c       	mov	r4, r12
    432c:	5d 2c       	mov	r5, r13
    432e:	6e 2c       	mov	r6, r14
    4330:	7f 2c       	mov	r7, r15
    4332:	80 2e       	mov	r8, r16
    4334:	91 2e       	mov	r9, r17
    4336:	99 81       	ldd	r25, Y+1	; 0x01
    4338:	8a e0       	ldi	r24, 0x0A	; 10
    433a:	69 2f       	mov	r22, r25
    433c:	0e 94 c5 20 	call	0x418a	; 0x418a <LCD_U32Pow>
    4340:	8c 01       	movw	r16, r24
    4342:	20 e0       	ldi	r18, 0x00	; 0
    4344:	30 e0       	ldi	r19, 0x00	; 0
    4346:	40 e0       	ldi	r20, 0x00	; 0
    4348:	50 e0       	ldi	r21, 0x00	; 0
    434a:	60 e0       	ldi	r22, 0x00	; 0
    434c:	70 e0       	ldi	r23, 0x00	; 0
    434e:	0b 8f       	std	Y+27, r16	; 0x1b
    4350:	1c 8f       	std	Y+28, r17	; 0x1c
    4352:	2d 8f       	std	Y+29, r18	; 0x1d
    4354:	3e 8f       	std	Y+30, r19	; 0x1e
    4356:	4f 8f       	std	Y+31, r20	; 0x1f
    4358:	58 a3       	std	Y+32, r21	; 0x20
    435a:	69 a3       	std	Y+33, r22	; 0x21
    435c:	7a a3       	std	Y+34, r23	; 0x22
    435e:	22 2d       	mov	r18, r2
    4360:	33 2d       	mov	r19, r3
    4362:	44 2d       	mov	r20, r4
    4364:	55 2d       	mov	r21, r5
    4366:	66 2d       	mov	r22, r6
    4368:	77 2d       	mov	r23, r7
    436a:	88 2d       	mov	r24, r8
    436c:	99 2d       	mov	r25, r9
    436e:	ab 8c       	ldd	r10, Y+27	; 0x1b
    4370:	bc 8c       	ldd	r11, Y+28	; 0x1c
    4372:	cd 8c       	ldd	r12, Y+29	; 0x1d
    4374:	de 8c       	ldd	r13, Y+30	; 0x1e
    4376:	ef 8c       	ldd	r14, Y+31	; 0x1f
    4378:	f8 a0       	ldd	r15, Y+32	; 0x20
    437a:	09 a1       	ldd	r16, Y+33	; 0x21
    437c:	1a a1       	ldd	r17, Y+34	; 0x22
    437e:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    4382:	a2 2e       	mov	r10, r18
    4384:	b3 2e       	mov	r11, r19
    4386:	c4 2e       	mov	r12, r20
    4388:	d5 2e       	mov	r13, r21
    438a:	e6 2e       	mov	r14, r22
    438c:	f7 2e       	mov	r15, r23
    438e:	08 2f       	mov	r16, r24
    4390:	19 2f       	mov	r17, r25
    4392:	ab 8a       	std	Y+19, r10	; 0x13
    4394:	bc 8a       	std	Y+20, r11	; 0x14
    4396:	cd 8a       	std	Y+21, r12	; 0x15
    4398:	de 8a       	std	Y+22, r13	; 0x16
    439a:	ef 8a       	std	Y+23, r14	; 0x17
    439c:	f8 8e       	std	Y+24, r15	; 0x18
    439e:	09 8f       	std	Y+25, r16	; 0x19
    43a0:	1a 8f       	std	Y+26, r17	; 0x1a
    43a2:	1b 81       	ldd	r17, Y+3	; 0x03
    43a4:	1b a3       	std	Y+35, r17	; 0x23
    43a6:	2c 81       	ldd	r18, Y+4	; 0x04
    43a8:	2c a3       	std	Y+36, r18	; 0x24
    43aa:	3d 81       	ldd	r19, Y+5	; 0x05
    43ac:	3d a3       	std	Y+37, r19	; 0x25
    43ae:	4e 81       	ldd	r20, Y+6	; 0x06
    43b0:	4e a3       	std	Y+38, r20	; 0x26
    43b2:	5f 81       	ldd	r21, Y+7	; 0x07
    43b4:	5f a3       	std	Y+39, r21	; 0x27
    43b6:	68 85       	ldd	r22, Y+8	; 0x08
    43b8:	68 a7       	std	Y+40, r22	; 0x28
    43ba:	79 85       	ldd	r23, Y+9	; 0x09
    43bc:	79 a7       	std	Y+41, r23	; 0x29
    43be:	8a 85       	ldd	r24, Y+10	; 0x0a
    43c0:	8a a7       	std	Y+42, r24	; 0x2a
    43c2:	9b a1       	ldd	r25, Y+35	; 0x23
    43c4:	0b 89       	ldd	r16, Y+19	; 0x13
    43c6:	90 0f       	add	r25, r16
    43c8:	9b a7       	std	Y+43, r25	; 0x2b
    43ca:	11 e0       	ldi	r17, 0x01	; 1
    43cc:	1b ab       	std	Y+51, r17	; 0x33
    43ce:	2b a5       	ldd	r18, Y+43	; 0x2b
    43d0:	3b a1       	ldd	r19, Y+35	; 0x23
    43d2:	23 17       	cp	r18, r19
    43d4:	08 f0       	brcs	.+2      	; 0x43d8 <LCD_VidPrintVar+0x1f8>
    43d6:	1b aa       	std	Y+51, r1	; 0x33
    43d8:	4c a1       	ldd	r20, Y+36	; 0x24
    43da:	5c 89       	ldd	r21, Y+20	; 0x14
    43dc:	45 0f       	add	r20, r21
    43de:	4c a7       	std	Y+44, r20	; 0x2c
    43e0:	61 e0       	ldi	r22, 0x01	; 1
    43e2:	6c ab       	std	Y+52, r22	; 0x34
    43e4:	7c a5       	ldd	r23, Y+44	; 0x2c
    43e6:	8c a1       	ldd	r24, Y+36	; 0x24
    43e8:	78 17       	cp	r23, r24
    43ea:	08 f0       	brcs	.+2      	; 0x43ee <LCD_VidPrintVar+0x20e>
    43ec:	1c aa       	std	Y+52, r1	; 0x34
    43ee:	9b a9       	ldd	r25, Y+51	; 0x33
    43f0:	0c a5       	ldd	r16, Y+44	; 0x2c
    43f2:	90 0f       	add	r25, r16
    43f4:	9d ab       	std	Y+53, r25	; 0x35
    43f6:	11 e0       	ldi	r17, 0x01	; 1
    43f8:	1e ab       	std	Y+54, r17	; 0x36
    43fa:	2d a9       	ldd	r18, Y+53	; 0x35
    43fc:	3c a5       	ldd	r19, Y+44	; 0x2c
    43fe:	23 17       	cp	r18, r19
    4400:	08 f0       	brcs	.+2      	; 0x4404 <LCD_VidPrintVar+0x224>
    4402:	1e aa       	std	Y+54, r1	; 0x36
    4404:	4c a9       	ldd	r20, Y+52	; 0x34
    4406:	5e a9       	ldd	r21, Y+54	; 0x36
    4408:	45 2b       	or	r20, r21
    440a:	4c ab       	std	Y+52, r20	; 0x34
    440c:	6d a9       	ldd	r22, Y+53	; 0x35
    440e:	6c a7       	std	Y+44, r22	; 0x2c
    4410:	7d a1       	ldd	r23, Y+37	; 0x25
    4412:	8d 89       	ldd	r24, Y+21	; 0x15
    4414:	78 0f       	add	r23, r24
    4416:	7d a7       	std	Y+45, r23	; 0x2d
    4418:	91 e0       	ldi	r25, 0x01	; 1
    441a:	9f ab       	std	Y+55, r25	; 0x37
    441c:	0d a5       	ldd	r16, Y+45	; 0x2d
    441e:	1d a1       	ldd	r17, Y+37	; 0x25
    4420:	01 17       	cp	r16, r17
    4422:	08 f0       	brcs	.+2      	; 0x4426 <LCD_VidPrintVar+0x246>
    4424:	1f aa       	std	Y+55, r1	; 0x37
    4426:	2c a9       	ldd	r18, Y+52	; 0x34
    4428:	3d a5       	ldd	r19, Y+45	; 0x2d
    442a:	23 0f       	add	r18, r19
    442c:	28 af       	std	Y+56, r18	; 0x38
    442e:	41 e0       	ldi	r20, 0x01	; 1
    4430:	49 af       	std	Y+57, r20	; 0x39
    4432:	58 ad       	ldd	r21, Y+56	; 0x38
    4434:	6d a5       	ldd	r22, Y+45	; 0x2d
    4436:	56 17       	cp	r21, r22
    4438:	08 f0       	brcs	.+2      	; 0x443c <LCD_VidPrintVar+0x25c>
    443a:	19 ae       	std	Y+57, r1	; 0x39
    443c:	7f a9       	ldd	r23, Y+55	; 0x37
    443e:	89 ad       	ldd	r24, Y+57	; 0x39
    4440:	78 2b       	or	r23, r24
    4442:	7f ab       	std	Y+55, r23	; 0x37
    4444:	98 ad       	ldd	r25, Y+56	; 0x38
    4446:	9d a7       	std	Y+45, r25	; 0x2d
    4448:	0e a1       	ldd	r16, Y+38	; 0x26
    444a:	1e 89       	ldd	r17, Y+22	; 0x16
    444c:	01 0f       	add	r16, r17
    444e:	0e a7       	std	Y+46, r16	; 0x2e
    4450:	21 e0       	ldi	r18, 0x01	; 1
    4452:	2a af       	std	Y+58, r18	; 0x3a
    4454:	3e a5       	ldd	r19, Y+46	; 0x2e
    4456:	4e a1       	ldd	r20, Y+38	; 0x26
    4458:	34 17       	cp	r19, r20
    445a:	08 f0       	brcs	.+2      	; 0x445e <LCD_VidPrintVar+0x27e>
    445c:	1a ae       	std	Y+58, r1	; 0x3a
    445e:	5f a9       	ldd	r21, Y+55	; 0x37
    4460:	6e a5       	ldd	r22, Y+46	; 0x2e
    4462:	56 0f       	add	r21, r22
    4464:	5b af       	std	Y+59, r21	; 0x3b
    4466:	71 e0       	ldi	r23, 0x01	; 1
    4468:	7c af       	std	Y+60, r23	; 0x3c
    446a:	8b ad       	ldd	r24, Y+59	; 0x3b
    446c:	9e a5       	ldd	r25, Y+46	; 0x2e
    446e:	89 17       	cp	r24, r25
    4470:	08 f0       	brcs	.+2      	; 0x4474 <LCD_VidPrintVar+0x294>
    4472:	1c ae       	std	Y+60, r1	; 0x3c
    4474:	0a ad       	ldd	r16, Y+58	; 0x3a
    4476:	1c ad       	ldd	r17, Y+60	; 0x3c
    4478:	01 2b       	or	r16, r17
    447a:	0a af       	std	Y+58, r16	; 0x3a
    447c:	2b ad       	ldd	r18, Y+59	; 0x3b
    447e:	2e a7       	std	Y+46, r18	; 0x2e
    4480:	3f a1       	ldd	r19, Y+39	; 0x27
    4482:	4f 89       	ldd	r20, Y+23	; 0x17
    4484:	34 0f       	add	r19, r20
    4486:	3f a7       	std	Y+47, r19	; 0x2f
    4488:	51 e0       	ldi	r21, 0x01	; 1
    448a:	5d af       	std	Y+61, r21	; 0x3d
    448c:	6f a5       	ldd	r22, Y+47	; 0x2f
    448e:	7f a1       	ldd	r23, Y+39	; 0x27
    4490:	67 17       	cp	r22, r23
    4492:	08 f0       	brcs	.+2      	; 0x4496 <LCD_VidPrintVar+0x2b6>
    4494:	1d ae       	std	Y+61, r1	; 0x3d
    4496:	8a ad       	ldd	r24, Y+58	; 0x3a
    4498:	9f a5       	ldd	r25, Y+47	; 0x2f
    449a:	89 0f       	add	r24, r25
    449c:	8e af       	std	Y+62, r24	; 0x3e
    449e:	01 e0       	ldi	r16, 0x01	; 1
    44a0:	0f af       	std	Y+63, r16	; 0x3f
    44a2:	1e ad       	ldd	r17, Y+62	; 0x3e
    44a4:	2f a5       	ldd	r18, Y+47	; 0x2f
    44a6:	12 17       	cp	r17, r18
    44a8:	08 f0       	brcs	.+2      	; 0x44ac <LCD_VidPrintVar+0x2cc>
    44aa:	1f ae       	std	Y+63, r1	; 0x3f
    44ac:	3d ad       	ldd	r19, Y+61	; 0x3d
    44ae:	4f ad       	ldd	r20, Y+63	; 0x3f
    44b0:	34 2b       	or	r19, r20
    44b2:	3d af       	std	Y+61, r19	; 0x3d
    44b4:	5e ad       	ldd	r21, Y+62	; 0x3e
    44b6:	5f a7       	std	Y+47, r21	; 0x2f
    44b8:	68 a5       	ldd	r22, Y+40	; 0x28
    44ba:	78 8d       	ldd	r23, Y+24	; 0x18
    44bc:	67 0f       	add	r22, r23
    44be:	68 ab       	std	Y+48, r22	; 0x30
    44c0:	81 e0       	ldi	r24, 0x01	; 1
    44c2:	21 96       	adiw	r28, 0x01	; 1
    44c4:	8f af       	std	Y+63, r24	; 0x3f
    44c6:	21 97       	sbiw	r28, 0x01	; 1
    44c8:	98 a9       	ldd	r25, Y+48	; 0x30
    44ca:	08 a5       	ldd	r16, Y+40	; 0x28
    44cc:	90 17       	cp	r25, r16
    44ce:	18 f0       	brcs	.+6      	; 0x44d6 <LCD_VidPrintVar+0x2f6>
    44d0:	21 96       	adiw	r28, 0x01	; 1
    44d2:	1f ae       	std	Y+63, r1	; 0x3f
    44d4:	21 97       	sbiw	r28, 0x01	; 1
    44d6:	1d ad       	ldd	r17, Y+61	; 0x3d
    44d8:	28 a9       	ldd	r18, Y+48	; 0x30
    44da:	12 0f       	add	r17, r18
    44dc:	22 96       	adiw	r28, 0x02	; 2
    44de:	1f af       	std	Y+63, r17	; 0x3f
    44e0:	22 97       	sbiw	r28, 0x02	; 2
    44e2:	31 e0       	ldi	r19, 0x01	; 1
    44e4:	23 96       	adiw	r28, 0x03	; 3
    44e6:	3f af       	std	Y+63, r19	; 0x3f
    44e8:	23 97       	sbiw	r28, 0x03	; 3
    44ea:	22 96       	adiw	r28, 0x02	; 2
    44ec:	4f ad       	ldd	r20, Y+63	; 0x3f
    44ee:	22 97       	sbiw	r28, 0x02	; 2
    44f0:	58 a9       	ldd	r21, Y+48	; 0x30
    44f2:	45 17       	cp	r20, r21
    44f4:	18 f0       	brcs	.+6      	; 0x44fc <LCD_VidPrintVar+0x31c>
    44f6:	23 96       	adiw	r28, 0x03	; 3
    44f8:	1f ae       	std	Y+63, r1	; 0x3f
    44fa:	23 97       	sbiw	r28, 0x03	; 3
    44fc:	21 96       	adiw	r28, 0x01	; 1
    44fe:	6f ad       	ldd	r22, Y+63	; 0x3f
    4500:	21 97       	sbiw	r28, 0x01	; 1
    4502:	23 96       	adiw	r28, 0x03	; 3
    4504:	7f ad       	ldd	r23, Y+63	; 0x3f
    4506:	23 97       	sbiw	r28, 0x03	; 3
    4508:	67 2b       	or	r22, r23
    450a:	21 96       	adiw	r28, 0x01	; 1
    450c:	6f af       	std	Y+63, r22	; 0x3f
    450e:	21 97       	sbiw	r28, 0x01	; 1
    4510:	22 96       	adiw	r28, 0x02	; 2
    4512:	8f ad       	ldd	r24, Y+63	; 0x3f
    4514:	22 97       	sbiw	r28, 0x02	; 2
    4516:	88 ab       	std	Y+48, r24	; 0x30
    4518:	99 a5       	ldd	r25, Y+41	; 0x29
    451a:	09 8d       	ldd	r16, Y+25	; 0x19
    451c:	90 0f       	add	r25, r16
    451e:	99 ab       	std	Y+49, r25	; 0x31
    4520:	11 e0       	ldi	r17, 0x01	; 1
    4522:	24 96       	adiw	r28, 0x04	; 4
    4524:	1f af       	std	Y+63, r17	; 0x3f
    4526:	24 97       	sbiw	r28, 0x04	; 4
    4528:	29 a9       	ldd	r18, Y+49	; 0x31
    452a:	39 a5       	ldd	r19, Y+41	; 0x29
    452c:	23 17       	cp	r18, r19
    452e:	18 f0       	brcs	.+6      	; 0x4536 <LCD_VidPrintVar+0x356>
    4530:	24 96       	adiw	r28, 0x04	; 4
    4532:	1f ae       	std	Y+63, r1	; 0x3f
    4534:	24 97       	sbiw	r28, 0x04	; 4
    4536:	21 96       	adiw	r28, 0x01	; 1
    4538:	4f ad       	ldd	r20, Y+63	; 0x3f
    453a:	21 97       	sbiw	r28, 0x01	; 1
    453c:	59 a9       	ldd	r21, Y+49	; 0x31
    453e:	45 0f       	add	r20, r21
    4540:	25 96       	adiw	r28, 0x05	; 5
    4542:	4f af       	std	Y+63, r20	; 0x3f
    4544:	25 97       	sbiw	r28, 0x05	; 5
    4546:	61 e0       	ldi	r22, 0x01	; 1
    4548:	26 96       	adiw	r28, 0x06	; 6
    454a:	6f af       	std	Y+63, r22	; 0x3f
    454c:	26 97       	sbiw	r28, 0x06	; 6
    454e:	25 96       	adiw	r28, 0x05	; 5
    4550:	7f ad       	ldd	r23, Y+63	; 0x3f
    4552:	25 97       	sbiw	r28, 0x05	; 5
    4554:	89 a9       	ldd	r24, Y+49	; 0x31
    4556:	78 17       	cp	r23, r24
    4558:	18 f0       	brcs	.+6      	; 0x4560 <LCD_VidPrintVar+0x380>
    455a:	26 96       	adiw	r28, 0x06	; 6
    455c:	1f ae       	std	Y+63, r1	; 0x3f
    455e:	26 97       	sbiw	r28, 0x06	; 6
    4560:	24 96       	adiw	r28, 0x04	; 4
    4562:	9f ad       	ldd	r25, Y+63	; 0x3f
    4564:	24 97       	sbiw	r28, 0x04	; 4
    4566:	26 96       	adiw	r28, 0x06	; 6
    4568:	0f ad       	ldd	r16, Y+63	; 0x3f
    456a:	26 97       	sbiw	r28, 0x06	; 6
    456c:	90 2b       	or	r25, r16
    456e:	24 96       	adiw	r28, 0x04	; 4
    4570:	9f af       	std	Y+63, r25	; 0x3f
    4572:	24 97       	sbiw	r28, 0x04	; 4
    4574:	25 96       	adiw	r28, 0x05	; 5
    4576:	1f ad       	ldd	r17, Y+63	; 0x3f
    4578:	25 97       	sbiw	r28, 0x05	; 5
    457a:	19 ab       	std	Y+49, r17	; 0x31
    457c:	2a a5       	ldd	r18, Y+42	; 0x2a
    457e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    4580:	23 0f       	add	r18, r19
    4582:	2a ab       	std	Y+50, r18	; 0x32
    4584:	24 96       	adiw	r28, 0x04	; 4
    4586:	8f ad       	ldd	r24, Y+63	; 0x3f
    4588:	24 97       	sbiw	r28, 0x04	; 4
    458a:	4a a9       	ldd	r20, Y+50	; 0x32
    458c:	84 0f       	add	r24, r20
    458e:	8a ab       	std	Y+50, r24	; 0x32
    4590:	5b a5       	ldd	r21, Y+43	; 0x2b
    4592:	5b 83       	std	Y+3, r21	; 0x03
    4594:	6c a5       	ldd	r22, Y+44	; 0x2c
    4596:	6c 83       	std	Y+4, r22	; 0x04
    4598:	7d a5       	ldd	r23, Y+45	; 0x2d
    459a:	7d 83       	std	Y+5, r23	; 0x05
    459c:	8e a5       	ldd	r24, Y+46	; 0x2e
    459e:	8e 83       	std	Y+6, r24	; 0x06
    45a0:	9f a5       	ldd	r25, Y+47	; 0x2f
    45a2:	9f 83       	std	Y+7, r25	; 0x07
    45a4:	08 a9       	ldd	r16, Y+48	; 0x30
    45a6:	08 87       	std	Y+8, r16	; 0x08
    45a8:	19 a9       	ldd	r17, Y+49	; 0x31
    45aa:	19 87       	std	Y+9, r17	; 0x09
    45ac:	2a a9       	ldd	r18, Y+50	; 0x32
    45ae:	2a 87       	std	Y+10, r18	; 0x0a
		Copy_U8Var/=10 ;
    45b0:	ab 84       	ldd	r10, Y+11	; 0x0b
    45b2:	bc 84       	ldd	r11, Y+12	; 0x0c
    45b4:	cd 84       	ldd	r12, Y+13	; 0x0d
    45b6:	de 84       	ldd	r13, Y+14	; 0x0e
    45b8:	ef 84       	ldd	r14, Y+15	; 0x0f
    45ba:	f8 88       	ldd	r15, Y+16	; 0x10
    45bc:	09 89       	ldd	r16, Y+17	; 0x11
    45be:	1a 89       	ldd	r17, Y+18	; 0x12
    45c0:	2a 2d       	mov	r18, r10
    45c2:	3b 2d       	mov	r19, r11
    45c4:	4c 2d       	mov	r20, r12
    45c6:	5d 2d       	mov	r21, r13
    45c8:	6e 2d       	mov	r22, r14
    45ca:	7f 2d       	mov	r23, r15
    45cc:	80 2f       	mov	r24, r16
    45ce:	91 2f       	mov	r25, r17
    45d0:	0f 2e       	mov	r0, r31
    45d2:	fa e0       	ldi	r31, 0x0A	; 10
    45d4:	af 2e       	mov	r10, r31
    45d6:	f0 2d       	mov	r31, r0
    45d8:	bb 24       	eor	r11, r11
    45da:	cc 24       	eor	r12, r12
    45dc:	dd 24       	eor	r13, r13
    45de:	ee 24       	eor	r14, r14
    45e0:	ff 24       	eor	r15, r15
    45e2:	00 e0       	ldi	r16, 0x00	; 0
    45e4:	10 e0       	ldi	r17, 0x00	; 0
    45e6:	0e 94 ef 01 	call	0x3de	; 0x3de <__udivdi3>
    45ea:	a2 2e       	mov	r10, r18
    45ec:	b3 2e       	mov	r11, r19
    45ee:	c4 2e       	mov	r12, r20
    45f0:	d5 2e       	mov	r13, r21
    45f2:	e6 2e       	mov	r14, r22
    45f4:	f7 2e       	mov	r15, r23
    45f6:	08 2f       	mov	r16, r24
    45f8:	19 2f       	mov	r17, r25
    45fa:	ab 86       	std	Y+11, r10	; 0x0b
    45fc:	bc 86       	std	Y+12, r11	; 0x0c
    45fe:	cd 86       	std	Y+13, r12	; 0x0d
    4600:	de 86       	std	Y+14, r13	; 0x0e
    4602:	ef 86       	std	Y+15, r14	; 0x0f
    4604:	f8 8a       	std	Y+16, r15	; 0x10
    4606:	09 8b       	std	Y+17, r16	; 0x11
    4608:	1a 8b       	std	Y+18, r17	; 0x12
		copy_i-- ;
    460a:	89 81       	ldd	r24, Y+1	; 0x01
    460c:	81 50       	subi	r24, 0x01	; 1
    460e:	89 83       	std	Y+1, r24	; 0x01
	}

	s8 copy_i = i-1 ;

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
    4610:	89 81       	ldd	r24, Y+1	; 0x01
    4612:	88 23       	and	r24, r24
    4614:	0c f0       	brlt	.+2      	; 0x4618 <LCD_VidPrintVar+0x438>
    4616:	62 ce       	rjmp	.-828    	; 0x42dc <LCD_VidPrintVar+0xfc>
    4618:	61 c0       	rjmp	.+194    	; 0x46dc <LCD_VidPrintVar+0x4fc>
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
    461a:	ab 80       	ldd	r10, Y+3	; 0x03
    461c:	bc 80       	ldd	r11, Y+4	; 0x04
    461e:	cd 80       	ldd	r12, Y+5	; 0x05
    4620:	de 80       	ldd	r13, Y+6	; 0x06
    4622:	ef 80       	ldd	r14, Y+7	; 0x07
    4624:	f8 84       	ldd	r15, Y+8	; 0x08
    4626:	09 85       	ldd	r16, Y+9	; 0x09
    4628:	1a 85       	ldd	r17, Y+10	; 0x0a
    462a:	2a 2d       	mov	r18, r10
    462c:	3b 2d       	mov	r19, r11
    462e:	4c 2d       	mov	r20, r12
    4630:	5d 2d       	mov	r21, r13
    4632:	6e 2d       	mov	r22, r14
    4634:	7f 2d       	mov	r23, r15
    4636:	80 2f       	mov	r24, r16
    4638:	91 2f       	mov	r25, r17
    463a:	0f 2e       	mov	r0, r31
    463c:	fa e0       	ldi	r31, 0x0A	; 10
    463e:	af 2e       	mov	r10, r31
    4640:	f0 2d       	mov	r31, r0
    4642:	bb 24       	eor	r11, r11
    4644:	cc 24       	eor	r12, r12
    4646:	dd 24       	eor	r13, r13
    4648:	ee 24       	eor	r14, r14
    464a:	ff 24       	eor	r15, r15
    464c:	00 e0       	ldi	r16, 0x00	; 0
    464e:	10 e0       	ldi	r17, 0x00	; 0
    4650:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__umoddi3>
    4654:	a2 2e       	mov	r10, r18
    4656:	b3 2e       	mov	r11, r19
    4658:	c4 2e       	mov	r12, r20
    465a:	d5 2e       	mov	r13, r21
    465c:	e6 2e       	mov	r14, r22
    465e:	f7 2e       	mov	r15, r23
    4660:	08 2f       	mov	r16, r24
    4662:	19 2f       	mov	r17, r25
    4664:	2a 2d       	mov	r18, r10
    4666:	3b 2d       	mov	r19, r11
    4668:	4c 2d       	mov	r20, r12
    466a:	5d 2d       	mov	r21, r13
    466c:	6e 2d       	mov	r22, r14
    466e:	7f 2d       	mov	r23, r15
    4670:	80 2f       	mov	r24, r16
    4672:	91 2f       	mov	r25, r17
    4674:	82 2f       	mov	r24, r18
    4676:	80 5d       	subi	r24, 0xD0	; 208
    4678:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
		local_num /= 10 ;
    467c:	ab 80       	ldd	r10, Y+3	; 0x03
    467e:	bc 80       	ldd	r11, Y+4	; 0x04
    4680:	cd 80       	ldd	r12, Y+5	; 0x05
    4682:	de 80       	ldd	r13, Y+6	; 0x06
    4684:	ef 80       	ldd	r14, Y+7	; 0x07
    4686:	f8 84       	ldd	r15, Y+8	; 0x08
    4688:	09 85       	ldd	r16, Y+9	; 0x09
    468a:	1a 85       	ldd	r17, Y+10	; 0x0a
    468c:	2a 2d       	mov	r18, r10
    468e:	3b 2d       	mov	r19, r11
    4690:	4c 2d       	mov	r20, r12
    4692:	5d 2d       	mov	r21, r13
    4694:	6e 2d       	mov	r22, r14
    4696:	7f 2d       	mov	r23, r15
    4698:	80 2f       	mov	r24, r16
    469a:	91 2f       	mov	r25, r17
    469c:	0f 2e       	mov	r0, r31
    469e:	fa e0       	ldi	r31, 0x0A	; 10
    46a0:	af 2e       	mov	r10, r31
    46a2:	f0 2d       	mov	r31, r0
    46a4:	bb 24       	eor	r11, r11
    46a6:	cc 24       	eor	r12, r12
    46a8:	dd 24       	eor	r13, r13
    46aa:	ee 24       	eor	r14, r14
    46ac:	ff 24       	eor	r15, r15
    46ae:	00 e0       	ldi	r16, 0x00	; 0
    46b0:	10 e0       	ldi	r17, 0x00	; 0
    46b2:	0e 94 ef 01 	call	0x3de	; 0x3de <__udivdi3>
    46b6:	a2 2e       	mov	r10, r18
    46b8:	b3 2e       	mov	r11, r19
    46ba:	c4 2e       	mov	r12, r20
    46bc:	d5 2e       	mov	r13, r21
    46be:	e6 2e       	mov	r14, r22
    46c0:	f7 2e       	mov	r15, r23
    46c2:	08 2f       	mov	r16, r24
    46c4:	19 2f       	mov	r17, r25
    46c6:	ab 82       	std	Y+3, r10	; 0x03
    46c8:	bc 82       	std	Y+4, r11	; 0x04
    46ca:	cd 82       	std	Y+5, r12	; 0x05
    46cc:	de 82       	std	Y+6, r13	; 0x06
    46ce:	ef 82       	std	Y+7, r14	; 0x07
    46d0:	f8 86       	std	Y+8, r15	; 0x08
    46d2:	09 87       	std	Y+9, r16	; 0x09
    46d4:	1a 87       	std	Y+10, r17	; 0x0a
		i--;
    46d6:	8a 81       	ldd	r24, Y+2	; 0x02
    46d8:	81 50       	subi	r24, 0x01	; 1
    46da:	8a 83       	std	Y+2, r24	; 0x02
		Copy_U8Var/=10 ;
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
    46dc:	8a 81       	ldd	r24, Y+2	; 0x02
    46de:	88 23       	and	r24, r24
    46e0:	09 f0       	breq	.+2      	; 0x46e4 <LCD_VidPrintVar+0x504>
    46e2:	9b cf       	rjmp	.-202    	; 0x461a <LCD_VidPrintVar+0x43a>
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
		local_num /= 10 ;
		i--;
	}//end while

}
    46e4:	cb 5b       	subi	r28, 0xBB	; 187
    46e6:	df 4f       	sbci	r29, 0xFF	; 255
    46e8:	0f b6       	in	r0, 0x3f	; 63
    46ea:	f8 94       	cli
    46ec:	de bf       	out	0x3e, r29	; 62
    46ee:	0f be       	out	0x3f, r0	; 63
    46f0:	cd bf       	out	0x3d, r28	; 61
    46f2:	cf 91       	pop	r28
    46f4:	df 91       	pop	r29
    46f6:	1f 91       	pop	r17
    46f8:	0f 91       	pop	r16
    46fa:	ff 90       	pop	r15
    46fc:	ef 90       	pop	r14
    46fe:	df 90       	pop	r13
    4700:	cf 90       	pop	r12
    4702:	bf 90       	pop	r11
    4704:	af 90       	pop	r10
    4706:	9f 90       	pop	r9
    4708:	8f 90       	pop	r8
    470a:	7f 90       	pop	r7
    470c:	6f 90       	pop	r6
    470e:	5f 90       	pop	r5
    4710:	4f 90       	pop	r4
    4712:	3f 90       	pop	r3
    4714:	2f 90       	pop	r2
    4716:	08 95       	ret

00004718 <LCD_VidPosCur>:
void LCD_VidPosCur(u8 Copy_U8Row , u8 Copy_U8Col ) {
    4718:	df 93       	push	r29
    471a:	cf 93       	push	r28
    471c:	00 d0       	rcall	.+0      	; 0x471e <LCD_VidPosCur+0x6>
    471e:	0f 92       	push	r0
    4720:	cd b7       	in	r28, 0x3d	; 61
    4722:	de b7       	in	r29, 0x3e	; 62
    4724:	8a 83       	std	Y+2, r24	; 0x02
    4726:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_Address = 0 ;
    4728:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_U8Row == 0)
    472a:	8a 81       	ldd	r24, Y+2	; 0x02
    472c:	88 23       	and	r24, r24
    472e:	19 f4       	brne	.+6      	; 0x4736 <LCD_VidPosCur+0x1e>
		Local_Address =0x80 ;
    4730:	80 e8       	ldi	r24, 0x80	; 128
    4732:	89 83       	std	Y+1, r24	; 0x01
    4734:	05 c0       	rjmp	.+10     	; 0x4740 <LCD_VidPosCur+0x28>
	else if (Copy_U8Row == 1)
    4736:	8a 81       	ldd	r24, Y+2	; 0x02
    4738:	81 30       	cpi	r24, 0x01	; 1
    473a:	11 f4       	brne	.+4      	; 0x4740 <LCD_VidPosCur+0x28>
		Local_Address =0xC0 ;
    473c:	80 ec       	ldi	r24, 0xC0	; 192
    473e:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_U8Col < 16 )
    4740:	8b 81       	ldd	r24, Y+3	; 0x03
    4742:	80 31       	cpi	r24, 0x10	; 16
    4744:	20 f4       	brcc	.+8      	; 0x474e <LCD_VidPosCur+0x36>
		Local_Address += Copy_U8Col ;
    4746:	89 81       	ldd	r24, Y+1	; 0x01
    4748:	9b 81       	ldd	r25, Y+3	; 0x03
    474a:	89 0f       	add	r24, r25
    474c:	89 83       	std	Y+1, r24	; 0x01
	LCD_VidSendCommend ( Local_Address );
    474e:	89 81       	ldd	r24, Y+1	; 0x01
    4750:	0e 94 c6 19 	call	0x338c	; 0x338c <LCD_VidSendCommend>
}
    4754:	0f 90       	pop	r0
    4756:	0f 90       	pop	r0
    4758:	0f 90       	pop	r0
    475a:	cf 91       	pop	r28
    475c:	df 91       	pop	r29
    475e:	08 95       	ret

00004760 <LCD_VidClear>:
void LCD_VidClear (){
    4760:	df 93       	push	r29
    4762:	cf 93       	push	r28
    4764:	cd b7       	in	r28, 0x3d	; 61
    4766:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommend(DISPLAY_CLEAR) ;
    4768:	81 e0       	ldi	r24, 0x01	; 1
    476a:	0e 94 c6 19 	call	0x338c	; 0x338c <LCD_VidSendCommend>
}
    476e:	cf 91       	pop	r28
    4770:	df 91       	pop	r29
    4772:	08 95       	ret

00004774 <main>:

void Calculate_VidResult(u32 Copy_U8num1 , u32 Copy_U8num2 , u8 Copy_U8Sign);//to calculate the operations
void Error_VidStatment ();                                                   //to show the error statement
u32 Reverse_value (u32 Copy_U8Num , u8  iter);                               //to get the true value of numbers

void main (void){
    4774:	af 92       	push	r10
    4776:	bf 92       	push	r11
    4778:	cf 92       	push	r12
    477a:	df 92       	push	r13
    477c:	ef 92       	push	r14
    477e:	ff 92       	push	r15
    4780:	0f 93       	push	r16
    4782:	1f 93       	push	r17
    4784:	df 93       	push	r29
    4786:	cf 93       	push	r28
    4788:	cd b7       	in	r28, 0x3d	; 61
    478a:	de b7       	in	r29, 0x3e	; 62
    478c:	ce 56       	subi	r28, 0x6E	; 110
    478e:	d0 40       	sbci	r29, 0x00	; 0
    4790:	0f b6       	in	r0, 0x3f	; 63
    4792:	f8 94       	cli
    4794:	de bf       	out	0x3e, r29	; 62
    4796:	0f be       	out	0x3f, r0	; 63
    4798:	cd bf       	out	0x3d, r28	; 61
	u8 flag_1_visit = 0 ;                       //express that u entered num1
    479a:	18 8e       	std	Y+24, r1	; 0x18
	u8 flag_2_visit = 0 ;                       //express that u entered sign
    479c:	1f 8a       	std	Y+23, r1	; 0x17
	u8 flag_3_visit = 0 ;                       //express that u entered num2
    479e:	1e 8a       	std	Y+22, r1	; 0x16
	u8 flag_first_time = 1 ;                    //to clear LCD after u entered operation
    47a0:	81 e0       	ldi	r24, 0x01	; 1
    47a2:	8d 8b       	std	Y+21, r24	; 0x15
	u8 local_draft = 0 ;                        //draft of entered KEY_PAD
    47a4:	1c 8a       	std	Y+20, r1	; 0x14
	u64 local_num1 = DEFAULT_VAL ;              //to store num1
    47a6:	1c 86       	std	Y+12, r1	; 0x0c
    47a8:	1d 86       	std	Y+13, r1	; 0x0d
    47aa:	1e 86       	std	Y+14, r1	; 0x0e
    47ac:	1f 86       	std	Y+15, r1	; 0x0f
    47ae:	18 8a       	std	Y+16, r1	; 0x10
    47b0:	19 8a       	std	Y+17, r1	; 0x11
    47b2:	1a 8a       	std	Y+18, r1	; 0x12
    47b4:	1b 8a       	std	Y+19, r1	; 0x13
	u64 local_num2 = DEFAULT_VAL ;              //to store num2
    47b6:	1c 82       	std	Y+4, r1	; 0x04
    47b8:	1d 82       	std	Y+5, r1	; 0x05
    47ba:	1e 82       	std	Y+6, r1	; 0x06
    47bc:	1f 82       	std	Y+7, r1	; 0x07
    47be:	18 86       	std	Y+8, r1	; 0x08
    47c0:	19 86       	std	Y+9, r1	; 0x09
    47c2:	1a 86       	std	Y+10, r1	; 0x0a
    47c4:	1b 86       	std	Y+11, r1	; 0x0b
	u8 local_sign =  DEFAULT_VAL ;              //to store sign
    47c6:	1b 82       	std	Y+3, r1	; 0x03
    u8 cycle_1 = 0 ;                            //to get the right value of num1 reversed
    47c8:	1a 82       	std	Y+2, r1	; 0x02
    u8 cycle_2 = 0 ;                            //to get the right value of num2 reversed
    47ca:	19 82       	std	Y+1, r1	; 0x01

	LCD_VidInit();	                            //to initialize LCD
    47cc:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <LCD_VidInit>
	KeyPad_VidInit();	                        //to initialize KEYPAD
    47d0:	0e 94 2f 18 	call	0x305e	; 0x305e <KeyPad_VidInit>

	 while (1)
	    {
		 local_draft = KeyPad_U8GetNUM () ;
    47d4:	0e 94 e9 18 	call	0x31d2	; 0x31d2 <KeyPad_U8GetNUM>
    47d8:	8c 8b       	std	Y+20, r24	; 0x14

		 // if entered num != empty key or CLR_KEY or / or * or + or - or = , so it's num
		 if ( !( local_draft == NO_NUM || local_draft == CLR_KEY ||  local_draft == '/' ||  local_draft == '*'
    47da:	8c 89       	ldd	r24, Y+20	; 0x14
    47dc:	82 33       	cpi	r24, 0x32	; 50
    47de:	09 f4       	brne	.+2      	; 0x47e2 <main+0x6e>
    47e0:	b0 c3       	rjmp	.+1888   	; 0x4f42 <main+0x7ce>
    47e2:	8c 89       	ldd	r24, Y+20	; 0x14
    47e4:	8c 30       	cpi	r24, 0x0C	; 12
    47e6:	09 f4       	brne	.+2      	; 0x47ea <main+0x76>
    47e8:	ac c3       	rjmp	.+1880   	; 0x4f42 <main+0x7ce>
    47ea:	8c 89       	ldd	r24, Y+20	; 0x14
    47ec:	8f 32       	cpi	r24, 0x2F	; 47
    47ee:	09 f4       	brne	.+2      	; 0x47f2 <main+0x7e>
    47f0:	a8 c3       	rjmp	.+1872   	; 0x4f42 <main+0x7ce>
    47f2:	8c 89       	ldd	r24, Y+20	; 0x14
    47f4:	8a 32       	cpi	r24, 0x2A	; 42
    47f6:	09 f4       	brne	.+2      	; 0x47fa <main+0x86>
    47f8:	a4 c3       	rjmp	.+1864   	; 0x4f42 <main+0x7ce>
    47fa:	8c 89       	ldd	r24, Y+20	; 0x14
    47fc:	8b 32       	cpi	r24, 0x2B	; 43
    47fe:	09 f4       	brne	.+2      	; 0x4802 <main+0x8e>
    4800:	a0 c3       	rjmp	.+1856   	; 0x4f42 <main+0x7ce>
    4802:	8c 89       	ldd	r24, Y+20	; 0x14
    4804:	8d 32       	cpi	r24, 0x2D	; 45
    4806:	09 f4       	brne	.+2      	; 0x480a <main+0x96>
    4808:	9c c3       	rjmp	.+1848   	; 0x4f42 <main+0x7ce>
    480a:	8c 89       	ldd	r24, Y+20	; 0x14
    480c:	8d 33       	cpi	r24, 0x3D	; 61
    480e:	09 f4       	brne	.+2      	; 0x4812 <main+0x9e>
    4810:	98 c3       	rjmp	.+1840   	; 0x4f42 <main+0x7ce>
				 ||  local_draft == '+' ||  local_draft == '-' ||  local_draft == '=')  )
		 {
			 // if we entered num1 , we can't enter it again
			 if (global_First_sign == 0){
    4812:	80 91 88 01 	lds	r24, 0x0188
    4816:	88 23       	and	r24, r24
    4818:	09 f0       	breq	.+2      	; 0x481c <main+0xa8>
    481a:	6f c1       	rjmp	.+734    	; 0x4afa <main+0x386>
				 if (flag_first_time){
    481c:	8d 89       	ldd	r24, Y+21	; 0x15
    481e:	88 23       	and	r24, r24
    4820:	19 f0       	breq	.+6      	; 0x4828 <main+0xb4>
	                 LCD_VidClear();                     //to clear LCD after every operation
    4822:	0e 94 b0 23 	call	0x4760	; 0x4760 <LCD_VidClear>
	                 flag_first_time = 0 ;
    4826:	1d 8a       	std	Y+21, r1	; 0x15
				 }
				 LCD_VidPrintVar(local_draft ) ;     //to print the values
    4828:	8c 89       	ldd	r24, Y+20	; 0x14
    482a:	a8 2e       	mov	r10, r24
    482c:	bb 24       	eor	r11, r11
    482e:	cc 24       	eor	r12, r12
    4830:	dd 24       	eor	r13, r13
    4832:	ee 24       	eor	r14, r14
    4834:	ff 24       	eor	r15, r15
    4836:	87 01       	movw	r16, r14
    4838:	2a 2d       	mov	r18, r10
    483a:	3b 2d       	mov	r19, r11
    483c:	4c 2d       	mov	r20, r12
    483e:	5d 2d       	mov	r21, r13
    4840:	6e 2d       	mov	r22, r14
    4842:	7f 2d       	mov	r23, r15
    4844:	80 2f       	mov	r24, r16
    4846:	91 2f       	mov	r25, r17
    4848:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
     			 local_num1 += local_draft*LCD_U32Pow(10,cycle_1) ;          //to send the values
    484c:	8c 89       	ldd	r24, Y+20	; 0x14
    484e:	08 2f       	mov	r16, r24
    4850:	10 e0       	ldi	r17, 0x00	; 0
    4852:	8a e0       	ldi	r24, 0x0A	; 10
    4854:	6a 81       	ldd	r22, Y+2	; 0x02
    4856:	0e 94 c5 20 	call	0x418a	; 0x418a <LCD_U32Pow>
    485a:	9c 01       	movw	r18, r24
    485c:	02 9f       	mul	r16, r18
    485e:	c0 01       	movw	r24, r0
    4860:	03 9f       	mul	r16, r19
    4862:	90 0d       	add	r25, r0
    4864:	12 9f       	mul	r17, r18
    4866:	90 0d       	add	r25, r0
    4868:	11 24       	eor	r1, r1
    486a:	8c 01       	movw	r16, r24
    486c:	20 e0       	ldi	r18, 0x00	; 0
    486e:	30 e0       	ldi	r19, 0x00	; 0
    4870:	40 e0       	ldi	r20, 0x00	; 0
    4872:	50 e0       	ldi	r21, 0x00	; 0
    4874:	60 e0       	ldi	r22, 0x00	; 0
    4876:	70 e0       	ldi	r23, 0x00	; 0
    4878:	09 a3       	std	Y+33, r16	; 0x21
    487a:	1a a3       	std	Y+34, r17	; 0x22
    487c:	2b a3       	std	Y+35, r18	; 0x23
    487e:	3c a3       	std	Y+36, r19	; 0x24
    4880:	4d a3       	std	Y+37, r20	; 0x25
    4882:	5e a3       	std	Y+38, r21	; 0x26
    4884:	6f a3       	std	Y+39, r22	; 0x27
    4886:	78 a7       	std	Y+40, r23	; 0x28
    4888:	1c 85       	ldd	r17, Y+12	; 0x0c
    488a:	19 a7       	std	Y+41, r17	; 0x29
    488c:	2d 85       	ldd	r18, Y+13	; 0x0d
    488e:	2a a7       	std	Y+42, r18	; 0x2a
    4890:	3e 85       	ldd	r19, Y+14	; 0x0e
    4892:	3b a7       	std	Y+43, r19	; 0x2b
    4894:	4f 85       	ldd	r20, Y+15	; 0x0f
    4896:	4c a7       	std	Y+44, r20	; 0x2c
    4898:	58 89       	ldd	r21, Y+16	; 0x10
    489a:	5d a7       	std	Y+45, r21	; 0x2d
    489c:	69 89       	ldd	r22, Y+17	; 0x11
    489e:	6e a7       	std	Y+46, r22	; 0x2e
    48a0:	7a 89       	ldd	r23, Y+18	; 0x12
    48a2:	7f a7       	std	Y+47, r23	; 0x2f
    48a4:	8b 89       	ldd	r24, Y+19	; 0x13
    48a6:	88 ab       	std	Y+48, r24	; 0x30
    48a8:	99 a5       	ldd	r25, Y+41	; 0x29
    48aa:	09 a1       	ldd	r16, Y+33	; 0x21
    48ac:	90 0f       	add	r25, r16
    48ae:	99 ab       	std	Y+49, r25	; 0x31
    48b0:	11 e0       	ldi	r17, 0x01	; 1
    48b2:	19 af       	std	Y+57, r17	; 0x39
    48b4:	29 a9       	ldd	r18, Y+49	; 0x31
    48b6:	39 a5       	ldd	r19, Y+41	; 0x29
    48b8:	23 17       	cp	r18, r19
    48ba:	08 f0       	brcs	.+2      	; 0x48be <main+0x14a>
    48bc:	19 ae       	std	Y+57, r1	; 0x39
    48be:	4a a5       	ldd	r20, Y+42	; 0x2a
    48c0:	5a a1       	ldd	r21, Y+34	; 0x22
    48c2:	45 0f       	add	r20, r21
    48c4:	4a ab       	std	Y+50, r20	; 0x32
    48c6:	61 e0       	ldi	r22, 0x01	; 1
    48c8:	6a af       	std	Y+58, r22	; 0x3a
    48ca:	7a a9       	ldd	r23, Y+50	; 0x32
    48cc:	8a a5       	ldd	r24, Y+42	; 0x2a
    48ce:	78 17       	cp	r23, r24
    48d0:	08 f0       	brcs	.+2      	; 0x48d4 <main+0x160>
    48d2:	1a ae       	std	Y+58, r1	; 0x3a
    48d4:	99 ad       	ldd	r25, Y+57	; 0x39
    48d6:	0a a9       	ldd	r16, Y+50	; 0x32
    48d8:	90 0f       	add	r25, r16
    48da:	9b af       	std	Y+59, r25	; 0x3b
    48dc:	11 e0       	ldi	r17, 0x01	; 1
    48de:	1c af       	std	Y+60, r17	; 0x3c
    48e0:	2b ad       	ldd	r18, Y+59	; 0x3b
    48e2:	3a a9       	ldd	r19, Y+50	; 0x32
    48e4:	23 17       	cp	r18, r19
    48e6:	08 f0       	brcs	.+2      	; 0x48ea <main+0x176>
    48e8:	1c ae       	std	Y+60, r1	; 0x3c
    48ea:	4a ad       	ldd	r20, Y+58	; 0x3a
    48ec:	5c ad       	ldd	r21, Y+60	; 0x3c
    48ee:	45 2b       	or	r20, r21
    48f0:	4a af       	std	Y+58, r20	; 0x3a
    48f2:	6b ad       	ldd	r22, Y+59	; 0x3b
    48f4:	6a ab       	std	Y+50, r22	; 0x32
    48f6:	7b a5       	ldd	r23, Y+43	; 0x2b
    48f8:	8b a1       	ldd	r24, Y+35	; 0x23
    48fa:	78 0f       	add	r23, r24
    48fc:	7b ab       	std	Y+51, r23	; 0x33
    48fe:	91 e0       	ldi	r25, 0x01	; 1
    4900:	9d af       	std	Y+61, r25	; 0x3d
    4902:	0b a9       	ldd	r16, Y+51	; 0x33
    4904:	1b a5       	ldd	r17, Y+43	; 0x2b
    4906:	01 17       	cp	r16, r17
    4908:	08 f0       	brcs	.+2      	; 0x490c <main+0x198>
    490a:	1d ae       	std	Y+61, r1	; 0x3d
    490c:	2a ad       	ldd	r18, Y+58	; 0x3a
    490e:	3b a9       	ldd	r19, Y+51	; 0x33
    4910:	23 0f       	add	r18, r19
    4912:	2e af       	std	Y+62, r18	; 0x3e
    4914:	41 e0       	ldi	r20, 0x01	; 1
    4916:	4f af       	std	Y+63, r20	; 0x3f
    4918:	5e ad       	ldd	r21, Y+62	; 0x3e
    491a:	6b a9       	ldd	r22, Y+51	; 0x33
    491c:	56 17       	cp	r21, r22
    491e:	08 f0       	brcs	.+2      	; 0x4922 <main+0x1ae>
    4920:	1f ae       	std	Y+63, r1	; 0x3f
    4922:	7d ad       	ldd	r23, Y+61	; 0x3d
    4924:	8f ad       	ldd	r24, Y+63	; 0x3f
    4926:	78 2b       	or	r23, r24
    4928:	7d af       	std	Y+61, r23	; 0x3d
    492a:	9e ad       	ldd	r25, Y+62	; 0x3e
    492c:	9b ab       	std	Y+51, r25	; 0x33
    492e:	0c a5       	ldd	r16, Y+44	; 0x2c
    4930:	1c a1       	ldd	r17, Y+36	; 0x24
    4932:	01 0f       	add	r16, r17
    4934:	0c ab       	std	Y+52, r16	; 0x34
    4936:	21 e0       	ldi	r18, 0x01	; 1
    4938:	21 96       	adiw	r28, 0x01	; 1
    493a:	2f af       	std	Y+63, r18	; 0x3f
    493c:	21 97       	sbiw	r28, 0x01	; 1
    493e:	3c a9       	ldd	r19, Y+52	; 0x34
    4940:	4c a5       	ldd	r20, Y+44	; 0x2c
    4942:	34 17       	cp	r19, r20
    4944:	18 f0       	brcs	.+6      	; 0x494c <main+0x1d8>
    4946:	21 96       	adiw	r28, 0x01	; 1
    4948:	1f ae       	std	Y+63, r1	; 0x3f
    494a:	21 97       	sbiw	r28, 0x01	; 1
    494c:	5d ad       	ldd	r21, Y+61	; 0x3d
    494e:	6c a9       	ldd	r22, Y+52	; 0x34
    4950:	56 0f       	add	r21, r22
    4952:	22 96       	adiw	r28, 0x02	; 2
    4954:	5f af       	std	Y+63, r21	; 0x3f
    4956:	22 97       	sbiw	r28, 0x02	; 2
    4958:	71 e0       	ldi	r23, 0x01	; 1
    495a:	23 96       	adiw	r28, 0x03	; 3
    495c:	7f af       	std	Y+63, r23	; 0x3f
    495e:	23 97       	sbiw	r28, 0x03	; 3
    4960:	22 96       	adiw	r28, 0x02	; 2
    4962:	8f ad       	ldd	r24, Y+63	; 0x3f
    4964:	22 97       	sbiw	r28, 0x02	; 2
    4966:	9c a9       	ldd	r25, Y+52	; 0x34
    4968:	89 17       	cp	r24, r25
    496a:	18 f0       	brcs	.+6      	; 0x4972 <main+0x1fe>
    496c:	23 96       	adiw	r28, 0x03	; 3
    496e:	1f ae       	std	Y+63, r1	; 0x3f
    4970:	23 97       	sbiw	r28, 0x03	; 3
    4972:	21 96       	adiw	r28, 0x01	; 1
    4974:	0f ad       	ldd	r16, Y+63	; 0x3f
    4976:	21 97       	sbiw	r28, 0x01	; 1
    4978:	23 96       	adiw	r28, 0x03	; 3
    497a:	1f ad       	ldd	r17, Y+63	; 0x3f
    497c:	23 97       	sbiw	r28, 0x03	; 3
    497e:	01 2b       	or	r16, r17
    4980:	21 96       	adiw	r28, 0x01	; 1
    4982:	0f af       	std	Y+63, r16	; 0x3f
    4984:	21 97       	sbiw	r28, 0x01	; 1
    4986:	22 96       	adiw	r28, 0x02	; 2
    4988:	2f ad       	ldd	r18, Y+63	; 0x3f
    498a:	22 97       	sbiw	r28, 0x02	; 2
    498c:	2c ab       	std	Y+52, r18	; 0x34
    498e:	3d a5       	ldd	r19, Y+45	; 0x2d
    4990:	4d a1       	ldd	r20, Y+37	; 0x25
    4992:	34 0f       	add	r19, r20
    4994:	3d ab       	std	Y+53, r19	; 0x35
    4996:	51 e0       	ldi	r21, 0x01	; 1
    4998:	24 96       	adiw	r28, 0x04	; 4
    499a:	5f af       	std	Y+63, r21	; 0x3f
    499c:	24 97       	sbiw	r28, 0x04	; 4
    499e:	6d a9       	ldd	r22, Y+53	; 0x35
    49a0:	7d a5       	ldd	r23, Y+45	; 0x2d
    49a2:	67 17       	cp	r22, r23
    49a4:	18 f0       	brcs	.+6      	; 0x49ac <main+0x238>
    49a6:	24 96       	adiw	r28, 0x04	; 4
    49a8:	1f ae       	std	Y+63, r1	; 0x3f
    49aa:	24 97       	sbiw	r28, 0x04	; 4
    49ac:	21 96       	adiw	r28, 0x01	; 1
    49ae:	8f ad       	ldd	r24, Y+63	; 0x3f
    49b0:	21 97       	sbiw	r28, 0x01	; 1
    49b2:	9d a9       	ldd	r25, Y+53	; 0x35
    49b4:	89 0f       	add	r24, r25
    49b6:	25 96       	adiw	r28, 0x05	; 5
    49b8:	8f af       	std	Y+63, r24	; 0x3f
    49ba:	25 97       	sbiw	r28, 0x05	; 5
    49bc:	01 e0       	ldi	r16, 0x01	; 1
    49be:	26 96       	adiw	r28, 0x06	; 6
    49c0:	0f af       	std	Y+63, r16	; 0x3f
    49c2:	26 97       	sbiw	r28, 0x06	; 6
    49c4:	25 96       	adiw	r28, 0x05	; 5
    49c6:	1f ad       	ldd	r17, Y+63	; 0x3f
    49c8:	25 97       	sbiw	r28, 0x05	; 5
    49ca:	2d a9       	ldd	r18, Y+53	; 0x35
    49cc:	12 17       	cp	r17, r18
    49ce:	18 f0       	brcs	.+6      	; 0x49d6 <main+0x262>
    49d0:	26 96       	adiw	r28, 0x06	; 6
    49d2:	1f ae       	std	Y+63, r1	; 0x3f
    49d4:	26 97       	sbiw	r28, 0x06	; 6
    49d6:	24 96       	adiw	r28, 0x04	; 4
    49d8:	3f ad       	ldd	r19, Y+63	; 0x3f
    49da:	24 97       	sbiw	r28, 0x04	; 4
    49dc:	26 96       	adiw	r28, 0x06	; 6
    49de:	4f ad       	ldd	r20, Y+63	; 0x3f
    49e0:	26 97       	sbiw	r28, 0x06	; 6
    49e2:	34 2b       	or	r19, r20
    49e4:	24 96       	adiw	r28, 0x04	; 4
    49e6:	3f af       	std	Y+63, r19	; 0x3f
    49e8:	24 97       	sbiw	r28, 0x04	; 4
    49ea:	25 96       	adiw	r28, 0x05	; 5
    49ec:	5f ad       	ldd	r21, Y+63	; 0x3f
    49ee:	25 97       	sbiw	r28, 0x05	; 5
    49f0:	5d ab       	std	Y+53, r21	; 0x35
    49f2:	6e a5       	ldd	r22, Y+46	; 0x2e
    49f4:	7e a1       	ldd	r23, Y+38	; 0x26
    49f6:	67 0f       	add	r22, r23
    49f8:	6e ab       	std	Y+54, r22	; 0x36
    49fa:	81 e0       	ldi	r24, 0x01	; 1
    49fc:	27 96       	adiw	r28, 0x07	; 7
    49fe:	8f af       	std	Y+63, r24	; 0x3f
    4a00:	27 97       	sbiw	r28, 0x07	; 7
    4a02:	9e a9       	ldd	r25, Y+54	; 0x36
    4a04:	0e a5       	ldd	r16, Y+46	; 0x2e
    4a06:	90 17       	cp	r25, r16
    4a08:	18 f0       	brcs	.+6      	; 0x4a10 <main+0x29c>
    4a0a:	27 96       	adiw	r28, 0x07	; 7
    4a0c:	1f ae       	std	Y+63, r1	; 0x3f
    4a0e:	27 97       	sbiw	r28, 0x07	; 7
    4a10:	24 96       	adiw	r28, 0x04	; 4
    4a12:	1f ad       	ldd	r17, Y+63	; 0x3f
    4a14:	24 97       	sbiw	r28, 0x04	; 4
    4a16:	2e a9       	ldd	r18, Y+54	; 0x36
    4a18:	12 0f       	add	r17, r18
    4a1a:	28 96       	adiw	r28, 0x08	; 8
    4a1c:	1f af       	std	Y+63, r17	; 0x3f
    4a1e:	28 97       	sbiw	r28, 0x08	; 8
    4a20:	31 e0       	ldi	r19, 0x01	; 1
    4a22:	29 96       	adiw	r28, 0x09	; 9
    4a24:	3f af       	std	Y+63, r19	; 0x3f
    4a26:	29 97       	sbiw	r28, 0x09	; 9
    4a28:	28 96       	adiw	r28, 0x08	; 8
    4a2a:	4f ad       	ldd	r20, Y+63	; 0x3f
    4a2c:	28 97       	sbiw	r28, 0x08	; 8
    4a2e:	5e a9       	ldd	r21, Y+54	; 0x36
    4a30:	45 17       	cp	r20, r21
    4a32:	18 f0       	brcs	.+6      	; 0x4a3a <main+0x2c6>
    4a34:	29 96       	adiw	r28, 0x09	; 9
    4a36:	1f ae       	std	Y+63, r1	; 0x3f
    4a38:	29 97       	sbiw	r28, 0x09	; 9
    4a3a:	27 96       	adiw	r28, 0x07	; 7
    4a3c:	6f ad       	ldd	r22, Y+63	; 0x3f
    4a3e:	27 97       	sbiw	r28, 0x07	; 7
    4a40:	29 96       	adiw	r28, 0x09	; 9
    4a42:	7f ad       	ldd	r23, Y+63	; 0x3f
    4a44:	29 97       	sbiw	r28, 0x09	; 9
    4a46:	67 2b       	or	r22, r23
    4a48:	27 96       	adiw	r28, 0x07	; 7
    4a4a:	6f af       	std	Y+63, r22	; 0x3f
    4a4c:	27 97       	sbiw	r28, 0x07	; 7
    4a4e:	28 96       	adiw	r28, 0x08	; 8
    4a50:	8f ad       	ldd	r24, Y+63	; 0x3f
    4a52:	28 97       	sbiw	r28, 0x08	; 8
    4a54:	8e ab       	std	Y+54, r24	; 0x36
    4a56:	9f a5       	ldd	r25, Y+47	; 0x2f
    4a58:	0f a1       	ldd	r16, Y+39	; 0x27
    4a5a:	90 0f       	add	r25, r16
    4a5c:	9f ab       	std	Y+55, r25	; 0x37
    4a5e:	11 e0       	ldi	r17, 0x01	; 1
    4a60:	2a 96       	adiw	r28, 0x0a	; 10
    4a62:	1f af       	std	Y+63, r17	; 0x3f
    4a64:	2a 97       	sbiw	r28, 0x0a	; 10
    4a66:	2f a9       	ldd	r18, Y+55	; 0x37
    4a68:	3f a5       	ldd	r19, Y+47	; 0x2f
    4a6a:	23 17       	cp	r18, r19
    4a6c:	18 f0       	brcs	.+6      	; 0x4a74 <main+0x300>
    4a6e:	2a 96       	adiw	r28, 0x0a	; 10
    4a70:	1f ae       	std	Y+63, r1	; 0x3f
    4a72:	2a 97       	sbiw	r28, 0x0a	; 10
    4a74:	27 96       	adiw	r28, 0x07	; 7
    4a76:	4f ad       	ldd	r20, Y+63	; 0x3f
    4a78:	27 97       	sbiw	r28, 0x07	; 7
    4a7a:	5f a9       	ldd	r21, Y+55	; 0x37
    4a7c:	45 0f       	add	r20, r21
    4a7e:	2b 96       	adiw	r28, 0x0b	; 11
    4a80:	4f af       	std	Y+63, r20	; 0x3f
    4a82:	2b 97       	sbiw	r28, 0x0b	; 11
    4a84:	61 e0       	ldi	r22, 0x01	; 1
    4a86:	2c 96       	adiw	r28, 0x0c	; 12
    4a88:	6f af       	std	Y+63, r22	; 0x3f
    4a8a:	2c 97       	sbiw	r28, 0x0c	; 12
    4a8c:	2b 96       	adiw	r28, 0x0b	; 11
    4a8e:	7f ad       	ldd	r23, Y+63	; 0x3f
    4a90:	2b 97       	sbiw	r28, 0x0b	; 11
    4a92:	8f a9       	ldd	r24, Y+55	; 0x37
    4a94:	78 17       	cp	r23, r24
    4a96:	18 f0       	brcs	.+6      	; 0x4a9e <main+0x32a>
    4a98:	2c 96       	adiw	r28, 0x0c	; 12
    4a9a:	1f ae       	std	Y+63, r1	; 0x3f
    4a9c:	2c 97       	sbiw	r28, 0x0c	; 12
    4a9e:	2a 96       	adiw	r28, 0x0a	; 10
    4aa0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4aa2:	2a 97       	sbiw	r28, 0x0a	; 10
    4aa4:	2c 96       	adiw	r28, 0x0c	; 12
    4aa6:	0f ad       	ldd	r16, Y+63	; 0x3f
    4aa8:	2c 97       	sbiw	r28, 0x0c	; 12
    4aaa:	90 2b       	or	r25, r16
    4aac:	2a 96       	adiw	r28, 0x0a	; 10
    4aae:	9f af       	std	Y+63, r25	; 0x3f
    4ab0:	2a 97       	sbiw	r28, 0x0a	; 10
    4ab2:	2b 96       	adiw	r28, 0x0b	; 11
    4ab4:	1f ad       	ldd	r17, Y+63	; 0x3f
    4ab6:	2b 97       	sbiw	r28, 0x0b	; 11
    4ab8:	1f ab       	std	Y+55, r17	; 0x37
    4aba:	28 a9       	ldd	r18, Y+48	; 0x30
    4abc:	38 a5       	ldd	r19, Y+40	; 0x28
    4abe:	23 0f       	add	r18, r19
    4ac0:	28 af       	std	Y+56, r18	; 0x38
    4ac2:	2a 96       	adiw	r28, 0x0a	; 10
    4ac4:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ac6:	2a 97       	sbiw	r28, 0x0a	; 10
    4ac8:	48 ad       	ldd	r20, Y+56	; 0x38
    4aca:	84 0f       	add	r24, r20
    4acc:	88 af       	std	Y+56, r24	; 0x38
    4ace:	59 a9       	ldd	r21, Y+49	; 0x31
    4ad0:	5c 87       	std	Y+12, r21	; 0x0c
    4ad2:	6a a9       	ldd	r22, Y+50	; 0x32
    4ad4:	6d 87       	std	Y+13, r22	; 0x0d
    4ad6:	7b a9       	ldd	r23, Y+51	; 0x33
    4ad8:	7e 87       	std	Y+14, r23	; 0x0e
    4ada:	8c a9       	ldd	r24, Y+52	; 0x34
    4adc:	8f 87       	std	Y+15, r24	; 0x0f
    4ade:	9d a9       	ldd	r25, Y+53	; 0x35
    4ae0:	98 8b       	std	Y+16, r25	; 0x10
    4ae2:	0e a9       	ldd	r16, Y+54	; 0x36
    4ae4:	09 8b       	std	Y+17, r16	; 0x11
    4ae6:	1f a9       	ldd	r17, Y+55	; 0x37
    4ae8:	1a 8b       	std	Y+18, r17	; 0x12
    4aea:	28 ad       	ldd	r18, Y+56	; 0x38
    4aec:	2b 8b       	std	Y+19, r18	; 0x13
			     cycle_1++;
    4aee:	8a 81       	ldd	r24, Y+2	; 0x02
    4af0:	8f 5f       	subi	r24, 0xFF	; 255
    4af2:	8a 83       	std	Y+2, r24	; 0x02
			 	 flag_1_visit = 1 ;
    4af4:	81 e0       	ldi	r24, 0x01	; 1
    4af6:	88 8f       	std	Y+24, r24	; 0x18
    4af8:	6d ce       	rjmp	.-806    	; 0x47d4 <main+0x60>
			 }//end if

			 // if we entered num1 , we will enter num2
			 else if (global_First_sign >= 1 ){
    4afa:	80 91 88 01 	lds	r24, 0x0188
    4afe:	88 23       	and	r24, r24
    4b00:	09 f4       	brne	.+2      	; 0x4b04 <main+0x390>
    4b02:	68 ce       	rjmp	.-816    	; 0x47d4 <main+0x60>
				 local_num2 += local_draft*LCD_U32Pow(10,cycle_2) ;       //to send the values
    4b04:	8c 89       	ldd	r24, Y+20	; 0x14
    4b06:	08 2f       	mov	r16, r24
    4b08:	10 e0       	ldi	r17, 0x00	; 0
    4b0a:	8a e0       	ldi	r24, 0x0A	; 10
    4b0c:	69 81       	ldd	r22, Y+1	; 0x01
    4b0e:	0e 94 c5 20 	call	0x418a	; 0x418a <LCD_U32Pow>
    4b12:	ac 01       	movw	r20, r24
    4b14:	04 9f       	mul	r16, r20
    4b16:	c0 01       	movw	r24, r0
    4b18:	05 9f       	mul	r16, r21
    4b1a:	90 0d       	add	r25, r0
    4b1c:	14 9f       	mul	r17, r20
    4b1e:	90 0d       	add	r25, r0
    4b20:	11 24       	eor	r1, r1
    4b22:	8c 01       	movw	r16, r24
    4b24:	20 e0       	ldi	r18, 0x00	; 0
    4b26:	30 e0       	ldi	r19, 0x00	; 0
    4b28:	40 e0       	ldi	r20, 0x00	; 0
    4b2a:	50 e0       	ldi	r21, 0x00	; 0
    4b2c:	60 e0       	ldi	r22, 0x00	; 0
    4b2e:	70 e0       	ldi	r23, 0x00	; 0
    4b30:	09 8f       	std	Y+25, r16	; 0x19
    4b32:	1a 8f       	std	Y+26, r17	; 0x1a
    4b34:	2b 8f       	std	Y+27, r18	; 0x1b
    4b36:	3c 8f       	std	Y+28, r19	; 0x1c
    4b38:	4d 8f       	std	Y+29, r20	; 0x1d
    4b3a:	5e 8f       	std	Y+30, r21	; 0x1e
    4b3c:	6f 8f       	std	Y+31, r22	; 0x1f
    4b3e:	78 a3       	std	Y+32, r23	; 0x20
    4b40:	1c 81       	ldd	r17, Y+4	; 0x04
    4b42:	2d 96       	adiw	r28, 0x0d	; 13
    4b44:	1f af       	std	Y+63, r17	; 0x3f
    4b46:	2d 97       	sbiw	r28, 0x0d	; 13
    4b48:	2d 81       	ldd	r18, Y+5	; 0x05
    4b4a:	2e 96       	adiw	r28, 0x0e	; 14
    4b4c:	2f af       	std	Y+63, r18	; 0x3f
    4b4e:	2e 97       	sbiw	r28, 0x0e	; 14
    4b50:	3e 81       	ldd	r19, Y+6	; 0x06
    4b52:	2f 96       	adiw	r28, 0x0f	; 15
    4b54:	3f af       	std	Y+63, r19	; 0x3f
    4b56:	2f 97       	sbiw	r28, 0x0f	; 15
    4b58:	4f 81       	ldd	r20, Y+7	; 0x07
    4b5a:	60 96       	adiw	r28, 0x10	; 16
    4b5c:	4f af       	std	Y+63, r20	; 0x3f
    4b5e:	60 97       	sbiw	r28, 0x10	; 16
    4b60:	58 85       	ldd	r21, Y+8	; 0x08
    4b62:	61 96       	adiw	r28, 0x11	; 17
    4b64:	5f af       	std	Y+63, r21	; 0x3f
    4b66:	61 97       	sbiw	r28, 0x11	; 17
    4b68:	69 85       	ldd	r22, Y+9	; 0x09
    4b6a:	62 96       	adiw	r28, 0x12	; 18
    4b6c:	6f af       	std	Y+63, r22	; 0x3f
    4b6e:	62 97       	sbiw	r28, 0x12	; 18
    4b70:	7a 85       	ldd	r23, Y+10	; 0x0a
    4b72:	63 96       	adiw	r28, 0x13	; 19
    4b74:	7f af       	std	Y+63, r23	; 0x3f
    4b76:	63 97       	sbiw	r28, 0x13	; 19
    4b78:	8b 85       	ldd	r24, Y+11	; 0x0b
    4b7a:	64 96       	adiw	r28, 0x14	; 20
    4b7c:	8f af       	std	Y+63, r24	; 0x3f
    4b7e:	64 97       	sbiw	r28, 0x14	; 20
    4b80:	2d 96       	adiw	r28, 0x0d	; 13
    4b82:	9f ad       	ldd	r25, Y+63	; 0x3f
    4b84:	2d 97       	sbiw	r28, 0x0d	; 13
    4b86:	09 8d       	ldd	r16, Y+25	; 0x19
    4b88:	90 0f       	add	r25, r16
    4b8a:	65 96       	adiw	r28, 0x15	; 21
    4b8c:	9f af       	std	Y+63, r25	; 0x3f
    4b8e:	65 97       	sbiw	r28, 0x15	; 21
    4b90:	11 e0       	ldi	r17, 0x01	; 1
    4b92:	6d 96       	adiw	r28, 0x1d	; 29
    4b94:	1f af       	std	Y+63, r17	; 0x3f
    4b96:	6d 97       	sbiw	r28, 0x1d	; 29
    4b98:	65 96       	adiw	r28, 0x15	; 21
    4b9a:	2f ad       	ldd	r18, Y+63	; 0x3f
    4b9c:	65 97       	sbiw	r28, 0x15	; 21
    4b9e:	2d 96       	adiw	r28, 0x0d	; 13
    4ba0:	3f ad       	ldd	r19, Y+63	; 0x3f
    4ba2:	2d 97       	sbiw	r28, 0x0d	; 13
    4ba4:	23 17       	cp	r18, r19
    4ba6:	18 f0       	brcs	.+6      	; 0x4bae <main+0x43a>
    4ba8:	6d 96       	adiw	r28, 0x1d	; 29
    4baa:	1f ae       	std	Y+63, r1	; 0x3f
    4bac:	6d 97       	sbiw	r28, 0x1d	; 29
    4bae:	2e 96       	adiw	r28, 0x0e	; 14
    4bb0:	4f ad       	ldd	r20, Y+63	; 0x3f
    4bb2:	2e 97       	sbiw	r28, 0x0e	; 14
    4bb4:	5a 8d       	ldd	r21, Y+26	; 0x1a
    4bb6:	45 0f       	add	r20, r21
    4bb8:	66 96       	adiw	r28, 0x16	; 22
    4bba:	4f af       	std	Y+63, r20	; 0x3f
    4bbc:	66 97       	sbiw	r28, 0x16	; 22
    4bbe:	61 e0       	ldi	r22, 0x01	; 1
    4bc0:	6e 96       	adiw	r28, 0x1e	; 30
    4bc2:	6f af       	std	Y+63, r22	; 0x3f
    4bc4:	6e 97       	sbiw	r28, 0x1e	; 30
    4bc6:	66 96       	adiw	r28, 0x16	; 22
    4bc8:	7f ad       	ldd	r23, Y+63	; 0x3f
    4bca:	66 97       	sbiw	r28, 0x16	; 22
    4bcc:	2e 96       	adiw	r28, 0x0e	; 14
    4bce:	8f ad       	ldd	r24, Y+63	; 0x3f
    4bd0:	2e 97       	sbiw	r28, 0x0e	; 14
    4bd2:	78 17       	cp	r23, r24
    4bd4:	18 f0       	brcs	.+6      	; 0x4bdc <main+0x468>
    4bd6:	6e 96       	adiw	r28, 0x1e	; 30
    4bd8:	1f ae       	std	Y+63, r1	; 0x3f
    4bda:	6e 97       	sbiw	r28, 0x1e	; 30
    4bdc:	6d 96       	adiw	r28, 0x1d	; 29
    4bde:	9f ad       	ldd	r25, Y+63	; 0x3f
    4be0:	6d 97       	sbiw	r28, 0x1d	; 29
    4be2:	66 96       	adiw	r28, 0x16	; 22
    4be4:	0f ad       	ldd	r16, Y+63	; 0x3f
    4be6:	66 97       	sbiw	r28, 0x16	; 22
    4be8:	90 0f       	add	r25, r16
    4bea:	6f 96       	adiw	r28, 0x1f	; 31
    4bec:	9f af       	std	Y+63, r25	; 0x3f
    4bee:	6f 97       	sbiw	r28, 0x1f	; 31
    4bf0:	11 e0       	ldi	r17, 0x01	; 1
    4bf2:	a0 96       	adiw	r28, 0x20	; 32
    4bf4:	1f af       	std	Y+63, r17	; 0x3f
    4bf6:	a0 97       	sbiw	r28, 0x20	; 32
    4bf8:	6f 96       	adiw	r28, 0x1f	; 31
    4bfa:	2f ad       	ldd	r18, Y+63	; 0x3f
    4bfc:	6f 97       	sbiw	r28, 0x1f	; 31
    4bfe:	66 96       	adiw	r28, 0x16	; 22
    4c00:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c02:	66 97       	sbiw	r28, 0x16	; 22
    4c04:	23 17       	cp	r18, r19
    4c06:	18 f0       	brcs	.+6      	; 0x4c0e <main+0x49a>
    4c08:	a0 96       	adiw	r28, 0x20	; 32
    4c0a:	1f ae       	std	Y+63, r1	; 0x3f
    4c0c:	a0 97       	sbiw	r28, 0x20	; 32
    4c0e:	6e 96       	adiw	r28, 0x1e	; 30
    4c10:	4f ad       	ldd	r20, Y+63	; 0x3f
    4c12:	6e 97       	sbiw	r28, 0x1e	; 30
    4c14:	a0 96       	adiw	r28, 0x20	; 32
    4c16:	5f ad       	ldd	r21, Y+63	; 0x3f
    4c18:	a0 97       	sbiw	r28, 0x20	; 32
    4c1a:	45 2b       	or	r20, r21
    4c1c:	6e 96       	adiw	r28, 0x1e	; 30
    4c1e:	4f af       	std	Y+63, r20	; 0x3f
    4c20:	6e 97       	sbiw	r28, 0x1e	; 30
    4c22:	6f 96       	adiw	r28, 0x1f	; 31
    4c24:	6f ad       	ldd	r22, Y+63	; 0x3f
    4c26:	6f 97       	sbiw	r28, 0x1f	; 31
    4c28:	66 96       	adiw	r28, 0x16	; 22
    4c2a:	6f af       	std	Y+63, r22	; 0x3f
    4c2c:	66 97       	sbiw	r28, 0x16	; 22
    4c2e:	2f 96       	adiw	r28, 0x0f	; 15
    4c30:	7f ad       	ldd	r23, Y+63	; 0x3f
    4c32:	2f 97       	sbiw	r28, 0x0f	; 15
    4c34:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4c36:	78 0f       	add	r23, r24
    4c38:	67 96       	adiw	r28, 0x17	; 23
    4c3a:	7f af       	std	Y+63, r23	; 0x3f
    4c3c:	67 97       	sbiw	r28, 0x17	; 23
    4c3e:	91 e0       	ldi	r25, 0x01	; 1
    4c40:	a1 96       	adiw	r28, 0x21	; 33
    4c42:	9f af       	std	Y+63, r25	; 0x3f
    4c44:	a1 97       	sbiw	r28, 0x21	; 33
    4c46:	67 96       	adiw	r28, 0x17	; 23
    4c48:	0f ad       	ldd	r16, Y+63	; 0x3f
    4c4a:	67 97       	sbiw	r28, 0x17	; 23
    4c4c:	2f 96       	adiw	r28, 0x0f	; 15
    4c4e:	1f ad       	ldd	r17, Y+63	; 0x3f
    4c50:	2f 97       	sbiw	r28, 0x0f	; 15
    4c52:	01 17       	cp	r16, r17
    4c54:	18 f0       	brcs	.+6      	; 0x4c5c <main+0x4e8>
    4c56:	a1 96       	adiw	r28, 0x21	; 33
    4c58:	1f ae       	std	Y+63, r1	; 0x3f
    4c5a:	a1 97       	sbiw	r28, 0x21	; 33
    4c5c:	6e 96       	adiw	r28, 0x1e	; 30
    4c5e:	2f ad       	ldd	r18, Y+63	; 0x3f
    4c60:	6e 97       	sbiw	r28, 0x1e	; 30
    4c62:	67 96       	adiw	r28, 0x17	; 23
    4c64:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c66:	67 97       	sbiw	r28, 0x17	; 23
    4c68:	23 0f       	add	r18, r19
    4c6a:	a2 96       	adiw	r28, 0x22	; 34
    4c6c:	2f af       	std	Y+63, r18	; 0x3f
    4c6e:	a2 97       	sbiw	r28, 0x22	; 34
    4c70:	41 e0       	ldi	r20, 0x01	; 1
    4c72:	a3 96       	adiw	r28, 0x23	; 35
    4c74:	4f af       	std	Y+63, r20	; 0x3f
    4c76:	a3 97       	sbiw	r28, 0x23	; 35
    4c78:	a2 96       	adiw	r28, 0x22	; 34
    4c7a:	5f ad       	ldd	r21, Y+63	; 0x3f
    4c7c:	a2 97       	sbiw	r28, 0x22	; 34
    4c7e:	67 96       	adiw	r28, 0x17	; 23
    4c80:	6f ad       	ldd	r22, Y+63	; 0x3f
    4c82:	67 97       	sbiw	r28, 0x17	; 23
    4c84:	56 17       	cp	r21, r22
    4c86:	18 f0       	brcs	.+6      	; 0x4c8e <main+0x51a>
    4c88:	a3 96       	adiw	r28, 0x23	; 35
    4c8a:	1f ae       	std	Y+63, r1	; 0x3f
    4c8c:	a3 97       	sbiw	r28, 0x23	; 35
    4c8e:	a1 96       	adiw	r28, 0x21	; 33
    4c90:	7f ad       	ldd	r23, Y+63	; 0x3f
    4c92:	a1 97       	sbiw	r28, 0x21	; 33
    4c94:	a3 96       	adiw	r28, 0x23	; 35
    4c96:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c98:	a3 97       	sbiw	r28, 0x23	; 35
    4c9a:	78 2b       	or	r23, r24
    4c9c:	a1 96       	adiw	r28, 0x21	; 33
    4c9e:	7f af       	std	Y+63, r23	; 0x3f
    4ca0:	a1 97       	sbiw	r28, 0x21	; 33
    4ca2:	a2 96       	adiw	r28, 0x22	; 34
    4ca4:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ca6:	a2 97       	sbiw	r28, 0x22	; 34
    4ca8:	67 96       	adiw	r28, 0x17	; 23
    4caa:	9f af       	std	Y+63, r25	; 0x3f
    4cac:	67 97       	sbiw	r28, 0x17	; 23
    4cae:	60 96       	adiw	r28, 0x10	; 16
    4cb0:	0f ad       	ldd	r16, Y+63	; 0x3f
    4cb2:	60 97       	sbiw	r28, 0x10	; 16
    4cb4:	1c 8d       	ldd	r17, Y+28	; 0x1c
    4cb6:	01 0f       	add	r16, r17
    4cb8:	68 96       	adiw	r28, 0x18	; 24
    4cba:	0f af       	std	Y+63, r16	; 0x3f
    4cbc:	68 97       	sbiw	r28, 0x18	; 24
    4cbe:	21 e0       	ldi	r18, 0x01	; 1
    4cc0:	a4 96       	adiw	r28, 0x24	; 36
    4cc2:	2f af       	std	Y+63, r18	; 0x3f
    4cc4:	a4 97       	sbiw	r28, 0x24	; 36
    4cc6:	68 96       	adiw	r28, 0x18	; 24
    4cc8:	3f ad       	ldd	r19, Y+63	; 0x3f
    4cca:	68 97       	sbiw	r28, 0x18	; 24
    4ccc:	60 96       	adiw	r28, 0x10	; 16
    4cce:	4f ad       	ldd	r20, Y+63	; 0x3f
    4cd0:	60 97       	sbiw	r28, 0x10	; 16
    4cd2:	34 17       	cp	r19, r20
    4cd4:	18 f0       	brcs	.+6      	; 0x4cdc <main+0x568>
    4cd6:	a4 96       	adiw	r28, 0x24	; 36
    4cd8:	1f ae       	std	Y+63, r1	; 0x3f
    4cda:	a4 97       	sbiw	r28, 0x24	; 36
    4cdc:	a1 96       	adiw	r28, 0x21	; 33
    4cde:	5f ad       	ldd	r21, Y+63	; 0x3f
    4ce0:	a1 97       	sbiw	r28, 0x21	; 33
    4ce2:	68 96       	adiw	r28, 0x18	; 24
    4ce4:	6f ad       	ldd	r22, Y+63	; 0x3f
    4ce6:	68 97       	sbiw	r28, 0x18	; 24
    4ce8:	56 0f       	add	r21, r22
    4cea:	a5 96       	adiw	r28, 0x25	; 37
    4cec:	5f af       	std	Y+63, r21	; 0x3f
    4cee:	a5 97       	sbiw	r28, 0x25	; 37
    4cf0:	71 e0       	ldi	r23, 0x01	; 1
    4cf2:	a6 96       	adiw	r28, 0x26	; 38
    4cf4:	7f af       	std	Y+63, r23	; 0x3f
    4cf6:	a6 97       	sbiw	r28, 0x26	; 38
    4cf8:	a5 96       	adiw	r28, 0x25	; 37
    4cfa:	8f ad       	ldd	r24, Y+63	; 0x3f
    4cfc:	a5 97       	sbiw	r28, 0x25	; 37
    4cfe:	68 96       	adiw	r28, 0x18	; 24
    4d00:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d02:	68 97       	sbiw	r28, 0x18	; 24
    4d04:	89 17       	cp	r24, r25
    4d06:	18 f0       	brcs	.+6      	; 0x4d0e <main+0x59a>
    4d08:	a6 96       	adiw	r28, 0x26	; 38
    4d0a:	1f ae       	std	Y+63, r1	; 0x3f
    4d0c:	a6 97       	sbiw	r28, 0x26	; 38
    4d0e:	a4 96       	adiw	r28, 0x24	; 36
    4d10:	0f ad       	ldd	r16, Y+63	; 0x3f
    4d12:	a4 97       	sbiw	r28, 0x24	; 36
    4d14:	a6 96       	adiw	r28, 0x26	; 38
    4d16:	1f ad       	ldd	r17, Y+63	; 0x3f
    4d18:	a6 97       	sbiw	r28, 0x26	; 38
    4d1a:	01 2b       	or	r16, r17
    4d1c:	a4 96       	adiw	r28, 0x24	; 36
    4d1e:	0f af       	std	Y+63, r16	; 0x3f
    4d20:	a4 97       	sbiw	r28, 0x24	; 36
    4d22:	a5 96       	adiw	r28, 0x25	; 37
    4d24:	2f ad       	ldd	r18, Y+63	; 0x3f
    4d26:	a5 97       	sbiw	r28, 0x25	; 37
    4d28:	68 96       	adiw	r28, 0x18	; 24
    4d2a:	2f af       	std	Y+63, r18	; 0x3f
    4d2c:	68 97       	sbiw	r28, 0x18	; 24
    4d2e:	61 96       	adiw	r28, 0x11	; 17
    4d30:	3f ad       	ldd	r19, Y+63	; 0x3f
    4d32:	61 97       	sbiw	r28, 0x11	; 17
    4d34:	4d 8d       	ldd	r20, Y+29	; 0x1d
    4d36:	34 0f       	add	r19, r20
    4d38:	69 96       	adiw	r28, 0x19	; 25
    4d3a:	3f af       	std	Y+63, r19	; 0x3f
    4d3c:	69 97       	sbiw	r28, 0x19	; 25
    4d3e:	51 e0       	ldi	r21, 0x01	; 1
    4d40:	a7 96       	adiw	r28, 0x27	; 39
    4d42:	5f af       	std	Y+63, r21	; 0x3f
    4d44:	a7 97       	sbiw	r28, 0x27	; 39
    4d46:	69 96       	adiw	r28, 0x19	; 25
    4d48:	6f ad       	ldd	r22, Y+63	; 0x3f
    4d4a:	69 97       	sbiw	r28, 0x19	; 25
    4d4c:	61 96       	adiw	r28, 0x11	; 17
    4d4e:	7f ad       	ldd	r23, Y+63	; 0x3f
    4d50:	61 97       	sbiw	r28, 0x11	; 17
    4d52:	67 17       	cp	r22, r23
    4d54:	18 f0       	brcs	.+6      	; 0x4d5c <main+0x5e8>
    4d56:	a7 96       	adiw	r28, 0x27	; 39
    4d58:	1f ae       	std	Y+63, r1	; 0x3f
    4d5a:	a7 97       	sbiw	r28, 0x27	; 39
    4d5c:	a4 96       	adiw	r28, 0x24	; 36
    4d5e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d60:	a4 97       	sbiw	r28, 0x24	; 36
    4d62:	69 96       	adiw	r28, 0x19	; 25
    4d64:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d66:	69 97       	sbiw	r28, 0x19	; 25
    4d68:	89 0f       	add	r24, r25
    4d6a:	a8 96       	adiw	r28, 0x28	; 40
    4d6c:	8f af       	std	Y+63, r24	; 0x3f
    4d6e:	a8 97       	sbiw	r28, 0x28	; 40
    4d70:	01 e0       	ldi	r16, 0x01	; 1
    4d72:	a9 96       	adiw	r28, 0x29	; 41
    4d74:	0f af       	std	Y+63, r16	; 0x3f
    4d76:	a9 97       	sbiw	r28, 0x29	; 41
    4d78:	a8 96       	adiw	r28, 0x28	; 40
    4d7a:	1f ad       	ldd	r17, Y+63	; 0x3f
    4d7c:	a8 97       	sbiw	r28, 0x28	; 40
    4d7e:	69 96       	adiw	r28, 0x19	; 25
    4d80:	2f ad       	ldd	r18, Y+63	; 0x3f
    4d82:	69 97       	sbiw	r28, 0x19	; 25
    4d84:	12 17       	cp	r17, r18
    4d86:	18 f0       	brcs	.+6      	; 0x4d8e <main+0x61a>
    4d88:	a9 96       	adiw	r28, 0x29	; 41
    4d8a:	1f ae       	std	Y+63, r1	; 0x3f
    4d8c:	a9 97       	sbiw	r28, 0x29	; 41
    4d8e:	a7 96       	adiw	r28, 0x27	; 39
    4d90:	3f ad       	ldd	r19, Y+63	; 0x3f
    4d92:	a7 97       	sbiw	r28, 0x27	; 39
    4d94:	a9 96       	adiw	r28, 0x29	; 41
    4d96:	4f ad       	ldd	r20, Y+63	; 0x3f
    4d98:	a9 97       	sbiw	r28, 0x29	; 41
    4d9a:	34 2b       	or	r19, r20
    4d9c:	a7 96       	adiw	r28, 0x27	; 39
    4d9e:	3f af       	std	Y+63, r19	; 0x3f
    4da0:	a7 97       	sbiw	r28, 0x27	; 39
    4da2:	a8 96       	adiw	r28, 0x28	; 40
    4da4:	5f ad       	ldd	r21, Y+63	; 0x3f
    4da6:	a8 97       	sbiw	r28, 0x28	; 40
    4da8:	69 96       	adiw	r28, 0x19	; 25
    4daa:	5f af       	std	Y+63, r21	; 0x3f
    4dac:	69 97       	sbiw	r28, 0x19	; 25
    4dae:	62 96       	adiw	r28, 0x12	; 18
    4db0:	6f ad       	ldd	r22, Y+63	; 0x3f
    4db2:	62 97       	sbiw	r28, 0x12	; 18
    4db4:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4db6:	67 0f       	add	r22, r23
    4db8:	6a 96       	adiw	r28, 0x1a	; 26
    4dba:	6f af       	std	Y+63, r22	; 0x3f
    4dbc:	6a 97       	sbiw	r28, 0x1a	; 26
    4dbe:	81 e0       	ldi	r24, 0x01	; 1
    4dc0:	aa 96       	adiw	r28, 0x2a	; 42
    4dc2:	8f af       	std	Y+63, r24	; 0x3f
    4dc4:	aa 97       	sbiw	r28, 0x2a	; 42
    4dc6:	6a 96       	adiw	r28, 0x1a	; 26
    4dc8:	9f ad       	ldd	r25, Y+63	; 0x3f
    4dca:	6a 97       	sbiw	r28, 0x1a	; 26
    4dcc:	62 96       	adiw	r28, 0x12	; 18
    4dce:	0f ad       	ldd	r16, Y+63	; 0x3f
    4dd0:	62 97       	sbiw	r28, 0x12	; 18
    4dd2:	90 17       	cp	r25, r16
    4dd4:	18 f0       	brcs	.+6      	; 0x4ddc <main+0x668>
    4dd6:	aa 96       	adiw	r28, 0x2a	; 42
    4dd8:	1f ae       	std	Y+63, r1	; 0x3f
    4dda:	aa 97       	sbiw	r28, 0x2a	; 42
    4ddc:	a7 96       	adiw	r28, 0x27	; 39
    4dde:	1f ad       	ldd	r17, Y+63	; 0x3f
    4de0:	a7 97       	sbiw	r28, 0x27	; 39
    4de2:	6a 96       	adiw	r28, 0x1a	; 26
    4de4:	2f ad       	ldd	r18, Y+63	; 0x3f
    4de6:	6a 97       	sbiw	r28, 0x1a	; 26
    4de8:	12 0f       	add	r17, r18
    4dea:	ab 96       	adiw	r28, 0x2b	; 43
    4dec:	1f af       	std	Y+63, r17	; 0x3f
    4dee:	ab 97       	sbiw	r28, 0x2b	; 43
    4df0:	31 e0       	ldi	r19, 0x01	; 1
    4df2:	ac 96       	adiw	r28, 0x2c	; 44
    4df4:	3f af       	std	Y+63, r19	; 0x3f
    4df6:	ac 97       	sbiw	r28, 0x2c	; 44
    4df8:	ab 96       	adiw	r28, 0x2b	; 43
    4dfa:	4f ad       	ldd	r20, Y+63	; 0x3f
    4dfc:	ab 97       	sbiw	r28, 0x2b	; 43
    4dfe:	6a 96       	adiw	r28, 0x1a	; 26
    4e00:	5f ad       	ldd	r21, Y+63	; 0x3f
    4e02:	6a 97       	sbiw	r28, 0x1a	; 26
    4e04:	45 17       	cp	r20, r21
    4e06:	18 f0       	brcs	.+6      	; 0x4e0e <main+0x69a>
    4e08:	ac 96       	adiw	r28, 0x2c	; 44
    4e0a:	1f ae       	std	Y+63, r1	; 0x3f
    4e0c:	ac 97       	sbiw	r28, 0x2c	; 44
    4e0e:	aa 96       	adiw	r28, 0x2a	; 42
    4e10:	6f ad       	ldd	r22, Y+63	; 0x3f
    4e12:	aa 97       	sbiw	r28, 0x2a	; 42
    4e14:	ac 96       	adiw	r28, 0x2c	; 44
    4e16:	7f ad       	ldd	r23, Y+63	; 0x3f
    4e18:	ac 97       	sbiw	r28, 0x2c	; 44
    4e1a:	67 2b       	or	r22, r23
    4e1c:	aa 96       	adiw	r28, 0x2a	; 42
    4e1e:	6f af       	std	Y+63, r22	; 0x3f
    4e20:	aa 97       	sbiw	r28, 0x2a	; 42
    4e22:	ab 96       	adiw	r28, 0x2b	; 43
    4e24:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e26:	ab 97       	sbiw	r28, 0x2b	; 43
    4e28:	6a 96       	adiw	r28, 0x1a	; 26
    4e2a:	8f af       	std	Y+63, r24	; 0x3f
    4e2c:	6a 97       	sbiw	r28, 0x1a	; 26
    4e2e:	63 96       	adiw	r28, 0x13	; 19
    4e30:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e32:	63 97       	sbiw	r28, 0x13	; 19
    4e34:	0f 8d       	ldd	r16, Y+31	; 0x1f
    4e36:	90 0f       	add	r25, r16
    4e38:	6b 96       	adiw	r28, 0x1b	; 27
    4e3a:	9f af       	std	Y+63, r25	; 0x3f
    4e3c:	6b 97       	sbiw	r28, 0x1b	; 27
    4e3e:	11 e0       	ldi	r17, 0x01	; 1
    4e40:	ad 96       	adiw	r28, 0x2d	; 45
    4e42:	1f af       	std	Y+63, r17	; 0x3f
    4e44:	ad 97       	sbiw	r28, 0x2d	; 45
    4e46:	6b 96       	adiw	r28, 0x1b	; 27
    4e48:	2f ad       	ldd	r18, Y+63	; 0x3f
    4e4a:	6b 97       	sbiw	r28, 0x1b	; 27
    4e4c:	63 96       	adiw	r28, 0x13	; 19
    4e4e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4e50:	63 97       	sbiw	r28, 0x13	; 19
    4e52:	23 17       	cp	r18, r19
    4e54:	18 f0       	brcs	.+6      	; 0x4e5c <main+0x6e8>
    4e56:	ad 96       	adiw	r28, 0x2d	; 45
    4e58:	1f ae       	std	Y+63, r1	; 0x3f
    4e5a:	ad 97       	sbiw	r28, 0x2d	; 45
    4e5c:	aa 96       	adiw	r28, 0x2a	; 42
    4e5e:	4f ad       	ldd	r20, Y+63	; 0x3f
    4e60:	aa 97       	sbiw	r28, 0x2a	; 42
    4e62:	6b 96       	adiw	r28, 0x1b	; 27
    4e64:	5f ad       	ldd	r21, Y+63	; 0x3f
    4e66:	6b 97       	sbiw	r28, 0x1b	; 27
    4e68:	45 0f       	add	r20, r21
    4e6a:	ae 96       	adiw	r28, 0x2e	; 46
    4e6c:	4f af       	std	Y+63, r20	; 0x3f
    4e6e:	ae 97       	sbiw	r28, 0x2e	; 46
    4e70:	61 e0       	ldi	r22, 0x01	; 1
    4e72:	af 96       	adiw	r28, 0x2f	; 47
    4e74:	6f af       	std	Y+63, r22	; 0x3f
    4e76:	af 97       	sbiw	r28, 0x2f	; 47
    4e78:	ae 96       	adiw	r28, 0x2e	; 46
    4e7a:	7f ad       	ldd	r23, Y+63	; 0x3f
    4e7c:	ae 97       	sbiw	r28, 0x2e	; 46
    4e7e:	6b 96       	adiw	r28, 0x1b	; 27
    4e80:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e82:	6b 97       	sbiw	r28, 0x1b	; 27
    4e84:	78 17       	cp	r23, r24
    4e86:	18 f0       	brcs	.+6      	; 0x4e8e <main+0x71a>
    4e88:	af 96       	adiw	r28, 0x2f	; 47
    4e8a:	1f ae       	std	Y+63, r1	; 0x3f
    4e8c:	af 97       	sbiw	r28, 0x2f	; 47
    4e8e:	ad 96       	adiw	r28, 0x2d	; 45
    4e90:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e92:	ad 97       	sbiw	r28, 0x2d	; 45
    4e94:	af 96       	adiw	r28, 0x2f	; 47
    4e96:	0f ad       	ldd	r16, Y+63	; 0x3f
    4e98:	af 97       	sbiw	r28, 0x2f	; 47
    4e9a:	90 2b       	or	r25, r16
    4e9c:	ad 96       	adiw	r28, 0x2d	; 45
    4e9e:	9f af       	std	Y+63, r25	; 0x3f
    4ea0:	ad 97       	sbiw	r28, 0x2d	; 45
    4ea2:	ae 96       	adiw	r28, 0x2e	; 46
    4ea4:	1f ad       	ldd	r17, Y+63	; 0x3f
    4ea6:	ae 97       	sbiw	r28, 0x2e	; 46
    4ea8:	6b 96       	adiw	r28, 0x1b	; 27
    4eaa:	1f af       	std	Y+63, r17	; 0x3f
    4eac:	6b 97       	sbiw	r28, 0x1b	; 27
    4eae:	64 96       	adiw	r28, 0x14	; 20
    4eb0:	2f ad       	ldd	r18, Y+63	; 0x3f
    4eb2:	64 97       	sbiw	r28, 0x14	; 20
    4eb4:	38 a1       	ldd	r19, Y+32	; 0x20
    4eb6:	23 0f       	add	r18, r19
    4eb8:	6c 96       	adiw	r28, 0x1c	; 28
    4eba:	2f af       	std	Y+63, r18	; 0x3f
    4ebc:	6c 97       	sbiw	r28, 0x1c	; 28
    4ebe:	ad 96       	adiw	r28, 0x2d	; 45
    4ec0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ec2:	ad 97       	sbiw	r28, 0x2d	; 45
    4ec4:	6c 96       	adiw	r28, 0x1c	; 28
    4ec6:	4f ad       	ldd	r20, Y+63	; 0x3f
    4ec8:	6c 97       	sbiw	r28, 0x1c	; 28
    4eca:	84 0f       	add	r24, r20
    4ecc:	6c 96       	adiw	r28, 0x1c	; 28
    4ece:	8f af       	std	Y+63, r24	; 0x3f
    4ed0:	6c 97       	sbiw	r28, 0x1c	; 28
    4ed2:	65 96       	adiw	r28, 0x15	; 21
    4ed4:	5f ad       	ldd	r21, Y+63	; 0x3f
    4ed6:	65 97       	sbiw	r28, 0x15	; 21
    4ed8:	5c 83       	std	Y+4, r21	; 0x04
    4eda:	66 96       	adiw	r28, 0x16	; 22
    4edc:	6f ad       	ldd	r22, Y+63	; 0x3f
    4ede:	66 97       	sbiw	r28, 0x16	; 22
    4ee0:	6d 83       	std	Y+5, r22	; 0x05
    4ee2:	67 96       	adiw	r28, 0x17	; 23
    4ee4:	7f ad       	ldd	r23, Y+63	; 0x3f
    4ee6:	67 97       	sbiw	r28, 0x17	; 23
    4ee8:	7e 83       	std	Y+6, r23	; 0x06
    4eea:	68 96       	adiw	r28, 0x18	; 24
    4eec:	8f ad       	ldd	r24, Y+63	; 0x3f
    4eee:	68 97       	sbiw	r28, 0x18	; 24
    4ef0:	8f 83       	std	Y+7, r24	; 0x07
    4ef2:	69 96       	adiw	r28, 0x19	; 25
    4ef4:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ef6:	69 97       	sbiw	r28, 0x19	; 25
    4ef8:	98 87       	std	Y+8, r25	; 0x08
    4efa:	6a 96       	adiw	r28, 0x1a	; 26
    4efc:	0f ad       	ldd	r16, Y+63	; 0x3f
    4efe:	6a 97       	sbiw	r28, 0x1a	; 26
    4f00:	09 87       	std	Y+9, r16	; 0x09
    4f02:	6b 96       	adiw	r28, 0x1b	; 27
    4f04:	1f ad       	ldd	r17, Y+63	; 0x3f
    4f06:	6b 97       	sbiw	r28, 0x1b	; 27
    4f08:	1a 87       	std	Y+10, r17	; 0x0a
    4f0a:	6c 96       	adiw	r28, 0x1c	; 28
    4f0c:	2f ad       	ldd	r18, Y+63	; 0x3f
    4f0e:	6c 97       	sbiw	r28, 0x1c	; 28
    4f10:	2b 87       	std	Y+11, r18	; 0x0b
				 LCD_VidPrintVar(local_draft ) ;     //to print the values
    4f12:	8c 89       	ldd	r24, Y+20	; 0x14
    4f14:	a8 2e       	mov	r10, r24
    4f16:	bb 24       	eor	r11, r11
    4f18:	cc 24       	eor	r12, r12
    4f1a:	dd 24       	eor	r13, r13
    4f1c:	ee 24       	eor	r14, r14
    4f1e:	ff 24       	eor	r15, r15
    4f20:	87 01       	movw	r16, r14
    4f22:	2a 2d       	mov	r18, r10
    4f24:	3b 2d       	mov	r19, r11
    4f26:	4c 2d       	mov	r20, r12
    4f28:	5d 2d       	mov	r21, r13
    4f2a:	6e 2d       	mov	r22, r14
    4f2c:	7f 2d       	mov	r23, r15
    4f2e:	80 2f       	mov	r24, r16
    4f30:	91 2f       	mov	r25, r17
    4f32:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
				 flag_2_visit = 1 ;
    4f36:	81 e0       	ldi	r24, 0x01	; 1
    4f38:	8f 8b       	std	Y+23, r24	; 0x17
				 cycle_2++;
    4f3a:	89 81       	ldd	r24, Y+1	; 0x01
    4f3c:	8f 5f       	subi	r24, 0xFF	; 255
    4f3e:	89 83       	std	Y+1, r24	; 0x01
    4f40:	49 cc       	rjmp	.-1902   	; 0x47d4 <main+0x60>
			 }//end else if

		 }//end if

		 // to enter sign
		 else if (local_draft != NO_NUM && local_draft != '=' && local_draft != CLR_KEY ){
    4f42:	8c 89       	ldd	r24, Y+20	; 0x14
    4f44:	82 33       	cpi	r24, 0x32	; 50
    4f46:	c1 f1       	breq	.+112    	; 0x4fb8 <main+0x844>
    4f48:	8c 89       	ldd	r24, Y+20	; 0x14
    4f4a:	8d 33       	cpi	r24, 0x3D	; 61
    4f4c:	a9 f1       	breq	.+106    	; 0x4fb8 <main+0x844>
    4f4e:	8c 89       	ldd	r24, Y+20	; 0x14
    4f50:	8c 30       	cpi	r24, 0x0C	; 12
    4f52:	91 f1       	breq	.+100    	; 0x4fb8 <main+0x844>
		     LCD_VidSendChar(local_draft);          //to print the values
    4f54:	8c 89       	ldd	r24, Y+20	; 0x14
    4f56:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
		     if (local_draft == '-'&& sign_1 == 0 && flag_1_visit == 0){
    4f5a:	8c 89       	ldd	r24, Y+20	; 0x14
    4f5c:	8d 32       	cpi	r24, 0x2D	; 45
    4f5e:	89 f4       	brne	.+34     	; 0x4f82 <main+0x80e>
    4f60:	80 91 89 01 	lds	r24, 0x0189
    4f64:	88 23       	and	r24, r24
    4f66:	69 f4       	brne	.+26     	; 0x4f82 <main+0x80e>
    4f68:	88 8d       	ldd	r24, Y+24	; 0x18
    4f6a:	88 23       	and	r24, r24
    4f6c:	51 f4       	brne	.+20     	; 0x4f82 <main+0x80e>
		    	 LCD_VidClear();
    4f6e:	0e 94 b0 23 	call	0x4760	; 0x4760 <LCD_VidClear>
			     LCD_VidSendChar(local_draft);               //to print the values
    4f72:	8c 89       	ldd	r24, Y+20	; 0x14
    4f74:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
		    	 sign_1 = 1 ;
    4f78:	81 e0       	ldi	r24, 0x01	; 1
    4f7a:	80 93 89 01 	sts	0x0189, r24
		    	 flag_first_time = 0 ;                       //to prevent clear sign in num_1
    4f7e:	1d 8a       	std	Y+21, r1	; 0x15
    4f80:	29 cc       	rjmp	.-1966   	; 0x47d4 <main+0x60>
		     }//end if
		     else{
	             // to enter sign number 2
		    	 if (flag_3_visit && local_draft == '-' && sign_2 == 0 && flag_2_visit == 0){
    4f82:	8e 89       	ldd	r24, Y+22	; 0x16
    4f84:	88 23       	and	r24, r24
    4f86:	71 f0       	breq	.+28     	; 0x4fa4 <main+0x830>
    4f88:	8c 89       	ldd	r24, Y+20	; 0x14
    4f8a:	8d 32       	cpi	r24, 0x2D	; 45
    4f8c:	59 f4       	brne	.+22     	; 0x4fa4 <main+0x830>
    4f8e:	80 91 8a 01 	lds	r24, 0x018A
    4f92:	88 23       	and	r24, r24
    4f94:	39 f4       	brne	.+14     	; 0x4fa4 <main+0x830>
    4f96:	8f 89       	ldd	r24, Y+23	; 0x17
    4f98:	88 23       	and	r24, r24
    4f9a:	21 f4       	brne	.+8      	; 0x4fa4 <main+0x830>
		    		 sign_2 = 1 ;
    4f9c:	81 e0       	ldi	r24, 0x01	; 1
    4f9e:	80 93 8a 01 	sts	0x018A, r24
    4fa2:	18 cc       	rjmp	.-2000   	; 0x47d4 <main+0x60>
		    	 }//end if
		    	 else {                                      //to enter sign operation
				     local_sign = local_draft ;              //to send the values
    4fa4:	8c 89       	ldd	r24, Y+20	; 0x14
    4fa6:	8b 83       	std	Y+3, r24	; 0x03
				     global_First_sign++ ;                   //to check that the sign isn't entered twice
    4fa8:	80 91 88 01 	lds	r24, 0x0188
    4fac:	8f 5f       	subi	r24, 0xFF	; 255
    4fae:	80 93 88 01 	sts	0x0188, r24
				     flag_3_visit = 1 ;
    4fb2:	81 e0       	ldi	r24, 0x01	; 1
    4fb4:	8e 8b       	std	Y+22, r24	; 0x16
    4fb6:	0e cc       	rjmp	.-2020   	; 0x47d4 <main+0x60>
		    	 }//end else
		     }//end else
		 }

		 //to clear all arithimitic operation and begin again
		 else if (local_draft == CLR_KEY){
    4fb8:	8c 89       	ldd	r24, Y+20	; 0x14
    4fba:	8c 30       	cpi	r24, 0x0C	; 12
    4fbc:	f9 f4       	brne	.+62     	; 0x4ffc <main+0x888>
			 local_num1 = DEFAULT_VAL ;
    4fbe:	1c 86       	std	Y+12, r1	; 0x0c
    4fc0:	1d 86       	std	Y+13, r1	; 0x0d
    4fc2:	1e 86       	std	Y+14, r1	; 0x0e
    4fc4:	1f 86       	std	Y+15, r1	; 0x0f
    4fc6:	18 8a       	std	Y+16, r1	; 0x10
    4fc8:	19 8a       	std	Y+17, r1	; 0x11
    4fca:	1a 8a       	std	Y+18, r1	; 0x12
    4fcc:	1b 8a       	std	Y+19, r1	; 0x13
			 local_num2 = DEFAULT_VAL ;
    4fce:	1c 82       	std	Y+4, r1	; 0x04
    4fd0:	1d 82       	std	Y+5, r1	; 0x05
    4fd2:	1e 82       	std	Y+6, r1	; 0x06
    4fd4:	1f 82       	std	Y+7, r1	; 0x07
    4fd6:	18 86       	std	Y+8, r1	; 0x08
    4fd8:	19 86       	std	Y+9, r1	; 0x09
    4fda:	1a 86       	std	Y+10, r1	; 0x0a
    4fdc:	1b 86       	std	Y+11, r1	; 0x0b
			 local_sign = DEFAULT_VAL ;
    4fde:	1b 82       	std	Y+3, r1	; 0x03
			 global_First_sign = 0 ;
    4fe0:	10 92 88 01 	sts	0x0188, r1
			 flag_first_time = 1 ;
    4fe4:	81 e0       	ldi	r24, 0x01	; 1
    4fe6:	8d 8b       	std	Y+21, r24	; 0x15
		     cycle_1 = 0 ;
    4fe8:	1a 82       	std	Y+2, r1	; 0x02
		     cycle_2 = 0 ;
    4fea:	19 82       	std	Y+1, r1	; 0x01
		     flag_1_visit = 0 ;
    4fec:	18 8e       	std	Y+24, r1	; 0x18
		     flag_2_visit = 0 ;
    4fee:	1f 8a       	std	Y+23, r1	; 0x17
		     flag_3_visit = 0 ;
    4ff0:	1e 8a       	std	Y+22, r1	; 0x16
		     sign_1 = 0 ;
    4ff2:	10 92 89 01 	sts	0x0189, r1
		     sign_2 = 0 ;
    4ff6:	10 92 8a 01 	sts	0x018A, r1
    4ffa:	ec cb       	rjmp	.-2088   	; 0x47d4 <main+0x60>
		 }

		 //to display the result and begin new arithimitic operation
		 else if (local_draft != NO_NUM && local_draft != CLR_KEY ){
    4ffc:	8c 89       	ldd	r24, Y+20	; 0x14
    4ffe:	82 33       	cpi	r24, 0x32	; 50
    5000:	09 f4       	brne	.+2      	; 0x5004 <main+0x890>
    5002:	e8 cb       	rjmp	.-2096   	; 0x47d4 <main+0x60>
    5004:	8c 89       	ldd	r24, Y+20	; 0x14
    5006:	8c 30       	cpi	r24, 0x0C	; 12
    5008:	09 f4       	brne	.+2      	; 0x500c <main+0x898>
    500a:	e4 cb       	rjmp	.-2104   	; 0x47d4 <main+0x60>
		     LCD_VidSendChar(local_draft);
    500c:	8c 89       	ldd	r24, Y+20	; 0x14
    500e:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>

		     //to check that 2/  give error on LCD
		     if (!(flag_1_visit && flag_2_visit && flag_3_visit) ){
    5012:	88 8d       	ldd	r24, Y+24	; 0x18
    5014:	88 23       	and	r24, r24
    5016:	31 f0       	breq	.+12     	; 0x5024 <main+0x8b0>
    5018:	8f 89       	ldd	r24, Y+23	; 0x17
    501a:	88 23       	and	r24, r24
    501c:	19 f0       	breq	.+6      	; 0x5024 <main+0x8b0>
    501e:	8e 89       	ldd	r24, Y+22	; 0x16
    5020:	88 23       	and	r24, r24
    5022:	a1 f4       	brne	.+40     	; 0x504c <main+0x8d8>
		    	 Error_VidStatment();
    5024:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <Error_VidStatment>
			     sign_1 = 0 ;
			     sign_2 = 0 ;
		 }

	   }//end while loop
}//end main
    5028:	c2 59       	subi	r28, 0x92	; 146
    502a:	df 4f       	sbci	r29, 0xFF	; 255
    502c:	0f b6       	in	r0, 0x3f	; 63
    502e:	f8 94       	cli
    5030:	de bf       	out	0x3e, r29	; 62
    5032:	0f be       	out	0x3f, r0	; 63
    5034:	cd bf       	out	0x3d, r28	; 61
    5036:	cf 91       	pop	r28
    5038:	df 91       	pop	r29
    503a:	1f 91       	pop	r17
    503c:	0f 91       	pop	r16
    503e:	ff 90       	pop	r15
    5040:	ef 90       	pop	r14
    5042:	df 90       	pop	r13
    5044:	cf 90       	pop	r12
    5046:	bf 90       	pop	r11
    5048:	af 90       	pop	r10
    504a:	08 95       	ret
		     if (!(flag_1_visit && flag_2_visit && flag_3_visit) ){
		    	 Error_VidStatment();
		    	 break ;
		     }

			Calculate_VidResult(Reverse_value(local_num1,cycle_1) ,Reverse_value(local_num2,cycle_2) ,
    504c:	8c 85       	ldd	r24, Y+12	; 0x0c
    504e:	9d 85       	ldd	r25, Y+13	; 0x0d
    5050:	6a 81       	ldd	r22, Y+2	; 0x02
    5052:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Reverse_value>
    5056:	8c 01       	movw	r16, r24
    5058:	8c 81       	ldd	r24, Y+4	; 0x04
    505a:	9d 81       	ldd	r25, Y+5	; 0x05
    505c:	69 81       	ldd	r22, Y+1	; 0x01
    505e:	0e 94 c4 2f 	call	0x5f88	; 0x5f88 <Reverse_value>
    5062:	9c 01       	movw	r18, r24
    5064:	c8 01       	movw	r24, r16
    5066:	b9 01       	movw	r22, r18
    5068:	4b 81       	ldd	r20, Y+3	; 0x03
    506a:	0e 94 54 28 	call	0x50a8	; 0x50a8 <Calculate_VidResult>
					 local_sign ) ;
				 local_num1 = DEFAULT_VAL ;
    506e:	1c 86       	std	Y+12, r1	; 0x0c
    5070:	1d 86       	std	Y+13, r1	; 0x0d
    5072:	1e 86       	std	Y+14, r1	; 0x0e
    5074:	1f 86       	std	Y+15, r1	; 0x0f
    5076:	18 8a       	std	Y+16, r1	; 0x10
    5078:	19 8a       	std	Y+17, r1	; 0x11
    507a:	1a 8a       	std	Y+18, r1	; 0x12
    507c:	1b 8a       	std	Y+19, r1	; 0x13
				 local_num2 = DEFAULT_VAL ;
    507e:	1c 82       	std	Y+4, r1	; 0x04
    5080:	1d 82       	std	Y+5, r1	; 0x05
    5082:	1e 82       	std	Y+6, r1	; 0x06
    5084:	1f 82       	std	Y+7, r1	; 0x07
    5086:	18 86       	std	Y+8, r1	; 0x08
    5088:	19 86       	std	Y+9, r1	; 0x09
    508a:	1a 86       	std	Y+10, r1	; 0x0a
    508c:	1b 86       	std	Y+11, r1	; 0x0b
				 local_sign = DEFAULT_VAL ;
    508e:	1b 82       	std	Y+3, r1	; 0x03
				 flag_first_time = 1 ;
    5090:	81 e0       	ldi	r24, 0x01	; 1
    5092:	8d 8b       	std	Y+21, r24	; 0x15
			     cycle_1 = 0 ;
    5094:	1a 82       	std	Y+2, r1	; 0x02
			     cycle_2 = 0 ;
    5096:	19 82       	std	Y+1, r1	; 0x01
			     flag_1_visit = 0 ;
    5098:	18 8e       	std	Y+24, r1	; 0x18
			     flag_2_visit = 0 ;
    509a:	1f 8a       	std	Y+23, r1	; 0x17
			     flag_3_visit = 0 ;
    509c:	1e 8a       	std	Y+22, r1	; 0x16
			     sign_1 = 0 ;
    509e:	10 92 89 01 	sts	0x0189, r1
			     sign_2 = 0 ;
    50a2:	10 92 8a 01 	sts	0x018A, r1
    50a6:	96 cb       	rjmp	.-2260   	; 0x47d4 <main+0x60>

000050a8 <Calculate_VidResult>:
		 }

	   }//end while loop
}//end main

void Calculate_VidResult(u32 Copy_U8num1 , u32 Copy_U8num2 , u8 Copy_U8Sign){
    50a8:	2f 92       	push	r2
    50aa:	3f 92       	push	r3
    50ac:	4f 92       	push	r4
    50ae:	5f 92       	push	r5
    50b0:	6f 92       	push	r6
    50b2:	7f 92       	push	r7
    50b4:	8f 92       	push	r8
    50b6:	9f 92       	push	r9
    50b8:	af 92       	push	r10
    50ba:	bf 92       	push	r11
    50bc:	cf 92       	push	r12
    50be:	df 92       	push	r13
    50c0:	ef 92       	push	r14
    50c2:	ff 92       	push	r15
    50c4:	0f 93       	push	r16
    50c6:	1f 93       	push	r17
    50c8:	df 93       	push	r29
    50ca:	cf 93       	push	r28
    50cc:	cd b7       	in	r28, 0x3d	; 61
    50ce:	de b7       	in	r29, 0x3e	; 62
    50d0:	c6 56       	subi	r28, 0x66	; 102
    50d2:	d0 40       	sbci	r29, 0x00	; 0
    50d4:	0f b6       	in	r0, 0x3f	; 63
    50d6:	f8 94       	cli
    50d8:	de bf       	out	0x3e, r29	; 62
    50da:	0f be       	out	0x3f, r0	; 63
    50dc:	cd bf       	out	0x3d, r28	; 61
    50de:	9b 87       	std	Y+11, r25	; 0x0b
    50e0:	8a 87       	std	Y+10, r24	; 0x0a
    50e2:	7d 87       	std	Y+13, r23	; 0x0d
    50e4:	6c 87       	std	Y+12, r22	; 0x0c
    50e6:	4e 87       	std	Y+14, r20	; 0x0e
	// to search about wanted sign and do arthimitic operations
	switch (Copy_U8Sign){
    50e8:	8e 85       	ldd	r24, Y+14	; 0x0e
    50ea:	08 2f       	mov	r16, r24
    50ec:	10 e0       	ldi	r17, 0x00	; 0
    50ee:	18 a3       	std	Y+32, r17	; 0x20
    50f0:	0f 8f       	std	Y+31, r16	; 0x1f
    50f2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    50f4:	38 a1       	ldd	r19, Y+32	; 0x20
    50f6:	2b 32       	cpi	r18, 0x2B	; 43
    50f8:	31 05       	cpc	r19, r1
    50fa:	09 f4       	brne	.+2      	; 0x50fe <Calculate_VidResult+0x56>
    50fc:	c6 c5       	rjmp	.+2956   	; 0x5c8a <Calculate_VidResult+0xbe2>
    50fe:	4f 8d       	ldd	r20, Y+31	; 0x1f
    5100:	58 a1       	ldd	r21, Y+32	; 0x20
    5102:	4c 32       	cpi	r20, 0x2C	; 44
    5104:	51 05       	cpc	r21, r1
    5106:	3c f4       	brge	.+14     	; 0x5116 <Calculate_VidResult+0x6e>
    5108:	6f 8d       	ldd	r22, Y+31	; 0x1f
    510a:	78 a1       	ldd	r23, Y+32	; 0x20
    510c:	6a 32       	cpi	r22, 0x2A	; 42
    510e:	71 05       	cpc	r23, r1
    5110:	09 f4       	brne	.+2      	; 0x5114 <Calculate_VidResult+0x6c>
    5112:	96 c4       	rjmp	.+2348   	; 0x5a40 <Calculate_VidResult+0x998>
    5114:	88 c6       	rjmp	.+3344   	; 0x5e26 <Calculate_VidResult+0xd7e>
    5116:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5118:	98 a1       	ldd	r25, Y+32	; 0x20
    511a:	8d 32       	cpi	r24, 0x2D	; 45
    511c:	91 05       	cpc	r25, r1
    511e:	09 f4       	brne	.+2      	; 0x5122 <Calculate_VidResult+0x7a>
    5120:	e7 c4       	rjmp	.+2510   	; 0x5af0 <Calculate_VidResult+0xa48>
    5122:	0f 8d       	ldd	r16, Y+31	; 0x1f
    5124:	18 a1       	ldd	r17, Y+32	; 0x20
    5126:	0f 32       	cpi	r16, 0x2F	; 47
    5128:	11 05       	cpc	r17, r1
    512a:	09 f0       	breq	.+2      	; 0x512e <Calculate_VidResult+0x86>
    512c:	7c c6       	rjmp	.+3320   	; 0x5e26 <Calculate_VidResult+0xd7e>
       case '/' :

    	   // to check that the division won't be on 0
    	   if (Copy_U8num2 == 0 || global_First_sign != 1){
    512e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5130:	9d 85       	ldd	r25, Y+13	; 0x0d
    5132:	00 97       	sbiw	r24, 0x00	; 0
    5134:	21 f0       	breq	.+8      	; 0x513e <Calculate_VidResult+0x96>
    5136:	80 91 88 01 	lds	r24, 0x0188
    513a:	81 30       	cpi	r24, 0x01	; 1
    513c:	29 f0       	breq	.+10     	; 0x5148 <Calculate_VidResult+0xa0>
    		   global_First_sign = 0 ;
    513e:	10 92 88 01 	sts	0x0188, r1
    		   Error_VidStatment() ;
    5142:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <Error_VidStatment>
    5146:	71 c6       	rjmp	.+3298   	; 0x5e2a <Calculate_VidResult+0xd82>
    		   return ;
    	   }

    	   //to display integer numbers
    	   if ((sign_1&&!sign_2) || (!sign_1&&sign_2)) {
    5148:	80 91 89 01 	lds	r24, 0x0189
    514c:	88 23       	and	r24, r24
    514e:	21 f0       	breq	.+8      	; 0x5158 <Calculate_VidResult+0xb0>
    5150:	80 91 8a 01 	lds	r24, 0x018A
    5154:	88 23       	and	r24, r24
    5156:	41 f0       	breq	.+16     	; 0x5168 <Calculate_VidResult+0xc0>
    5158:	80 91 89 01 	lds	r24, 0x0189
    515c:	88 23       	and	r24, r24
    515e:	01 f5       	brne	.+64     	; 0x51a0 <Calculate_VidResult+0xf8>
    5160:	80 91 8a 01 	lds	r24, 0x018A
    5164:	88 23       	and	r24, r24
    5166:	e1 f0       	breq	.+56     	; 0x51a0 <Calculate_VidResult+0xf8>
    		   LCD_VidSendChar('-');
    5168:	8d e2       	ldi	r24, 0x2D	; 45
    516a:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
       		   LCD_VidPrintVar(Copy_U8num1/Copy_U8num2);
    516e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5170:	9b 85       	ldd	r25, Y+11	; 0x0b
    5172:	2c 85       	ldd	r18, Y+12	; 0x0c
    5174:	3d 85       	ldd	r19, Y+13	; 0x0d
    5176:	b9 01       	movw	r22, r18
    5178:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    517c:	cb 01       	movw	r24, r22
    517e:	5c 01       	movw	r10, r24
    5180:	cc 24       	eor	r12, r12
    5182:	dd 24       	eor	r13, r13
    5184:	ee 24       	eor	r14, r14
    5186:	ff 24       	eor	r15, r15
    5188:	87 01       	movw	r16, r14
    518a:	2a 2d       	mov	r18, r10
    518c:	3b 2d       	mov	r19, r11
    518e:	4c 2d       	mov	r20, r12
    5190:	5d 2d       	mov	r21, r13
    5192:	6e 2d       	mov	r22, r14
    5194:	7f 2d       	mov	r23, r15
    5196:	80 2f       	mov	r24, r16
    5198:	91 2f       	mov	r25, r17
    519a:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    519e:	18 c0       	rjmp	.+48     	; 0x51d0 <Calculate_VidResult+0x128>
    	   }
    	   else {
       		   LCD_VidPrintVar(Copy_U8num1/Copy_U8num2);
    51a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    51a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    51a4:	2c 85       	ldd	r18, Y+12	; 0x0c
    51a6:	3d 85       	ldd	r19, Y+13	; 0x0d
    51a8:	b9 01       	movw	r22, r18
    51aa:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    51ae:	cb 01       	movw	r24, r22
    51b0:	5c 01       	movw	r10, r24
    51b2:	cc 24       	eor	r12, r12
    51b4:	dd 24       	eor	r13, r13
    51b6:	ee 24       	eor	r14, r14
    51b8:	ff 24       	eor	r15, r15
    51ba:	87 01       	movw	r16, r14
    51bc:	2a 2d       	mov	r18, r10
    51be:	3b 2d       	mov	r19, r11
    51c0:	4c 2d       	mov	r20, r12
    51c2:	5d 2d       	mov	r21, r13
    51c4:	6e 2d       	mov	r22, r14
    51c6:	7f 2d       	mov	r23, r15
    51c8:	80 2f       	mov	r24, r16
    51ca:	91 2f       	mov	r25, r17
    51cc:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    	   }

    		LCD_VidSendChar('.');
    51d0:	8e e2       	ldi	r24, 0x2E	; 46
    51d2:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>

    		//to display float numbers
    		if (Copy_U8num1 >= Copy_U8num2){
    51d6:	2a 85       	ldd	r18, Y+10	; 0x0a
    51d8:	3b 85       	ldd	r19, Y+11	; 0x0b
    51da:	8c 85       	ldd	r24, Y+12	; 0x0c
    51dc:	9d 85       	ldd	r25, Y+13	; 0x0d
    51de:	28 17       	cp	r18, r24
    51e0:	39 07       	cpc	r19, r25
    51e2:	48 f1       	brcs	.+82     	; 0x5236 <Calculate_VidResult+0x18e>
        		LCD_VidPrintVar( (  ( (Copy_U8num1%Copy_U8num2) *RESULOTION ) /Copy_U8num2)  );
    51e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    51e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    51e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    51ea:	3d 85       	ldd	r19, Y+13	; 0x0d
    51ec:	b9 01       	movw	r22, r18
    51ee:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    51f2:	9c 01       	movw	r18, r24
    51f4:	88 ee       	ldi	r24, 0xE8	; 232
    51f6:	93 e0       	ldi	r25, 0x03	; 3
    51f8:	ac 01       	movw	r20, r24
    51fa:	24 9f       	mul	r18, r20
    51fc:	c0 01       	movw	r24, r0
    51fe:	25 9f       	mul	r18, r21
    5200:	90 0d       	add	r25, r0
    5202:	34 9f       	mul	r19, r20
    5204:	90 0d       	add	r25, r0
    5206:	11 24       	eor	r1, r1
    5208:	2c 85       	ldd	r18, Y+12	; 0x0c
    520a:	3d 85       	ldd	r19, Y+13	; 0x0d
    520c:	b9 01       	movw	r22, r18
    520e:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    5212:	cb 01       	movw	r24, r22
    5214:	5c 01       	movw	r10, r24
    5216:	cc 24       	eor	r12, r12
    5218:	dd 24       	eor	r13, r13
    521a:	ee 24       	eor	r14, r14
    521c:	ff 24       	eor	r15, r15
    521e:	87 01       	movw	r16, r14
    5220:	2a 2d       	mov	r18, r10
    5222:	3b 2d       	mov	r19, r11
    5224:	4c 2d       	mov	r20, r12
    5226:	5d 2d       	mov	r21, r13
    5228:	6e 2d       	mov	r22, r14
    522a:	7f 2d       	mov	r23, r15
    522c:	80 2f       	mov	r24, r16
    522e:	91 2f       	mov	r25, r17
    5230:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5234:	02 c4       	rjmp	.+2052   	; 0x5a3a <Calculate_VidResult+0x992>
    		}
    		//to check about zeros after '.'
    		else if ( (Copy_U8num1*100 /Copy_U8num2) < 10 ) {
    5236:	2a 85       	ldd	r18, Y+10	; 0x0a
    5238:	3b 85       	ldd	r19, Y+11	; 0x0b
    523a:	84 e6       	ldi	r24, 0x64	; 100
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	bc 01       	movw	r22, r24
    5240:	26 9f       	mul	r18, r22
    5242:	c0 01       	movw	r24, r0
    5244:	27 9f       	mul	r18, r23
    5246:	90 0d       	add	r25, r0
    5248:	36 9f       	mul	r19, r22
    524a:	90 0d       	add	r25, r0
    524c:	11 24       	eor	r1, r1
    524e:	2c 85       	ldd	r18, Y+12	; 0x0c
    5250:	3d 85       	ldd	r19, Y+13	; 0x0d
    5252:	b9 01       	movw	r22, r18
    5254:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    5258:	cb 01       	movw	r24, r22
    525a:	8a 30       	cpi	r24, 0x0A	; 10
    525c:	91 05       	cpc	r25, r1
    525e:	08 f0       	brcs	.+2      	; 0x5262 <Calculate_VidResult+0x1ba>
    5260:	87 c0       	rjmp	.+270    	; 0x5370 <Calculate_VidResult+0x2c8>
    			u32 mirror_num1= Copy_U8num1 ;
    5262:	8a 85       	ldd	r24, Y+10	; 0x0a
    5264:	9b 85       	ldd	r25, Y+11	; 0x0b
    5266:	99 87       	std	Y+9, r25	; 0x09
    5268:	88 87       	std	Y+8, r24	; 0x08
    			u32 mirror_num2= Copy_U8num2 ;
    526a:	8c 85       	ldd	r24, Y+12	; 0x0c
    526c:	9d 85       	ldd	r25, Y+13	; 0x0d
    526e:	9f 83       	std	Y+7, r25	; 0x07
    5270:	8e 83       	std	Y+6, r24	; 0x06
    			u8 num1_zero = 0 ;
    5272:	1d 82       	std	Y+5, r1	; 0x05
    			u8 num2_zero = 0 ;
    5274:	1c 82       	std	Y+4, r1	; 0x04
    			u8 flag_1 = 0 , flag_2 = 0 ;
    5276:	1b 82       	std	Y+3, r1	; 0x03
    5278:	1a 82       	std	Y+2, r1	; 0x02
    			while (1){
    				if(flag_1&&flag_2){
    527a:	8b 81       	ldd	r24, Y+3	; 0x03
    527c:	88 23       	and	r24, r24
    527e:	19 f0       	breq	.+6      	; 0x5286 <Calculate_VidResult+0x1de>
    5280:	8a 81       	ldd	r24, Y+2	; 0x02
    5282:	88 23       	and	r24, r24
    5284:	99 f5       	brne	.+102    	; 0x52ec <Calculate_VidResult+0x244>
    					break ;
    				}//end if
    				Copy_U8num1/= 10 ;
    5286:	8a 85       	ldd	r24, Y+10	; 0x0a
    5288:	9b 85       	ldd	r25, Y+11	; 0x0b
    528a:	2a e0       	ldi	r18, 0x0A	; 10
    528c:	30 e0       	ldi	r19, 0x00	; 0
    528e:	b9 01       	movw	r22, r18
    5290:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    5294:	cb 01       	movw	r24, r22
    5296:	9b 87       	std	Y+11, r25	; 0x0b
    5298:	8a 87       	std	Y+10, r24	; 0x0a
    				Copy_U8num2/= 10 ;
    529a:	8c 85       	ldd	r24, Y+12	; 0x0c
    529c:	9d 85       	ldd	r25, Y+13	; 0x0d
    529e:	2a e0       	ldi	r18, 0x0A	; 10
    52a0:	30 e0       	ldi	r19, 0x00	; 0
    52a2:	b9 01       	movw	r22, r18
    52a4:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    52a8:	cb 01       	movw	r24, r22
    52aa:	9d 87       	std	Y+13, r25	; 0x0d
    52ac:	8c 87       	std	Y+12, r24	; 0x0c
    				if (Copy_U8num1%10>0){
    52ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    52b0:	9b 85       	ldd	r25, Y+11	; 0x0b
    52b2:	2a e0       	ldi	r18, 0x0A	; 10
    52b4:	30 e0       	ldi	r19, 0x00	; 0
    52b6:	b9 01       	movw	r22, r18
    52b8:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    52bc:	00 97       	sbiw	r24, 0x00	; 0
    52be:	21 f0       	breq	.+8      	; 0x52c8 <Calculate_VidResult+0x220>
    					num1_zero++;
    52c0:	8d 81       	ldd	r24, Y+5	; 0x05
    52c2:	8f 5f       	subi	r24, 0xFF	; 255
    52c4:	8d 83       	std	Y+5, r24	; 0x05
    52c6:	02 c0       	rjmp	.+4      	; 0x52cc <Calculate_VidResult+0x224>
    				}
    				else
    					flag_1 = 1 ;
    52c8:	81 e0       	ldi	r24, 0x01	; 1
    52ca:	8b 83       	std	Y+3, r24	; 0x03

    				if (Copy_U8num2% 10 ){
    52cc:	8c 85       	ldd	r24, Y+12	; 0x0c
    52ce:	9d 85       	ldd	r25, Y+13	; 0x0d
    52d0:	2a e0       	ldi	r18, 0x0A	; 10
    52d2:	30 e0       	ldi	r19, 0x00	; 0
    52d4:	b9 01       	movw	r22, r18
    52d6:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    52da:	00 97       	sbiw	r24, 0x00	; 0
    52dc:	21 f0       	breq	.+8      	; 0x52e6 <Calculate_VidResult+0x23e>
    					num2_zero++;
    52de:	8c 81       	ldd	r24, Y+4	; 0x04
    52e0:	8f 5f       	subi	r24, 0xFF	; 255
    52e2:	8c 83       	std	Y+4, r24	; 0x04
    52e4:	ca cf       	rjmp	.-108    	; 0x527a <Calculate_VidResult+0x1d2>
    				}
    				else
    				    flag_2 = 1 ;
    52e6:	81 e0       	ldi	r24, 0x01	; 1
    52e8:	8a 83       	std	Y+2, r24	; 0x02
    52ea:	c7 cf       	rjmp	.-114    	; 0x527a <Calculate_VidResult+0x1d2>
    			}//end while
    			for (u8 i = 0 ; i <num2_zero-num1_zero ; i++){
    52ec:	19 82       	std	Y+1, r1	; 0x01
    52ee:	0d c0       	rjmp	.+26     	; 0x530a <Calculate_VidResult+0x262>
    				LCD_VidPrintVar(0);
    52f0:	20 e0       	ldi	r18, 0x00	; 0
    52f2:	30 e0       	ldi	r19, 0x00	; 0
    52f4:	40 e0       	ldi	r20, 0x00	; 0
    52f6:	50 e0       	ldi	r21, 0x00	; 0
    52f8:	60 e0       	ldi	r22, 0x00	; 0
    52fa:	70 e0       	ldi	r23, 0x00	; 0
    52fc:	80 e0       	ldi	r24, 0x00	; 0
    52fe:	90 e0       	ldi	r25, 0x00	; 0
    5300:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    					num2_zero++;
    				}
    				else
    				    flag_2 = 1 ;
    			}//end while
    			for (u8 i = 0 ; i <num2_zero-num1_zero ; i++){
    5304:	89 81       	ldd	r24, Y+1	; 0x01
    5306:	8f 5f       	subi	r24, 0xFF	; 255
    5308:	89 83       	std	Y+1, r24	; 0x01
    530a:	89 81       	ldd	r24, Y+1	; 0x01
    530c:	48 2f       	mov	r20, r24
    530e:	50 e0       	ldi	r21, 0x00	; 0
    5310:	8c 81       	ldd	r24, Y+4	; 0x04
    5312:	28 2f       	mov	r18, r24
    5314:	30 e0       	ldi	r19, 0x00	; 0
    5316:	8d 81       	ldd	r24, Y+5	; 0x05
    5318:	88 2f       	mov	r24, r24
    531a:	90 e0       	ldi	r25, 0x00	; 0
    531c:	89 01       	movw	r16, r18
    531e:	08 1b       	sub	r16, r24
    5320:	19 0b       	sbc	r17, r25
    5322:	c8 01       	movw	r24, r16
    5324:	48 17       	cp	r20, r24
    5326:	59 07       	cpc	r21, r25
    5328:	1c f3       	brlt	.-58     	; 0x52f0 <Calculate_VidResult+0x248>
    				LCD_VidPrintVar(0);
    			}//end for
        		LCD_VidPrintVar( (  ( mirror_num1*RESULOTION ) /mirror_num2)  );
    532a:	28 85       	ldd	r18, Y+8	; 0x08
    532c:	39 85       	ldd	r19, Y+9	; 0x09
    532e:	88 ee       	ldi	r24, 0xE8	; 232
    5330:	93 e0       	ldi	r25, 0x03	; 3
    5332:	ac 01       	movw	r20, r24
    5334:	24 9f       	mul	r18, r20
    5336:	c0 01       	movw	r24, r0
    5338:	25 9f       	mul	r18, r21
    533a:	90 0d       	add	r25, r0
    533c:	34 9f       	mul	r19, r20
    533e:	90 0d       	add	r25, r0
    5340:	11 24       	eor	r1, r1
    5342:	2e 81       	ldd	r18, Y+6	; 0x06
    5344:	3f 81       	ldd	r19, Y+7	; 0x07
    5346:	b9 01       	movw	r22, r18
    5348:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    534c:	cb 01       	movw	r24, r22
    534e:	5c 01       	movw	r10, r24
    5350:	cc 24       	eor	r12, r12
    5352:	dd 24       	eor	r13, r13
    5354:	ee 24       	eor	r14, r14
    5356:	ff 24       	eor	r15, r15
    5358:	87 01       	movw	r16, r14
    535a:	2a 2d       	mov	r18, r10
    535c:	3b 2d       	mov	r19, r11
    535e:	4c 2d       	mov	r20, r12
    5360:	5d 2d       	mov	r21, r13
    5362:	6e 2d       	mov	r22, r14
    5364:	7f 2d       	mov	r23, r15
    5366:	80 2f       	mov	r24, r16
    5368:	91 2f       	mov	r25, r17
    536a:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    536e:	65 c3       	rjmp	.+1738   	; 0x5a3a <Calculate_VidResult+0x992>
    		}//end else if

    		else {
        		LCD_VidPrintVar( (  ( (u64)Copy_U8num1*RESULOTION ) /Copy_U8num2)  );
    5370:	8a 85       	ldd	r24, Y+10	; 0x0a
    5372:	9b 85       	ldd	r25, Y+11	; 0x0b
    5374:	8c 01       	movw	r16, r24
    5376:	20 e0       	ldi	r18, 0x00	; 0
    5378:	30 e0       	ldi	r19, 0x00	; 0
    537a:	40 e0       	ldi	r20, 0x00	; 0
    537c:	50 e0       	ldi	r21, 0x00	; 0
    537e:	60 e0       	ldi	r22, 0x00	; 0
    5380:	70 e0       	ldi	r23, 0x00	; 0
    5382:	0f 8b       	std	Y+23, r16	; 0x17
    5384:	18 8f       	std	Y+24, r17	; 0x18
    5386:	29 8f       	std	Y+25, r18	; 0x19
    5388:	3a 8f       	std	Y+26, r19	; 0x1a
    538a:	4b 8f       	std	Y+27, r20	; 0x1b
    538c:	5c 8f       	std	Y+28, r21	; 0x1c
    538e:	6d 8f       	std	Y+29, r22	; 0x1d
    5390:	7e 8f       	std	Y+30, r23	; 0x1e
    5392:	af 88       	ldd	r10, Y+23	; 0x17
    5394:	b8 8c       	ldd	r11, Y+24	; 0x18
    5396:	c9 8c       	ldd	r12, Y+25	; 0x19
    5398:	da 8c       	ldd	r13, Y+26	; 0x1a
    539a:	eb 8c       	ldd	r14, Y+27	; 0x1b
    539c:	fc 8c       	ldd	r15, Y+28	; 0x1c
    539e:	0d 8d       	ldd	r16, Y+29	; 0x1d
    53a0:	1e 8d       	ldd	r17, Y+30	; 0x1e
    53a2:	2a 2d       	mov	r18, r10
    53a4:	3b 2d       	mov	r19, r11
    53a6:	4c 2d       	mov	r20, r12
    53a8:	5d 2d       	mov	r21, r13
    53aa:	6e 2d       	mov	r22, r14
    53ac:	7f 2d       	mov	r23, r15
    53ae:	80 2f       	mov	r24, r16
    53b0:	91 2f       	mov	r25, r17
    53b2:	02 e0       	ldi	r16, 0x02	; 2
    53b4:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    53b8:	29 a3       	std	Y+33, r18	; 0x21
    53ba:	3a a3       	std	Y+34, r19	; 0x22
    53bc:	4b a3       	std	Y+35, r20	; 0x23
    53be:	5c a3       	std	Y+36, r21	; 0x24
    53c0:	6d a3       	std	Y+37, r22	; 0x25
    53c2:	7e a3       	std	Y+38, r23	; 0x26
    53c4:	8f a3       	std	Y+39, r24	; 0x27
    53c6:	98 a7       	std	Y+40, r25	; 0x28
    53c8:	29 a1       	ldd	r18, Y+33	; 0x21
    53ca:	3a a1       	ldd	r19, Y+34	; 0x22
    53cc:	4b a1       	ldd	r20, Y+35	; 0x23
    53ce:	5c a1       	ldd	r21, Y+36	; 0x24
    53d0:	6d a1       	ldd	r22, Y+37	; 0x25
    53d2:	7e a1       	ldd	r23, Y+38	; 0x26
    53d4:	8f a1       	ldd	r24, Y+39	; 0x27
    53d6:	98 a5       	ldd	r25, Y+40	; 0x28
    53d8:	05 e0       	ldi	r16, 0x05	; 5
    53da:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    53de:	29 a7       	std	Y+41, r18	; 0x29
    53e0:	3a a7       	std	Y+42, r19	; 0x2a
    53e2:	4b a7       	std	Y+43, r20	; 0x2b
    53e4:	5c a7       	std	Y+44, r21	; 0x2c
    53e6:	6d a7       	std	Y+45, r22	; 0x2d
    53e8:	7e a7       	std	Y+46, r23	; 0x2e
    53ea:	8f a7       	std	Y+47, r24	; 0x2f
    53ec:	98 ab       	std	Y+48, r25	; 0x30
    53ee:	19 a5       	ldd	r17, Y+41	; 0x29
    53f0:	29 a1       	ldd	r18, Y+33	; 0x21
    53f2:	12 1b       	sub	r17, r18
    53f4:	19 ab       	std	Y+49, r17	; 0x31
    53f6:	31 e0       	ldi	r19, 0x01	; 1
    53f8:	39 af       	std	Y+57, r19	; 0x39
    53fa:	49 a9       	ldd	r20, Y+49	; 0x31
    53fc:	59 a5       	ldd	r21, Y+41	; 0x29
    53fe:	54 17       	cp	r21, r20
    5400:	08 f0       	brcs	.+2      	; 0x5404 <Calculate_VidResult+0x35c>
    5402:	19 ae       	std	Y+57, r1	; 0x39
    5404:	6a a5       	ldd	r22, Y+42	; 0x2a
    5406:	7a a1       	ldd	r23, Y+34	; 0x22
    5408:	67 1b       	sub	r22, r23
    540a:	6a ab       	std	Y+50, r22	; 0x32
    540c:	81 e0       	ldi	r24, 0x01	; 1
    540e:	8a af       	std	Y+58, r24	; 0x3a
    5410:	9a a9       	ldd	r25, Y+50	; 0x32
    5412:	0a a5       	ldd	r16, Y+42	; 0x2a
    5414:	09 17       	cp	r16, r25
    5416:	08 f0       	brcs	.+2      	; 0x541a <Calculate_VidResult+0x372>
    5418:	1a ae       	std	Y+58, r1	; 0x3a
    541a:	1a a9       	ldd	r17, Y+50	; 0x32
    541c:	29 ad       	ldd	r18, Y+57	; 0x39
    541e:	12 1b       	sub	r17, r18
    5420:	1b af       	std	Y+59, r17	; 0x3b
    5422:	31 e0       	ldi	r19, 0x01	; 1
    5424:	3c af       	std	Y+60, r19	; 0x3c
    5426:	4b ad       	ldd	r20, Y+59	; 0x3b
    5428:	5a a9       	ldd	r21, Y+50	; 0x32
    542a:	54 17       	cp	r21, r20
    542c:	08 f0       	brcs	.+2      	; 0x5430 <Calculate_VidResult+0x388>
    542e:	1c ae       	std	Y+60, r1	; 0x3c
    5430:	6a ad       	ldd	r22, Y+58	; 0x3a
    5432:	7c ad       	ldd	r23, Y+60	; 0x3c
    5434:	67 2b       	or	r22, r23
    5436:	6a af       	std	Y+58, r22	; 0x3a
    5438:	8b ad       	ldd	r24, Y+59	; 0x3b
    543a:	8a ab       	std	Y+50, r24	; 0x32
    543c:	9b a5       	ldd	r25, Y+43	; 0x2b
    543e:	0b a1       	ldd	r16, Y+35	; 0x23
    5440:	90 1b       	sub	r25, r16
    5442:	9b ab       	std	Y+51, r25	; 0x33
    5444:	11 e0       	ldi	r17, 0x01	; 1
    5446:	1d af       	std	Y+61, r17	; 0x3d
    5448:	2b a9       	ldd	r18, Y+51	; 0x33
    544a:	3b a5       	ldd	r19, Y+43	; 0x2b
    544c:	32 17       	cp	r19, r18
    544e:	08 f0       	brcs	.+2      	; 0x5452 <Calculate_VidResult+0x3aa>
    5450:	1d ae       	std	Y+61, r1	; 0x3d
    5452:	4b a9       	ldd	r20, Y+51	; 0x33
    5454:	5a ad       	ldd	r21, Y+58	; 0x3a
    5456:	45 1b       	sub	r20, r21
    5458:	4e af       	std	Y+62, r20	; 0x3e
    545a:	61 e0       	ldi	r22, 0x01	; 1
    545c:	6f af       	std	Y+63, r22	; 0x3f
    545e:	7e ad       	ldd	r23, Y+62	; 0x3e
    5460:	8b a9       	ldd	r24, Y+51	; 0x33
    5462:	87 17       	cp	r24, r23
    5464:	08 f0       	brcs	.+2      	; 0x5468 <Calculate_VidResult+0x3c0>
    5466:	1f ae       	std	Y+63, r1	; 0x3f
    5468:	9d ad       	ldd	r25, Y+61	; 0x3d
    546a:	0f ad       	ldd	r16, Y+63	; 0x3f
    546c:	90 2b       	or	r25, r16
    546e:	9d af       	std	Y+61, r25	; 0x3d
    5470:	1e ad       	ldd	r17, Y+62	; 0x3e
    5472:	1b ab       	std	Y+51, r17	; 0x33
    5474:	2c a5       	ldd	r18, Y+44	; 0x2c
    5476:	3c a1       	ldd	r19, Y+36	; 0x24
    5478:	23 1b       	sub	r18, r19
    547a:	2c ab       	std	Y+52, r18	; 0x34
    547c:	41 e0       	ldi	r20, 0x01	; 1
    547e:	21 96       	adiw	r28, 0x01	; 1
    5480:	4f af       	std	Y+63, r20	; 0x3f
    5482:	21 97       	sbiw	r28, 0x01	; 1
    5484:	5c a9       	ldd	r21, Y+52	; 0x34
    5486:	6c a5       	ldd	r22, Y+44	; 0x2c
    5488:	65 17       	cp	r22, r21
    548a:	18 f0       	brcs	.+6      	; 0x5492 <Calculate_VidResult+0x3ea>
    548c:	21 96       	adiw	r28, 0x01	; 1
    548e:	1f ae       	std	Y+63, r1	; 0x3f
    5490:	21 97       	sbiw	r28, 0x01	; 1
    5492:	7c a9       	ldd	r23, Y+52	; 0x34
    5494:	8d ad       	ldd	r24, Y+61	; 0x3d
    5496:	78 1b       	sub	r23, r24
    5498:	22 96       	adiw	r28, 0x02	; 2
    549a:	7f af       	std	Y+63, r23	; 0x3f
    549c:	22 97       	sbiw	r28, 0x02	; 2
    549e:	91 e0       	ldi	r25, 0x01	; 1
    54a0:	23 96       	adiw	r28, 0x03	; 3
    54a2:	9f af       	std	Y+63, r25	; 0x3f
    54a4:	23 97       	sbiw	r28, 0x03	; 3
    54a6:	22 96       	adiw	r28, 0x02	; 2
    54a8:	0f ad       	ldd	r16, Y+63	; 0x3f
    54aa:	22 97       	sbiw	r28, 0x02	; 2
    54ac:	1c a9       	ldd	r17, Y+52	; 0x34
    54ae:	10 17       	cp	r17, r16
    54b0:	18 f0       	brcs	.+6      	; 0x54b8 <Calculate_VidResult+0x410>
    54b2:	23 96       	adiw	r28, 0x03	; 3
    54b4:	1f ae       	std	Y+63, r1	; 0x3f
    54b6:	23 97       	sbiw	r28, 0x03	; 3
    54b8:	21 96       	adiw	r28, 0x01	; 1
    54ba:	2f ad       	ldd	r18, Y+63	; 0x3f
    54bc:	21 97       	sbiw	r28, 0x01	; 1
    54be:	23 96       	adiw	r28, 0x03	; 3
    54c0:	3f ad       	ldd	r19, Y+63	; 0x3f
    54c2:	23 97       	sbiw	r28, 0x03	; 3
    54c4:	23 2b       	or	r18, r19
    54c6:	21 96       	adiw	r28, 0x01	; 1
    54c8:	2f af       	std	Y+63, r18	; 0x3f
    54ca:	21 97       	sbiw	r28, 0x01	; 1
    54cc:	22 96       	adiw	r28, 0x02	; 2
    54ce:	4f ad       	ldd	r20, Y+63	; 0x3f
    54d0:	22 97       	sbiw	r28, 0x02	; 2
    54d2:	4c ab       	std	Y+52, r20	; 0x34
    54d4:	5d a5       	ldd	r21, Y+45	; 0x2d
    54d6:	6d a1       	ldd	r22, Y+37	; 0x25
    54d8:	56 1b       	sub	r21, r22
    54da:	5d ab       	std	Y+53, r21	; 0x35
    54dc:	71 e0       	ldi	r23, 0x01	; 1
    54de:	24 96       	adiw	r28, 0x04	; 4
    54e0:	7f af       	std	Y+63, r23	; 0x3f
    54e2:	24 97       	sbiw	r28, 0x04	; 4
    54e4:	8d a9       	ldd	r24, Y+53	; 0x35
    54e6:	9d a5       	ldd	r25, Y+45	; 0x2d
    54e8:	98 17       	cp	r25, r24
    54ea:	18 f0       	brcs	.+6      	; 0x54f2 <Calculate_VidResult+0x44a>
    54ec:	24 96       	adiw	r28, 0x04	; 4
    54ee:	1f ae       	std	Y+63, r1	; 0x3f
    54f0:	24 97       	sbiw	r28, 0x04	; 4
    54f2:	0d a9       	ldd	r16, Y+53	; 0x35
    54f4:	21 96       	adiw	r28, 0x01	; 1
    54f6:	1f ad       	ldd	r17, Y+63	; 0x3f
    54f8:	21 97       	sbiw	r28, 0x01	; 1
    54fa:	01 1b       	sub	r16, r17
    54fc:	25 96       	adiw	r28, 0x05	; 5
    54fe:	0f af       	std	Y+63, r16	; 0x3f
    5500:	25 97       	sbiw	r28, 0x05	; 5
    5502:	21 e0       	ldi	r18, 0x01	; 1
    5504:	26 96       	adiw	r28, 0x06	; 6
    5506:	2f af       	std	Y+63, r18	; 0x3f
    5508:	26 97       	sbiw	r28, 0x06	; 6
    550a:	25 96       	adiw	r28, 0x05	; 5
    550c:	3f ad       	ldd	r19, Y+63	; 0x3f
    550e:	25 97       	sbiw	r28, 0x05	; 5
    5510:	4d a9       	ldd	r20, Y+53	; 0x35
    5512:	43 17       	cp	r20, r19
    5514:	18 f0       	brcs	.+6      	; 0x551c <Calculate_VidResult+0x474>
    5516:	26 96       	adiw	r28, 0x06	; 6
    5518:	1f ae       	std	Y+63, r1	; 0x3f
    551a:	26 97       	sbiw	r28, 0x06	; 6
    551c:	24 96       	adiw	r28, 0x04	; 4
    551e:	5f ad       	ldd	r21, Y+63	; 0x3f
    5520:	24 97       	sbiw	r28, 0x04	; 4
    5522:	26 96       	adiw	r28, 0x06	; 6
    5524:	6f ad       	ldd	r22, Y+63	; 0x3f
    5526:	26 97       	sbiw	r28, 0x06	; 6
    5528:	56 2b       	or	r21, r22
    552a:	24 96       	adiw	r28, 0x04	; 4
    552c:	5f af       	std	Y+63, r21	; 0x3f
    552e:	24 97       	sbiw	r28, 0x04	; 4
    5530:	25 96       	adiw	r28, 0x05	; 5
    5532:	7f ad       	ldd	r23, Y+63	; 0x3f
    5534:	25 97       	sbiw	r28, 0x05	; 5
    5536:	7d ab       	std	Y+53, r23	; 0x35
    5538:	8e a5       	ldd	r24, Y+46	; 0x2e
    553a:	9e a1       	ldd	r25, Y+38	; 0x26
    553c:	89 1b       	sub	r24, r25
    553e:	8e ab       	std	Y+54, r24	; 0x36
    5540:	01 e0       	ldi	r16, 0x01	; 1
    5542:	27 96       	adiw	r28, 0x07	; 7
    5544:	0f af       	std	Y+63, r16	; 0x3f
    5546:	27 97       	sbiw	r28, 0x07	; 7
    5548:	1e a9       	ldd	r17, Y+54	; 0x36
    554a:	2e a5       	ldd	r18, Y+46	; 0x2e
    554c:	21 17       	cp	r18, r17
    554e:	18 f0       	brcs	.+6      	; 0x5556 <Calculate_VidResult+0x4ae>
    5550:	27 96       	adiw	r28, 0x07	; 7
    5552:	1f ae       	std	Y+63, r1	; 0x3f
    5554:	27 97       	sbiw	r28, 0x07	; 7
    5556:	3e a9       	ldd	r19, Y+54	; 0x36
    5558:	24 96       	adiw	r28, 0x04	; 4
    555a:	4f ad       	ldd	r20, Y+63	; 0x3f
    555c:	24 97       	sbiw	r28, 0x04	; 4
    555e:	34 1b       	sub	r19, r20
    5560:	28 96       	adiw	r28, 0x08	; 8
    5562:	3f af       	std	Y+63, r19	; 0x3f
    5564:	28 97       	sbiw	r28, 0x08	; 8
    5566:	51 e0       	ldi	r21, 0x01	; 1
    5568:	29 96       	adiw	r28, 0x09	; 9
    556a:	5f af       	std	Y+63, r21	; 0x3f
    556c:	29 97       	sbiw	r28, 0x09	; 9
    556e:	28 96       	adiw	r28, 0x08	; 8
    5570:	6f ad       	ldd	r22, Y+63	; 0x3f
    5572:	28 97       	sbiw	r28, 0x08	; 8
    5574:	7e a9       	ldd	r23, Y+54	; 0x36
    5576:	76 17       	cp	r23, r22
    5578:	18 f0       	brcs	.+6      	; 0x5580 <Calculate_VidResult+0x4d8>
    557a:	29 96       	adiw	r28, 0x09	; 9
    557c:	1f ae       	std	Y+63, r1	; 0x3f
    557e:	29 97       	sbiw	r28, 0x09	; 9
    5580:	27 96       	adiw	r28, 0x07	; 7
    5582:	8f ad       	ldd	r24, Y+63	; 0x3f
    5584:	27 97       	sbiw	r28, 0x07	; 7
    5586:	29 96       	adiw	r28, 0x09	; 9
    5588:	9f ad       	ldd	r25, Y+63	; 0x3f
    558a:	29 97       	sbiw	r28, 0x09	; 9
    558c:	89 2b       	or	r24, r25
    558e:	27 96       	adiw	r28, 0x07	; 7
    5590:	8f af       	std	Y+63, r24	; 0x3f
    5592:	27 97       	sbiw	r28, 0x07	; 7
    5594:	28 96       	adiw	r28, 0x08	; 8
    5596:	0f ad       	ldd	r16, Y+63	; 0x3f
    5598:	28 97       	sbiw	r28, 0x08	; 8
    559a:	0e ab       	std	Y+54, r16	; 0x36
    559c:	1f a5       	ldd	r17, Y+47	; 0x2f
    559e:	2f a1       	ldd	r18, Y+39	; 0x27
    55a0:	12 1b       	sub	r17, r18
    55a2:	1f ab       	std	Y+55, r17	; 0x37
    55a4:	31 e0       	ldi	r19, 0x01	; 1
    55a6:	2a 96       	adiw	r28, 0x0a	; 10
    55a8:	3f af       	std	Y+63, r19	; 0x3f
    55aa:	2a 97       	sbiw	r28, 0x0a	; 10
    55ac:	4f a9       	ldd	r20, Y+55	; 0x37
    55ae:	5f a5       	ldd	r21, Y+47	; 0x2f
    55b0:	54 17       	cp	r21, r20
    55b2:	18 f0       	brcs	.+6      	; 0x55ba <Calculate_VidResult+0x512>
    55b4:	2a 96       	adiw	r28, 0x0a	; 10
    55b6:	1f ae       	std	Y+63, r1	; 0x3f
    55b8:	2a 97       	sbiw	r28, 0x0a	; 10
    55ba:	6f a9       	ldd	r22, Y+55	; 0x37
    55bc:	27 96       	adiw	r28, 0x07	; 7
    55be:	7f ad       	ldd	r23, Y+63	; 0x3f
    55c0:	27 97       	sbiw	r28, 0x07	; 7
    55c2:	67 1b       	sub	r22, r23
    55c4:	2b 96       	adiw	r28, 0x0b	; 11
    55c6:	6f af       	std	Y+63, r22	; 0x3f
    55c8:	2b 97       	sbiw	r28, 0x0b	; 11
    55ca:	81 e0       	ldi	r24, 0x01	; 1
    55cc:	2c 96       	adiw	r28, 0x0c	; 12
    55ce:	8f af       	std	Y+63, r24	; 0x3f
    55d0:	2c 97       	sbiw	r28, 0x0c	; 12
    55d2:	2b 96       	adiw	r28, 0x0b	; 11
    55d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    55d6:	2b 97       	sbiw	r28, 0x0b	; 11
    55d8:	0f a9       	ldd	r16, Y+55	; 0x37
    55da:	09 17       	cp	r16, r25
    55dc:	18 f0       	brcs	.+6      	; 0x55e4 <Calculate_VidResult+0x53c>
    55de:	2c 96       	adiw	r28, 0x0c	; 12
    55e0:	1f ae       	std	Y+63, r1	; 0x3f
    55e2:	2c 97       	sbiw	r28, 0x0c	; 12
    55e4:	2a 96       	adiw	r28, 0x0a	; 10
    55e6:	1f ad       	ldd	r17, Y+63	; 0x3f
    55e8:	2a 97       	sbiw	r28, 0x0a	; 10
    55ea:	2c 96       	adiw	r28, 0x0c	; 12
    55ec:	2f ad       	ldd	r18, Y+63	; 0x3f
    55ee:	2c 97       	sbiw	r28, 0x0c	; 12
    55f0:	12 2b       	or	r17, r18
    55f2:	2a 96       	adiw	r28, 0x0a	; 10
    55f4:	1f af       	std	Y+63, r17	; 0x3f
    55f6:	2a 97       	sbiw	r28, 0x0a	; 10
    55f8:	2b 96       	adiw	r28, 0x0b	; 11
    55fa:	3f ad       	ldd	r19, Y+63	; 0x3f
    55fc:	2b 97       	sbiw	r28, 0x0b	; 11
    55fe:	3f ab       	std	Y+55, r19	; 0x37
    5600:	48 a9       	ldd	r20, Y+48	; 0x30
    5602:	58 a5       	ldd	r21, Y+40	; 0x28
    5604:	45 1b       	sub	r20, r21
    5606:	48 af       	std	Y+56, r20	; 0x38
    5608:	88 ad       	ldd	r24, Y+56	; 0x38
    560a:	2a 96       	adiw	r28, 0x0a	; 10
    560c:	6f ad       	ldd	r22, Y+63	; 0x3f
    560e:	2a 97       	sbiw	r28, 0x0a	; 10
    5610:	86 1b       	sub	r24, r22
    5612:	88 af       	std	Y+56, r24	; 0x38
    5614:	79 a9       	ldd	r23, Y+49	; 0x31
    5616:	79 a7       	std	Y+41, r23	; 0x29
    5618:	8a a9       	ldd	r24, Y+50	; 0x32
    561a:	8a a7       	std	Y+42, r24	; 0x2a
    561c:	9b a9       	ldd	r25, Y+51	; 0x33
    561e:	9b a7       	std	Y+43, r25	; 0x2b
    5620:	0c a9       	ldd	r16, Y+52	; 0x34
    5622:	0c a7       	std	Y+44, r16	; 0x2c
    5624:	1d a9       	ldd	r17, Y+53	; 0x35
    5626:	1d a7       	std	Y+45, r17	; 0x2d
    5628:	2e a9       	ldd	r18, Y+54	; 0x36
    562a:	2e a7       	std	Y+46, r18	; 0x2e
    562c:	3f a9       	ldd	r19, Y+55	; 0x37
    562e:	3f a7       	std	Y+47, r19	; 0x2f
    5630:	48 ad       	ldd	r20, Y+56	; 0x38
    5632:	48 ab       	std	Y+48, r20	; 0x30
    5634:	59 a5       	ldd	r21, Y+41	; 0x29
    5636:	6f 89       	ldd	r22, Y+23	; 0x17
    5638:	56 0f       	add	r21, r22
    563a:	2d 96       	adiw	r28, 0x0d	; 13
    563c:	5f af       	std	Y+63, r21	; 0x3f
    563e:	2d 97       	sbiw	r28, 0x0d	; 13
    5640:	71 e0       	ldi	r23, 0x01	; 1
    5642:	65 96       	adiw	r28, 0x15	; 21
    5644:	7f af       	std	Y+63, r23	; 0x3f
    5646:	65 97       	sbiw	r28, 0x15	; 21
    5648:	2d 96       	adiw	r28, 0x0d	; 13
    564a:	8f ad       	ldd	r24, Y+63	; 0x3f
    564c:	2d 97       	sbiw	r28, 0x0d	; 13
    564e:	99 a5       	ldd	r25, Y+41	; 0x29
    5650:	89 17       	cp	r24, r25
    5652:	18 f0       	brcs	.+6      	; 0x565a <Calculate_VidResult+0x5b2>
    5654:	65 96       	adiw	r28, 0x15	; 21
    5656:	1f ae       	std	Y+63, r1	; 0x3f
    5658:	65 97       	sbiw	r28, 0x15	; 21
    565a:	0a a5       	ldd	r16, Y+42	; 0x2a
    565c:	18 8d       	ldd	r17, Y+24	; 0x18
    565e:	01 0f       	add	r16, r17
    5660:	2e 96       	adiw	r28, 0x0e	; 14
    5662:	0f af       	std	Y+63, r16	; 0x3f
    5664:	2e 97       	sbiw	r28, 0x0e	; 14
    5666:	21 e0       	ldi	r18, 0x01	; 1
    5668:	66 96       	adiw	r28, 0x16	; 22
    566a:	2f af       	std	Y+63, r18	; 0x3f
    566c:	66 97       	sbiw	r28, 0x16	; 22
    566e:	2e 96       	adiw	r28, 0x0e	; 14
    5670:	3f ad       	ldd	r19, Y+63	; 0x3f
    5672:	2e 97       	sbiw	r28, 0x0e	; 14
    5674:	4a a5       	ldd	r20, Y+42	; 0x2a
    5676:	34 17       	cp	r19, r20
    5678:	18 f0       	brcs	.+6      	; 0x5680 <Calculate_VidResult+0x5d8>
    567a:	66 96       	adiw	r28, 0x16	; 22
    567c:	1f ae       	std	Y+63, r1	; 0x3f
    567e:	66 97       	sbiw	r28, 0x16	; 22
    5680:	65 96       	adiw	r28, 0x15	; 21
    5682:	5f ad       	ldd	r21, Y+63	; 0x3f
    5684:	65 97       	sbiw	r28, 0x15	; 21
    5686:	2e 96       	adiw	r28, 0x0e	; 14
    5688:	6f ad       	ldd	r22, Y+63	; 0x3f
    568a:	2e 97       	sbiw	r28, 0x0e	; 14
    568c:	56 0f       	add	r21, r22
    568e:	67 96       	adiw	r28, 0x17	; 23
    5690:	5f af       	std	Y+63, r21	; 0x3f
    5692:	67 97       	sbiw	r28, 0x17	; 23
    5694:	71 e0       	ldi	r23, 0x01	; 1
    5696:	68 96       	adiw	r28, 0x18	; 24
    5698:	7f af       	std	Y+63, r23	; 0x3f
    569a:	68 97       	sbiw	r28, 0x18	; 24
    569c:	67 96       	adiw	r28, 0x17	; 23
    569e:	8f ad       	ldd	r24, Y+63	; 0x3f
    56a0:	67 97       	sbiw	r28, 0x17	; 23
    56a2:	2e 96       	adiw	r28, 0x0e	; 14
    56a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    56a6:	2e 97       	sbiw	r28, 0x0e	; 14
    56a8:	89 17       	cp	r24, r25
    56aa:	18 f0       	brcs	.+6      	; 0x56b2 <Calculate_VidResult+0x60a>
    56ac:	68 96       	adiw	r28, 0x18	; 24
    56ae:	1f ae       	std	Y+63, r1	; 0x3f
    56b0:	68 97       	sbiw	r28, 0x18	; 24
    56b2:	66 96       	adiw	r28, 0x16	; 22
    56b4:	0f ad       	ldd	r16, Y+63	; 0x3f
    56b6:	66 97       	sbiw	r28, 0x16	; 22
    56b8:	68 96       	adiw	r28, 0x18	; 24
    56ba:	1f ad       	ldd	r17, Y+63	; 0x3f
    56bc:	68 97       	sbiw	r28, 0x18	; 24
    56be:	01 2b       	or	r16, r17
    56c0:	66 96       	adiw	r28, 0x16	; 22
    56c2:	0f af       	std	Y+63, r16	; 0x3f
    56c4:	66 97       	sbiw	r28, 0x16	; 22
    56c6:	67 96       	adiw	r28, 0x17	; 23
    56c8:	2f ad       	ldd	r18, Y+63	; 0x3f
    56ca:	67 97       	sbiw	r28, 0x17	; 23
    56cc:	2e 96       	adiw	r28, 0x0e	; 14
    56ce:	2f af       	std	Y+63, r18	; 0x3f
    56d0:	2e 97       	sbiw	r28, 0x0e	; 14
    56d2:	3b a5       	ldd	r19, Y+43	; 0x2b
    56d4:	49 8d       	ldd	r20, Y+25	; 0x19
    56d6:	34 0f       	add	r19, r20
    56d8:	2f 96       	adiw	r28, 0x0f	; 15
    56da:	3f af       	std	Y+63, r19	; 0x3f
    56dc:	2f 97       	sbiw	r28, 0x0f	; 15
    56de:	51 e0       	ldi	r21, 0x01	; 1
    56e0:	69 96       	adiw	r28, 0x19	; 25
    56e2:	5f af       	std	Y+63, r21	; 0x3f
    56e4:	69 97       	sbiw	r28, 0x19	; 25
    56e6:	2f 96       	adiw	r28, 0x0f	; 15
    56e8:	6f ad       	ldd	r22, Y+63	; 0x3f
    56ea:	2f 97       	sbiw	r28, 0x0f	; 15
    56ec:	7b a5       	ldd	r23, Y+43	; 0x2b
    56ee:	67 17       	cp	r22, r23
    56f0:	18 f0       	brcs	.+6      	; 0x56f8 <Calculate_VidResult+0x650>
    56f2:	69 96       	adiw	r28, 0x19	; 25
    56f4:	1f ae       	std	Y+63, r1	; 0x3f
    56f6:	69 97       	sbiw	r28, 0x19	; 25
    56f8:	66 96       	adiw	r28, 0x16	; 22
    56fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    56fc:	66 97       	sbiw	r28, 0x16	; 22
    56fe:	2f 96       	adiw	r28, 0x0f	; 15
    5700:	9f ad       	ldd	r25, Y+63	; 0x3f
    5702:	2f 97       	sbiw	r28, 0x0f	; 15
    5704:	89 0f       	add	r24, r25
    5706:	6a 96       	adiw	r28, 0x1a	; 26
    5708:	8f af       	std	Y+63, r24	; 0x3f
    570a:	6a 97       	sbiw	r28, 0x1a	; 26
    570c:	01 e0       	ldi	r16, 0x01	; 1
    570e:	6b 96       	adiw	r28, 0x1b	; 27
    5710:	0f af       	std	Y+63, r16	; 0x3f
    5712:	6b 97       	sbiw	r28, 0x1b	; 27
    5714:	6a 96       	adiw	r28, 0x1a	; 26
    5716:	1f ad       	ldd	r17, Y+63	; 0x3f
    5718:	6a 97       	sbiw	r28, 0x1a	; 26
    571a:	2f 96       	adiw	r28, 0x0f	; 15
    571c:	2f ad       	ldd	r18, Y+63	; 0x3f
    571e:	2f 97       	sbiw	r28, 0x0f	; 15
    5720:	12 17       	cp	r17, r18
    5722:	18 f0       	brcs	.+6      	; 0x572a <Calculate_VidResult+0x682>
    5724:	6b 96       	adiw	r28, 0x1b	; 27
    5726:	1f ae       	std	Y+63, r1	; 0x3f
    5728:	6b 97       	sbiw	r28, 0x1b	; 27
    572a:	69 96       	adiw	r28, 0x19	; 25
    572c:	3f ad       	ldd	r19, Y+63	; 0x3f
    572e:	69 97       	sbiw	r28, 0x19	; 25
    5730:	6b 96       	adiw	r28, 0x1b	; 27
    5732:	4f ad       	ldd	r20, Y+63	; 0x3f
    5734:	6b 97       	sbiw	r28, 0x1b	; 27
    5736:	34 2b       	or	r19, r20
    5738:	69 96       	adiw	r28, 0x19	; 25
    573a:	3f af       	std	Y+63, r19	; 0x3f
    573c:	69 97       	sbiw	r28, 0x19	; 25
    573e:	6a 96       	adiw	r28, 0x1a	; 26
    5740:	5f ad       	ldd	r21, Y+63	; 0x3f
    5742:	6a 97       	sbiw	r28, 0x1a	; 26
    5744:	2f 96       	adiw	r28, 0x0f	; 15
    5746:	5f af       	std	Y+63, r21	; 0x3f
    5748:	2f 97       	sbiw	r28, 0x0f	; 15
    574a:	6c a5       	ldd	r22, Y+44	; 0x2c
    574c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    574e:	67 0f       	add	r22, r23
    5750:	60 96       	adiw	r28, 0x10	; 16
    5752:	6f af       	std	Y+63, r22	; 0x3f
    5754:	60 97       	sbiw	r28, 0x10	; 16
    5756:	81 e0       	ldi	r24, 0x01	; 1
    5758:	6c 96       	adiw	r28, 0x1c	; 28
    575a:	8f af       	std	Y+63, r24	; 0x3f
    575c:	6c 97       	sbiw	r28, 0x1c	; 28
    575e:	60 96       	adiw	r28, 0x10	; 16
    5760:	9f ad       	ldd	r25, Y+63	; 0x3f
    5762:	60 97       	sbiw	r28, 0x10	; 16
    5764:	0c a5       	ldd	r16, Y+44	; 0x2c
    5766:	90 17       	cp	r25, r16
    5768:	18 f0       	brcs	.+6      	; 0x5770 <Calculate_VidResult+0x6c8>
    576a:	6c 96       	adiw	r28, 0x1c	; 28
    576c:	1f ae       	std	Y+63, r1	; 0x3f
    576e:	6c 97       	sbiw	r28, 0x1c	; 28
    5770:	69 96       	adiw	r28, 0x19	; 25
    5772:	1f ad       	ldd	r17, Y+63	; 0x3f
    5774:	69 97       	sbiw	r28, 0x19	; 25
    5776:	60 96       	adiw	r28, 0x10	; 16
    5778:	2f ad       	ldd	r18, Y+63	; 0x3f
    577a:	60 97       	sbiw	r28, 0x10	; 16
    577c:	12 0f       	add	r17, r18
    577e:	6d 96       	adiw	r28, 0x1d	; 29
    5780:	1f af       	std	Y+63, r17	; 0x3f
    5782:	6d 97       	sbiw	r28, 0x1d	; 29
    5784:	31 e0       	ldi	r19, 0x01	; 1
    5786:	6e 96       	adiw	r28, 0x1e	; 30
    5788:	3f af       	std	Y+63, r19	; 0x3f
    578a:	6e 97       	sbiw	r28, 0x1e	; 30
    578c:	6d 96       	adiw	r28, 0x1d	; 29
    578e:	4f ad       	ldd	r20, Y+63	; 0x3f
    5790:	6d 97       	sbiw	r28, 0x1d	; 29
    5792:	60 96       	adiw	r28, 0x10	; 16
    5794:	5f ad       	ldd	r21, Y+63	; 0x3f
    5796:	60 97       	sbiw	r28, 0x10	; 16
    5798:	45 17       	cp	r20, r21
    579a:	18 f0       	brcs	.+6      	; 0x57a2 <Calculate_VidResult+0x6fa>
    579c:	6e 96       	adiw	r28, 0x1e	; 30
    579e:	1f ae       	std	Y+63, r1	; 0x3f
    57a0:	6e 97       	sbiw	r28, 0x1e	; 30
    57a2:	6c 96       	adiw	r28, 0x1c	; 28
    57a4:	6f ad       	ldd	r22, Y+63	; 0x3f
    57a6:	6c 97       	sbiw	r28, 0x1c	; 28
    57a8:	6e 96       	adiw	r28, 0x1e	; 30
    57aa:	7f ad       	ldd	r23, Y+63	; 0x3f
    57ac:	6e 97       	sbiw	r28, 0x1e	; 30
    57ae:	67 2b       	or	r22, r23
    57b0:	6c 96       	adiw	r28, 0x1c	; 28
    57b2:	6f af       	std	Y+63, r22	; 0x3f
    57b4:	6c 97       	sbiw	r28, 0x1c	; 28
    57b6:	6d 96       	adiw	r28, 0x1d	; 29
    57b8:	8f ad       	ldd	r24, Y+63	; 0x3f
    57ba:	6d 97       	sbiw	r28, 0x1d	; 29
    57bc:	60 96       	adiw	r28, 0x10	; 16
    57be:	8f af       	std	Y+63, r24	; 0x3f
    57c0:	60 97       	sbiw	r28, 0x10	; 16
    57c2:	9d a5       	ldd	r25, Y+45	; 0x2d
    57c4:	0b 8d       	ldd	r16, Y+27	; 0x1b
    57c6:	90 0f       	add	r25, r16
    57c8:	61 96       	adiw	r28, 0x11	; 17
    57ca:	9f af       	std	Y+63, r25	; 0x3f
    57cc:	61 97       	sbiw	r28, 0x11	; 17
    57ce:	11 e0       	ldi	r17, 0x01	; 1
    57d0:	6f 96       	adiw	r28, 0x1f	; 31
    57d2:	1f af       	std	Y+63, r17	; 0x3f
    57d4:	6f 97       	sbiw	r28, 0x1f	; 31
    57d6:	61 96       	adiw	r28, 0x11	; 17
    57d8:	2f ad       	ldd	r18, Y+63	; 0x3f
    57da:	61 97       	sbiw	r28, 0x11	; 17
    57dc:	3d a5       	ldd	r19, Y+45	; 0x2d
    57de:	23 17       	cp	r18, r19
    57e0:	18 f0       	brcs	.+6      	; 0x57e8 <Calculate_VidResult+0x740>
    57e2:	6f 96       	adiw	r28, 0x1f	; 31
    57e4:	1f ae       	std	Y+63, r1	; 0x3f
    57e6:	6f 97       	sbiw	r28, 0x1f	; 31
    57e8:	6c 96       	adiw	r28, 0x1c	; 28
    57ea:	4f ad       	ldd	r20, Y+63	; 0x3f
    57ec:	6c 97       	sbiw	r28, 0x1c	; 28
    57ee:	61 96       	adiw	r28, 0x11	; 17
    57f0:	5f ad       	ldd	r21, Y+63	; 0x3f
    57f2:	61 97       	sbiw	r28, 0x11	; 17
    57f4:	45 0f       	add	r20, r21
    57f6:	a0 96       	adiw	r28, 0x20	; 32
    57f8:	4f af       	std	Y+63, r20	; 0x3f
    57fa:	a0 97       	sbiw	r28, 0x20	; 32
    57fc:	61 e0       	ldi	r22, 0x01	; 1
    57fe:	a1 96       	adiw	r28, 0x21	; 33
    5800:	6f af       	std	Y+63, r22	; 0x3f
    5802:	a1 97       	sbiw	r28, 0x21	; 33
    5804:	a0 96       	adiw	r28, 0x20	; 32
    5806:	7f ad       	ldd	r23, Y+63	; 0x3f
    5808:	a0 97       	sbiw	r28, 0x20	; 32
    580a:	61 96       	adiw	r28, 0x11	; 17
    580c:	8f ad       	ldd	r24, Y+63	; 0x3f
    580e:	61 97       	sbiw	r28, 0x11	; 17
    5810:	78 17       	cp	r23, r24
    5812:	18 f0       	brcs	.+6      	; 0x581a <Calculate_VidResult+0x772>
    5814:	a1 96       	adiw	r28, 0x21	; 33
    5816:	1f ae       	std	Y+63, r1	; 0x3f
    5818:	a1 97       	sbiw	r28, 0x21	; 33
    581a:	6f 96       	adiw	r28, 0x1f	; 31
    581c:	9f ad       	ldd	r25, Y+63	; 0x3f
    581e:	6f 97       	sbiw	r28, 0x1f	; 31
    5820:	a1 96       	adiw	r28, 0x21	; 33
    5822:	0f ad       	ldd	r16, Y+63	; 0x3f
    5824:	a1 97       	sbiw	r28, 0x21	; 33
    5826:	90 2b       	or	r25, r16
    5828:	6f 96       	adiw	r28, 0x1f	; 31
    582a:	9f af       	std	Y+63, r25	; 0x3f
    582c:	6f 97       	sbiw	r28, 0x1f	; 31
    582e:	a0 96       	adiw	r28, 0x20	; 32
    5830:	1f ad       	ldd	r17, Y+63	; 0x3f
    5832:	a0 97       	sbiw	r28, 0x20	; 32
    5834:	61 96       	adiw	r28, 0x11	; 17
    5836:	1f af       	std	Y+63, r17	; 0x3f
    5838:	61 97       	sbiw	r28, 0x11	; 17
    583a:	2e a5       	ldd	r18, Y+46	; 0x2e
    583c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    583e:	23 0f       	add	r18, r19
    5840:	62 96       	adiw	r28, 0x12	; 18
    5842:	2f af       	std	Y+63, r18	; 0x3f
    5844:	62 97       	sbiw	r28, 0x12	; 18
    5846:	41 e0       	ldi	r20, 0x01	; 1
    5848:	a2 96       	adiw	r28, 0x22	; 34
    584a:	4f af       	std	Y+63, r20	; 0x3f
    584c:	a2 97       	sbiw	r28, 0x22	; 34
    584e:	62 96       	adiw	r28, 0x12	; 18
    5850:	5f ad       	ldd	r21, Y+63	; 0x3f
    5852:	62 97       	sbiw	r28, 0x12	; 18
    5854:	6e a5       	ldd	r22, Y+46	; 0x2e
    5856:	56 17       	cp	r21, r22
    5858:	18 f0       	brcs	.+6      	; 0x5860 <Calculate_VidResult+0x7b8>
    585a:	a2 96       	adiw	r28, 0x22	; 34
    585c:	1f ae       	std	Y+63, r1	; 0x3f
    585e:	a2 97       	sbiw	r28, 0x22	; 34
    5860:	6f 96       	adiw	r28, 0x1f	; 31
    5862:	7f ad       	ldd	r23, Y+63	; 0x3f
    5864:	6f 97       	sbiw	r28, 0x1f	; 31
    5866:	62 96       	adiw	r28, 0x12	; 18
    5868:	8f ad       	ldd	r24, Y+63	; 0x3f
    586a:	62 97       	sbiw	r28, 0x12	; 18
    586c:	78 0f       	add	r23, r24
    586e:	a3 96       	adiw	r28, 0x23	; 35
    5870:	7f af       	std	Y+63, r23	; 0x3f
    5872:	a3 97       	sbiw	r28, 0x23	; 35
    5874:	91 e0       	ldi	r25, 0x01	; 1
    5876:	a4 96       	adiw	r28, 0x24	; 36
    5878:	9f af       	std	Y+63, r25	; 0x3f
    587a:	a4 97       	sbiw	r28, 0x24	; 36
    587c:	a3 96       	adiw	r28, 0x23	; 35
    587e:	0f ad       	ldd	r16, Y+63	; 0x3f
    5880:	a3 97       	sbiw	r28, 0x23	; 35
    5882:	62 96       	adiw	r28, 0x12	; 18
    5884:	1f ad       	ldd	r17, Y+63	; 0x3f
    5886:	62 97       	sbiw	r28, 0x12	; 18
    5888:	01 17       	cp	r16, r17
    588a:	18 f0       	brcs	.+6      	; 0x5892 <Calculate_VidResult+0x7ea>
    588c:	a4 96       	adiw	r28, 0x24	; 36
    588e:	1f ae       	std	Y+63, r1	; 0x3f
    5890:	a4 97       	sbiw	r28, 0x24	; 36
    5892:	a2 96       	adiw	r28, 0x22	; 34
    5894:	2f ad       	ldd	r18, Y+63	; 0x3f
    5896:	a2 97       	sbiw	r28, 0x22	; 34
    5898:	a4 96       	adiw	r28, 0x24	; 36
    589a:	3f ad       	ldd	r19, Y+63	; 0x3f
    589c:	a4 97       	sbiw	r28, 0x24	; 36
    589e:	23 2b       	or	r18, r19
    58a0:	a2 96       	adiw	r28, 0x22	; 34
    58a2:	2f af       	std	Y+63, r18	; 0x3f
    58a4:	a2 97       	sbiw	r28, 0x22	; 34
    58a6:	a3 96       	adiw	r28, 0x23	; 35
    58a8:	4f ad       	ldd	r20, Y+63	; 0x3f
    58aa:	a3 97       	sbiw	r28, 0x23	; 35
    58ac:	62 96       	adiw	r28, 0x12	; 18
    58ae:	4f af       	std	Y+63, r20	; 0x3f
    58b0:	62 97       	sbiw	r28, 0x12	; 18
    58b2:	5f a5       	ldd	r21, Y+47	; 0x2f
    58b4:	6d 8d       	ldd	r22, Y+29	; 0x1d
    58b6:	56 0f       	add	r21, r22
    58b8:	63 96       	adiw	r28, 0x13	; 19
    58ba:	5f af       	std	Y+63, r21	; 0x3f
    58bc:	63 97       	sbiw	r28, 0x13	; 19
    58be:	71 e0       	ldi	r23, 0x01	; 1
    58c0:	a5 96       	adiw	r28, 0x25	; 37
    58c2:	7f af       	std	Y+63, r23	; 0x3f
    58c4:	a5 97       	sbiw	r28, 0x25	; 37
    58c6:	63 96       	adiw	r28, 0x13	; 19
    58c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    58ca:	63 97       	sbiw	r28, 0x13	; 19
    58cc:	9f a5       	ldd	r25, Y+47	; 0x2f
    58ce:	89 17       	cp	r24, r25
    58d0:	18 f0       	brcs	.+6      	; 0x58d8 <Calculate_VidResult+0x830>
    58d2:	a5 96       	adiw	r28, 0x25	; 37
    58d4:	1f ae       	std	Y+63, r1	; 0x3f
    58d6:	a5 97       	sbiw	r28, 0x25	; 37
    58d8:	a2 96       	adiw	r28, 0x22	; 34
    58da:	0f ad       	ldd	r16, Y+63	; 0x3f
    58dc:	a2 97       	sbiw	r28, 0x22	; 34
    58de:	63 96       	adiw	r28, 0x13	; 19
    58e0:	1f ad       	ldd	r17, Y+63	; 0x3f
    58e2:	63 97       	sbiw	r28, 0x13	; 19
    58e4:	01 0f       	add	r16, r17
    58e6:	a6 96       	adiw	r28, 0x26	; 38
    58e8:	0f af       	std	Y+63, r16	; 0x3f
    58ea:	a6 97       	sbiw	r28, 0x26	; 38
    58ec:	21 e0       	ldi	r18, 0x01	; 1
    58ee:	a7 96       	adiw	r28, 0x27	; 39
    58f0:	2f af       	std	Y+63, r18	; 0x3f
    58f2:	a7 97       	sbiw	r28, 0x27	; 39
    58f4:	a6 96       	adiw	r28, 0x26	; 38
    58f6:	3f ad       	ldd	r19, Y+63	; 0x3f
    58f8:	a6 97       	sbiw	r28, 0x26	; 38
    58fa:	63 96       	adiw	r28, 0x13	; 19
    58fc:	4f ad       	ldd	r20, Y+63	; 0x3f
    58fe:	63 97       	sbiw	r28, 0x13	; 19
    5900:	34 17       	cp	r19, r20
    5902:	18 f0       	brcs	.+6      	; 0x590a <Calculate_VidResult+0x862>
    5904:	a7 96       	adiw	r28, 0x27	; 39
    5906:	1f ae       	std	Y+63, r1	; 0x3f
    5908:	a7 97       	sbiw	r28, 0x27	; 39
    590a:	a5 96       	adiw	r28, 0x25	; 37
    590c:	5f ad       	ldd	r21, Y+63	; 0x3f
    590e:	a5 97       	sbiw	r28, 0x25	; 37
    5910:	a7 96       	adiw	r28, 0x27	; 39
    5912:	6f ad       	ldd	r22, Y+63	; 0x3f
    5914:	a7 97       	sbiw	r28, 0x27	; 39
    5916:	56 2b       	or	r21, r22
    5918:	a5 96       	adiw	r28, 0x25	; 37
    591a:	5f af       	std	Y+63, r21	; 0x3f
    591c:	a5 97       	sbiw	r28, 0x25	; 37
    591e:	a6 96       	adiw	r28, 0x26	; 38
    5920:	7f ad       	ldd	r23, Y+63	; 0x3f
    5922:	a6 97       	sbiw	r28, 0x26	; 38
    5924:	63 96       	adiw	r28, 0x13	; 19
    5926:	7f af       	std	Y+63, r23	; 0x3f
    5928:	63 97       	sbiw	r28, 0x13	; 19
    592a:	88 a9       	ldd	r24, Y+48	; 0x30
    592c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    592e:	89 0f       	add	r24, r25
    5930:	64 96       	adiw	r28, 0x14	; 20
    5932:	8f af       	std	Y+63, r24	; 0x3f
    5934:	64 97       	sbiw	r28, 0x14	; 20
    5936:	a5 96       	adiw	r28, 0x25	; 37
    5938:	8f ad       	ldd	r24, Y+63	; 0x3f
    593a:	a5 97       	sbiw	r28, 0x25	; 37
    593c:	64 96       	adiw	r28, 0x14	; 20
    593e:	0f ad       	ldd	r16, Y+63	; 0x3f
    5940:	64 97       	sbiw	r28, 0x14	; 20
    5942:	80 0f       	add	r24, r16
    5944:	64 96       	adiw	r28, 0x14	; 20
    5946:	8f af       	std	Y+63, r24	; 0x3f
    5948:	64 97       	sbiw	r28, 0x14	; 20
    594a:	2d 96       	adiw	r28, 0x0d	; 13
    594c:	1f ad       	ldd	r17, Y+63	; 0x3f
    594e:	2d 97       	sbiw	r28, 0x0d	; 13
    5950:	19 a7       	std	Y+41, r17	; 0x29
    5952:	2e 96       	adiw	r28, 0x0e	; 14
    5954:	2f ad       	ldd	r18, Y+63	; 0x3f
    5956:	2e 97       	sbiw	r28, 0x0e	; 14
    5958:	2a a7       	std	Y+42, r18	; 0x2a
    595a:	2f 96       	adiw	r28, 0x0f	; 15
    595c:	3f ad       	ldd	r19, Y+63	; 0x3f
    595e:	2f 97       	sbiw	r28, 0x0f	; 15
    5960:	3b a7       	std	Y+43, r19	; 0x2b
    5962:	60 96       	adiw	r28, 0x10	; 16
    5964:	4f ad       	ldd	r20, Y+63	; 0x3f
    5966:	60 97       	sbiw	r28, 0x10	; 16
    5968:	4c a7       	std	Y+44, r20	; 0x2c
    596a:	61 96       	adiw	r28, 0x11	; 17
    596c:	5f ad       	ldd	r21, Y+63	; 0x3f
    596e:	61 97       	sbiw	r28, 0x11	; 17
    5970:	5d a7       	std	Y+45, r21	; 0x2d
    5972:	62 96       	adiw	r28, 0x12	; 18
    5974:	6f ad       	ldd	r22, Y+63	; 0x3f
    5976:	62 97       	sbiw	r28, 0x12	; 18
    5978:	6e a7       	std	Y+46, r22	; 0x2e
    597a:	63 96       	adiw	r28, 0x13	; 19
    597c:	7f ad       	ldd	r23, Y+63	; 0x3f
    597e:	63 97       	sbiw	r28, 0x13	; 19
    5980:	7f a7       	std	Y+47, r23	; 0x2f
    5982:	64 96       	adiw	r28, 0x14	; 20
    5984:	8f ad       	ldd	r24, Y+63	; 0x3f
    5986:	64 97       	sbiw	r28, 0x14	; 20
    5988:	88 ab       	std	Y+48, r24	; 0x30
    598a:	29 a5       	ldd	r18, Y+41	; 0x29
    598c:	3a a5       	ldd	r19, Y+42	; 0x2a
    598e:	4b a5       	ldd	r20, Y+43	; 0x2b
    5990:	5c a5       	ldd	r21, Y+44	; 0x2c
    5992:	6d a5       	ldd	r22, Y+45	; 0x2d
    5994:	7e a5       	ldd	r23, Y+46	; 0x2e
    5996:	8f a5       	ldd	r24, Y+47	; 0x2f
    5998:	98 a9       	ldd	r25, Y+48	; 0x30
    599a:	03 e0       	ldi	r16, 0x03	; 3
    599c:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    59a0:	a2 2e       	mov	r10, r18
    59a2:	b3 2e       	mov	r11, r19
    59a4:	c4 2e       	mov	r12, r20
    59a6:	d5 2e       	mov	r13, r21
    59a8:	e6 2e       	mov	r14, r22
    59aa:	f7 2e       	mov	r15, r23
    59ac:	08 2f       	mov	r16, r24
    59ae:	19 2f       	mov	r17, r25
    59b0:	2a 2c       	mov	r2, r10
    59b2:	3b 2c       	mov	r3, r11
    59b4:	4c 2c       	mov	r4, r12
    59b6:	5d 2c       	mov	r5, r13
    59b8:	6e 2c       	mov	r6, r14
    59ba:	7f 2c       	mov	r7, r15
    59bc:	80 2e       	mov	r8, r16
    59be:	91 2e       	mov	r9, r17
    59c0:	8c 85       	ldd	r24, Y+12	; 0x0c
    59c2:	9d 85       	ldd	r25, Y+13	; 0x0d
    59c4:	8c 01       	movw	r16, r24
    59c6:	20 e0       	ldi	r18, 0x00	; 0
    59c8:	30 e0       	ldi	r19, 0x00	; 0
    59ca:	40 e0       	ldi	r20, 0x00	; 0
    59cc:	50 e0       	ldi	r21, 0x00	; 0
    59ce:	60 e0       	ldi	r22, 0x00	; 0
    59d0:	70 e0       	ldi	r23, 0x00	; 0
    59d2:	0f 87       	std	Y+15, r16	; 0x0f
    59d4:	18 8b       	std	Y+16, r17	; 0x10
    59d6:	29 8b       	std	Y+17, r18	; 0x11
    59d8:	3a 8b       	std	Y+18, r19	; 0x12
    59da:	4b 8b       	std	Y+19, r20	; 0x13
    59dc:	5c 8b       	std	Y+20, r21	; 0x14
    59de:	6d 8b       	std	Y+21, r22	; 0x15
    59e0:	7e 8b       	std	Y+22, r23	; 0x16
    59e2:	22 2d       	mov	r18, r2
    59e4:	33 2d       	mov	r19, r3
    59e6:	44 2d       	mov	r20, r4
    59e8:	55 2d       	mov	r21, r5
    59ea:	66 2d       	mov	r22, r6
    59ec:	77 2d       	mov	r23, r7
    59ee:	88 2d       	mov	r24, r8
    59f0:	99 2d       	mov	r25, r9
    59f2:	af 84       	ldd	r10, Y+15	; 0x0f
    59f4:	b8 88       	ldd	r11, Y+16	; 0x10
    59f6:	c9 88       	ldd	r12, Y+17	; 0x11
    59f8:	da 88       	ldd	r13, Y+18	; 0x12
    59fa:	eb 88       	ldd	r14, Y+19	; 0x13
    59fc:	fc 88       	ldd	r15, Y+20	; 0x14
    59fe:	0d 89       	ldd	r16, Y+21	; 0x15
    5a00:	1e 89       	ldd	r17, Y+22	; 0x16
    5a02:	0e 94 ef 01 	call	0x3de	; 0x3de <__udivdi3>
    5a06:	22 2e       	mov	r2, r18
    5a08:	33 2e       	mov	r3, r19
    5a0a:	44 2e       	mov	r4, r20
    5a0c:	55 2e       	mov	r5, r21
    5a0e:	66 2e       	mov	r6, r22
    5a10:	77 2e       	mov	r7, r23
    5a12:	88 2e       	mov	r8, r24
    5a14:	99 2e       	mov	r9, r25
    5a16:	a2 2c       	mov	r10, r2
    5a18:	b3 2c       	mov	r11, r3
    5a1a:	c4 2c       	mov	r12, r4
    5a1c:	d5 2c       	mov	r13, r5
    5a1e:	e6 2c       	mov	r14, r6
    5a20:	f7 2c       	mov	r15, r7
    5a22:	08 2d       	mov	r16, r8
    5a24:	19 2d       	mov	r17, r9
    5a26:	2a 2d       	mov	r18, r10
    5a28:	3b 2d       	mov	r19, r11
    5a2a:	4c 2d       	mov	r20, r12
    5a2c:	5d 2d       	mov	r21, r13
    5a2e:	6e 2d       	mov	r22, r14
    5a30:	7f 2d       	mov	r23, r15
    5a32:	80 2f       	mov	r24, r16
    5a34:	91 2f       	mov	r25, r17
    5a36:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    		}//end else
    		global_First_sign = 0 ;
    5a3a:	10 92 88 01 	sts	0x0188, r1
    5a3e:	f5 c1       	rjmp	.+1002   	; 0x5e2a <Calculate_VidResult+0xd82>
    	   return ;

       case '*' :

    	   // to  be sure that the sign is not repeated
    	   if (global_First_sign != 1){
    5a40:	80 91 88 01 	lds	r24, 0x0188
    5a44:	81 30       	cpi	r24, 0x01	; 1
    5a46:	29 f0       	breq	.+10     	; 0x5a52 <Calculate_VidResult+0x9aa>
    		   global_First_sign = 0 ;
    5a48:	10 92 88 01 	sts	0x0188, r1
    		   Error_VidStatment() ;
    5a4c:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <Error_VidStatment>
    5a50:	ec c1       	rjmp	.+984    	; 0x5e2a <Calculate_VidResult+0xd82>
    		   return ;
    	   }
    	   if ((sign_1&&!sign_2) || (!sign_1&&sign_2)){
    5a52:	80 91 89 01 	lds	r24, 0x0189
    5a56:	88 23       	and	r24, r24
    5a58:	21 f0       	breq	.+8      	; 0x5a62 <Calculate_VidResult+0x9ba>
    5a5a:	80 91 8a 01 	lds	r24, 0x018A
    5a5e:	88 23       	and	r24, r24
    5a60:	41 f0       	breq	.+16     	; 0x5a72 <Calculate_VidResult+0x9ca>
    5a62:	80 91 89 01 	lds	r24, 0x0189
    5a66:	88 23       	and	r24, r24
    5a68:	21 f5       	brne	.+72     	; 0x5ab2 <Calculate_VidResult+0xa0a>
    5a6a:	80 91 8a 01 	lds	r24, 0x018A
    5a6e:	88 23       	and	r24, r24
    5a70:	01 f1       	breq	.+64     	; 0x5ab2 <Calculate_VidResult+0xa0a>
    		   LCD_VidSendChar('-');
    5a72:	8d e2       	ldi	r24, 0x2D	; 45
    5a74:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
       		   LCD_VidPrintVar(Copy_U8num1*Copy_U8num2);
    5a78:	2a 85       	ldd	r18, Y+10	; 0x0a
    5a7a:	3b 85       	ldd	r19, Y+11	; 0x0b
    5a7c:	8c 85       	ldd	r24, Y+12	; 0x0c
    5a7e:	9d 85       	ldd	r25, Y+13	; 0x0d
    5a80:	ac 01       	movw	r20, r24
    5a82:	24 9f       	mul	r18, r20
    5a84:	c0 01       	movw	r24, r0
    5a86:	25 9f       	mul	r18, r21
    5a88:	90 0d       	add	r25, r0
    5a8a:	34 9f       	mul	r19, r20
    5a8c:	90 0d       	add	r25, r0
    5a8e:	11 24       	eor	r1, r1
    5a90:	5c 01       	movw	r10, r24
    5a92:	cc 24       	eor	r12, r12
    5a94:	dd 24       	eor	r13, r13
    5a96:	ee 24       	eor	r14, r14
    5a98:	ff 24       	eor	r15, r15
    5a9a:	87 01       	movw	r16, r14
    5a9c:	2a 2d       	mov	r18, r10
    5a9e:	3b 2d       	mov	r19, r11
    5aa0:	4c 2d       	mov	r20, r12
    5aa2:	5d 2d       	mov	r21, r13
    5aa4:	6e 2d       	mov	r22, r14
    5aa6:	7f 2d       	mov	r23, r15
    5aa8:	80 2f       	mov	r24, r16
    5aaa:	91 2f       	mov	r25, r17
    5aac:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5ab0:	1c c0       	rjmp	.+56     	; 0x5aea <Calculate_VidResult+0xa42>
    	   }
    	   else {
       		   LCD_VidPrintVar(Copy_U8num1*Copy_U8num2);
    5ab2:	2a 85       	ldd	r18, Y+10	; 0x0a
    5ab4:	3b 85       	ldd	r19, Y+11	; 0x0b
    5ab6:	8c 85       	ldd	r24, Y+12	; 0x0c
    5ab8:	9d 85       	ldd	r25, Y+13	; 0x0d
    5aba:	bc 01       	movw	r22, r24
    5abc:	26 9f       	mul	r18, r22
    5abe:	c0 01       	movw	r24, r0
    5ac0:	27 9f       	mul	r18, r23
    5ac2:	90 0d       	add	r25, r0
    5ac4:	36 9f       	mul	r19, r22
    5ac6:	90 0d       	add	r25, r0
    5ac8:	11 24       	eor	r1, r1
    5aca:	5c 01       	movw	r10, r24
    5acc:	cc 24       	eor	r12, r12
    5ace:	dd 24       	eor	r13, r13
    5ad0:	ee 24       	eor	r14, r14
    5ad2:	ff 24       	eor	r15, r15
    5ad4:	87 01       	movw	r16, r14
    5ad6:	2a 2d       	mov	r18, r10
    5ad8:	3b 2d       	mov	r19, r11
    5ada:	4c 2d       	mov	r20, r12
    5adc:	5d 2d       	mov	r21, r13
    5ade:	6e 2d       	mov	r22, r14
    5ae0:	7f 2d       	mov	r23, r15
    5ae2:	80 2f       	mov	r24, r16
    5ae4:	91 2f       	mov	r25, r17
    5ae6:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    	   }
    	   global_First_sign = 0 ;
    5aea:	10 92 88 01 	sts	0x0188, r1
    5aee:	9d c1       	rjmp	.+826    	; 0x5e2a <Calculate_VidResult+0xd82>
    	   return ;

       case '-' :
    	   // to  be sure that the sign is not repeated
    	   if (global_First_sign != 1){
    5af0:	80 91 88 01 	lds	r24, 0x0188
    5af4:	81 30       	cpi	r24, 0x01	; 1
    5af6:	29 f0       	breq	.+10     	; 0x5b02 <Calculate_VidResult+0xa5a>
    		   global_First_sign = 0 ;
    5af8:	10 92 88 01 	sts	0x0188, r1
    		   Error_VidStatment() ;
    5afc:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <Error_VidStatment>
    5b00:	94 c1       	rjmp	.+808    	; 0x5e2a <Calculate_VidResult+0xd82>
    		   return ;
    	   }
    	   //to operate subtraction between first number '-' and second number '+'
    	   //like -3-4    -4-3
    	   if (sign_1&&!sign_2){
    5b02:	80 91 89 01 	lds	r24, 0x0189
    5b06:	88 23       	and	r24, r24
    5b08:	f1 f0       	breq	.+60     	; 0x5b46 <Calculate_VidResult+0xa9e>
    5b0a:	80 91 8a 01 	lds	r24, 0x018A
    5b0e:	88 23       	and	r24, r24
    5b10:	d1 f4       	brne	.+52     	; 0x5b46 <Calculate_VidResult+0xa9e>
    		   LCD_VidSendChar('-');
    5b12:	8d e2       	ldi	r24, 0x2D	; 45
    5b14:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
       		   LCD_VidPrintVar(Copy_U8num1+Copy_U8num2);
    5b18:	2a 85       	ldd	r18, Y+10	; 0x0a
    5b1a:	3b 85       	ldd	r19, Y+11	; 0x0b
    5b1c:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b1e:	9d 85       	ldd	r25, Y+13	; 0x0d
    5b20:	82 0f       	add	r24, r18
    5b22:	93 1f       	adc	r25, r19
    5b24:	5c 01       	movw	r10, r24
    5b26:	cc 24       	eor	r12, r12
    5b28:	dd 24       	eor	r13, r13
    5b2a:	ee 24       	eor	r14, r14
    5b2c:	ff 24       	eor	r15, r15
    5b2e:	87 01       	movw	r16, r14
    5b30:	2a 2d       	mov	r18, r10
    5b32:	3b 2d       	mov	r19, r11
    5b34:	4c 2d       	mov	r20, r12
    5b36:	5d 2d       	mov	r21, r13
    5b38:	6e 2d       	mov	r22, r14
    5b3a:	7f 2d       	mov	r23, r15
    5b3c:	80 2f       	mov	r24, r16
    5b3e:	91 2f       	mov	r25, r17
    5b40:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5b44:	9f c0       	rjmp	.+318    	; 0x5c84 <Calculate_VidResult+0xbdc>
    	   }
    	   //like 3--4   4--3
    	   else if (!sign_1&&sign_2){
    5b46:	80 91 89 01 	lds	r24, 0x0189
    5b4a:	88 23       	and	r24, r24
    5b4c:	d9 f4       	brne	.+54     	; 0x5b84 <Calculate_VidResult+0xadc>
    5b4e:	80 91 8a 01 	lds	r24, 0x018A
    5b52:	88 23       	and	r24, r24
    5b54:	b9 f0       	breq	.+46     	; 0x5b84 <Calculate_VidResult+0xadc>
       		   LCD_VidPrintVar(Copy_U8num1+Copy_U8num2);
    5b56:	2a 85       	ldd	r18, Y+10	; 0x0a
    5b58:	3b 85       	ldd	r19, Y+11	; 0x0b
    5b5a:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b5c:	9d 85       	ldd	r25, Y+13	; 0x0d
    5b5e:	82 0f       	add	r24, r18
    5b60:	93 1f       	adc	r25, r19
    5b62:	5c 01       	movw	r10, r24
    5b64:	cc 24       	eor	r12, r12
    5b66:	dd 24       	eor	r13, r13
    5b68:	ee 24       	eor	r14, r14
    5b6a:	ff 24       	eor	r15, r15
    5b6c:	87 01       	movw	r16, r14
    5b6e:	2a 2d       	mov	r18, r10
    5b70:	3b 2d       	mov	r19, r11
    5b72:	4c 2d       	mov	r20, r12
    5b74:	5d 2d       	mov	r21, r13
    5b76:	6e 2d       	mov	r22, r14
    5b78:	7f 2d       	mov	r23, r15
    5b7a:	80 2f       	mov	r24, r16
    5b7c:	91 2f       	mov	r25, r17
    5b7e:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5b82:	80 c0       	rjmp	.+256    	; 0x5c84 <Calculate_VidResult+0xbdc>
    	   }
    	   else if (sign_1&&sign_2){
    5b84:	80 91 89 01 	lds	r24, 0x0189
    5b88:	88 23       	and	r24, r24
    5b8a:	09 f4       	brne	.+2      	; 0x5b8e <Calculate_VidResult+0xae6>
    5b8c:	40 c0       	rjmp	.+128    	; 0x5c0e <Calculate_VidResult+0xb66>
    5b8e:	80 91 8a 01 	lds	r24, 0x018A
    5b92:	88 23       	and	r24, r24
    5b94:	e1 f1       	breq	.+120    	; 0x5c0e <Calculate_VidResult+0xb66>
    		   //like -3--4
    		   if (Copy_U8num1<=Copy_U8num2)
    5b96:	2a 85       	ldd	r18, Y+10	; 0x0a
    5b98:	3b 85       	ldd	r19, Y+11	; 0x0b
    5b9a:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b9c:	9d 85       	ldd	r25, Y+13	; 0x0d
    5b9e:	82 17       	cp	r24, r18
    5ba0:	93 07       	cpc	r25, r19
    5ba2:	c8 f0       	brcs	.+50     	; 0x5bd6 <Calculate_VidResult+0xb2e>
           		   LCD_VidPrintVar(Copy_U8num2-Copy_U8num1);
    5ba4:	2c 85       	ldd	r18, Y+12	; 0x0c
    5ba6:	3d 85       	ldd	r19, Y+13	; 0x0d
    5ba8:	8a 85       	ldd	r24, Y+10	; 0x0a
    5baa:	9b 85       	ldd	r25, Y+11	; 0x0b
    5bac:	89 01       	movw	r16, r18
    5bae:	08 1b       	sub	r16, r24
    5bb0:	19 0b       	sbc	r17, r25
    5bb2:	c8 01       	movw	r24, r16
    5bb4:	5c 01       	movw	r10, r24
    5bb6:	cc 24       	eor	r12, r12
    5bb8:	dd 24       	eor	r13, r13
    5bba:	ee 24       	eor	r14, r14
    5bbc:	ff 24       	eor	r15, r15
    5bbe:	87 01       	movw	r16, r14
    5bc0:	2a 2d       	mov	r18, r10
    5bc2:	3b 2d       	mov	r19, r11
    5bc4:	4c 2d       	mov	r20, r12
    5bc6:	5d 2d       	mov	r21, r13
    5bc8:	6e 2d       	mov	r22, r14
    5bca:	7f 2d       	mov	r23, r15
    5bcc:	80 2f       	mov	r24, r16
    5bce:	91 2f       	mov	r25, r17
    5bd0:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5bd4:	57 c0       	rjmp	.+174    	; 0x5c84 <Calculate_VidResult+0xbdc>
    		   //-4--3
    		   else {
        		   LCD_VidSendChar('-');
    5bd6:	8d e2       	ldi	r24, 0x2D	; 45
    5bd8:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
           		   LCD_VidPrintVar(Copy_U8num1-Copy_U8num2);
    5bdc:	2a 85       	ldd	r18, Y+10	; 0x0a
    5bde:	3b 85       	ldd	r19, Y+11	; 0x0b
    5be0:	8c 85       	ldd	r24, Y+12	; 0x0c
    5be2:	9d 85       	ldd	r25, Y+13	; 0x0d
    5be4:	a9 01       	movw	r20, r18
    5be6:	48 1b       	sub	r20, r24
    5be8:	59 0b       	sbc	r21, r25
    5bea:	ca 01       	movw	r24, r20
    5bec:	5c 01       	movw	r10, r24
    5bee:	cc 24       	eor	r12, r12
    5bf0:	dd 24       	eor	r13, r13
    5bf2:	ee 24       	eor	r14, r14
    5bf4:	ff 24       	eor	r15, r15
    5bf6:	87 01       	movw	r16, r14
    5bf8:	2a 2d       	mov	r18, r10
    5bfa:	3b 2d       	mov	r19, r11
    5bfc:	4c 2d       	mov	r20, r12
    5bfe:	5d 2d       	mov	r21, r13
    5c00:	6e 2d       	mov	r22, r14
    5c02:	7f 2d       	mov	r23, r15
    5c04:	80 2f       	mov	r24, r16
    5c06:	91 2f       	mov	r25, r17
    5c08:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5c0c:	3b c0       	rjmp	.+118    	; 0x5c84 <Calculate_VidResult+0xbdc>
    		   }
    	   }
    	   //to make '-' in result if num_1 < num_2
    	   //like 3-4  4-3
    	   else {
    		   if ( (Copy_U8num1<Copy_U8num2) ){
    5c0e:	2a 85       	ldd	r18, Y+10	; 0x0a
    5c10:	3b 85       	ldd	r19, Y+11	; 0x0b
    5c12:	8c 85       	ldd	r24, Y+12	; 0x0c
    5c14:	9d 85       	ldd	r25, Y+13	; 0x0d
    5c16:	28 17       	cp	r18, r24
    5c18:	39 07       	cpc	r19, r25
    5c1a:	e0 f4       	brcc	.+56     	; 0x5c54 <Calculate_VidResult+0xbac>
        		   LCD_VidSendChar('-');
    5c1c:	8d e2       	ldi	r24, 0x2D	; 45
    5c1e:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
        		   LCD_VidPrintVar(Copy_U8num2-Copy_U8num1);
    5c22:	2c 85       	ldd	r18, Y+12	; 0x0c
    5c24:	3d 85       	ldd	r19, Y+13	; 0x0d
    5c26:	8a 85       	ldd	r24, Y+10	; 0x0a
    5c28:	9b 85       	ldd	r25, Y+11	; 0x0b
    5c2a:	b9 01       	movw	r22, r18
    5c2c:	68 1b       	sub	r22, r24
    5c2e:	79 0b       	sbc	r23, r25
    5c30:	cb 01       	movw	r24, r22
    5c32:	5c 01       	movw	r10, r24
    5c34:	cc 24       	eor	r12, r12
    5c36:	dd 24       	eor	r13, r13
    5c38:	ee 24       	eor	r14, r14
    5c3a:	ff 24       	eor	r15, r15
    5c3c:	87 01       	movw	r16, r14
    5c3e:	2a 2d       	mov	r18, r10
    5c40:	3b 2d       	mov	r19, r11
    5c42:	4c 2d       	mov	r20, r12
    5c44:	5d 2d       	mov	r21, r13
    5c46:	6e 2d       	mov	r22, r14
    5c48:	7f 2d       	mov	r23, r15
    5c4a:	80 2f       	mov	r24, r16
    5c4c:	91 2f       	mov	r25, r17
    5c4e:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5c52:	18 c0       	rjmp	.+48     	; 0x5c84 <Calculate_VidResult+0xbdc>
    		   }
    		   else
    			   LCD_VidPrintVar(Copy_U8num1-Copy_U8num2);
    5c54:	2a 85       	ldd	r18, Y+10	; 0x0a
    5c56:	3b 85       	ldd	r19, Y+11	; 0x0b
    5c58:	8c 85       	ldd	r24, Y+12	; 0x0c
    5c5a:	9d 85       	ldd	r25, Y+13	; 0x0d
    5c5c:	89 01       	movw	r16, r18
    5c5e:	08 1b       	sub	r16, r24
    5c60:	19 0b       	sbc	r17, r25
    5c62:	c8 01       	movw	r24, r16
    5c64:	5c 01       	movw	r10, r24
    5c66:	cc 24       	eor	r12, r12
    5c68:	dd 24       	eor	r13, r13
    5c6a:	ee 24       	eor	r14, r14
    5c6c:	ff 24       	eor	r15, r15
    5c6e:	87 01       	movw	r16, r14
    5c70:	2a 2d       	mov	r18, r10
    5c72:	3b 2d       	mov	r19, r11
    5c74:	4c 2d       	mov	r20, r12
    5c76:	5d 2d       	mov	r21, r13
    5c78:	6e 2d       	mov	r22, r14
    5c7a:	7f 2d       	mov	r23, r15
    5c7c:	80 2f       	mov	r24, r16
    5c7e:	91 2f       	mov	r25, r17
    5c80:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    	   }
    	   global_First_sign = 0 ;
    5c84:	10 92 88 01 	sts	0x0188, r1
    5c88:	d0 c0       	rjmp	.+416    	; 0x5e2a <Calculate_VidResult+0xd82>
    	   return ;

       case '+' :
    	   // to  be sure that the sign is not repeated
    	   if (global_First_sign != 1){
    5c8a:	80 91 88 01 	lds	r24, 0x0188
    5c8e:	81 30       	cpi	r24, 0x01	; 1
    5c90:	29 f0       	breq	.+10     	; 0x5c9c <Calculate_VidResult+0xbf4>
    		   global_First_sign = 0 ;
    5c92:	10 92 88 01 	sts	0x0188, r1
    		   Error_VidStatment() ;
    5c96:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <Error_VidStatment>
    5c9a:	c7 c0       	rjmp	.+398    	; 0x5e2a <Calculate_VidResult+0xd82>
    		   return ;
    	   }
    	   if (sign_1&&!sign_2){
    5c9c:	80 91 89 01 	lds	r24, 0x0189
    5ca0:	88 23       	and	r24, r24
    5ca2:	09 f4       	brne	.+2      	; 0x5ca6 <Calculate_VidResult+0xbfe>
    5ca4:	40 c0       	rjmp	.+128    	; 0x5d26 <Calculate_VidResult+0xc7e>
    5ca6:	80 91 8a 01 	lds	r24, 0x018A
    5caa:	88 23       	and	r24, r24
    5cac:	e1 f5       	brne	.+120    	; 0x5d26 <Calculate_VidResult+0xc7e>
    		   if (Copy_U8num1>Copy_U8num2){
    5cae:	2a 85       	ldd	r18, Y+10	; 0x0a
    5cb0:	3b 85       	ldd	r19, Y+11	; 0x0b
    5cb2:	8c 85       	ldd	r24, Y+12	; 0x0c
    5cb4:	9d 85       	ldd	r25, Y+13	; 0x0d
    5cb6:	82 17       	cp	r24, r18
    5cb8:	93 07       	cpc	r25, r19
    5cba:	e0 f4       	brcc	.+56     	; 0x5cf4 <Calculate_VidResult+0xc4c>
        		   LCD_VidSendChar('-');
    5cbc:	8d e2       	ldi	r24, 0x2D	; 45
    5cbe:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
        		   LCD_VidPrintVar(Copy_U8num1-Copy_U8num2);
    5cc2:	2a 85       	ldd	r18, Y+10	; 0x0a
    5cc4:	3b 85       	ldd	r19, Y+11	; 0x0b
    5cc6:	8c 85       	ldd	r24, Y+12	; 0x0c
    5cc8:	9d 85       	ldd	r25, Y+13	; 0x0d
    5cca:	a9 01       	movw	r20, r18
    5ccc:	48 1b       	sub	r20, r24
    5cce:	59 0b       	sbc	r21, r25
    5cd0:	ca 01       	movw	r24, r20
    5cd2:	5c 01       	movw	r10, r24
    5cd4:	cc 24       	eor	r12, r12
    5cd6:	dd 24       	eor	r13, r13
    5cd8:	ee 24       	eor	r14, r14
    5cda:	ff 24       	eor	r15, r15
    5cdc:	87 01       	movw	r16, r14
    5cde:	2a 2d       	mov	r18, r10
    5ce0:	3b 2d       	mov	r19, r11
    5ce2:	4c 2d       	mov	r20, r12
    5ce4:	5d 2d       	mov	r21, r13
    5ce6:	6e 2d       	mov	r22, r14
    5ce8:	7f 2d       	mov	r23, r15
    5cea:	80 2f       	mov	r24, r16
    5cec:	91 2f       	mov	r25, r17
    5cee:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5cf2:	96 c0       	rjmp	.+300    	; 0x5e20 <Calculate_VidResult+0xd78>
    		   }
    		   else
        		   LCD_VidPrintVar(Copy_U8num2-Copy_U8num1);
    5cf4:	2c 85       	ldd	r18, Y+12	; 0x0c
    5cf6:	3d 85       	ldd	r19, Y+13	; 0x0d
    5cf8:	8a 85       	ldd	r24, Y+10	; 0x0a
    5cfa:	9b 85       	ldd	r25, Y+11	; 0x0b
    5cfc:	b9 01       	movw	r22, r18
    5cfe:	68 1b       	sub	r22, r24
    5d00:	79 0b       	sbc	r23, r25
    5d02:	cb 01       	movw	r24, r22
    5d04:	5c 01       	movw	r10, r24
    5d06:	cc 24       	eor	r12, r12
    5d08:	dd 24       	eor	r13, r13
    5d0a:	ee 24       	eor	r14, r14
    5d0c:	ff 24       	eor	r15, r15
    5d0e:	87 01       	movw	r16, r14
    5d10:	2a 2d       	mov	r18, r10
    5d12:	3b 2d       	mov	r19, r11
    5d14:	4c 2d       	mov	r20, r12
    5d16:	5d 2d       	mov	r21, r13
    5d18:	6e 2d       	mov	r22, r14
    5d1a:	7f 2d       	mov	r23, r15
    5d1c:	80 2f       	mov	r24, r16
    5d1e:	91 2f       	mov	r25, r17
    5d20:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5d24:	7d c0       	rjmp	.+250    	; 0x5e20 <Calculate_VidResult+0xd78>
    	   }
    	   else if (!sign_1&&sign_2){
    5d26:	80 91 89 01 	lds	r24, 0x0189
    5d2a:	88 23       	and	r24, r24
    5d2c:	09 f0       	breq	.+2      	; 0x5d30 <Calculate_VidResult+0xc88>
    5d2e:	40 c0       	rjmp	.+128    	; 0x5db0 <Calculate_VidResult+0xd08>
    5d30:	80 91 8a 01 	lds	r24, 0x018A
    5d34:	88 23       	and	r24, r24
    5d36:	e1 f1       	breq	.+120    	; 0x5db0 <Calculate_VidResult+0xd08>
    		   if (Copy_U8num1>=Copy_U8num2){
    5d38:	2a 85       	ldd	r18, Y+10	; 0x0a
    5d3a:	3b 85       	ldd	r19, Y+11	; 0x0b
    5d3c:	8c 85       	ldd	r24, Y+12	; 0x0c
    5d3e:	9d 85       	ldd	r25, Y+13	; 0x0d
    5d40:	28 17       	cp	r18, r24
    5d42:	39 07       	cpc	r19, r25
    5d44:	c8 f0       	brcs	.+50     	; 0x5d78 <Calculate_VidResult+0xcd0>
        		   LCD_VidPrintVar(Copy_U8num1-Copy_U8num2);
    5d46:	2a 85       	ldd	r18, Y+10	; 0x0a
    5d48:	3b 85       	ldd	r19, Y+11	; 0x0b
    5d4a:	8c 85       	ldd	r24, Y+12	; 0x0c
    5d4c:	9d 85       	ldd	r25, Y+13	; 0x0d
    5d4e:	89 01       	movw	r16, r18
    5d50:	08 1b       	sub	r16, r24
    5d52:	19 0b       	sbc	r17, r25
    5d54:	c8 01       	movw	r24, r16
    5d56:	5c 01       	movw	r10, r24
    5d58:	cc 24       	eor	r12, r12
    5d5a:	dd 24       	eor	r13, r13
    5d5c:	ee 24       	eor	r14, r14
    5d5e:	ff 24       	eor	r15, r15
    5d60:	87 01       	movw	r16, r14
    5d62:	2a 2d       	mov	r18, r10
    5d64:	3b 2d       	mov	r19, r11
    5d66:	4c 2d       	mov	r20, r12
    5d68:	5d 2d       	mov	r21, r13
    5d6a:	6e 2d       	mov	r22, r14
    5d6c:	7f 2d       	mov	r23, r15
    5d6e:	80 2f       	mov	r24, r16
    5d70:	91 2f       	mov	r25, r17
    5d72:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5d76:	54 c0       	rjmp	.+168    	; 0x5e20 <Calculate_VidResult+0xd78>
    		   }
    		   else {
        		   LCD_VidSendChar('-');
    5d78:	8d e2       	ldi	r24, 0x2D	; 45
    5d7a:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
        		   LCD_VidPrintVar(Copy_U8num2-Copy_U8num1);
    5d7e:	2c 85       	ldd	r18, Y+12	; 0x0c
    5d80:	3d 85       	ldd	r19, Y+13	; 0x0d
    5d82:	8a 85       	ldd	r24, Y+10	; 0x0a
    5d84:	9b 85       	ldd	r25, Y+11	; 0x0b
    5d86:	a9 01       	movw	r20, r18
    5d88:	48 1b       	sub	r20, r24
    5d8a:	59 0b       	sbc	r21, r25
    5d8c:	ca 01       	movw	r24, r20
    5d8e:	5c 01       	movw	r10, r24
    5d90:	cc 24       	eor	r12, r12
    5d92:	dd 24       	eor	r13, r13
    5d94:	ee 24       	eor	r14, r14
    5d96:	ff 24       	eor	r15, r15
    5d98:	87 01       	movw	r16, r14
    5d9a:	2a 2d       	mov	r18, r10
    5d9c:	3b 2d       	mov	r19, r11
    5d9e:	4c 2d       	mov	r20, r12
    5da0:	5d 2d       	mov	r21, r13
    5da2:	6e 2d       	mov	r22, r14
    5da4:	7f 2d       	mov	r23, r15
    5da6:	80 2f       	mov	r24, r16
    5da8:	91 2f       	mov	r25, r17
    5daa:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5dae:	38 c0       	rjmp	.+112    	; 0x5e20 <Calculate_VidResult+0xd78>
    		   }
    	   }
    	   else if (sign_1&&sign_2){
    5db0:	80 91 89 01 	lds	r24, 0x0189
    5db4:	88 23       	and	r24, r24
    5db6:	f1 f0       	breq	.+60     	; 0x5df4 <Calculate_VidResult+0xd4c>
    5db8:	80 91 8a 01 	lds	r24, 0x018A
    5dbc:	88 23       	and	r24, r24
    5dbe:	d1 f0       	breq	.+52     	; 0x5df4 <Calculate_VidResult+0xd4c>
    		   LCD_VidSendChar('-');
    5dc0:	8d e2       	ldi	r24, 0x2D	; 45
    5dc2:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <LCD_VidSendChar>
    		   LCD_VidPrintVar(Copy_U8num2+Copy_U8num1);
    5dc6:	2c 85       	ldd	r18, Y+12	; 0x0c
    5dc8:	3d 85       	ldd	r19, Y+13	; 0x0d
    5dca:	8a 85       	ldd	r24, Y+10	; 0x0a
    5dcc:	9b 85       	ldd	r25, Y+11	; 0x0b
    5dce:	82 0f       	add	r24, r18
    5dd0:	93 1f       	adc	r25, r19
    5dd2:	5c 01       	movw	r10, r24
    5dd4:	cc 24       	eor	r12, r12
    5dd6:	dd 24       	eor	r13, r13
    5dd8:	ee 24       	eor	r14, r14
    5dda:	ff 24       	eor	r15, r15
    5ddc:	87 01       	movw	r16, r14
    5dde:	2a 2d       	mov	r18, r10
    5de0:	3b 2d       	mov	r19, r11
    5de2:	4c 2d       	mov	r20, r12
    5de4:	5d 2d       	mov	r21, r13
    5de6:	6e 2d       	mov	r22, r14
    5de8:	7f 2d       	mov	r23, r15
    5dea:	80 2f       	mov	r24, r16
    5dec:	91 2f       	mov	r25, r17
    5dee:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    5df2:	16 c0       	rjmp	.+44     	; 0x5e20 <Calculate_VidResult+0xd78>
    	   }
    	   else
    		   LCD_VidPrintVar(Copy_U8num2+Copy_U8num1);
    5df4:	2c 85       	ldd	r18, Y+12	; 0x0c
    5df6:	3d 85       	ldd	r19, Y+13	; 0x0d
    5df8:	8a 85       	ldd	r24, Y+10	; 0x0a
    5dfa:	9b 85       	ldd	r25, Y+11	; 0x0b
    5dfc:	82 0f       	add	r24, r18
    5dfe:	93 1f       	adc	r25, r19
    5e00:	5c 01       	movw	r10, r24
    5e02:	cc 24       	eor	r12, r12
    5e04:	dd 24       	eor	r13, r13
    5e06:	ee 24       	eor	r14, r14
    5e08:	ff 24       	eor	r15, r15
    5e0a:	87 01       	movw	r16, r14
    5e0c:	2a 2d       	mov	r18, r10
    5e0e:	3b 2d       	mov	r19, r11
    5e10:	4c 2d       	mov	r20, r12
    5e12:	5d 2d       	mov	r21, r13
    5e14:	6e 2d       	mov	r22, r14
    5e16:	7f 2d       	mov	r23, r15
    5e18:	80 2f       	mov	r24, r16
    5e1a:	91 2f       	mov	r25, r17
    5e1c:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <LCD_VidPrintVar>
    	   global_First_sign = 0 ;
    5e20:	10 92 88 01 	sts	0x0188, r1
    5e24:	02 c0       	rjmp	.+4      	; 0x5e2a <Calculate_VidResult+0xd82>
    	   return ;

     default : Error_VidStatment() ;  return ;
    5e26:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <Error_VidStatment>
  }//end switch
}//end FUNC Calculate_VidResult
    5e2a:	ca 59       	subi	r28, 0x9A	; 154
    5e2c:	df 4f       	sbci	r29, 0xFF	; 255
    5e2e:	0f b6       	in	r0, 0x3f	; 63
    5e30:	f8 94       	cli
    5e32:	de bf       	out	0x3e, r29	; 62
    5e34:	0f be       	out	0x3f, r0	; 63
    5e36:	cd bf       	out	0x3d, r28	; 61
    5e38:	cf 91       	pop	r28
    5e3a:	df 91       	pop	r29
    5e3c:	1f 91       	pop	r17
    5e3e:	0f 91       	pop	r16
    5e40:	ff 90       	pop	r15
    5e42:	ef 90       	pop	r14
    5e44:	df 90       	pop	r13
    5e46:	cf 90       	pop	r12
    5e48:	bf 90       	pop	r11
    5e4a:	af 90       	pop	r10
    5e4c:	9f 90       	pop	r9
    5e4e:	8f 90       	pop	r8
    5e50:	7f 90       	pop	r7
    5e52:	6f 90       	pop	r6
    5e54:	5f 90       	pop	r5
    5e56:	4f 90       	pop	r4
    5e58:	3f 90       	pop	r3
    5e5a:	2f 90       	pop	r2
    5e5c:	08 95       	ret

00005e5e <Error_VidStatment>:

void Error_VidStatment(){
    5e5e:	df 93       	push	r29
    5e60:	cf 93       	push	r28
    5e62:	cd b7       	in	r28, 0x3d	; 61
    5e64:	de b7       	in	r29, 0x3e	; 62
    5e66:	2e 97       	sbiw	r28, 0x0e	; 14
    5e68:	0f b6       	in	r0, 0x3f	; 63
    5e6a:	f8 94       	cli
    5e6c:	de bf       	out	0x3e, r29	; 62
    5e6e:	0f be       	out	0x3f, r0	; 63
    5e70:	cd bf       	out	0x3d, r28	; 61
	   LCD_VidClear();
    5e72:	0e 94 b0 23 	call	0x4760	; 0x4760 <LCD_VidClear>
	   LCD_VidSendString("    false        operation     ");
    5e76:	80 e6       	ldi	r24, 0x60	; 96
    5e78:	90 e0       	ldi	r25, 0x00	; 0
    5e7a:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <LCD_VidSendString>
	   global_First_sign = 0 ;
    5e7e:	10 92 88 01 	sts	0x0188, r1
    5e82:	80 e0       	ldi	r24, 0x00	; 0
    5e84:	90 e0       	ldi	r25, 0x00	; 0
    5e86:	aa ef       	ldi	r26, 0xFA	; 250
    5e88:	b4 e4       	ldi	r27, 0x44	; 68
    5e8a:	8b 87       	std	Y+11, r24	; 0x0b
    5e8c:	9c 87       	std	Y+12, r25	; 0x0c
    5e8e:	ad 87       	std	Y+13, r26	; 0x0d
    5e90:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5e92:	6b 85       	ldd	r22, Y+11	; 0x0b
    5e94:	7c 85       	ldd	r23, Y+12	; 0x0c
    5e96:	8d 85       	ldd	r24, Y+13	; 0x0d
    5e98:	9e 85       	ldd	r25, Y+14	; 0x0e
    5e9a:	20 e0       	ldi	r18, 0x00	; 0
    5e9c:	30 e0       	ldi	r19, 0x00	; 0
    5e9e:	4a ef       	ldi	r20, 0xFA	; 250
    5ea0:	54 e4       	ldi	r21, 0x44	; 68
    5ea2:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    5ea6:	dc 01       	movw	r26, r24
    5ea8:	cb 01       	movw	r24, r22
    5eaa:	8f 83       	std	Y+7, r24	; 0x07
    5eac:	98 87       	std	Y+8, r25	; 0x08
    5eae:	a9 87       	std	Y+9, r26	; 0x09
    5eb0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5eb2:	6f 81       	ldd	r22, Y+7	; 0x07
    5eb4:	78 85       	ldd	r23, Y+8	; 0x08
    5eb6:	89 85       	ldd	r24, Y+9	; 0x09
    5eb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    5eba:	20 e0       	ldi	r18, 0x00	; 0
    5ebc:	30 e0       	ldi	r19, 0x00	; 0
    5ebe:	40 e8       	ldi	r20, 0x80	; 128
    5ec0:	5f e3       	ldi	r21, 0x3F	; 63
    5ec2:	0e 94 84 12 	call	0x2508	; 0x2508 <__ltsf2>
    5ec6:	88 23       	and	r24, r24
    5ec8:	2c f4       	brge	.+10     	; 0x5ed4 <Error_VidStatment+0x76>
		__ticks = 1;
    5eca:	81 e0       	ldi	r24, 0x01	; 1
    5ecc:	90 e0       	ldi	r25, 0x00	; 0
    5ece:	9e 83       	std	Y+6, r25	; 0x06
    5ed0:	8d 83       	std	Y+5, r24	; 0x05
    5ed2:	3f c0       	rjmp	.+126    	; 0x5f52 <Error_VidStatment+0xf4>
	else if (__tmp > 65535)
    5ed4:	6f 81       	ldd	r22, Y+7	; 0x07
    5ed6:	78 85       	ldd	r23, Y+8	; 0x08
    5ed8:	89 85       	ldd	r24, Y+9	; 0x09
    5eda:	9a 85       	ldd	r25, Y+10	; 0x0a
    5edc:	20 e0       	ldi	r18, 0x00	; 0
    5ede:	3f ef       	ldi	r19, 0xFF	; 255
    5ee0:	4f e7       	ldi	r20, 0x7F	; 127
    5ee2:	57 e4       	ldi	r21, 0x47	; 71
    5ee4:	0e 94 24 12 	call	0x2448	; 0x2448 <__gtsf2>
    5ee8:	18 16       	cp	r1, r24
    5eea:	4c f5       	brge	.+82     	; 0x5f3e <Error_VidStatment+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5eec:	6b 85       	ldd	r22, Y+11	; 0x0b
    5eee:	7c 85       	ldd	r23, Y+12	; 0x0c
    5ef0:	8d 85       	ldd	r24, Y+13	; 0x0d
    5ef2:	9e 85       	ldd	r25, Y+14	; 0x0e
    5ef4:	20 e0       	ldi	r18, 0x00	; 0
    5ef6:	30 e0       	ldi	r19, 0x00	; 0
    5ef8:	40 e2       	ldi	r20, 0x20	; 32
    5efa:	51 e4       	ldi	r21, 0x41	; 65
    5efc:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__mulsf3>
    5f00:	dc 01       	movw	r26, r24
    5f02:	cb 01       	movw	r24, r22
    5f04:	bc 01       	movw	r22, r24
    5f06:	cd 01       	movw	r24, r26
    5f08:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    5f0c:	dc 01       	movw	r26, r24
    5f0e:	cb 01       	movw	r24, r22
    5f10:	9e 83       	std	Y+6, r25	; 0x06
    5f12:	8d 83       	std	Y+5, r24	; 0x05
    5f14:	0f c0       	rjmp	.+30     	; 0x5f34 <Error_VidStatment+0xd6>
    5f16:	88 ec       	ldi	r24, 0xC8	; 200
    5f18:	90 e0       	ldi	r25, 0x00	; 0
    5f1a:	9c 83       	std	Y+4, r25	; 0x04
    5f1c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5f1e:	8b 81       	ldd	r24, Y+3	; 0x03
    5f20:	9c 81       	ldd	r25, Y+4	; 0x04
    5f22:	01 97       	sbiw	r24, 0x01	; 1
    5f24:	f1 f7       	brne	.-4      	; 0x5f22 <Error_VidStatment+0xc4>
    5f26:	9c 83       	std	Y+4, r25	; 0x04
    5f28:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5f2a:	8d 81       	ldd	r24, Y+5	; 0x05
    5f2c:	9e 81       	ldd	r25, Y+6	; 0x06
    5f2e:	01 97       	sbiw	r24, 0x01	; 1
    5f30:	9e 83       	std	Y+6, r25	; 0x06
    5f32:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5f34:	8d 81       	ldd	r24, Y+5	; 0x05
    5f36:	9e 81       	ldd	r25, Y+6	; 0x06
    5f38:	00 97       	sbiw	r24, 0x00	; 0
    5f3a:	69 f7       	brne	.-38     	; 0x5f16 <Error_VidStatment+0xb8>
    5f3c:	14 c0       	rjmp	.+40     	; 0x5f66 <Error_VidStatment+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5f3e:	6f 81       	ldd	r22, Y+7	; 0x07
    5f40:	78 85       	ldd	r23, Y+8	; 0x08
    5f42:	89 85       	ldd	r24, Y+9	; 0x09
    5f44:	9a 85       	ldd	r25, Y+10	; 0x0a
    5f46:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    5f4a:	dc 01       	movw	r26, r24
    5f4c:	cb 01       	movw	r24, r22
    5f4e:	9e 83       	std	Y+6, r25	; 0x06
    5f50:	8d 83       	std	Y+5, r24	; 0x05
    5f52:	8d 81       	ldd	r24, Y+5	; 0x05
    5f54:	9e 81       	ldd	r25, Y+6	; 0x06
    5f56:	9a 83       	std	Y+2, r25	; 0x02
    5f58:	89 83       	std	Y+1, r24	; 0x01
    5f5a:	89 81       	ldd	r24, Y+1	; 0x01
    5f5c:	9a 81       	ldd	r25, Y+2	; 0x02
    5f5e:	01 97       	sbiw	r24, 0x01	; 1
    5f60:	f1 f7       	brne	.-4      	; 0x5f5e <Error_VidStatment+0x100>
    5f62:	9a 83       	std	Y+2, r25	; 0x02
    5f64:	89 83       	std	Y+1, r24	; 0x01
       _delay_ms(2000);
       //to clear all global flags
       global_First_sign = 0 ;
    5f66:	10 92 88 01 	sts	0x0188, r1
       sign_1 = 0 ;
    5f6a:	10 92 89 01 	sts	0x0189, r1
       sign_2 = 0 ;
    5f6e:	10 92 8a 01 	sts	0x018A, r1
       main() ;
    5f72:	0e 94 ba 23 	call	0x4774	; 0x4774 <main>
}//end FUNC Error_VidStatment
    5f76:	2e 96       	adiw	r28, 0x0e	; 14
    5f78:	0f b6       	in	r0, 0x3f	; 63
    5f7a:	f8 94       	cli
    5f7c:	de bf       	out	0x3e, r29	; 62
    5f7e:	0f be       	out	0x3f, r0	; 63
    5f80:	cd bf       	out	0x3d, r28	; 61
    5f82:	cf 91       	pop	r28
    5f84:	df 91       	pop	r29
    5f86:	08 95       	ret

00005f88 <Reverse_value>:


u32 Reverse_value (u32 Copy_U8Num , u8 iter){
    5f88:	0f 93       	push	r16
    5f8a:	1f 93       	push	r17
    5f8c:	df 93       	push	r29
    5f8e:	cf 93       	push	r28
    5f90:	00 d0       	rcall	.+0      	; 0x5f92 <Reverse_value+0xa>
    5f92:	00 d0       	rcall	.+0      	; 0x5f94 <Reverse_value+0xc>
    5f94:	00 d0       	rcall	.+0      	; 0x5f96 <Reverse_value+0xe>
    5f96:	cd b7       	in	r28, 0x3d	; 61
    5f98:	de b7       	in	r29, 0x3e	; 62
    5f9a:	9d 83       	std	Y+5, r25	; 0x05
    5f9c:	8c 83       	std	Y+4, r24	; 0x04
    5f9e:	6e 83       	std	Y+6, r22	; 0x06
	u32 new_value = 0 ;
    5fa0:	1b 82       	std	Y+3, r1	; 0x03
    5fa2:	1a 82       	std	Y+2, r1	; 0x02
    for (u8 i=iter ; i > 0 ; i--)  {
    5fa4:	8e 81       	ldd	r24, Y+6	; 0x06
    5fa6:	89 83       	std	Y+1, r24	; 0x01
    5fa8:	29 c0       	rjmp	.+82     	; 0x5ffc <Reverse_value+0x74>
    	new_value += (Copy_U8Num % 10)*LCD_U32Pow(10,i-1) ;
    5faa:	8c 81       	ldd	r24, Y+4	; 0x04
    5fac:	9d 81       	ldd	r25, Y+5	; 0x05
    5fae:	2a e0       	ldi	r18, 0x0A	; 10
    5fb0:	30 e0       	ldi	r19, 0x00	; 0
    5fb2:	b9 01       	movw	r22, r18
    5fb4:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    5fb8:	8c 01       	movw	r16, r24
    5fba:	89 81       	ldd	r24, Y+1	; 0x01
    5fbc:	98 2f       	mov	r25, r24
    5fbe:	91 50       	subi	r25, 0x01	; 1
    5fc0:	8a e0       	ldi	r24, 0x0A	; 10
    5fc2:	69 2f       	mov	r22, r25
    5fc4:	0e 94 c5 20 	call	0x418a	; 0x418a <LCD_U32Pow>
    5fc8:	08 9f       	mul	r16, r24
    5fca:	90 01       	movw	r18, r0
    5fcc:	09 9f       	mul	r16, r25
    5fce:	30 0d       	add	r19, r0
    5fd0:	18 9f       	mul	r17, r24
    5fd2:	30 0d       	add	r19, r0
    5fd4:	11 24       	eor	r1, r1
    5fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    5fd8:	9b 81       	ldd	r25, Y+3	; 0x03
    5fda:	82 0f       	add	r24, r18
    5fdc:	93 1f       	adc	r25, r19
    5fde:	9b 83       	std	Y+3, r25	; 0x03
    5fe0:	8a 83       	std	Y+2, r24	; 0x02
    	Copy_U8Num/=10;
    5fe2:	8c 81       	ldd	r24, Y+4	; 0x04
    5fe4:	9d 81       	ldd	r25, Y+5	; 0x05
    5fe6:	2a e0       	ldi	r18, 0x0A	; 10
    5fe8:	30 e0       	ldi	r19, 0x00	; 0
    5fea:	b9 01       	movw	r22, r18
    5fec:	0e 94 0e 30 	call	0x601c	; 0x601c <__udivmodhi4>
    5ff0:	cb 01       	movw	r24, r22
    5ff2:	9d 83       	std	Y+5, r25	; 0x05
    5ff4:	8c 83       	std	Y+4, r24	; 0x04
}//end FUNC Error_VidStatment


u32 Reverse_value (u32 Copy_U8Num , u8 iter){
	u32 new_value = 0 ;
    for (u8 i=iter ; i > 0 ; i--)  {
    5ff6:	89 81       	ldd	r24, Y+1	; 0x01
    5ff8:	81 50       	subi	r24, 0x01	; 1
    5ffa:	89 83       	std	Y+1, r24	; 0x01
    5ffc:	89 81       	ldd	r24, Y+1	; 0x01
    5ffe:	88 23       	and	r24, r24
    6000:	a1 f6       	brne	.-88     	; 0x5faa <Reverse_value+0x22>
    	new_value += (Copy_U8Num % 10)*LCD_U32Pow(10,i-1) ;
    	Copy_U8Num/=10;
    }
    return new_value;
    6002:	8a 81       	ldd	r24, Y+2	; 0x02
    6004:	9b 81       	ldd	r25, Y+3	; 0x03
}
    6006:	26 96       	adiw	r28, 0x06	; 6
    6008:	0f b6       	in	r0, 0x3f	; 63
    600a:	f8 94       	cli
    600c:	de bf       	out	0x3e, r29	; 62
    600e:	0f be       	out	0x3f, r0	; 63
    6010:	cd bf       	out	0x3d, r28	; 61
    6012:	cf 91       	pop	r28
    6014:	df 91       	pop	r29
    6016:	1f 91       	pop	r17
    6018:	0f 91       	pop	r16
    601a:	08 95       	ret

0000601c <__udivmodhi4>:
    601c:	aa 1b       	sub	r26, r26
    601e:	bb 1b       	sub	r27, r27
    6020:	51 e1       	ldi	r21, 0x11	; 17
    6022:	07 c0       	rjmp	.+14     	; 0x6032 <__udivmodhi4_ep>

00006024 <__udivmodhi4_loop>:
    6024:	aa 1f       	adc	r26, r26
    6026:	bb 1f       	adc	r27, r27
    6028:	a6 17       	cp	r26, r22
    602a:	b7 07       	cpc	r27, r23
    602c:	10 f0       	brcs	.+4      	; 0x6032 <__udivmodhi4_ep>
    602e:	a6 1b       	sub	r26, r22
    6030:	b7 0b       	sbc	r27, r23

00006032 <__udivmodhi4_ep>:
    6032:	88 1f       	adc	r24, r24
    6034:	99 1f       	adc	r25, r25
    6036:	5a 95       	dec	r21
    6038:	a9 f7       	brne	.-22     	; 0x6024 <__udivmodhi4_loop>
    603a:	80 95       	com	r24
    603c:	90 95       	com	r25
    603e:	bc 01       	movw	r22, r24
    6040:	cd 01       	movw	r24, r26
    6042:	08 95       	ret

00006044 <__mulsi3>:
    6044:	62 9f       	mul	r22, r18
    6046:	d0 01       	movw	r26, r0
    6048:	73 9f       	mul	r23, r19
    604a:	f0 01       	movw	r30, r0
    604c:	82 9f       	mul	r24, r18
    604e:	e0 0d       	add	r30, r0
    6050:	f1 1d       	adc	r31, r1
    6052:	64 9f       	mul	r22, r20
    6054:	e0 0d       	add	r30, r0
    6056:	f1 1d       	adc	r31, r1
    6058:	92 9f       	mul	r25, r18
    605a:	f0 0d       	add	r31, r0
    605c:	83 9f       	mul	r24, r19
    605e:	f0 0d       	add	r31, r0
    6060:	74 9f       	mul	r23, r20
    6062:	f0 0d       	add	r31, r0
    6064:	65 9f       	mul	r22, r21
    6066:	f0 0d       	add	r31, r0
    6068:	99 27       	eor	r25, r25
    606a:	72 9f       	mul	r23, r18
    606c:	b0 0d       	add	r27, r0
    606e:	e1 1d       	adc	r30, r1
    6070:	f9 1f       	adc	r31, r25
    6072:	63 9f       	mul	r22, r19
    6074:	b0 0d       	add	r27, r0
    6076:	e1 1d       	adc	r30, r1
    6078:	f9 1f       	adc	r31, r25
    607a:	bd 01       	movw	r22, r26
    607c:	cf 01       	movw	r24, r30
    607e:	11 24       	eor	r1, r1
    6080:	08 95       	ret

00006082 <__udivmodsi4>:
    6082:	a1 e2       	ldi	r26, 0x21	; 33
    6084:	1a 2e       	mov	r1, r26
    6086:	aa 1b       	sub	r26, r26
    6088:	bb 1b       	sub	r27, r27
    608a:	fd 01       	movw	r30, r26
    608c:	0d c0       	rjmp	.+26     	; 0x60a8 <__udivmodsi4_ep>

0000608e <__udivmodsi4_loop>:
    608e:	aa 1f       	adc	r26, r26
    6090:	bb 1f       	adc	r27, r27
    6092:	ee 1f       	adc	r30, r30
    6094:	ff 1f       	adc	r31, r31
    6096:	a2 17       	cp	r26, r18
    6098:	b3 07       	cpc	r27, r19
    609a:	e4 07       	cpc	r30, r20
    609c:	f5 07       	cpc	r31, r21
    609e:	20 f0       	brcs	.+8      	; 0x60a8 <__udivmodsi4_ep>
    60a0:	a2 1b       	sub	r26, r18
    60a2:	b3 0b       	sbc	r27, r19
    60a4:	e4 0b       	sbc	r30, r20
    60a6:	f5 0b       	sbc	r31, r21

000060a8 <__udivmodsi4_ep>:
    60a8:	66 1f       	adc	r22, r22
    60aa:	77 1f       	adc	r23, r23
    60ac:	88 1f       	adc	r24, r24
    60ae:	99 1f       	adc	r25, r25
    60b0:	1a 94       	dec	r1
    60b2:	69 f7       	brne	.-38     	; 0x608e <__udivmodsi4_loop>
    60b4:	60 95       	com	r22
    60b6:	70 95       	com	r23
    60b8:	80 95       	com	r24
    60ba:	90 95       	com	r25
    60bc:	9b 01       	movw	r18, r22
    60be:	ac 01       	movw	r20, r24
    60c0:	bd 01       	movw	r22, r26
    60c2:	cf 01       	movw	r24, r30
    60c4:	08 95       	ret

000060c6 <__prologue_saves__>:
    60c6:	2f 92       	push	r2
    60c8:	3f 92       	push	r3
    60ca:	4f 92       	push	r4
    60cc:	5f 92       	push	r5
    60ce:	6f 92       	push	r6
    60d0:	7f 92       	push	r7
    60d2:	8f 92       	push	r8
    60d4:	9f 92       	push	r9
    60d6:	af 92       	push	r10
    60d8:	bf 92       	push	r11
    60da:	cf 92       	push	r12
    60dc:	df 92       	push	r13
    60de:	ef 92       	push	r14
    60e0:	ff 92       	push	r15
    60e2:	0f 93       	push	r16
    60e4:	1f 93       	push	r17
    60e6:	cf 93       	push	r28
    60e8:	df 93       	push	r29
    60ea:	cd b7       	in	r28, 0x3d	; 61
    60ec:	de b7       	in	r29, 0x3e	; 62
    60ee:	ca 1b       	sub	r28, r26
    60f0:	db 0b       	sbc	r29, r27
    60f2:	0f b6       	in	r0, 0x3f	; 63
    60f4:	f8 94       	cli
    60f6:	de bf       	out	0x3e, r29	; 62
    60f8:	0f be       	out	0x3f, r0	; 63
    60fa:	cd bf       	out	0x3d, r28	; 61
    60fc:	09 94       	ijmp

000060fe <__epilogue_restores__>:
    60fe:	2a 88       	ldd	r2, Y+18	; 0x12
    6100:	39 88       	ldd	r3, Y+17	; 0x11
    6102:	48 88       	ldd	r4, Y+16	; 0x10
    6104:	5f 84       	ldd	r5, Y+15	; 0x0f
    6106:	6e 84       	ldd	r6, Y+14	; 0x0e
    6108:	7d 84       	ldd	r7, Y+13	; 0x0d
    610a:	8c 84       	ldd	r8, Y+12	; 0x0c
    610c:	9b 84       	ldd	r9, Y+11	; 0x0b
    610e:	aa 84       	ldd	r10, Y+10	; 0x0a
    6110:	b9 84       	ldd	r11, Y+9	; 0x09
    6112:	c8 84       	ldd	r12, Y+8	; 0x08
    6114:	df 80       	ldd	r13, Y+7	; 0x07
    6116:	ee 80       	ldd	r14, Y+6	; 0x06
    6118:	fd 80       	ldd	r15, Y+5	; 0x05
    611a:	0c 81       	ldd	r16, Y+4	; 0x04
    611c:	1b 81       	ldd	r17, Y+3	; 0x03
    611e:	aa 81       	ldd	r26, Y+2	; 0x02
    6120:	b9 81       	ldd	r27, Y+1	; 0x01
    6122:	ce 0f       	add	r28, r30
    6124:	d1 1d       	adc	r29, r1
    6126:	0f b6       	in	r0, 0x3f	; 63
    6128:	f8 94       	cli
    612a:	de bf       	out	0x3e, r29	; 62
    612c:	0f be       	out	0x3f, r0	; 63
    612e:	cd bf       	out	0x3d, r28	; 61
    6130:	ed 01       	movw	r28, r26
    6132:	08 95       	ret

00006134 <_exit>:
    6134:	f8 94       	cli

00006136 <__stop_program>:
    6136:	ff cf       	rjmp	.-2      	; 0x6136 <__stop_program>
